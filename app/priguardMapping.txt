# compiler: R8
# compiler_version: 8.1.68
# min_api: 22
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: caa02ec
# pg_map_hash: SHA-256 caa02ec52b86d511f519f5aacc8fae083669b13fb731d1f6e21a6867d69ab0f9
android.app.AppComponentFactory -> android.app.AppComponentFactory:
# {"id":"com.android.tools.r8.synthesized"}
android.app.job.JobServiceEngine -> android.app.job.JobServiceEngine:
# {"id":"com.android.tools.r8.synthesized"}
android.graphics.drawable.Animatable2$AnimationCallback -> android.graphics.drawable.Animatable2$AnimationCallback:
# {"id":"com.android.tools.r8.synthesized"}
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.os.IResultReceiver -> android.support.v4.os.IResultReceiver:
# {"id":"sourceFile","fileName":"IResultReceiver.java"}
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
# {"id":"sourceFile","fileName":"IResultReceiver.java"}
    24:25:void <init>() -> <init>
    0:0:android.os.IBinder asBinder() -> asBinder
    36:40:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    50:73:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
# {"id":"sourceFile","fileName":"IResultReceiver.java"}
    82:83:void <init>(android.os.IBinder) -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
android.support.v4.os.IResultReceiver$_Parcel -> android.support.v4.os.IResultReceiver$_Parcel:
# {"id":"sourceFile","fileName":"IResultReceiver.java"}
    112:112:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator) -> access$000
    116:117:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator) -> readTypedObject
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
# {"id":"sourceFile","fileName":"ResultReceiver.java"}
    145:145:void <clinit>() -> <clinit>
    139:142:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    0:0:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    131:136:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
# {"id":"sourceFile","fileName":"ResultReceiver.java"}
    146:146:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    149:149:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    146:146:java.lang.Object[] newArray(int) -> newArray
    153:153:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
# {"id":"sourceFile","fileName":"ResultReceiver.java"}
    68:68:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    71:74:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
# {"id":"sourceFile","fileName":"ResultReceiver.java"}
    57:59:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    64:64:void run() -> run
android.view.OnReceiveContentListener -> android.view.OnReceiveContentListener:
# {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ActivityViewModelLazyKt$viewModels$1 -> androidx.activity.ActivityViewModelLazyKt$viewModels$1:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    0:0:void <init>(androidx.activity.ComponentActivity) -> <init>
    54:54:java.lang.Object invoke() -> invoke
    54:54:androidx.lifecycle.ViewModelStore invoke():54 -> invoke
    54:54:java.lang.Object invoke() -> invoke
androidx.activity.ActivityViewModelLazyKt$viewModels$2 -> androidx.activity.ActivityViewModelLazyKt$viewModels$2:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    0:0:void <init>(androidx.activity.ComponentActivity) -> <init>
    56:56:java.lang.Object invoke() -> invoke
    56:56:androidx.lifecycle.viewmodel.CreationExtras invoke():56 -> invoke
    56:56:java.lang.Object invoke() -> invoke
androidx.activity.ActivityViewModelLazyKt$viewModels$3 -> androidx.activity.ActivityViewModelLazyKt$viewModels$3:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    0:0:void <init>(androidx.activity.ComponentActivity) -> <init>
    85:85:java.lang.Object invoke() -> invoke
    85:85:androidx.lifecycle.ViewModelStore invoke():85 -> invoke
    85:85:java.lang.Object invoke() -> invoke
androidx.activity.ActivityViewModelLazyKt$viewModels$4 -> androidx.activity.ActivityViewModelLazyKt$viewModels$4:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0,androidx.activity.ComponentActivity) -> <init>
    87:87:java.lang.Object invoke() -> invoke
    87:87:androidx.lifecycle.viewmodel.CreationExtras invoke():87 -> invoke
    87:87:java.lang.Object invoke() -> invoke
androidx.activity.ActivityViewModelLazyKt$viewModels$factoryPromise$1 -> androidx.activity.ActivityViewModelLazyKt$viewModels$factoryPromise$1:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    0:0:void <init>(androidx.activity.ComponentActivity) -> <init>
    48:48:java.lang.Object invoke() -> invoke
    49:49:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.activity.ActivityViewModelLazyKt$viewModels$factoryPromise$2 -> androidx.activity.ActivityViewModelLazyKt$viewModels$factoryPromise$2:
# {"id":"sourceFile","fileName":"ActivityViewModelLazy.kt"}
    0:0:void <init>(androidx.activity.ComponentActivity) -> <init>
    79:79:java.lang.Object invoke() -> invoke
    80:80:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.activity.Cancellable -> androidx.activity.Cancellable:
# {"id":"sourceFile","fileName":"Cancellable.java"}
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    0:0:void $r8$lambda$Mg7-hF6_XzI8jXHyb9wZTvbC5nA(androidx.activity.ComponentActivity,android.content.Context) -> $r8$lambda$Mg7-hF6_XzI8jXHyb9wZTvbC5nA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle $r8$lambda$uMG6y9sMaPUFZmnRrSgWpORKiAI(androidx.activity.ComponentActivity) -> $r8$lambda$uMG6y9sMaPUFZmnRrSgWpORKiAI
      # {"id":"com.android.tools.r8.synthesized"}
    141:325:void <init>() -> <init>
    118:118:void access$001(androidx.activity.ComponentActivity) -> access$001
    469:470:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    546:546:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    875:875:void addOnConfigurationChangedListener(androidx.core.util.Consumer) -> addOnConfigurationChangedListener
    500:500:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    990:990:void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> addOnMultiWindowModeChangedListener
    930:930:void addOnNewIntentListener(androidx.core.util.Consumer) -> addOnNewIntentListener
    1054:1054:void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> addOnPictureInPictureModeChangedListener
    901:901:void addOnTrimMemoryListener(androidx.core.util.Consumer) -> addOnTrimMemoryListener
    613:621:void ensureViewModelStore() -> ensureViewModelStore
    853:853:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    649:656:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
    629:635:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    587:587:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    684:684:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    690:690:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    603:608:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    476:479:void initViewTreeOwners() -> initViewTreeOwners
    568:568:void invalidateMenu() -> invalidateMenu
    321:322:android.os.Bundle lambda$new$0() -> lambda$new$0
    326:329:void lambda$new$1(android.content.Context) -> lambda$new$1
    793:794:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    673:673:void onBackPressed() -> onBackPressed
    865:867:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    361:371:void onCreate(android.os.Bundle) -> onCreate
    521:522:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    529:533:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    953:957:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    972:982:void onMultiWindowModeChanged(boolean,android.content.res.Configuration) -> onMultiWindowModeChanged
    920:922:void onNewIntent(android.content.Intent) -> onNewIntent
    540:541:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    1013:1019:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    1034:1045:void onPictureInPictureModeChanged(boolean,android.content.res.Configuration) -> onPictureInPictureModeChanged
    512:513:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    818:822:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    0:0:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    396:415:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    378:383:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    893:895:void onTrimMemory(int) -> onTrimMemory
    563:563:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
    882:882:void removeOnConfigurationChangedListener(androidx.core.util.Consumer) -> removeOnConfigurationChangedListener
    506:506:void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> removeOnContextAvailableListener
    997:997:void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> removeOnMultiWindowModeChangedListener
    1061:1061:void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> removeOnPictureInPictureModeChangedListener
    906:906:void removeOnTrimMemoryListener(androidx.core.util.Consumer) -> removeOnTrimMemoryListener
    1067:1086:void reportFullyDrawn() -> reportFullyDrawn
    447:448:void setContentView(int) -> setContentView
    453:454:void setContentView(android.view.View) -> setContentView
    461:462:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    709:709:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    728:728:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    750:750:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    772:772:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$$ExternalSyntheticLambda0 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.f$0 -> f$0
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$$ExternalSyntheticLambda1 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.f$0 -> f$0
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$1.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$$ExternalSyntheticLambda2 -> androidx.activity.ComponentActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentActivity androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.f$0 -> f$0
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.<init>(androidx.activity.ComponentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.ComponentActivity$$InternalSyntheticLambda$1$f7979a7b7286ed37b664e8d41a94ec65e3d54774ca037fa175dd9df0faa673c4$2.onContextAvailable(android.content.Context) -> onContextAvailable
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    153:153:void <init>(androidx.activity.ComponentActivity) -> <init>
    161:165:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    176:176:void <init>(androidx.activity.ComponentActivity) -> <init>
    185:243:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> onLaunch
androidx.activity.ComponentActivity$2$1 -> androidx.activity.ComponentActivity$2$1:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    191:191:void <init>(androidx.activity.ComponentActivity$2,int,androidx.activity.result.contract.ActivityResultContract$SynchronousResult) -> <init>
    194:194:void run() -> run
androidx.activity.ComponentActivity$2$2 -> androidx.activity.ComponentActivity$2$2:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    232:232:void <init>(androidx.activity.ComponentActivity$2,int,android.content.IntentSender$SendIntentException) -> <init>
    235:237:void run() -> run
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    277:277:void <init>(androidx.activity.ComponentActivity) -> <init>
    281:285:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    291:291:void <init>(androidx.activity.ComponentActivity) -> <init>
    295:300:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    305:305:void <init>(androidx.activity.ComponentActivity) -> <init>
    309:310:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$Api19Impl -> androidx.activity.ComponentActivity$Api19Impl:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    1094:1094:void cancelPendingInputEvents(android.view.View) -> cancelPendingInputEvents
androidx.activity.ComponentActivity$Api33Impl -> androidx.activity.ComponentActivity$Api33Impl:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    1104:1104:android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity) -> getOnBackInvokedDispatcher
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
androidx.activity.ComponentDialog -> androidx.activity.ComponentDialog:
# {"id":"sourceFile","fileName":"ComponentDialog.kt"}
    0:0:void $r8$lambda$3VrmmHeIN9Sasz9FquQXdvV7x_o(androidx.activity.ComponentDialog) -> $r8$lambda$3VrmmHeIN9Sasz9FquQXdvV7x_o
      # {"id":"com.android.tools.r8.synthesized"}
    38:75:void <init>(android.content.Context,int) -> <init>
    102:103:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    48:48:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    44:45:androidx.lifecycle.LifecycleRegistry getLifecycleRegistry() -> getLifecycleRegistry
    79:79:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    107:108:void initViewTreeOwners() -> initViewTreeOwners
    83:83:void onBackPressed() -> onBackPressed
    76:76:void onBackPressedDispatcher$lambda-1(androidx.activity.ComponentDialog) -> onBackPressedDispatcher$lambda-1
    53:57:void onCreate(android.os.Bundle) -> onCreate
    62:63:void onStart() -> onStart
    69:71:void onStop() -> onStop
    87:88:void setContentView(int) -> setContentView
    92:93:void setContentView(android.view.View) -> setContentView
    97:98:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
androidx.activity.ComponentDialog$$ExternalSyntheticApiModelOutline0 -> androidx.activity.ComponentDialog$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.window.OnBackInvokedDispatcher androidx.activity.ComponentDialog$$InternalSyntheticApiModelOutline$1$13817bb7555c980d8155c43dd9206a3dba59a5be4dd3ac95957b065f8370a6f2$0.m(androidx.activity.ComponentDialog) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ComponentDialog$$ExternalSyntheticLambda1 -> androidx.activity.ComponentDialog$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.ComponentDialog androidx.activity.ComponentDialog$$InternalSyntheticLambda$1$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.f$0 -> f$0
    0:0:void androidx.activity.ComponentDialog$$InternalSyntheticLambda$1$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.<init>(androidx.activity.ComponentDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.ComponentDialog$$InternalSyntheticLambda$1$bea0efecfbdbd441d49af04bfdf9955934424a07259119ec0236a888ffd3a3e0$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
# {"id":"sourceFile","fileName":"ImmLeaksCleaner.java"}
    0:0:void <clinit>() -> <clinit>
    46:47:void <init>(android.app.Activity) -> <init>
    103:110:void initializeReflectiveFields() -> initializeReflectiveFields
    52:95:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
# {"id":"sourceFile","fileName":"OnBackPressedCallback.java"}
    50:60:void <init>(boolean) -> <init>
    112:112:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    91:91:boolean isEnabled() -> isEnabled
    100:101:void remove() -> remove
    116:116:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    77:79:void setEnabled(boolean) -> setEnabled
    120:120:void setIsEnabledConsumer(androidx.core.util.Consumer) -> setIsEnabledConsumer
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    0:0:void $r8$lambda$_OyTAhjGr9tgm4CqoN01pHmhslA(androidx.activity.OnBackPressedDispatcher,java.lang.Boolean) -> $r8$lambda$_OyTAhjGr9tgm4CqoN01pHmhslA
      # {"id":"com.android.tools.r8.synthesized"}
    67:130:void <init>(java.lang.Runnable) -> <init>
    207:216:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    168:173:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    228:231:boolean hasEnabledCallbacks() -> hasEnabledCallbacks
    126:127:void lambda$new$0(java.lang.Boolean) -> lambda$new$0
    250:260:void onBackPressed() -> onBackPressed
    83:84:void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher) -> setOnBackInvokedDispatcher
    89:101:void updateBackInvokedCallbackState() -> updateBackInvokedCallbackState
androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda0 -> androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.OnBackPressedDispatcher androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$0.f$0 -> f$0
    0:0:void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$0.<init>(androidx.activity.OnBackPressedDispatcher) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$0.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda1 -> androidx.activity.OnBackPressedDispatcher$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.activity.OnBackPressedDispatcher androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$1.f$0 -> f$0
    0:0:void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$1.<init>(androidx.activity.OnBackPressedDispatcher) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.OnBackPressedDispatcher$$InternalSyntheticLambda$2$79c2d3dc61b69b8b9a90b6610236ed6cae63ab27d7790d65685deefb540d206b$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.OnBackPressedDispatcher$Api33Impl -> androidx.activity.OnBackPressedDispatcher$Api33Impl:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    344:344:android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable) -> createOnBackInvokedCallback
    331:333:void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object) -> registerOnBackInvokedCallback
    338:340:void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object) -> unregisterOnBackInvokedCallback
androidx.activity.OnBackPressedDispatcher$Api33Impl$$ExternalSyntheticLambda0 -> androidx.activity.OnBackPressedDispatcher$Api33Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.activity.OnBackPressedDispatcher$Api33Impl$$InternalSyntheticLambda$2$f0f438d88c205875ff38e25fbc26be78a4fda65d6bee8c4d41a08d272c7d9f6e$0.f$0 -> f$0
    0:0:void androidx.activity.OnBackPressedDispatcher$Api33Impl$$InternalSyntheticLambda$2$f0f438d88c205875ff38e25fbc26be78a4fda65d6bee8c4d41a08d272c7d9f6e$0.<init>(java.lang.Runnable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.OnBackPressedDispatcher$Api33Impl$$InternalSyntheticLambda$2$f0f438d88c205875ff38e25fbc26be78a4fda65d6bee8c4d41a08d272c7d9f6e$0.onBackInvoked() -> onBackInvoked
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    291:294:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    314:318:void cancel() -> cancel
    300:308:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcher.java"}
    266:267:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    273:277:void cancel() -> cancel
androidx.activity.OnBackPressedDispatcherOwner -> androidx.activity.OnBackPressedDispatcherOwner:
# {"id":"sourceFile","fileName":"OnBackPressedDispatcherOwner.java"}
androidx.activity.ViewTreeOnBackPressedDispatcherOwner -> androidx.activity.ViewTreeOnBackPressedDispatcherOwner:
# {"id":"sourceFile","fileName":"ViewTreeOnBackPressedDispatcherOwner.kt"}
    38:38:void set(android.view.View,androidx.activity.OnBackPressedDispatcherOwner) -> set
androidx.activity.contextaware.ContextAware -> androidx.activity.contextaware.ContextAware:
# {"id":"sourceFile","fileName":"ContextAware.java"}
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
# {"id":"sourceFile","fileName":"ContextAwareHelper.java"}
    42:49:void <init>() -> <init>
    73:76:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:108:void clearAvailableContext() -> clearAvailableContext
    97:99:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
    87:87:void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> removeOnContextAvailableListener
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$1 -> androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$1:
# {"id":"sourceFile","fileName":"ContextAware.kt"}
    0:0:void <init>(androidx.activity.contextaware.ContextAware,androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1) -> <init>
    45:45:java.lang.Object invoke(java.lang.Object) -> invoke
    46:46:void invoke(java.lang.Throwable) -> invoke
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1 -> androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1:
# {"id":"sourceFile","fileName":"ContextAware.kt"}
androidx.activity.contextaware.OnContextAvailableListener -> androidx.activity.contextaware.OnContextAvailableListener:
# {"id":"sourceFile","fileName":"OnContextAvailableListener.java"}
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
# {"id":"sourceFile","fileName":"ActivityResult.java"}
    109:109:void <clinit>() -> <clinit>
    45:47:void <init>(int,android.content.Intent) -> <init>
    50:52:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    90:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
# {"id":"sourceFile","fileName":"ActivityResult.java"}
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultCallback -> androidx.activity.result.ActivityResultCallback:
# {"id":"sourceFile","fileName":"ActivityResultCallback.java"}
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
# {"id":"sourceFile","fileName":"ActivityResultLauncher.java"}
    47:47:void launch(java.lang.Object) -> launch
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    51:79:void <init>() -> <init>
    455:456:void bindRcKey(int,java.lang.String) -> bindRcKey
    371:375:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    390:406:boolean dispatchResult(int,java.lang.Object) -> dispatchResult
    414:424:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    445:448:int generateRandomNumber() -> generateRandomNumber
    328:354:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    306:314:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    217:234:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    429:434:void registerKey(java.lang.String) -> registerKey
    275:293:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$$ExternalSyntheticThrowCCEIfNotNull0 -> androidx.activity.result.ActivityResultRegistry$$ExternalSyntheticThrowCCEIfNotNull0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.activity.result.ActivityResultRegistry$$InternalSyntheticThrowCCEIfNotNull$8$279ef910bc4dca4b1e5bb874d0960e9aa75e168d1b357451fd845e8dba7c38f6$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    138:156:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    234:234:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract) -> <init>
    237:249:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    255:255:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
# {"id":"sourceFile","fileName":"ActivityResultRegistry.java"}
    465:467:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistryOwner -> androidx.activity.result.ActivityResultRegistryOwner:
# {"id":"sourceFile","fileName":"ActivityResultRegistryOwner.java"}
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
# {"id":"sourceFile","fileName":"IntentSenderRequest.java"}
    132:132:void <clinit>() -> <clinit>
    77:81:void <init>(android.content.IntentSender,android.content.Intent,int,int) -> <init>
    124:128:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    102:102:android.content.Intent getFillInIntent() -> getFillInIntent
    111:111:int getFlagsMask() -> getFlagsMask
    120:120:int getFlagsValues() -> getFlagsValues
    91:91:android.content.IntentSender getIntentSender() -> getIntentSender
    151:154:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
# {"id":"sourceFile","fileName":"IntentSenderRequest.java"}
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.activity.result.IntentSenderRequest$Builder -> androidx.activity.result.IntentSenderRequest$Builder:
# {"id":"sourceFile","fileName":"IntentSenderRequest.java"}
    187:188:void <init>(android.content.IntentSender) -> <init>
    239:239:androidx.activity.result.IntentSenderRequest build() -> build
    211:211:androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent) -> setFillInIntent
    227:228:androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int) -> setFlags
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
# {"id":"sourceFile","fileName":"ActivityResultContract.kt"}
    0:0:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
androidx.activity.result.contract.ActivityResultContract$SynchronousResult -> androidx.activity.result.contract.ActivityResultContract$SynchronousResult:
# {"id":"sourceFile","fileName":"ActivityResultContract.kt"}
    55:55:void <init>(java.lang.Object) -> <init>
    55:55:java.lang.Object getValue() -> getValue
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    0:0:void <clinit>() -> <clinit>
    132:132:void <init>() -> <init>
    131:131:java.lang.Object parseResult(int,android.content.Intent) -> createIntent
    131:131:android.content.Intent createIntent(android.content.Context,java.lang.Object):131 -> createIntent
    173:173:android.content.Intent createIntent(android.content.Context,java.lang.String[]) -> createIntent
    131:131:java.lang.Object parseResult(int,android.content.Intent) -> getSynchronousResult
    131:131:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object):131 -> getSynchronousResult
    180:181:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    12537:12537:boolean kotlin.collections.ArraysKt___ArraysKt.all(java.lang.Object[],kotlin.jvm.functions.Function1) -> getSynchronousResult
    12537:12537:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):183 -> getSynchronousResult
    184:184:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    8676:8677:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associate(java.lang.Object[],kotlin.jvm.functions.Function1) -> getSynchronousResult
    8676:8677:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):190 -> getSynchronousResult
    9358:9358:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> getSynchronousResult
    9358:9358:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):190 -> getSynchronousResult
    190:190:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    131:131:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    198:201:java.util.Map parseResult(int,android.content.Intent) -> parseResult
    11365:11365:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(int[],kotlin.jvm.functions.Function1) -> parseResult
    11365:11365:java.util.Map parseResult(int,android.content.Intent):203 -> parseResult
    11700:11700:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> parseResult
    11700:11700:java.util.Map parseResult(int,android.content.Intent):203 -> parseResult
    202:206:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    168:168:android.content.Intent createIntent$activity_release(java.lang.String[]) -> createIntent$activity_release
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    0:0:void <clinit>() -> <clinit>
    53:53:void <init>() -> <init>
    0:0:android.content.Intent createIntent(android.content.Context,android.content.Intent) -> createIntent
    53:53:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    53:53:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    73:73:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion:
# {"id":"sourceFile","fileName":"ActivityResultContracts.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.annotation.InspectableProperty$ValueType -> androidx.annotation.InspectableProperty$ValueType:
# {"id":"sourceFile","fileName":"InspectableProperty.java"}
    151:200:void <clinit>() -> <clinit>
    151:151:void <init>(java.lang.String,int) -> <init>
    151:151:androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String) -> valueOf
    151:151:androidx.annotation.InspectableProperty$ValueType[] values() -> values
androidx.annotation.Keep -> androidx.annotation.Keep:
# {"id":"sourceFile","fileName":"Keep.java"}
androidx.annotation.RequiresOptIn$Level -> androidx.annotation.RequiresOptIn$Level:
# {"id":"sourceFile","fileName":"RequiresOptIn.kt"}
    0:0:androidx.annotation.RequiresOptIn$Level[] $values() -> $values
    94:99:void <clinit>() -> <clinit>
    90:90:void <init>(java.lang.String,int) -> <init>
    0:0:androidx.annotation.RequiresOptIn$Level valueOf(java.lang.String) -> valueOf
    0:0:androidx.annotation.RequiresOptIn$Level[] values() -> values
androidx.annotation.RestrictTo$Scope -> androidx.annotation.RestrictTo$Scope:
# {"id":"sourceFile","fileName":"RestrictTo.java"}
    60:107:void <clinit>() -> <clinit>
    60:60:void <init>(java.lang.String,int) -> <init>
    60:60:androidx.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    60:60:androidx.annotation.RestrictTo$Scope[] values() -> values
androidx.annotation.experimental.Experimental$Level -> androidx.annotation.experimental.Experimental$Level:
# {"id":"sourceFile","fileName":"Experimental.kt"}
    0:0:androidx.annotation.experimental.Experimental$Level[] $values() -> $values
    84:89:void <clinit>() -> <clinit>
    80:80:void <init>(java.lang.String,int) -> <init>
    0:0:androidx.annotation.experimental.Experimental$Level valueOf(java.lang.String) -> valueOf
    0:0:androidx.annotation.experimental.Experimental$Level[] values() -> values
androidx.appcompat.R$styleable -> androidx.appcompat.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
# {"id":"sourceFile","fileName":"ActionBar.java"}
    0:0:boolean closeOptionsMenu() -> closeOptionsMenu
    0:0:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    0:0:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    0:0:void onDestroy() -> onDestroy
    0:0:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    0:0:boolean openOptionsMenu() -> openOptionsMenu
    0:0:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
# {"id":"sourceFile","fileName":"ActionBar.java"}
    1374:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1386:void <init>(int,int) -> <init>
    1374:1401:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1405:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
# {"id":"sourceFile","fileName":"ActionBar.java"}
androidx.appcompat.app.ActionBarDrawerToggle$Delegate -> androidx.appcompat.app.ActionBarDrawerToggle$Delegate:
# {"id":"sourceFile","fileName":"ActionBarDrawerToggle.java"}
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
# {"id":"sourceFile","fileName":"AlertController.java"}
    82:205:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:222:boolean canTextInput(android.view.View) -> canTextInput
    829:832:void centerButton(android.widget.Button) -> centerButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:233:void installContent() -> installContent
    749:754:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    443:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    324:348:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:257:void setCustomTitle(android.view.View) -> setCustomTitle
    359:367:void setIcon(int) -> setIcon
    378:386:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:263:void setMessage(java.lang.CharSequence) -> setMessage
    560:631:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    271:273:void setView(int) -> setView
    280:282:void setView(android.view.View) -> setView
    290:296:void setView(android.view.View,int,int,int,int) -> setView
    763:824:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:742:void setupContent(android.view.ViewGroup) -> setupContent
    640:668:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:713:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:552:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
# {"id":"sourceFile","fileName":"AlertController.java"}
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:146:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
# {"id":"sourceFile","fileName":"AlertController.java"}
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:596:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
# {"id":"sourceFile","fileName":"AlertController.java"}
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:603:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
# {"id":"sourceFile","fileName":"AlertController.java"}
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:615:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    0:0:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
# {"id":"sourceFile","fileName":"AlertController.java"}
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:622:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
# {"id":"sourceFile","fileName":"AlertController.java"}
    869:927:void <init>(android.content.Context) -> <init>
    931:975:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1097:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
# {"id":"sourceFile","fileName":"AlertController.java"}
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1002:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1009:1016:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1025:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1070:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1082:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
# {"id":"sourceFile","fileName":"AlertController.java"}
    156:157:void <init>(android.content.DialogInterface) -> <init>
    162:171:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1104:1104:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    0:0:long getItemId(int) -> getItemId
    0:0:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
# {"id":"sourceFile","fileName":"AlertController.java"}
    840:840:void <init>(android.content.Context) -> <init>
    844:850:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:860:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
# {"id":"sourceFile","fileName":"AlertDialog.java"}
    98:99:void <init>(android.content.Context,int) -> <init>
    140:140:android.widget.ListView getListView() -> getListView
    278:279:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    114:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:146:void setTitle(java.lang.CharSequence) -> setTitle
    172:172:void setView(android.view.View) -> setView
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
# {"id":"sourceFile","fileName":"AlertDialog.java"}
    313:313:void <init>(android.content.Context) -> <init>
    342:345:void <init>(android.content.Context,int) -> <init>
    983:992:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:660:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:398:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:445:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    418:418:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    522:523:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    620:620:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    486:487:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    853:856:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    377:377:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    902:904:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    1008:1009:androidx.appcompat.app.AlertDialog show() -> show
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
# {"id":"sourceFile","fileName":"AppCompatActivity.java"}
    96:97:void <init>() -> <init>
    214:215:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    141:141:void attachBaseContext(android.content.Context) -> attachBaseContext
    655:658:void closeOptionsMenu() -> closeOptionsMenu
    598:604:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    264:264:android.view.View findViewById(int) -> findViewById
    588:591:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    558:558:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    191:191:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    609:612:android.content.res.Resources getResources() -> getResources
    165:165:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    505:505:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    118:128:void initDelegate() -> initDelegate
    221:224:void initViewTreeOwners() -> initViewTreeOwners
    319:319:void invalidateOptionsMenu() -> invalidateOptionsMenu
    229:239:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    545:545:void onContentChanged() -> onContentChanged
    422:422:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    283:284:void onDestroy() -> onDestroy
    638:641:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    0:0:void onLocalesChanged(androidx.core.os.LocaleListCompat) -> onLocalesChanged
    269:276:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    569:569:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    0:0:void onNightModeChanged(int) -> onNightModeChanged
    580:580:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    152:153:void onPostCreate(android.os.Bundle) -> onPostCreate
    245:246:void onPostResume() -> onPostResume
    0:0:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    251:252:void onStart() -> onStart
    257:258:void onStop() -> onStop
    0:0:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    0:0:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    0:0:void onSupportContentChanged() -> onSupportContentChanged
    467:486:boolean onSupportNavigateUp() -> onSupportNavigateUp
    289:290:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    0:0:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    646:649:void openOptionsMenu() -> openOptionsMenu
    621:628:boolean performMenuItemShortcut(android.view.KeyEvent) -> performMenuItemShortcut
    196:197:void setContentView(int) -> setContentView
    202:203:void setContentView(android.view.View) -> setContentView
    208:209:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    185:185:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    146:147:void setTheme(int) -> setTheme
    538:538:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    522:522:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatActivity$1 -> androidx.appcompat.app.AppCompatActivity$1:
# {"id":"sourceFile","fileName":"AppCompatActivity.java"}
    119:119:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    123:124:android.os.Bundle saveState() -> saveState
androidx.appcompat.app.AppCompatActivity$2 -> androidx.appcompat.app.AppCompatActivity$2:
# {"id":"sourceFile","fileName":"AppCompatActivity.java"}
    128:128:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    131:134:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.appcompat.app.AppCompatCallback -> androidx.appcompat.app.AppCompatCallback:
# {"id":"sourceFile","fileName":"AppCompatCallback.java"}
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
# {"id":"sourceFile","fileName":"AppCompatDelegate.java"}
    0:0:void $r8$lambda$F36VbET_i_Y_e98J3kKLOS37EAQ(android.content.Context) -> $r8$lambda$F36VbET_i_Y_e98J3kKLOS37EAQ
      # {"id":"com.android.tools.r8.synthesized"}
    114:201:void <clinit>() -> <clinit>
    990:996:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate) -> addActiveDelegate
    0:0:void attachBaseContext(android.content.Context) -> attachBaseContext
    421:421:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    256:256:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    267:267:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    761:775:androidx.core.os.LocaleListCompat getApplicationLocales() -> getApplicationLocales
    785:785:int getDefaultNightMode() -> getDefaultNightMode
    836:841:java.lang.Object getLocaleManagerForApplication() -> getLocaleManagerForApplication
    795:795:androidx.core.os.LocaleListCompat getRequestedAppLocales() -> getRequestedAppLocales
    852:866:boolean isAutoStorageOptedIn(android.content.Context) -> isAutoStorageOptedIn
    914:915:void lambda$syncRequestedAndStoredLocales$1(android.content.Context) -> lambda$syncRequestedAndStoredLocales$1
    1000:1003:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate) -> removeActivityDelegate
    1007:1017:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
    0:0:void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher) -> setOnBackInvokedDispatcher
    905:938:void syncRequestedAndStoredLocales(android.content.Context) -> syncRequestedAndStoredLocales
androidx.appcompat.app.AppCompatDelegate$$ExternalSyntheticLambda0 -> androidx.appcompat.app.AppCompatDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.appcompat.app.AppCompatDelegate$$InternalSyntheticLambda$1$cc563e7b9e953a9d912db7c994e94b3abce009c4c05bec5a3cf3db1e15ccdb54$0.f$0 -> f$0
    0:0:void androidx.appcompat.app.AppCompatDelegate$$InternalSyntheticLambda$1$cc563e7b9e953a9d912db7c994e94b3abce009c4c05bec5a3cf3db1e15ccdb54$0.<init>(android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegate$$InternalSyntheticLambda$1$cc563e7b9e953a9d912db7c994e94b3abce009c4c05bec5a3cf3db1e15ccdb54$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegate$Api24Impl -> androidx.appcompat.app.AppCompatDelegate$Api24Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegate.java"}
    1054:1054:android.os.LocaleList localeListForLanguageTags(java.lang.String) -> localeListForLanguageTags
androidx.appcompat.app.AppCompatDelegate$Api33Impl -> androidx.appcompat.app.AppCompatDelegate$Api33Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegate.java"}
    1073:1074:android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object) -> localeManagerGetApplicationLocales
    1067:1068:void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList) -> localeManagerSetApplicationLocales
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    142:157:void <clinit>() -> <clinit>
    299:299:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    303:303:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    219:349:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    790:793:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2522:2522:boolean applyApplicationSpecificConfig(boolean) -> applyApplicationSpecificConfig
    2535:2574:boolean applyApplicationSpecificConfig(boolean,boolean) -> applyApplicationSpecificConfig
    2501:2501:boolean applyDayNight() -> applyDayNight
    1102:1135:void applyFixedSizeWindow() -> applyFixedSizeWindow
    389:525:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    856:883:void attachToWindow(android.view.Window) -> attachToWindow
    2587:2616:androidx.core.os.LocaleListCompat calculateApplicationLocales(android.content.Context) -> calculateApplicationLocales
    2679:2679:int calculateNightMode() -> calculateNightMode
    2204:2224:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    2081:2091:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    831:835:void cleanupAutoManagers() -> cleanupAutoManagers
    2095:2095:void closePanel(int) -> closePanel
    2099:2131:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    2733:2749:android.content.res.Configuration createOverrideAppConfiguration(android.content.Context,int,androidx.core.os.LocaleListCompat,android.content.res.Configuration,boolean) -> createOverrideAppConfiguration
    922:1086:android.view.ViewGroup createSubDecor() -> createSubDecor
    1637:1681:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2470:2490:void dismissPopups() -> dismissPopups
    1580:1598:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2292:2313:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1476:1477:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    888:916:void ensureSubDecor() -> ensureSubDecor
    847:851:void ensureWindow() -> ensureWindow
    2229:2233:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    691:692:android.view.View findViewById(int) -> findViewById
    3802:3900:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta
    665:671:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2961:2996:int getActivityHandlesConfigChangesFlags(android.content.Context) -> getActivityHandlesConfigChangesFlags
    2954:2957:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context) -> getAutoBatteryNightModeManager
    2946:2950:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context) -> getAutoTimeNightModeManager
    2694:2697:androidx.core.os.LocaleListCompat getConfigurationLocales(android.content.res.Configuration) -> getConfigurationLocales
    2496:2496:android.content.Context getContextForDelegate() -> getContextForDelegate
    3740:3740:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    2643:2643:int getLocalNightMode() -> getLocalNightMode
    679:684:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2242:2252:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    592:593:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    1221:1225:java.lang.CharSequence getTitle() -> getTitle
    601:601:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    605:617:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1956:1971:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1862:1864:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1913:1950:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1712:1716:void installViewFactory() -> installViewFactory
    1303:1305:void invalidateOptionsMenu() -> invalidateOptionsMenu
    2283:2287:void invalidatePanelMenu(int) -> invalidatePanelMenu
    1472:1472:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2656:2672:int mapNightMode(android.content.Context,int) -> mapNightMode
    1512:1533:boolean onBackPressed() -> onBackPressed
    699:726:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    547:579:void onCreate(android.os.Bundle) -> onCreate
    1729:1729:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1738:1738:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    802:826:void onDestroy() -> onDestroy
    1618:1628:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2136:2139:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1543:1569:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1604:1607:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2147:2191:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1255:1259:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1267:1267:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1246:1248:void onMenuOpened(int) -> onMenuOpened
    1230:1239:void onPanelClosed(int) -> onPanelClosed
    585:585:void onPostCreate(android.os.Bundle) -> onPostCreate
    755:757:void onPostResume() -> onPostResume
    0:0:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    741:741:void onStart() -> onStart
    747:749:void onStop() -> onStop
    0:0:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1759:1857:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    597:597:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    2259:2275:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1977:2075:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1869:1909:void reopenMenu(boolean) -> reopenMenu
    1140:1177:boolean requestWindowFeature(int) -> requestWindowFeature
    0:0:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    2683:2687:void setConfigurationLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat) -> setConfigurationLocales
    763:767:void setContentView(android.view.View) -> setContentView
    772:776:void setContentView(int) -> setContentView
    781:785:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    2704:2707:void setDefaultLocalesForLocaleList(androidx.core.os.LocaleListCompat) -> setDefaultLocalesForLocaleList
    355:371:void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher) -> setOnBackInvokedDispatcher
    623:658:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    841:841:void setTheme(int) -> setTheme
    1208:1215:void setTitle(java.lang.CharSequence) -> setTitle
    1462:1462:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1690:1706:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1488:1497:boolean shouldRegisterBackInvokedCallback() -> shouldRegisterBackInvokedCallback
    1273:1298:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1309:1456:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2445:2446:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1743:1749:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2919:2930:void updateActivityConfiguration(android.content.res.Configuration) -> updateActivityConfiguration
    2767:2871:boolean updateAppConfiguration(int,androidx.core.os.LocaleListCompat,boolean) -> updateAppConfiguration
    375:380:void updateBackInvokedCallbackState() -> updateBackInvokedCallbackState
    2881:2914:void updateResourcesConfiguration(int,androidx.core.os.LocaleListCompat,boolean,android.content.res.Configuration) -> updateResourcesConfiguration
    2329:2430:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> updateStatusGuard
    2437:2441:void updateStatusGuardColor(android.view.View) -> updateStatusGuardColor
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    274:274:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    277:284:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1021:1021:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1025:1037:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1086:1086:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    0:0:void onAttachedFromWindow() -> onAttachedFromWindow
    1092:1092:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1364:1364:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1367:1390:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1375:1375:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1383:1385:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1378:1378:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1417:1417:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1428:1430:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1420:1422:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3744:3744:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3758:3758:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    3769:3772:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3097:3097:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3111:3111:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    3102:3104:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3005:3006:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    3022:3022:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    3011:3011:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    3027:3058:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    3016:3017:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3035:3035:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    3038:3047:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3921:3921:android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration) -> createConfigurationContext
    3914:3915:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_densityDpi
    3926:3926:void setLayoutDirection(android.content.res.Configuration,java.util.Locale) -> setLayoutDirection
    3931:3931:void setLocale(android.content.res.Configuration,java.util.Locale) -> setLocale
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3940:3940:boolean isPowerSaveMode(android.os.PowerManager) -> isPowerSaveMode
    3945:3945:java.lang.String toLanguageTag(java.util.Locale) -> toLanguageTag
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3958:3962:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_locale
    3968:3968:androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration) -> getLocales
    3978:3978:void setDefaultLocales(androidx.core.os.LocaleListCompat) -> setDefaultLocales
    3973:3973:void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat) -> setLocales
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.LocaleList androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$InternalSyntheticApiModelOutline$1$4e552b2404af40b0acbe3fe0a14bc33345d4ce867240e8e321de49866aa99c85$0.m(java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$InternalSyntheticApiModelOutline$1$4e552b2404af40b0acbe3fe0a14bc33345d4ce867240e8e321de49866aa99c85$1.m(android.os.LocaleList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.LocaleList androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$InternalSyntheticApiModelOutline$1$4eaaa163e4469f918dbc637bfb220f97a2c1b93c6489790531aed484d4786a77$0.m(android.content.res.Configuration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline3 -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$InternalSyntheticApiModelOutline$1$4eaaa163e4469f918dbc637bfb220f97a2c1b93c6489790531aed484d4786a77$1.m(android.os.LocaleList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline4 -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$InternalSyntheticApiModelOutline$1$60eeebaa20d7c83235ad0b955216348918f0dae07df53fbe5be3fd84b1c0d7d6$1.m(android.content.res.Configuration,android.os.LocaleList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline5 -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl$$InternalSyntheticApiModelOutline$1$f926eb9176eb9d80376b8ec0de616eeb5a4ae4f2298814fe1c1598d8b0f4decf$2.m(android.os.LocaleList,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3988:3996:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_colorMode
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl$$InternalSyntheticApiModelOutline$1$ebe0237a60ec126e47df9a25affc4c9743f2f51e1332fa13a3b4abdebaa1704e$0.m(android.content.res.Configuration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl$$InternalSyntheticApiModelOutline$1$ebe0237a60ec126e47df9a25affc4c9743f2f51e1332fa13a3b4abdebaa1704e$4.m(android.content.res.Configuration,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    4026:4026:android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity) -> getOnBackInvokedDispatcher
    4010:4012:android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl) -> registerOnBackPressedCallback
    4019:4021:void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object) -> unregisterOnBackInvokedCallback
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.window.OnBackInvokedDispatcher androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$0462e2f13ba5a5afe2eb522bc8da7fd0c28e4cf2c8459a9fee26ff74b5081de1$0.m(android.app.Activity) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.window.OnBackInvokedCallback androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$a4afddb3ed27144c00f1d61b553771b3c4fcc88f91716fb63cbb13b072df193c$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.window.OnBackInvokedDispatcher androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$a4afddb3ed27144c00f1d61b553771b3c4fcc88f91716fb63cbb13b072df193c$1.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline3 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$a4afddb3ed27144c00f1d61b553771b3c4fcc88f91716fb63cbb13b072df193c$2.m(android.window.OnBackInvokedDispatcher,android.window.OnBackInvokedCallback) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline4 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticApiModelOutline$1$ca448f707d8ac2d17ac7e57df7db5477aff5780c46368876e01931f1cba78d41$2.m(android.window.OnBackInvokedDispatcher,int,android.window.OnBackInvokedCallback) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticLambda5 -> androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.app.AppCompatDelegateImpl androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticLambda$1$ca448f707d8ac2d17ac7e57df7db5477aff5780c46368876e01931f1cba78d41$0.f$0 -> f$0
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticLambda$1$ca448f707d8ac2d17ac7e57df7db5477aff5780c46368876e01931f1cba78d41$0.<init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl$$InternalSyntheticLambda$1$ca448f707d8ac2d17ac7e57df7db5477aff5780c46368876e01931f1cba78d41$0.onBackInvoked() -> onBackInvoked
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3398:3399:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    3598:3602:boolean bypassDispatchKeyEvent(android.view.Window$Callback,android.view.KeyEvent) -> bypassDispatchKeyEvent
    3580:3584:void bypassOnContentChanged(android.view.Window$Callback) -> bypassOnContentChanged
    3616:3620:void bypassOnPanelClosed(android.view.Window$Callback,int,android.view.Menu) -> bypassOnPanelClosed
    3408:3413:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3418:3419:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    3445:3446:void onContentChanged() -> onContentChanged
    3424:3429:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    3434:3440:android.view.View onCreatePanelView(int) -> onCreatePanelView
    3489:3490:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    3496:3502:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    3456:3481:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    3560:3567:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    3508:3517:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    3545:3553:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    3403:3403:void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback) -> setActionBarCallback
    3527:3536:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3708:3710:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3730:3731:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3717:3717:int getApplyableNightMode() -> getApplyableNightMode
    3724:3724:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3629:3629:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3661:3668:void cleanup() -> cleanup
    3638:3654:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3647:3647:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    3650:3650:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3680:3681:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3697:3700:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3687:3687:int getApplyableNightMode() -> getApplyableNightMode
    3692:3692:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    539:539:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration) -> applyOverrideConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3347:3348:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3353:3354:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3377:3377:boolean isOutOfBounds(int,int) -> isOutOfBounds
    3359:3368:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3373:3373:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3180:3183:void <init>(int) -> <init>
    3248:3257:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    3187:3190:boolean hasPanelItems() -> hasPanelItems
    3236:3243:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    3204:3232:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3327:3327:void <clinit>() -> <clinit>
    3297:3297:void <init>() -> <init>
    0:0:int describeContents() -> describeContents
    3316:3321:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    3307:3311:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3327:3327:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3327:3327:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3330:3330:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3335:3335:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3327:3327:java.lang.Object[] newArray(int) -> newArray
    3340:3340:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3063:3063:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3068:3078:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    3086:3089:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
# {"id":"sourceFile","fileName":"AppCompatDialog.java"}
    47:65:void <init>(android.content.Context,int) -> <init>
    129:129:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    140:142:void dismiss() -> dismiss
    214:215:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    177:180:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    186:188:int getThemeResId(android.content.Context,int) -> getThemeResId
    169:169:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:79:void onCreate(android.os.Bundle) -> onCreate
    134:135:void onStop() -> onStop
    0:0:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    0:0:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    0:0:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:95:void setContentView(int) -> setContentView
    100:100:void setContentView(android.view.View) -> setContentView
    105:105:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:118:void setTitle(java.lang.CharSequence) -> setTitle
    123:124:void setTitle(int) -> setTitle
    209:209:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    160:160:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$$ExternalSyntheticLambda0 -> androidx.appcompat.app.AppCompatDialog$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.app.AppCompatDialog androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$1$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.f$0 -> f$0
    0:0:void androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$1$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.<init>(androidx.appcompat.app.AppCompatDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.appcompat.app.AppCompatDialog$$InternalSyntheticLambda$1$b6999da9a308ba79bfa0ec130c31bbdfcc71a76702282f4849380eac14a81bd5$0.superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
# {"id":"sourceFile","fileName":"AppCompatViewInflater.java"}
    75:93:void <clinit>() -> <clinit>
    73:96:void <init>() -> <init>
    422:442:void backportAccessibilityAttributes(android.content.Context,android.view.View,android.util.AttributeSet) -> backportAccessibilityAttributes
    347:362:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    274:274:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    238:238:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    258:258:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    268:268:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    243:243:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    253:253:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    233:233:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    280:280:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    263:263:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    285:285:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    290:290:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    248:248:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    228:228:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    295:295:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    0:0:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    133:220:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    367:375:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    375:381:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    311:337:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    328:337:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    336:337:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    336:338:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    394:415:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    300:300:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
# {"id":"sourceFile","fileName":"AppCompatViewInflater.java"}
    456:458:void <init>(android.view.View,java.lang.String) -> <init>
    463:473:void onClick(android.view.View) -> onClick
    481:506:void resolveMethod(android.content.Context) -> resolveMethod
androidx.appcompat.app.AppLocalesMetadataHolderService -> androidx.appcompat.app.AppLocalesMetadataHolderService:
# {"id":"sourceFile","fileName":"AppLocalesMetadataHolderService.java"}
    43:43:void <init>() -> <init>
    63:69:android.content.pm.ServiceInfo getServiceInfo(android.content.Context) -> getServiceInfo
    48:48:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl -> androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl:
# {"id":"sourceFile","fileName":"AppLocalesMetadataHolderService.java"}
    0:0:int getDisabledComponentFlag() -> getDisabledComponentFlag
androidx.appcompat.app.AppLocalesStorageHelper -> androidx.appcompat.app.AppLocalesStorageHelper:
# {"id":"sourceFile","fileName":"AppLocalesStorageHelper.java"}
    120:149:void persistLocales(android.content.Context,java.lang.String) -> persistLocales
    129:154:void persistLocales(android.content.Context,java.lang.String) -> persistLocales
    67:111:java.lang.String readLocales(android.content.Context) -> readLocales
    166:198:void syncLocalesToFramework(android.content.Context) -> syncLocalesToFramework
androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor -> androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor:
# {"id":"sourceFile","fileName":"AppLocalesStorageHelper.java"}
    0:0:void $r8$lambda$VQIUCyuFJVaYXOOy5lMhu8dTj68(androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor,java.lang.Runnable) -> $r8$lambda$VQIUCyuFJVaYXOOy5lMhu8dTj68
      # {"id":"com.android.tools.r8.synthesized"}
    221:227:void <init>(java.util.concurrent.Executor) -> <init>
    232:243:void execute(java.lang.Runnable) -> execute
    235:238:void lambda$execute$0(java.lang.Runnable) -> lambda$execute$0
    247:251:void scheduleNext() -> scheduleNext
androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$ExternalSyntheticLambda0 -> androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$InternalSyntheticLambda$1$d83da90378edfef33d93bb4a13a0581c0950b0fd40ae81dacd53befaa7b3780c$0.f$0 -> f$0
    java.lang.Runnable androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$InternalSyntheticLambda$1$d83da90378edfef33d93bb4a13a0581c0950b0fd40ae81dacd53befaa7b3780c$0.f$1 -> f$1
    0:0:void androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$InternalSyntheticLambda$1$d83da90378edfef33d93bb4a13a0581c0950b0fd40ae81dacd53befaa7b3780c$0.<init>(androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor,java.lang.Runnable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor$$InternalSyntheticLambda$1$d83da90378edfef33d93bb4a13a0581c0950b0fd40ae81dacd53befaa7b3780c$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor -> androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor:
# {"id":"sourceFile","fileName":"AppLocalesStorageHelper.java"}
    211:211:void execute(java.lang.Runnable) -> execute
androidx.appcompat.app.LayoutIncludeDetector -> androidx.appcompat.app.LayoutIncludeDetector:
# {"id":"sourceFile","fileName":"LayoutIncludeDetector.java"}
    36:38:void <init>() -> <init>
    45:56:boolean detect(android.util.AttributeSet) -> detect
    108:109:boolean isParserOutdated(org.xmlpull.v1.XmlPullParser) -> isParserOutdated
    95:98:org.xmlpull.v1.XmlPullParser popOutdatedAttrHolders(java.util.Deque) -> popOutdatedAttrHolders
    75:78:boolean shouldInheritContext(org.xmlpull.v1.XmlPullParser,org.xmlpull.v1.XmlPullParser) -> shouldInheritContext
androidx.appcompat.app.LocaleOverlayHelper -> androidx.appcompat.app.LocaleOverlayHelper:
# {"id":"sourceFile","fileName":"LocaleOverlayHelper.java"}
    69:82:androidx.core.os.LocaleListCompat combineLocales(androidx.core.os.LocaleListCompat,androidx.core.os.LocaleListCompat) -> combineLocales
    47:50:androidx.core.os.LocaleListCompat combineLocalesIfOverlayExists(androidx.core.os.LocaleListCompat,androidx.core.os.LocaleListCompat) -> combineLocalesIfOverlayExists
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
# {"id":"sourceFile","fileName":"ResourcesFlusher.java"}
    47:55:void flush(android.content.res.Resources) -> flush
    61:78:void flushLollipops(android.content.res.Resources) -> flushLollipops
    85:109:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    114:161:void flushNougats(android.content.res.Resources) -> flushNougats
    167:206:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ResourcesFlusher$Api16Impl -> androidx.appcompat.app.ResourcesFlusher$Api16Impl:
# {"id":"sourceFile","fileName":"ResourcesFlusher.java"}
    221:221:void clear(android.util.LongSparseArray) -> clear
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
# {"id":"sourceFile","fileName":"ToolbarActionBar.java"}
    53:80:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    431:431:boolean closeOptionsMenu() -> closeOptionsMenu
    443:444:boolean collapseActionView() -> collapseActionView
    507:514:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    326:326:int getDisplayOptions() -> getDisplayOptions
    545:550:android.view.Menu getMenu() -> getMenu
    149:149:android.content.Context getThemedContext() -> getThemedContext
    436:437:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    189:189:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    492:492:void onDestroy() -> onDestroy
    479:484:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    471:472:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    426:426:boolean openOptionsMenu() -> openOptionsMenu
    451:466:void populateOptionsMenu() -> populateOptionsMenu
    0:0:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    278:278:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    262:263:void setDisplayOptions(int,int) -> setDisplayOptions
    179:179:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    159:159:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    164:164:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    0:0:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    221:221:void setTitle(java.lang.CharSequence) -> setTitle
    231:231:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
# {"id":"sourceFile","fileName":"ToolbarActionBar.java"}
    55:55:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    58:58:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
# {"id":"sourceFile","fileName":"ToolbarActionBar.java"}
    63:63:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    66:66:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
# {"id":"sourceFile","fileName":"ToolbarActionBar.java"}
    556:556:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    567:574:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    561:561:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
# {"id":"sourceFile","fileName":"ToolbarActionBar.java"}
    580:580:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    0:0:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    590:593:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback -> androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback:
# {"id":"sourceFile","fileName":"ToolbarActionBar.java"}
    519:519:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    538:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    523:525:boolean onPreparePanel(int) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
# {"id":"sourceFile","fileName":"TwilightCalculator.java"}
    95:136:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
# {"id":"sourceFile","fileName":"TwilightManager.java"}
    66:71:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    110:124:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:135:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:101:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:186:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
# {"id":"sourceFile","fileName":"TwilightManager.java"}
    196:196:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    84:85:void <clinit>() -> <clinit>
    98:174:void <init>(android.app.Activity,boolean) -> <init>
    98:179:void <init>(android.app.Dialog) -> <init>
    872:903:void animateToMode(boolean) -> animateToMode
    0:0:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    971:972:boolean collapseActionView() -> collapseActionView
    309:312:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    348:355:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    833:859:void doHide(boolean) -> doHide
    784:828:void doShow(boolean) -> doShow
    670:670:void enableContentAnimations(boolean) -> enableContentAnimations
    234:240:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    515:515:int getDisplayOptions() -> getDisplayOptions
    510:510:int getNavigationMode() -> getNavigationMode
    917:929:android.content.Context getThemedContext() -> getThemedContext
    708:713:void hideForActionMode() -> hideForActionMode
    719:721:void hideForSystem() -> hideForSystem
    192:230:void init(android.view.View) -> init
    256:256:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    959:961:void onContentScrollStarted() -> onContentScrollStarted
    0:0:void onContentScrollStopped() -> onContentScrollStopped
    1396:1404:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    318:318:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1389:1390:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    377:377:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    471:475:void setDisplayOptions(int,int) -> setDisplayOptions
    246:246:void setElevation(float) -> setElevation
    260:281:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    727:732:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    954:954:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    939:939:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    944:944:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    392:392:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    330:332:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    438:438:void setTitle(java.lang.CharSequence) -> setTitle
    443:443:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    912:912:boolean shouldAnimateContextView() -> shouldAnimateContextView
    682:687:void showForActionMode() -> showForActionMode
    693:695:void showForSystem() -> showForSystem
    520:533:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    767:778:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    134:134:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    137:146:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    151:151:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    154:155:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    160:160:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    163:164:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
# {"id":"sourceFile","fileName":"WindowDecorActionBar.java"}
    989:994:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1054:1059:boolean dispatchOnCreate() -> dispatchOnCreate
    1009:1033:void finish() -> finish
    1111:1111:android.view.View getCustomView() -> getCustomView
    1004:1004:android.view.Menu getMenu() -> getMenu
    999:999:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1095:1095:java.lang.CharSequence getSubtitle() -> getSubtitle
    1090:1090:java.lang.CharSequence getTitle() -> getTitle
    1038:1050:void invalidate() -> invalidate
    1106:1106:boolean isTitleOptional() -> isTitleOptional
    1116:1117:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1144:1148:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1064:1065:void setCustomView(android.view.View) -> setCustomView
    1070:1070:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1085:1085:void setSubtitle(int) -> setSubtitle
    1075:1075:void setTitle(java.lang.CharSequence) -> setTitle
    1080:1080:void setTitle(int) -> setTitle
    1100:1101:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
# {"id":"sourceFile","fileName":"AppCompatResources.java"}
    48:48:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    66:66:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    0:0:void <clinit>() -> <clinit>
    112:112:void <init>() -> <init>
    106:122:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    91:91:androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState cloneConstantState() -> cloneConstantState
    616:616:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    174:180:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    204:212:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    482:496:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    471:471:void init() -> init
    0:0:boolean isStateful() -> isStateful
    263:269:void jumpToCurrentState() -> jumpToCurrentState
    607:609:android.graphics.drawable.Drawable mutate() -> mutate
    277:285:boolean onStateChange(int[]) -> onStateChange
    564:601:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    509:554:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    292:348:boolean selectTransition(int) -> selectTransition
    720:722:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState) -> setConstantState
    217:223:boolean setVisible(boolean,boolean) -> setVisible
    448:466:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1 -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    369:370:void <init>(android.graphics.drawable.Animatable) -> <init>
    375:375:void start() -> start
    380:380:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    636:643:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    669:670:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    654:663:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    0:0:long generateTransitionKey(int,int) -> generateTransitionKey
    683:683:int getKeyframeIdAt(int) -> getKeyframeIdAt
    675:679:int indexOfKeyframe(int[]) -> indexOfKeyframe
    687:688:int indexOfTransition(int,int) -> indexOfTransition
    692:693:boolean isTransitionReversed(int,int) -> isTransitionReversed
    649:650:void mutate() -> mutate
    704:704:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    710:710:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    697:698:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    432:433:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    438:438:void start() -> start
    443:443:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    391:405:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    410:410:boolean canReverse() -> canReverse
    420:420:void reverse() -> reverse
    415:415:void start() -> start
    425:425:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    734:735:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    761:774:float getInterpolation(float) -> getInterpolation
    756:756:int getTotalDuration() -> getTotalDuration
    739:751:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
# {"id":"sourceFile","fileName":"AnimatedStateListDrawableCompat.java"}
    352:352:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
    0:0:boolean canReverse() -> canReverse
    0:0:void reverse() -> reverse
androidx.appcompat.graphics.drawable.DrawableContainerCompat -> androidx.appcompat.graphics.drawable.DrawableContainerCompat:
# {"id":"sourceFile","fileName":"DrawableContainerCompat.java"}
    48:69:void <init>() -> <init>
    534:569:void animate(boolean) -> animate
    593:593:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    599:599:boolean canApplyTheme() -> canApplyTheme
    81:85:void draw(android.graphics.Canvas) -> draw
    147:147:int getAlpha() -> getAlpha
    91:92:int getChangingConfigurations() -> getChangingConfigurations
    604:606:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    576:576:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    414:414:int getCurrentIndex() -> getCurrentIndex
    294:297:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    340:343:int getIntrinsicHeight() -> getIntrinsicHeight
    332:335:int getIntrinsicWidth() -> getIntrinsicWidth
    356:359:int getMinimumHeight() -> getMinimumHeight
    348:351:int getMinimumWidth() -> getMinimumWidth
    404:405:int getOpacity() -> getOpacity
    125:126:void getOutline(android.graphics.Outline) -> getOutline
    102:117:boolean getPadding(android.graphics.Rect) -> getPadding
    490:530:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    367:371:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    243:243:boolean isAutoMirrored() -> isAutoMirrored
    249:269:void jumpToCurrentState() -> jumpToCurrentState
    613:617:android.graphics.drawable.Drawable mutate() -> mutate
    96:97:boolean needsMirroring() -> needsMirroring
    217:221:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    327:327:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    314:318:boolean onLevelChange(int) -> onLevelChange
    1206:1206:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    377:378:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    427:479:boolean selectDrawable(int) -> selectDrawable
    132:139:void setAlpha(int) -> setAlpha
    232:235:void setAutoMirrored(boolean) -> setAutoMirrored
    163:167:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1155:1165:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState) -> setConstantState
    153:156:void setDither(boolean) -> setDither
    275:276:void setHotspot(float,float) -> setHotspot
    282:288:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    174:174:void setTint(int) -> setTint
    179:182:void setTintList(android.content.res.ColorStateList) -> setTintList
    188:191:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    391:396:boolean setVisible(boolean,boolean) -> setVisible
    384:385:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    587:587:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainerCompat$1 -> androidx.appcompat.graphics.drawable.DrawableContainerCompat$1:
# {"id":"sourceFile","fileName":"DrawableContainerCompat.java"}
    466:466:void <init>(androidx.appcompat.graphics.drawable.DrawableContainerCompat) -> <init>
    469:470:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainerCompat$Api21Impl -> androidx.appcompat.graphics.drawable.DrawableContainerCompat$Api21Impl:
# {"id":"sourceFile","fileName":"DrawableContainerCompat.java"}
    1217:1217:boolean canApplyTheme(android.graphics.drawable.Drawable$ConstantState) -> canApplyTheme
    1225:1225:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
    1221:1221:android.content.res.Resources getResources(android.content.res.Resources$Theme) -> getResources
androidx.appcompat.graphics.drawable.DrawableContainerCompat$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainerCompat$BlockInvalidateCallback:
# {"id":"sourceFile","fileName":"DrawableContainerCompat.java"}
    0:0:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1192:1193:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1199:1200:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1180:1181:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1175:1175:androidx.appcompat.graphics.drawable.DrawableContainerCompat$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState:
# {"id":"sourceFile","fileName":"DrawableContainerCompat.java"}
    652:754:void <init>(androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainerCompat,android.content.res.Resources) -> <init>
    770:784:int addChild(android.graphics.drawable.Drawable) -> addChild
    896:906:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    913:923:boolean canApplyTheme() -> canApplyTheme
    1136:1149:boolean canConstantState() -> canConstantState
    1044:1059:void computeConstantSize() -> computeConstantSize
    801:808:void createAllFutures() -> createAllFutures
    797:797:int getCapacity() -> getCapacity
    760:760:int getChangingConfigurations() -> getChangingConfigurations
    829:842:android.graphics.drawable.Drawable getChild(int) -> getChild
    822:822:int getChildCount() -> getChildCount
    1017:1020:int getConstantHeight() -> getConstantHeight
    1037:1040:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1027:1030:int getConstantMinimumWidth() -> getConstantMinimumWidth
    968:989:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1007:1010:int getConstantWidth() -> getConstantWidth
    1084:1095:int getOpacity() -> getOpacity
    1125:1129:void growArray(int,int) -> growArray
    792:793:void invalidateCache() -> invalidateCache
    1000:1000:boolean isConstantSize() -> isConstantSize
    813:817:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    993:993:void setConstantSize(boolean) -> setConstantSize
    1064:1064:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1072:1072:void setExitFadeDuration(int) -> setExitFadeDuration
    854:868:boolean setLayoutDirection(int,int) -> setLayoutDirection
    961:961:void setVariablePadding(boolean) -> setVariablePadding
    880:888:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapperCompat -> androidx.appcompat.graphics.drawable.DrawableWrapperCompat:
# {"id":"sourceFile","fileName":"DrawableWrapperCompat.java"}
    46:47:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:52:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    113:113:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    139:139:int getIntrinsicHeight() -> getIntrinsicHeight
    134:134:int getIntrinsicWidth() -> getIntrinsicWidth
    149:149:int getMinimumHeight() -> getMinimumHeight
    144:144:int getMinimumWidth() -> getMinimumWidth
    124:124:int getOpacity() -> getOpacity
    154:154:boolean getPadding(android.graphics.Rect) -> getPadding
    103:103:int[] getState() -> getState
    129:129:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    162:162:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    193:193:boolean isAutoMirrored() -> isAutoMirrored
    93:93:boolean isStateful() -> isStateful
    108:108:void jumpToCurrentState() -> jumpToCurrentState
    57:57:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:183:boolean onLevelChange(int) -> onLevelChange
    170:170:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    83:83:void setAlpha(int) -> setAlpha
    188:188:void setAutoMirrored(boolean) -> setAutoMirrored
    62:62:void setChangingConfigurations(int) -> setChangingConfigurations
    88:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    73:73:void setDither(boolean) -> setDither
    235:242:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    78:78:void setFilterBitmap(boolean) -> setFilterBitmap
    213:213:void setHotspot(float,float) -> setHotspot
    218:218:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    98:98:boolean setState(int[]) -> setState
    198:198:void setTint(int) -> setTint
    203:203:void setTintList(android.content.res.ColorStateList) -> setTintList
    208:208:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    118:118:boolean setVisible(boolean,boolean) -> setVisible
    178:178:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
# {"id":"sourceFile","fileName":"DrawerArrowDrawable.java"}
    100:100:void <clinit>() -> <clinit>
    97:151:void <init>(android.content.Context) -> <init>
    326:400:void draw(android.graphics.Canvas) -> draw
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    0:0:int getOpacity() -> getOpacity
    437:437:float getProgress() -> getProgress
    0:0:float lerp(float,float,float) -> lerp
    405:407:void setAlpha(int) -> setAlpha
    236:239:void setBarThickness(float) -> setBarThickness
    216:218:void setColor(int) -> setColor
    413:414:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    267:269:void setGapSize(float) -> setGapSize
    448:450:void setProgress(float) -> setProgress
    300:302:void setSpinEnabled(boolean) -> setSpinEnabled
androidx.appcompat.graphics.drawable.StateListDrawableCompat -> androidx.appcompat.graphics.drawable.StateListDrawableCompat:
# {"id":"sourceFile","fileName":"StateListDrawableCompat.java"}
    410:412:void <init>(androidx.appcompat.graphics.drawable.StateListDrawableCompat$StateListState) -> <init>
    387:388:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    231:248:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    306:308:android.graphics.drawable.Drawable mutate() -> mutate
    393:395:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainerCompat$DrawableContainerState) -> setConstantState
androidx.appcompat.graphics.drawable.StateListDrawableCompat$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawableCompat$StateListState:
# {"id":"sourceFile","fileName":"StateListDrawableCompat.java"}
    328:333:void <init>(androidx.appcompat.graphics.drawable.StateListDrawableCompat$StateListState,androidx.appcompat.graphics.drawable.StateListDrawableCompat,android.content.res.Resources) -> <init>
    347:348:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    377:380:void growArray(int,int) -> growArray
    353:356:int indexOfStateSet(int[]) -> indexOfStateSet
androidx.appcompat.resources.Compatibility$Api15Impl -> androidx.appcompat.resources.Compatibility$Api15Impl:
# {"id":"sourceFile","fileName":"Compatibility.java"}
    96:96:void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean) -> getValueForDensity
androidx.appcompat.resources.Compatibility$Api18Impl -> androidx.appcompat.resources.Compatibility$Api18Impl:
# {"id":"sourceFile","fileName":"Compatibility.java"}
    83:83:void setAutoCancel(android.animation.ObjectAnimator,boolean) -> setAutoCancel
androidx.appcompat.resources.Compatibility$Api21Impl -> androidx.appcompat.resources.Compatibility$Api21Impl:
# {"id":"sourceFile","fileName":"Compatibility.java"}
    71:71:android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    63:63:int getChangingConfigurations(android.content.res.TypedArray) -> getChangingConfigurations
    58:58:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
androidx.appcompat.resources.R$styleable -> androidx.appcompat.resources.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
# {"id":"sourceFile","fileName":"AllCapsTransformationMethod.java"}
    37:38:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    0:0:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
# {"id":"sourceFile","fileName":"ActionBarPolicy.java"}
    46:47:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:59:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:103:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    0:0:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
# {"id":"sourceFile","fileName":"ActionMode.java"}
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:57:void setTag(java.lang.Object) -> setTag
    134:134:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ActionMode$Callback -> androidx.appcompat.view.ActionMode$Callback:
# {"id":"sourceFile","fileName":"ActionMode.java"}
androidx.appcompat.view.CollapsibleActionView -> androidx.appcompat.view.CollapsibleActionView:
# {"id":"sourceFile","fileName":"CollapsibleActionView.java"}
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
# {"id":"sourceFile","fileName":"ContextThemeWrapper.java"}
    70:71:void <init>(android.content.Context,int) -> <init>
    84:85:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    104:111:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    90:90:void attachBaseContext(android.content.Context) -> attachBaseContext
    213:213:android.content.res.AssetManager getAssets() -> getAssets
    116:116:android.content.res.Resources getResources() -> getResources
    120:139:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    174:180:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    160:169:android.content.res.Resources$Theme getTheme() -> getTheme
    155:155:int getThemeResId() -> getThemeResId
    199:207:void initializeTheme() -> initializeTheme
    226:234:boolean isEmptyConfiguration(android.content.res.Configuration) -> isEmptyConfiguration
    195:195:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    144:146:void setTheme(int) -> setTheme
androidx.appcompat.view.ContextThemeWrapper$Api17Impl -> androidx.appcompat.view.ContextThemeWrapper$Api17Impl:
# {"id":"sourceFile","fileName":"ContextThemeWrapper.java"}
    246:246:android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration) -> createConfigurationContext
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
# {"id":"sourceFile","fileName":"StandaloneActionMode.java"}
    50:58:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:110:void finish() -> finish
    130:130:android.view.View getCustomView() -> getCustomView
    115:115:android.view.Menu getMenu() -> getMenu
    135:135:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    125:125:java.lang.CharSequence getSubtitle() -> getSubtitle
    120:120:java.lang.CharSequence getTitle() -> getTitle
    100:100:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    140:140:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    160:161:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    94:95:void setCustomView(android.view.View) -> setCustomView
    68:68:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:78:void setSubtitle(int) -> setSubtitle
    63:63:void setTitle(java.lang.CharSequence) -> setTitle
    73:73:void setTitle(int) -> setTitle
    83:84:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
# {"id":"sourceFile","fileName":"SupportActionModeWrapper.java"}
    49:51:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:81:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:76:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:116:void setCustomView(android.view.View) -> setCustomView
    71:71:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:106:void setSubtitle(int) -> setSubtitle
    61:61:void setTag(java.lang.Object) -> setTag
    66:66:void setTitle(java.lang.CharSequence) -> setTitle
    96:96:void setTitle(int) -> setTitle
    131:131:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
# {"id":"sourceFile","fileName":"SupportActionModeWrapper.java"}
    150:154:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:203:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:185:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:178:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    83:85:void <clinit>() -> <clinit>
    101:104:void <init>(android.content.Context) -> <init>
    231:235:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:135:void inflate(int,android.view.Menu) -> inflate
    135:136:void inflate(int,android.view.Menu) -> inflate
    145:219:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
# {"id":"sourceFile","fileName":"SupportMenuInflater.java"}
    337:352:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    530:531:void addItem() -> addItem
    535:537:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    462:462:char getShortcut(java.lang.String) -> getShortcut
    542:542:boolean hasAddedItem() -> hasAddedItem
    549:554:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:379:void readGroup(android.util.AttributeSet) -> readGroup
    386:455:void readItem(android.util.AttributeSet) -> readItem
    356:361:void resetGroup() -> resetGroup
    467:525:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompatSet.java"}
    42:120:void <init>() -> <init>
    90:96:void cancel() -> cancel
    86:86:void onAnimationsEnded() -> onAnimationsEnded
    53:54:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:63:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:101:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:108:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:115:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:82:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompatSet.java"}
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:132:void onAnimationStart(android.view.View) -> onAnimationStart
    137:139:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
# {"id":"sourceFile","fileName":"WindowCallbackWrapper.java"}
    51:55:void <init>(android.view.Window$Callback) -> <init>
    80:80:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    60:60:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    65:65:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    85:85:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    70:70:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    75:75:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    189:189:android.view.Window$Callback getWrapped() -> getWrapped
    172:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    167:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    130:130:void onAttachedToWindow() -> onAttachedToWindow
    95:95:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    90:90:android.view.View onCreatePanelView(int) -> onCreatePanelView
    135:135:void onDetachedFromWindow() -> onDetachedFromWindow
    110:110:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    105:105:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    140:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    185:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    100:100:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    179:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    146:146:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    151:151:boolean onSearchRequested() -> onSearchRequested
    115:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    125:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    156:156:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    162:162:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api23Impl:
# {"id":"sourceFile","fileName":"WindowCallbackWrapper.java"}
    200:200:boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent) -> onSearchRequested
    206:206:android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api24Impl:
# {"id":"sourceFile","fileName":"WindowCallbackWrapper.java"}
    219:219:void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl -> androidx.appcompat.view.WindowCallbackWrapper$Api26Impl:
# {"id":"sourceFile","fileName":"WindowCallbackWrapper.java"}
    232:232:void onPointerCaptureChanged(android.view.Window$Callback,boolean) -> onPointerCaptureChanged
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
# {"id":"sourceFile","fileName":"ActionMenuItem.java"}
    54:85:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    449:458:void applyIconTint() -> applyIconTint
    0:0:boolean collapseActionView() -> collapseActionView
    0:0:boolean expandActionView() -> expandActionView
    345:345:android.view.ActionProvider getActionProvider() -> getActionProvider
    0:0:android.view.View getActionView() -> getActionView
    95:95:int getAlphabeticModifiers() -> getAlphabeticModifiers
    90:90:char getAlphabeticShortcut() -> getAlphabeticShortcut
    401:401:java.lang.CharSequence getContentDescription() -> getContentDescription
    100:100:int getGroupId() -> getGroupId
    105:105:android.graphics.drawable.Drawable getIcon() -> getIcon
    429:429:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    445:445:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    110:110:android.content.Intent getIntent() -> getIntent
    115:115:int getItemId() -> getItemId
    0:0:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    130:130:int getNumericModifiers() -> getNumericModifiers
    125:125:char getNumericShortcut() -> getNumericShortcut
    135:135:int getOrder() -> getOrder
    0:0:android.view.SubMenu getSubMenu() -> getSubMenu
    0:0:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    145:145:java.lang.CharSequence getTitle() -> getTitle
    150:150:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    413:413:java.lang.CharSequence getTooltipText() -> getTooltipText
    0:0:boolean hasSubMenu() -> hasSubMenu
    0:0:boolean isActionViewExpanded() -> isActionViewExpanded
    160:160:boolean isCheckable() -> isCheckable
    165:165:boolean isChecked() -> isChecked
    170:170:boolean isEnabled() -> isEnabled
    175:175:boolean isVisible() -> isVisible
    340:340:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    43:43:android.view.MenuItem setActionView(int) -> setActionView
    43:43:android.view.MenuItem setActionView(android.view.View) -> setActionView
    330:330:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    351:351:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    180:180:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    187:188:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    194:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    205:205:android.view.MenuItem setChecked(boolean) -> setChecked
    43:43:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    395:395:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    211:211:android.view.MenuItem setEnabled(boolean) -> setEnabled
    217:219:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    225:227:android.view.MenuItem setIcon(int) -> setIcon
    419:422:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    435:438:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    233:233:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    239:239:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    246:247:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    389:389:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    253:253:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    259:260:android.view.MenuItem setShortcut(char,char) -> setShortcut
    268:271:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    0:0:void setShowAsAction(int) -> setShowAsAction
    43:43:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    368:368:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    277:277:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    283:283:android.view.MenuItem setTitle(int) -> setTitle
    289:289:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    43:43:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    407:407:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    295:295:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    100:100:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    124:124:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    242:242:boolean hasText() -> hasText
    129:139:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    269:269:boolean needsDividerAfter() -> needsDividerAfter
    264:264:boolean needsDividerBefore() -> needsDividerBefore
    155:156:void onClick(android.view.View) -> onClick
    92:95:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    274:299:void onMeasure(int,int) -> onMeasure
    338:338:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    146:150:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    0:0:boolean prefersCondensedTitle() -> prefersCondensedTitle
    0:0:void setCheckable(boolean) -> setCheckable
    0:0:void setChecked(boolean) -> setChecked
    184:187:void setExpandedFormat(boolean) -> setExpandedFormat
    220:238:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    161:161:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    118:119:void setPadding(int,int,int,int) -> setPadding
    165:165:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    0:0:void setShortcut(boolean,char) -> setShortcut
    252:254:void setTitle(java.lang.CharSequence) -> setTitle
    108:112:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    193:214:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
    304:305:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    310:311:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    319:321:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
# {"id":"sourceFile","fileName":"ActionMenuItemView.java"}
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
# {"id":"sourceFile","fileName":"BaseMenuPresenter.java"}
    61:65:void <init>(android.content.Context,int,int) -> <init>
    134:138:void addItemView(android.view.View,int) -> addItemView
    0:0:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    0:0:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:148:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    244:244:int getId() -> getId
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:72:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:214:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:222:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:154:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    248:248:void setId(int) -> setId
    91:121:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
# {"id":"sourceFile","fileName":"BaseMenuWrapper.java"}
    34:35:void <init>(android.content.Context) -> <init>
    39:53:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    0:0:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    83:87:void internalClear() -> internalClear
    92:97:void internalRemoveGroup(int) -> internalRemoveGroup
    104:109:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    66:66:void <clinit>() -> <clinit>
    89:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    355:360:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    0:0:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    246:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    288:295:void dismiss() -> dismiss
    656:658:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    517:519:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    538:581:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    0:0:boolean flagActionItems() -> flagActionItems
    316:316:int getInitialMenuPosition() -> getInitialMenuPosition
    766:768:android.widget.ListView getListView() -> getListView
    330:340:int getNextMenuPosition(int) -> getNextMenuPosition
    589:589:boolean isShowing() -> isShowing
    668:721:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    600:611:void onDismiss() -> onDismiss
    303:304:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    0:0:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    0:0:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    630:642:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    750:755:void setAnchorView(android.view.View) -> setAnchorView
    624:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    242:242:void setForceShowIcon(boolean) -> setForceShowIcon
    741:744:void setGravity(int) -> setGravity
    773:774:void setHorizontalOffset(int) -> setHorizontalOffset
    761:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    785:785:void setShowTitle(boolean) -> setShowTitle
    779:780:void setVerticalOffset(int) -> setVerticalOffset
    260:278:void show() -> show
    370:502:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    617:618:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:112:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    0:0:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:133:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:193:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:143:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:188:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    801:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    808:808:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
# {"id":"sourceFile","fileName":"ExpandedMenuView.java"}
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:73:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:81:void onDetachedFromWindow() -> onDetachedFromWindow
    92:92:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
# {"id":"sourceFile","fileName":"ListMenuItemView.java"}
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:97:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:138:void addContentView(android.view.View) -> addContentView
    142:145:void addContentView(android.view.View,int) -> addContentView
    347:353:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    327:330:android.view.LayoutInflater getInflater() -> getInflater
    166:166:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    309:313:void insertCheckBox() -> insertCheckBox
    294:297:void insertIconView() -> insertIconView
    301:305:void insertRadioButton() -> insertRadioButton
    102:119:void onFinishInflate() -> onFinishInflate
    282:290:void onMeasure(int,int) -> onMeasure
    0:0:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:210:void setCheckable(boolean) -> setCheckable
    219:231:void setChecked(boolean) -> setChecked
    150:150:void setForceShowIcon(boolean) -> setForceShowIcon
    339:341:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    256:276:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    242:250:void setShortcut(boolean,char) -> setShortcut
    235:236:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    156:160:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
# {"id":"sourceFile","fileName":"ListMenuPresenter.java"}
    71:73:void <init>(android.content.Context,int) -> <init>
    81:83:void <init>(int,int) -> <init>
    0:0:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    0:0:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    0:0:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    213:213:int getId() -> getId
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:173:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    229:229:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    218:223:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    143:148:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    201:203:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    192:196:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    138:138:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:133:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
# {"id":"sourceFile","fileName":"ListMenuPresenter.java"}
    233:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    278:290:void findExpandedIndex() -> findExpandedIndex
    241:243:int getCount() -> getCount
    232:232:java.lang.Object getItem(int) -> getItem
    251:256:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    0:0:long getItemId(int) -> getItemId
    269:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    295:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
# {"id":"sourceFile","fileName":"MenuAdapter.java"}
    36:49:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:126:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    0:0:long getItemId(int) -> getItemId
    94:109:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:132:void notifyDataSetChanged() -> notifyDataSetChanged
    57:57:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
    68:68:void <clinit>() -> <clinit>
    134:235:void <init>(android.content.Context) -> <init>
    468:468:android.view.MenuItem add(java.lang.CharSequence) -> add
    473:473:android.view.MenuItem add(int) -> add
    478:478:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    483:483:android.view.MenuItem add(int,int,int,int) -> add
    522:542:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    443:454:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    250:250:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    263:265:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    488:488:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    493:493:android.view.SubMenu addSubMenu(int) -> addSubMenu
    498:500:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    507:507:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    843:844:void changeMenuMode() -> changeMenuMode
    606:611:void clear() -> clear
    1215:1219:void clearHeader() -> clearHeader
    1032:1043:void close(boolean) -> close
    1048:1048:void close() -> close
    1375:1391:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    462:462:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    836:836:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    284:295:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    345:358:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    321:340:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    300:314:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1353:1369:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    726:726:int findGroupIndex(int) -> findGroupIndex
    730:739:int findGroupIndex(int,int) -> findGroupIndex
    849:851:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    695:701:android.view.MenuItem findItem(int) -> findItem
    713:717:int findItemIndex(int) -> findItemIndex
    932:958:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    884:913:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1165:1201:void flagActionItems() -> flagActionItems
    1205:1206:java.util.ArrayList getActionItems() -> getActionItems
    0:0:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    832:832:android.content.Context getContext() -> getContext
    1397:1397:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1318:1318:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1314:1314:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1322:1322:android.view.View getHeaderView() -> getHeaderView
    754:754:android.view.MenuItem getItem(int) -> getItem
    1210:1211:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1349:1349:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    783:787:int getOrdering(int) -> getOrdering
    828:828:android.content.res.Resources getResources() -> getResources
    0:0:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1120:1135:java.util.ArrayList getVisibleItems() -> getVisibleItems
    677:685:boolean hasVisibleItems() -> hasVisibleItems
    516:516:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    794:794:boolean isQwertyMode() -> isQwertyMode
    759:759:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    824:824:boolean isShortcutsVisible() -> isShortcutsVisible
    1114:1115:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1103:1104:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1059:1069:void onItemsChanged(boolean) -> onItemsChanged
    973:973:boolean performIdentifierAction(int,int) -> performIdentifierAction
    977:977:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    981:1016:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    861:870:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    556:567:void removeGroup(int) -> removeGroup
    551:551:void removeItem(int) -> removeItem
    582:586:void removeItemAtInt(int,boolean) -> removeItemAtInt
    275:278:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    406:426:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    370:370:void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    376:396:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    366:366:void savePresenterStates(android.os.Bundle) -> savePresenterStates
    436:436:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    239:239:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    615:629:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    634:640:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    512:512:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    665:670:void setGroupEnabled(int,boolean) -> setGroupEnabled
    647:660:void setGroupVisible(int,boolean) -> setGroupVisible
    1285:1285:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1297:1297:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1224:1250:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1261:1261:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1273:1273:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1309:1309:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1406:1406:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    764:766:void setQwertyMode(boolean) -> setQwertyMode
    814:817:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    749:749:int size() -> size
    1088:1092:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1080:1083:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuBuilder$Callback -> androidx.appcompat.view.menu.MenuBuilder$Callback:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker -> androidx.appcompat.view.menu.MenuBuilder$ItemInvoker:
# {"id":"sourceFile","fileName":"MenuBuilder.java"}
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
# {"id":"sourceFile","fileName":"MenuDialogHelper.java"}
    43:44:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    140:141:void dismiss() -> dismiss
    170:170:void onClick(android.content.DialogInterface,int) -> onClick
    152:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    147:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    96:126:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    162:163:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    54:90:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
# {"id":"sourceFile","fileName":"MenuItemImpl.java"}
    69:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    697:697:void actionFormatChanged() -> actionFormatChanged
    407:407:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    576:588:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    848:858:boolean collapseActionView() -> collapseActionView
    834:840:boolean expandActionView() -> expandActionView
    796:796:android.view.ActionProvider getActionProvider() -> getActionProvider
    778:781:android.view.View getActionView() -> getActionView
    277:277:int getAlphabeticModifiers() -> getAlphabeticModifiers
    244:244:char getAlphabeticShortcut() -> getAlphabeticShortcut
    902:902:java.lang.CharSequence getContentDescription() -> getContentDescription
    204:204:int getGroupId() -> getGroupId
    504:512:android.graphics.drawable.Drawable getIcon() -> getIcon
    555:555:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    572:572:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    224:224:android.content.Intent getIntent() -> getIntent
    210:210:int getItemId() -> getItemId
    693:693:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    287:287:int getNumericModifiers() -> getNumericModifiers
    282:282:char getNumericShortcut() -> getNumericShortcut
    215:215:int getOrder() -> getOrder
    219:219:int getOrdering() -> getOrdering
    346:346:char getShortcut() -> getShortcut
    356:402:java.lang.String getShortcutLabel() -> getShortcutLabel
    423:423:android.view.SubMenu getSubMenu() -> getSubMenu
    802:802:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    440:440:java.lang.CharSequence getTitle() -> getTitle
    475:475:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    450:452:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    917:917:java.lang.CharSequence getTooltipText() -> getTooltipText
    865:869:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    428:428:boolean hasSubMenu() -> hasSubMenu
    155:177:boolean invoke() -> invoke
    708:708:boolean isActionButton() -> isActionButton
    881:881:boolean isActionViewExpanded() -> isActionViewExpanded
    596:596:boolean isCheckable() -> isCheckable
    620:620:boolean isChecked() -> isChecked
    186:186:boolean isEnabled() -> isEnabled
    615:615:boolean isExclusiveCheckable() -> isExclusiveCheckable
    646:649:boolean isVisible() -> isVisible
    712:712:boolean requestsActionButton() -> requestsActionButton
    717:717:boolean requiresActionButton() -> requiresActionButton
    790:790:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    52:52:android.view.MenuItem setActionView(int) -> setActionView
    52:52:android.view.MenuItem setActionView(android.view.View) -> setActionView
    758:763:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    770:772:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    875:876:void setActionViewExpanded(boolean) -> setActionViewExpanded
    249:255:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    263:271:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    601:604:android.view.MenuItem setCheckable(boolean) -> setCheckable
    625:630:android.view.MenuItem setChecked(boolean) -> setChecked
    637:640:void setCheckedInt(boolean) -> setCheckedInt
    52:52:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    893:895:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    192:197:android.view.MenuItem setEnabled(boolean) -> setEnabled
    611:611:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    520:523:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    530:535:android.view.MenuItem setIcon(int) -> setIcon
    544:548:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    561:565:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    229:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    727:729:void setIsActionButton(boolean) -> setIsActionButton
    688:688:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    292:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    306:313:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    886:886:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    678:678:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    320:323:android.view.MenuItem setShortcut(char,char) -> setShortcut
    332:337:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    748:752:void setShowAsAction(int) -> setShowAsAction
    52:52:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    828:828:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    432:434:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    808:815:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    457:462:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    470:470:android.view.MenuItem setTitle(int) -> setTitle
    490:497:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    52:52:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    908:910:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    671:671:android.view.MenuItem setVisible(boolean) -> setVisible
    661:662:boolean setVisibleInt(boolean) -> setVisibleInt
    704:704:boolean shouldShowIcon() -> shouldShowIcon
    418:418:boolean shouldShowShortcut() -> shouldShowShortcut
    734:734:boolean showsTextAsAction() -> showsTextAsAction
    684:684:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
# {"id":"sourceFile","fileName":"MenuItemImpl.java"}
    815:815:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    818:818:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    56:60:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:314:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:293:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    302:306:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:272:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:284:android.view.MenuItem setActionView(int) -> setActionView
    171:171:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:177:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:204:android.view.MenuItem setChecked(boolean) -> setChecked
    343:343:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:225:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:391:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:108:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:114:android.view.MenuItem setIcon(int) -> setIcon
    365:365:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:376:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:125:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:149:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:155:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:337:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:247:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:136:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:143:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:258:void setShowAsAction(int) -> setShowAsAction
    263:263:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:80:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:86:android.view.MenuItem setTitle(int) -> setTitle
    97:97:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:354:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    432:434:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:454:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    463:464:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:496:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:490:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    512:514:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:524:void onActionViewCollapsed() -> onActionViewCollapsed
    519:519:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    414:415:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
# {"id":"sourceFile","fileName":"MenuItemWrapperICS.java"}
    401:402:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
# {"id":"sourceFile","fileName":"MenuPopup.java"}
    0:0:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    0:0:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    0:0:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    0:0:int getId() -> getId
    0:0:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    147:164:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:131:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:71:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    203:207:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    83:83:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    64:343:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    233:266:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    307:308:void dismiss() -> dismiss
    164:167:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    329:329:boolean isShowing() -> isShowing
    321:324:void onDismiss() -> onDismiss
    109:109:void setAnchorView(android.view.View) -> setAnchorView
    122:124:void setForceShowIcon(boolean) -> setForceShowIcon
    136:136:void setGravity(int) -> setGravity
    98:98:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    334:336:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    147:148:void show() -> show
    272:299:void showPopup(int,int,boolean,boolean) -> showPopup
    177:185:boolean tryShow() -> tryShow
    213:221:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    343:343:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    346:346:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl -> androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl:
# {"id":"sourceFile","fileName":"MenuPopupHelper.java"}
    365:365:void getRealSize(android.view.Display,android.graphics.Point) -> getRealSize
androidx.appcompat.view.menu.MenuPresenter -> androidx.appcompat.view.menu.MenuPresenter:
# {"id":"sourceFile","fileName":"MenuPresenter.java"}
androidx.appcompat.view.menu.MenuPresenter$Callback -> androidx.appcompat.view.menu.MenuPresenter$Callback:
# {"id":"sourceFile","fileName":"MenuPresenter.java"}
androidx.appcompat.view.menu.MenuView -> androidx.appcompat.view.menu.MenuView:
# {"id":"sourceFile","fileName":"MenuView.java"}
androidx.appcompat.view.menu.MenuView$ItemView -> androidx.appcompat.view.menu.MenuView$ItemView:
# {"id":"sourceFile","fileName":"MenuView.java"}
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
# {"id":"sourceFile","fileName":"MenuWrapperICS.java"}
    41:45:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    94:102:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:124:void clear() -> clear
    164:164:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:118:void removeGroup(int) -> removeGroup
    111:112:void removeItem(int) -> removeItem
    129:129:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:139:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:134:void setGroupVisible(int,boolean) -> setGroupVisible
    184:184:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.ShowableListMenu -> androidx.appcompat.view.menu.ShowableListMenu:
# {"id":"sourceFile","fileName":"ShowableListMenu.java"}
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    46:46:void <clinit>() -> <clinit>
    60:135:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    0:0:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    215:216:void dismiss() -> dismiss
    0:0:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:305:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:243:void onDismiss() -> onDismiss
    330:331:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    0:0:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    0:0:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    263:290:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:325:void setAnchorView(android.view.View) -> setAnchorView
    258:258:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:140:void setForceShowIcon(boolean) -> setForceShowIcon
    145:145:void setGravity(int) -> setGravity
    350:350:void setHorizontalOffset(int) -> setHorizontalOffset
    339:339:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:360:void setShowTitle(boolean) -> setShowTitle
    355:355:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:201:boolean tryShow() -> tryShow
    249:252:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:73:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
# {"id":"sourceFile","fileName":"StandardMenuPopup.java"}
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    0:0:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:91:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
# {"id":"sourceFile","fileName":"SubMenuBuilder.java"}
    43:46:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    138:138:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    90:91:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    133:133:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    143:147:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    75:75:android.view.MenuItem getItem() -> getItem
    70:70:android.view.Menu getParentMenu() -> getParentMenu
    85:85:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    157:157:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    56:56:boolean isQwertyMode() -> isQwertyMode
    66:66:boolean isShortcutsVisible() -> isShortcutsVisible
    80:80:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    152:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    108:108:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    113:113:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    118:118:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    123:123:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    128:128:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    96:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    102:102:android.view.SubMenu setIcon(int) -> setIcon
    51:51:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
# {"id":"sourceFile","fileName":"AbsActionBarView.java"}
    39:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:36:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    36:36:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    153:156:int getAnimatedVisibility() -> getAnimatedVisibility
    146:146:int getContentHeight() -> getContentHeight
    248:254:int measureChildView(android.view.View,int,int,int) -> measureChildView
    0:0:int next(int,int,boolean) -> next
    75:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:134:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    96:109:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    262:269:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    187:191:void setVisibility(int) -> setVisibility
    160:175:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
# {"id":"sourceFile","fileName":"AbsActionBarView.java"}
    275:276:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    302:302:void onAnimationCancel(android.view.View) -> onAnimationCancel
    294:297:void onAnimationEnd(android.view.View) -> onAnimationEnd
    288:289:void onAnimationStart(android.view.View) -> onAnimationStart
    281:282:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
# {"id":"sourceFile","fileName":"ActionBarBackgroundDrawable.java"}
    32:33:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:47:void draw(android.graphics.Canvas) -> draw
    0:0:int getOpacity() -> getOpacity
    68:75:void getOutline(android.graphics.Outline) -> getOutline
    0:0:void setAlpha(int) -> setAlpha
    0:0:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarBackgroundDrawable$Api21Impl -> androidx.appcompat.widget.ActionBarBackgroundDrawable$Api21Impl:
# {"id":"sourceFile","fileName":"ActionBarBackgroundDrawable.java"}
    87:87:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
# {"id":"sourceFile","fileName":"ActionBarContainer.java"}
    56:56:void <init>(android.content.Context) -> <init>
    60:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    169:177:void drawableStateChanged() -> drawableStateChanged
    268:269:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    244:244:android.view.View getTabContainer() -> getTabContainer
    264:264:boolean isCollapsed(android.view.View) -> isCollapsed
    183:191:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    85:87:void onFinishInflate() -> onFinishInflate
    223:223:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    210:210:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    304:346:void onLayout(boolean,int,int,int,int) -> onLayout
    274:297:void onMeasure(int,int) -> onMeasure
    215:215:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    91:107:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    133:148:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    112:128:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    230:239:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    203:204:void setTransitioning(boolean) -> setTransitioning
    154:158:void setVisibility(int) -> setVisibility
    0:0:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    258:258:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    163:164:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContainer$Api21Impl -> androidx.appcompat.widget.ActionBarContainer$Api21Impl:
# {"id":"sourceFile","fileName":"ActionBarContainer.java"}
    357:357:void invalidateOutline(androidx.appcompat.widget.ActionBarContainer) -> invalidateOutline
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
# {"id":"sourceFile","fileName":"ActionBarContextView.java"}
    58:58:void <init>(android.content.Context) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    195:196:void closeMode() -> closeMode
    239:239:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    244:244:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    41:41:int getAnimatedVisibility() -> getAnimatedVisibility
    41:41:int getContentHeight() -> getContentHeight
    132:132:java.lang.CharSequence getSubtitle() -> getSubtitle
    128:128:java.lang.CharSequence getTitle() -> getTitle
    163:191:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    136:158:void initTitle() -> initTitle
    371:371:boolean isTitleOptional() -> isTitleOptional
    202:207:void killMode() -> killMode
    89:92:void onDetachedFromWindow() -> onDetachedFromWindow
    41:41:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    329:354:void onLayout(boolean,int,int,int,int) -> onLayout
    249:323:void onMeasure(int,int) -> onMeasure
    41:41:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    98:98:void setContentHeight(int) -> setContentHeight
    102:113:void setCustomView(android.view.View) -> setCustomView
    123:124:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    364:367:void setTitleOptional(boolean) -> setTitleOptional
    41:41:void setVisibility(int) -> setVisibility
    41:41:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    0:0:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    213:214:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
# {"id":"sourceFile","fileName":"ActionBarContextView.java"}
    172:172:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    175:175:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    147:147:void <clinit>() -> <clinit>
    155:155:void <init>(android.content.Context) -> <init>
    71:162:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    741:742:void addActionBarHideOffset() -> addActionBarHideOffset
    288:303:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    822:823:boolean canShowOverflowMenu() -> canShowOverflowMenu
    404:404:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    876:877:void dismissPopups() -> dismissPopups
    543:550:void draw(android.graphics.Canvas) -> draw
    313:313:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    63:63:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    389:389:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    63:63:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    394:394:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    399:399:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:int getActionBarHideOffset() -> getActionBarHideOffset
    682:688:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    670:670:int getNestedScrollAxes() -> getNestedScrollAxes
    765:766:java.lang.CharSequence getTitle() -> getTitle
    718:721:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    846:847:boolean hideOverflowMenu() -> hideOverflowMenu
    166:175:void init(android.content.Context) -> init
    771:780:void initFeature(int) -> initFeature
    211:211:boolean isInOverlayMode() -> isInOverlayMode
    834:835:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    828:829:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    347:384:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    241:243:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    180:181:void onDetachedFromWindow() -> onDetachedFromWindow
    520:536:void onLayout(boolean,int,int,int,int) -> onLayout
    410:514:void onMeasure(int,int) -> onMeasure
    646:654:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    0:0:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    0:0:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    599:599:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    564:564:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    592:592:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    626:627:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    577:577:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    615:619:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    571:571:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    607:610:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    584:584:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    632:640:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    254:271:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    278:281:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    731:732:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    726:727:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    674:677:void pullChildren() -> pullChildren
    736:737:void removeActionBarHideOffset() -> removeActionBarHideOffset
    711:714:void setActionBarHideOffset(int) -> setActionBarHideOffset
    185:193:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    215:215:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    693:697:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    804:805:void setIcon(int) -> setIcon
    810:811:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    816:817:void setLogo(int) -> setLogo
    858:859:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    852:853:void setMenuPrepared() -> setMenuPrepared
    199:206:void setOverlayMode(boolean) -> setOverlayMode
    0:0:void setShowingForActionMode(boolean) -> setShowingForActionMode
    0:0:void setUiOptions(int) -> setUiOptions
    753:754:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    759:760:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    0:0:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    746:748:boolean shouldHideActionBarOnFling(float) -> shouldHideActionBarOnFling
    840:841:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    114:114:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    123:124:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    117:118:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    128:128:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    131:133:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    137:137:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    140:143:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
# {"id":"sourceFile","fileName":"ActionBarOverlayLayout.java"}
    882:882:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    886:886:void <init>(int,int) -> <init>
    890:890:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    75:87:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    54:54:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter) -> access$600
    207:216:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    373:374:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:324:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    413:540:boolean flagActionItems() -> flagActionItems
    191:200:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:184:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:174:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    354:362:boolean hideOverflowMenu() -> hideOverflowMenu
    384:385:boolean hideSubMenus() -> hideSubMenus
    92:129:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    399:399:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    395:395:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    548:549:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:137:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    561:570:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    554:555:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    281:312:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    579:581:void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    158:158:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    586:587:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:166:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:149:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:341:boolean showOverflowMenu() -> showOverflowMenu
    226:270:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    733:742:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    747:750:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    800:800:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    805:805:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    782:783:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    788:795:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    628:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    0:0:boolean needsDividerAfter() -> needsDividerAfter
    0:0:boolean needsDividerBefore() -> needsDividerBefore
    671:676:boolean performClick() -> performClick
    692:705:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    638:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    641:645:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    650:650:boolean onForwardingStarted() -> onForwardingStarted
    659:663:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    715:718:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    723:728:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    755:755:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    769:774:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    760:764:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    611:611:void <clinit>() -> <clinit>
    594:594:void <init>() -> <init>
    597:598:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    608:608:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    612:612:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    615:615:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    612:612:java.lang.Object[] newArray(int) -> newArray
    620:620:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    79:79:void <init>(android.content.Context) -> <init>
    83:89:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:724:void dismissPopupMenus() -> dismissPopupMenus
    0:0:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    50:50:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:585:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    597:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:617:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    116:116:int getPopupTheme() -> getPopupTheme
    0:0:int getWindowAnimations() -> getWindowAnimations
    736:743:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:639:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    407:435:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    131:138:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:545:void onDetachedFromWindow() -> onDetachedFromWindow
    442:537:void onLayout(boolean,int,int,int,int) -> onLayout
    150:175:void onMeasure(int,int) -> onMeasure
    181:389:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:756:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    144:144:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:555:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:578:void setOverflowReserved(boolean) -> setOverflowReserved
    100:105:void setPopupTheme(int) -> setPopupTheme
    125:126:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView -> androidx.appcompat.widget.ActionMenuView$ActionMenuChildView:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    793:793:void <init>() -> <init>
    0:0:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    0:0:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    833:833:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:837:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:842:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:847:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
    775:775:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:787:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener -> androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener:
# {"id":"sourceFile","fileName":"ActionMenuView.java"}
androidx.appcompat.widget.ActivityChooserModel -> androidx.appcompat.widget.ActivityChooserModel:
# {"id":"sourceFile","fileName":"ActivityChooserModel.java"}
androidx.appcompat.widget.ActivityChooserView -> androidx.appcompat.widget.ActivityChooserView:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    201:201:void <init>(android.content.Context) -> <init>
    211:211:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    135:295:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    416:420:boolean dismissPopup() -> dismissPopup
    489:489:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    533:541:androidx.appcompat.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    432:432:boolean isShowingPopup() -> isShowingPopup
    437:442:void onAttachedToWindow() -> onAttachedToWindow
    447:459:void onDetachedFromWindow() -> onDetachedFromWindow
    478:480:void onLayout(boolean,int,int,int,int) -> onLayout
    464:473:void onMeasure(int,int) -> onMeasure
    305:308:void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel) -> setActivityChooserModel
    524:524:void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    338:339:void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    324:324:void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    510:510:void setInitialActivityCount(int) -> setInitialActivityCount
    498:498:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    348:348:void setProvider(androidx.core.view.ActionProvider) -> setProvider
    357:361:boolean showPopup() -> showPopup
    371:372:void showPopupUnchecked(int) -> showPopupUnchecked
    549:575:void updateAppearance() -> updateAppearance
androidx.appcompat.widget.ActivityChooserView$1 -> androidx.appcompat.widget.ActivityChooserView$1:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    135:135:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    139:140:void onChanged() -> onChanged
    144:145:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ActivityChooserView$2 -> androidx.appcompat.widget.ActivityChooserView$2:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    149:149:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    152:158:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.ActivityChooserView$3 -> androidx.appcompat.widget.ActivityChooserView$3:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    254:254:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    257:258:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
androidx.appcompat.widget.ActivityChooserView$4 -> androidx.appcompat.widget.ActivityChooserView$4:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    261:261:void <init>(androidx.appcompat.widget.ActivityChooserView,android.view.View) -> <init>
    264:264:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    269:269:boolean onForwardingStarted() -> onForwardingStarted
    275:275:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActivityChooserView$5 -> androidx.appcompat.widget.ActivityChooserView$5:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    285:285:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    288:289:void onChanged() -> onChanged
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter -> androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    687:695:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    840:840:int getActivityCount() -> getActivityCount
    726:726:int getCount() -> getCount
    0:0:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    829:829:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    844:844:int getHistorySize() -> getHistorySize
    739:749:java.lang.Object getItem(int) -> getItem
    0:0:long getItemId(int) -> getItemId
    712:712:int getItemViewType(int) -> getItemViewType
    862:862:boolean getShowDefaultActivity() -> getShowDefaultActivity
    760:793:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    0:0:int getViewTypeCount() -> getViewTypeCount
    699:707:void setDataModel(androidx.appcompat.widget.ActivityChooserModel) -> setDataModel
androidx.appcompat.widget.ActivityChooserView$Callbacks -> androidx.appcompat.widget.ActivityChooserView$Callbacks:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    585:585:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    664:665:void notifyOnDismissListener() -> notifyOnDismissListener
    623:636:void onClick(android.view.View) -> onClick
    657:659:void onDismiss() -> onDismiss
    591:616:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    643:649:boolean onLongClick(android.view.View) -> onLongClick
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
# {"id":"sourceFile","fileName":"ActivityChooserView.java"}
    873:873:void <clinit>() -> <clinit>
    878:881:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
# {"id":"sourceFile","fileName":"AlertDialogLayout.java"}
    55:55:void <init>(android.content.Context) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:232:void forceUniformWidth(int,int) -> forceUniformWidth
    265:342:void onLayout(boolean,int,int,int,int) -> onLayout
    64:66:void onMeasure(int,int) -> onMeasure
    248:256:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:348:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    75:203:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
# {"id":"sourceFile","fileName":"AppCompatAutoCompleteTextView.java"}
    65:65:void <clinit>() -> <clinit>
    75:75:void <init>(android.content.Context) -> <init>
    79:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    226:231:void drawableStateChanged() -> drawableStateChanged
    264:265:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    192:193:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    220:221:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    322:322:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    365:365:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    128:143:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    245:247:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    162:164:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    154:156:void setBackgroundResource(int) -> setBackgroundResource
    292:294:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    302:304:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    257:258:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    149:149:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    281:281:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    276:276:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    177:178:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    205:206:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    345:346:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    385:386:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    237:239:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
# {"id":"sourceFile","fileName":"AppCompatBackgroundHelper.java"}
    37:45:void <init>(android.view.View) -> <init>
    178:196:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    123:137:void applySupportBackgroundTint() -> applySupportBackgroundTint
    105:105:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    119:119:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    49:76:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:92:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    80:85:void onSetBackgroundResource(int) -> onSetBackgroundResource
    144:152:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    96:101:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    109:115:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    160:160:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
# {"id":"sourceFile","fileName":"AppCompatButton.java"}
    72:72:void <init>(android.content.Context) -> <init>
    76:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:93:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:175:void drawableStateChanged() -> drawableStateChanged
    340:344:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    324:328:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    308:312:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    356:360:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    290:296:int getAutoSizeTextType() -> getAutoSizeTextType
    395:396:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    456:459:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    136:137:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:165:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    418:418:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    440:440:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    189:190:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    195:196:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    201:203:void onLayout(boolean,int,int,int,int) -> onLayout
    220:224:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    464:465:void setAllCaps(boolean) -> setAllCaps
    254:259:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    272:276:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    235:239:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    106:108:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:100:void setBackgroundResource(int) -> setBackgroundResource
    388:389:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    471:471:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    446:446:void setFilters(android.text.InputFilter[]) -> setFilters
    376:377:void setSupportAllCaps(boolean) -> setSupportAllCaps
    121:122:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:150:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    406:407:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    428:429:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    181:183:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    209:213:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
# {"id":"sourceFile","fileName":"AppCompatCheckBox.java"}
    70:70:void <init>(android.content.Context) -> <init>
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:93:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    251:256:void drawableStateChanged() -> drawableStateChanged
    122:124:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    101:104:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    201:202:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    229:230:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    148:149:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    173:174:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    314:314:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    357:357:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    267:268:void setAllCaps(boolean) -> setAllCaps
    235:237:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    243:245:void setBackgroundResource(int) -> setBackgroundResource
    109:111:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    117:117:void setButtonDrawable(int) -> setButtonDrawable
    284:286:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    294:296:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    273:273:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    262:262:void setFilters(android.text.InputFilter[]) -> setFilters
    186:187:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    214:215:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    135:136:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    160:161:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    337:338:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    377:378:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
# {"id":"sourceFile","fileName":"AppCompatCheckedTextView.java"}
    78:78:void <init>(android.content.Context) -> <init>
    82:82:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    253:261:void drawableStateChanged() -> drawableStateChanged
    286:287:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    296:299:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    195:196:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    223:224:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    140:141:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    167:168:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    352:352:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    395:395:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    268:268:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    304:305:void setAllCaps(boolean) -> setAllCaps
    229:231:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    237:239:void setBackgroundResource(int) -> setBackgroundResource
    107:109:void setCheckMarkDrawable(android.graphics.drawable.Drawable) -> setCheckMarkDrawable
    115:115:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    322:324:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    332:334:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    279:280:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    311:311:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    180:181:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    208:209:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    126:127:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    153:154:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
    375:376:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    415:416:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    245:247:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCheckedTextViewHelper -> androidx.appcompat.widget.AppCompatCheckedTextViewHelper:
# {"id":"sourceFile","fileName":"AppCompatCheckedTextViewHelper.java"}
    43:51:void <init>(android.widget.CheckedTextView) -> <init>
    133:149:void applyCheckMarkTint() -> applyCheckMarkTint
    108:108:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    119:119:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    55:97:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    123:129:void onSetCheckMarkDrawable() -> onSetCheckMarkDrawable
    101:104:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    112:115:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
# {"id":"sourceFile","fileName":"AppCompatCompoundButtonHelper.java"}
    39:47:void <init>(android.widget.CompoundButton) -> <init>
    127:143:void applyButtonTint() -> applyButtonTint
    0:0:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    102:102:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    113:113:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    51:91:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    117:123:void onSetButtonDrawable() -> onSetButtonDrawable
    95:98:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    106:109:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
# {"id":"sourceFile","fileName":"AppCompatDrawableManager.java"}
    54:54:void <clinit>() -> <clinit>
    51:51:android.graphics.PorterDuff$Mode access$000() -> access$000
    466:469:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    475:475:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    480:480:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    507:507:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    498:498:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    484:485:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    59:460:void preload() -> preload
    502:502:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
# {"id":"sourceFile","fileName":"AppCompatDrawableManager.java"}
    62:128:void <init>() -> <init>
    360:360:boolean arrayContains(int[],int) -> arrayContains
    143:143:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    158:181:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    148:149:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    136:137:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    234:251:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    189:228:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    260:308:android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> getRatingBarLayerDrawable
    372:394:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    452:453:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    313:316:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    323:353:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    402:435:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
# {"id":"sourceFile","fileName":"AppCompatEditText.java"}
    91:91:void <init>(android.content.Context) -> <init>
    95:95:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:116:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    78:78:android.view.textclassifier.TextClassifier access$001(androidx.appcompat.widget.AppCompatEditText) -> access$001
    78:78:void access$101(androidx.appcompat.widget.AppCompatEditText,android.view.textclassifier.TextClassifier) -> access$101
    247:252:void drawableStateChanged() -> drawableStateChanged
    304:305:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    312:315:androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller() -> getSuperCaller
    213:214:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    241:242:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    446:446:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    489:489:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    77:77:java.lang.CharSequence getText() -> getText
    165:170:android.text.Editable getText() -> getText
    342:345:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    140:155:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    273:287:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    350:353:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
    389:389:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
    364:367:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    183:185:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    175:177:void setBackgroundResource(int) -> setBackgroundResource
    416:418:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    426:428:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    297:298:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    405:405:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    400:400:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    198:199:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    226:227:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    469:470:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    509:510:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    258:260:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    324:328:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatEditText$SuperCaller -> androidx.appcompat.widget.AppCompatEditText$SuperCaller:
# {"id":"sourceFile","fileName":"AppCompatEditText.java"}
    514:514:void <init>(androidx.appcompat.widget.AppCompatEditText) -> <init>
    518:518:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    522:522:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatEmojiEditTextHelper -> androidx.appcompat.widget.AppCompatEmojiEditTextHelper:
# {"id":"sourceFile","fileName":"AppCompatEmojiEditTextHelper.java"}
    50:52:void <init>(android.widget.EditText) -> <init>
    123:124:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    86:86:boolean isEmojiCapableKeyListener(android.text.method.KeyListener) -> isEmojiCapableKeyListener
    63:74:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    148:148:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    96:96:void setEnabled(boolean) -> setEnabled
androidx.appcompat.widget.AppCompatEmojiTextHelper -> androidx.appcompat.widget.AppCompatEmojiTextHelper:
# {"id":"sourceFile","fileName":"AppCompatEmojiTextHelper.java"}
    41:43:void <init>(android.widget.TextView) -> <init>
    99:99:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    84:84:boolean isEnabled() -> isEnabled
    52:63:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    109:109:void setAllCaps(boolean) -> setAllCaps
    77:77:void setEnabled(boolean) -> setEnabled
    122:122:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
# {"id":"sourceFile","fileName":"AppCompatHintHelper.java"}
    28:37:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
# {"id":"sourceFile","fileName":"AppCompatImageButton.java"}
    69:69:void <init>(android.content.Context) -> <init>
    73:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    256:261:void drawableStateChanged() -> drawableStateChanged
    167:168:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    195:196:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    222:223:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    250:251:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    267:267:boolean hasOverlappingRendering() -> hasOverlappingRendering
    137:139:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    129:131:void setBackgroundResource(int) -> setBackgroundResource
    113:115:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    97:106:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    272:273:void setImageLevel(int) -> setImageLevel
    92:92:void setImageResource(int) -> setImageResource
    121:123:void setImageURI(android.net.Uri) -> setImageURI
    152:153:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    180:181:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    207:208:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    235:236:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
# {"id":"sourceFile","fileName":"AppCompatImageHelper.java"}
    46:49:void <init>(android.widget.ImageView) -> <init>
    201:219:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    238:239:void applyImageLevel() -> applyImageLevel
    142:160:void applySupportImageTint() -> applySupportImageTint
    124:124:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    138:138:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    104:105:boolean hasOverlappingRendering() -> hasOverlappingRendering
    53:86:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    231:231:void obtainLevelFromDrawable(android.graphics.drawable.Drawable) -> obtainLevelFromDrawable
    91:100:void setImageResource(int) -> setImageResource
    115:120:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    128:134:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    183:183:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
# {"id":"sourceFile","fileName":"AppCompatImageView.java"}
    69:69:void <init>(android.content.Context) -> <init>
    73:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    268:273:void drawableStateChanged() -> drawableStateChanged
    178:179:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    206:207:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    234:235:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    262:263:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    279:279:boolean hasOverlappingRendering() -> hasOverlappingRendering
    148:150:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    140:142:void setBackgroundResource(int) -> setBackgroundResource
    124:126:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    108:117:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    284:285:void setImageLevel(int) -> setImageLevel
    100:102:void setImageResource(int) -> setImageResource
    132:134:void setImageURI(android.net.Uri) -> setImageURI
    163:164:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    191:192:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    219:220:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    247:248:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
# {"id":"sourceFile","fileName":"AppCompatMultiAutoCompleteTextView.java"}
    64:64:void <clinit>() -> <clinit>
    74:74:void <init>(android.content.Context) -> <init>
    79:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    226:231:void drawableStateChanged() -> drawableStateChanged
    192:193:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    220:221:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    304:304:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    347:347:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    128:143:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    245:247:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    162:164:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    154:156:void setBackgroundResource(int) -> setBackgroundResource
    274:276:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    284:286:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    149:149:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    263:263:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    258:258:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    177:178:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    205:206:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    327:328:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    367:368:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    237:239:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
# {"id":"sourceFile","fileName":"AppCompatPopupWindow.java"}
    34:34:void <clinit>() -> <clinit>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:59:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:93:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:68:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:77:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:86:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
# {"id":"sourceFile","fileName":"AppCompatProgressBarHelper.java"}
    41:41:void <clinit>() -> <clinit>
    50:51:void <init>(android.widget.ProgressBar) -> <init>
    147:148:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    152:152:android.graphics.Bitmap getSampleTile() -> getSampleTile
    55:68:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:116:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    129:140:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl -> androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl:
# {"id":"sourceFile","fileName":"AppCompatProgressBarHelper.java"}
    165:173:void transferLayerProperties(android.graphics.drawable.LayerDrawable,android.graphics.drawable.LayerDrawable,int) -> transferLayerProperties
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
# {"id":"sourceFile","fileName":"AppCompatRadioButton.java"}
    70:70:void <init>(android.content.Context) -> <init>
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:91:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    250:255:void drawableStateChanged() -> drawableStateChanged
    120:122:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    99:102:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    200:201:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    228:229:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    146:147:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    171:172:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    313:313:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    356:356:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    266:267:void setAllCaps(boolean) -> setAllCaps
    234:236:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    242:244:void setBackgroundResource(int) -> setBackgroundResource
    107:109:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    115:115:void setButtonDrawable(int) -> setButtonDrawable
    283:285:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    293:295:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    272:272:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    261:261:void setFilters(android.text.InputFilter[]) -> setFilters
    185:186:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    213:214:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    133:134:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    158:159:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    336:337:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    376:377:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
# {"id":"sourceFile","fileName":"AppCompatRatingBar.java"}
    42:42:void <init>(android.content.Context) -> <init>
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:69:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatReceiveContentHelper -> androidx.appcompat.widget.AppCompatReceiveContentHelper:
# {"id":"sourceFile","fileName":"AppCompatReceiveContentHelper.java"}
    85:111:boolean maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent) -> maybeHandleDragEventViaPerformReceiveContent
    59:71:boolean maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int) -> maybeHandleMenuActionViaPerformReceiveContent
    158:163:android.app.Activity tryGetActivity(android.view.View) -> tryGetActivity
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl -> androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl:
# {"id":"sourceFile","fileName":"AppCompatReceiveContentHelper.java"}
    123:133:boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity) -> onDropForTextView
    140:143:boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity) -> onDropForView
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
# {"id":"sourceFile","fileName":"AppCompatSeekBar.java"}
    41:41:void <init>(android.content.Context) -> <init>
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:67:void drawableStateChanged() -> drawableStateChanged
    72:73:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    60:62:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
# {"id":"sourceFile","fileName":"AppCompatSeekBarHelper.java"}
    36:43:void <init>(android.widget.SeekBar) -> <init>
    128:142:void applyTickMarkTint() -> applyTickMarkTint
    165:182:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    154:157:void drawableStateChanged() -> drawableStateChanged
    148:149:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:76:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    80:95:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    87:87:void <clinit>() -> <clinit>
    124:124:void <init>(android.content.Context) -> <init>
    152:152:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:168:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    188:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    114:309:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    574:603:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    559:561:void drawableStateChanged() -> drawableStateChanged
    381:384:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    355:358:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    400:403:int getDropDownWidth() -> getDropDownWidth
    611:611:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    336:339:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    317:317:android.content.Context getPopupContext() -> getPopupContext
    480:480:java.lang.CharSequence getPrompt() -> getPrompt
    524:525:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    553:554:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    427:430:void onDetachedFromWindow() -> onDetachedFromWindow
    444:451:void onMeasure(int,int) -> onMeasure
    633:656:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    625:627:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    436:439:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    457:466:boolean performClick() -> performClick
    82:82:void setAdapter(android.widget.Adapter) -> setAdapter
    412:421:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    493:495:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    485:487:void setBackgroundResource(int) -> setBackgroundResource
    365:369:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    346:349:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    391:394:void setDropDownWidth(int) -> setDropDownWidth
    322:325:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    331:331:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    471:474:void setPrompt(java.lang.CharSequence) -> setPrompt
    509:510:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    538:539:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    616:616:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    272:272:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    275:275:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    281:282:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    640:640:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    643:649:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$Api16Impl -> androidx.appcompat.widget.AppCompatSpinner$Api16Impl:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1177:1177:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
androidx.appcompat.widget.AppCompatSpinner$Api17Impl -> androidx.appcompat.widget.AppCompatSpinner$Api17Impl:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1147:1147:int getTextAlignment(android.view.View) -> getTextAlignment
    1157:1157:int getTextDirection(android.view.View) -> getTextDirection
    1152:1152:void setTextAlignment(android.view.View,int) -> setTextAlignment
    1162:1162:void setTextDirection(android.view.View,int) -> setTextDirection
androidx.appcompat.widget.AppCompatSpinner$Api23Impl -> androidx.appcompat.widget.AppCompatSpinner$Api23Impl:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1133:1134:void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme) -> setDropDownViewTheme
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    864:864:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    872:874:void dismiss() -> dismiss
    0:0:android.graphics.drawable.Drawable getBackground() -> getBackground
    895:895:java.lang.CharSequence getHintText() -> getHintText
    0:0:int getHorizontalOffset() -> getHorizontalOffset
    0:0:int getVerticalOffset() -> getVerticalOffset
    880:880:boolean isShowing() -> isShowing
    919:923:void onClick(android.content.DialogInterface,int) -> onClick
    885:885:void setAdapter(android.widget.ListAdapter) -> setAdapter
    0:0:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    0:0:void setHorizontalOffset(int) -> setHorizontalOffset
    0:0:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    890:890:void setPromptText(java.lang.CharSequence) -> setPromptText
    0:0:void setVerticalOffset(int) -> setVerticalOffset
    900:908:void show(int,int) -> show
    908:914:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    711:723:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    784:786:boolean areAllItemsEnabled() -> areAllItemsEnabled
    735:735:int getCount() -> getCount
    755:756:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    740:740:java.lang.Object getItem(int) -> getItem
    745:745:long getItemId(int) -> getItemId
    0:0:int getItemViewType(int) -> getItemViewType
    750:750:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    0:0:int getViewTypeCount() -> getViewTypeCount
    761:761:boolean hasStableIds() -> hasStableIds
    818:818:boolean isEmpty() -> isEmpty
    798:800:boolean isEnabled(int) -> isEnabled
    766:767:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    773:774:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$InternalSyntheticApiModelOutline$1$23b31f769ec7a9b62ca9fb30ffa1702a8ce90d65314cc7b10167f9e65e3b70d9$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.widget.ThemedSpinnerAdapter androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter$$InternalSyntheticApiModelOutline$1$23b31f769ec7a9b62ca9fb30ffa1702a8ce90d65314cc7b10167f9e65e3b70d9$1.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    971:981:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    968:968:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    1012:1046:void computeContentWidth() -> computeContentWidth
    1002:1002:java.lang.CharSequence getHintText() -> getHintText
    1118:1118:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1108:1108:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    996:997:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1113:1113:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    1008:1008:void setPromptText(java.lang.CharSequence) -> setPromptText
    1051:1092:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    981:981:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    984:989:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1077:1077:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1080:1087:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1092:1092:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1095:1097:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    679:679:void <clinit>() -> <clinit>
    665:665:void <init>(android.os.Parcelable) -> <init>
    669:670:void <init>(android.os.Parcel) -> <init>
    675:676:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    680:680:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    683:683:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    680:680:java.lang.Object[] newArray(int) -> newArray
    688:688:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup -> androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
# {"id":"sourceFile","fileName":"AppCompatTextClassifierHelper.java"}
    43:44:void <init>(android.widget.TextView) -> <init>
    63:64:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    52:52:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl -> androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl:
# {"id":"sourceFile","fileName":"AppCompatTextClassifierHelper.java"}
    79:83:android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView) -> getTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    75:82:void <init>(android.widget.TextView) -> <init>
    545:545:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    526:538:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    582:582:void autoSizeText() -> autoSizeText
    551:555:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    627:627:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    623:623:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    619:619:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    631:631:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    615:615:int getAutoSizeTextType() -> getAutoSizeTextType
    636:636:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    650:650:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    588:588:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    87:340:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    440:453:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    564:565:void onLayout(boolean,int,int,int,int) -> onLayout
    522:522:void onSetCompoundDrawables() -> onSetCompoundDrawables
    460:513:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    721:722:void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> populateSurroundingTextIfNeeded
    518:518:void setAllCaps(boolean) -> setAllCaps
    604:604:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    610:610:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    596:596:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    640:645:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    654:659:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    676:700:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    663:668:void setCompoundTints() -> setCompoundTints
    572:574:void setTextSize(int,float) -> setTextSize
    592:592:void setTextSizeInternal(int,float) -> setTextSizeInternal
    345:432:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    365:365:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    0:0:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    368:374:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$2 -> androidx.appcompat.widget.AppCompatTextHelper$2:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    446:446:void <init>(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int) -> <init>
    449:449:void run() -> run
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api17Impl:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    793:793:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    788:788:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    782:782:void setTextLocale(android.widget.TextView,java.util.Locale) -> setTextLocale
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api21Impl:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    805:805:java.util.Locale forLanguageTag(java.lang.String) -> forLanguageTag
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api24Impl:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    770:770:android.os.LocaleList forLanguageTags(java.lang.String) -> forLanguageTags
    765:765:void setTextLocales(android.widget.TextView,android.os.LocaleList) -> setTextLocales
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api26Impl:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    739:739:int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    746:746:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    753:753:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    734:734:boolean setFontVariationSettings(android.widget.TextView,java.lang.String) -> setFontVariationSettings
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl -> androidx.appcompat.widget.AppCompatTextHelper$Api28Impl:
# {"id":"sourceFile","fileName":"AppCompatTextHelper.java"}
    818:818:android.graphics.Typeface create(android.graphics.Typeface,int,boolean) -> create
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
    104:104:void <init>(android.content.Context) -> <init>
    108:108:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    95:127:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    85:85:int access$001(androidx.appcompat.widget.AppCompatTextView) -> access$001
    85:85:void access$1001(androidx.appcompat.widget.AppCompatTextView,int) -> access$1001
    85:85:int access$101(androidx.appcompat.widget.AppCompatTextView) -> access$101
    85:85:void access$1101(androidx.appcompat.widget.AppCompatTextView,int) -> access$1101
    85:85:int access$201(androidx.appcompat.widget.AppCompatTextView) -> access$201
    85:85:int[] access$301(androidx.appcompat.widget.AppCompatTextView) -> access$301
    85:85:int access$401(androidx.appcompat.widget.AppCompatTextView) -> access$401
    85:85:android.view.textclassifier.TextClassifier access$501(androidx.appcompat.widget.AppCompatTextView) -> access$501
    85:85:void access$601(androidx.appcompat.widget.AppCompatTextView,int,int,int,int) -> access$601
    85:85:void access$701(androidx.appcompat.widget.AppCompatTextView,int[],int) -> access$701
    85:85:void access$801(androidx.appcompat.widget.AppCompatTextView,int) -> access$801
    85:85:void access$901(androidx.appcompat.widget.AppCompatTextView,android.view.textclassifier.TextClassifier) -> access$901
    546:550:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    245:250:void drawableStateChanged() -> drawableStateChanged
    420:424:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    401:405:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    382:386:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    439:443:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    360:367:int getAutoSizeTextType() -> getAutoSizeTextType
    505:506:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    136:139:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    478:478:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    483:483:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    791:798:androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller() -> getSuperCaller
    182:183:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    210:211:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    698:698:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    741:741:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    559:560:java.lang.CharSequence getText() -> getText
    587:590:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    518:518:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    451:453:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    256:258:void onLayout(boolean,int,int,int,int) -> onLayout
    614:615:void onMeasure(int,int) -> onMeasure
    275:279:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    229:230:void setAllCaps(boolean) -> setAllCaps
    317:322:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    339:343:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    294:298:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    152:154:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    144:146:void setBackgroundResource(int) -> setBackgroundResource
    621:623:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    631:633:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    663:665:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    673:680:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    640:642:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    648:655:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    498:499:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    235:235:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    224:224:void setFilters(android.text.InputFilter[]) -> setFilters
    458:461:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    468:471:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    488:488:void setLineHeight(int) -> setLineHeight
    542:542:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    167:168:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    195:196:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    721:722:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    761:762:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    216:218:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    569:573:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    606:608:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    529:529:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    264:268:void setTextSize(int,float) -> setTextSize
    767:784:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextView$SuperCaller -> androidx.appcompat.widget.AppCompatTextView$SuperCaller:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
androidx.appcompat.widget.AppCompatTextView$SuperCallerApi26 -> androidx.appcompat.widget.AppCompatTextView$SuperCallerApi26:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
    823:823:void <init>(androidx.appcompat.widget.AppCompatTextView) -> <init>
    826:826:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    831:831:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    836:836:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    841:841:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    846:846:int getAutoSizeTextType() -> getAutoSizeTextType
    851:851:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    857:857:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    863:863:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    868:868:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    0:0:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    0:0:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    873:873:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextView$SuperCallerApi28 -> androidx.appcompat.widget.AppCompatTextView$SuperCallerApi28:
# {"id":"sourceFile","fileName":"AppCompatTextView.java"}
    884:884:void <init>(androidx.appcompat.widget.AppCompatTextView) -> <init>
    888:888:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    893:893:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    66:81:void <clinit>() -> <clinit>
    89:162:void <init>(android.widget.TextView) -> <init>
    605:618:void autoSizeText() -> autoSizeText
    618:638:void autoSizeText() -> autoSizeText
    512:534:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    642:647:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    741:745:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    699:719:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    469:469:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    453:453:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    437:437:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    482:482:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    423:423:int getAutoSizeTextType() -> getAutoSizeTextType
    846:858:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    724:730:void initTempTextPaint(int) -> initTempTextPaint
    813:822:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    890:890:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    171:243:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    330:343:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    373:400:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    263:289:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    661:689:void setRawTextSize(float) -> setRawTextSize
    653:657:void setTextSizeInternal(int,float) -> setTextSizeInternal
    575:595:boolean setupAutoSizeText() -> setupAutoSizeText
    486:494:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    499:505:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    753:777:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    899:899:boolean supportsAutoSizeText() -> supportsAutoSizeText
    551:571:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    975:981:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint) -> createStaticLayoutForMeasuring
    963:963:int getMaxLines(android.widget.TextView) -> getMaxLines
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    951:951:boolean isInLayout(android.view.View) -> isInLayout
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    919:939:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl) -> createStaticLayoutForMeasuring
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    0:0:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    117:117:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    126:126:void <init>() -> <init>
    131:134:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.StaticLayout$Builder androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23$$InternalSyntheticApiModelOutline$1$fda6fa621303639c31cfd17e6fb2e9fc6cdba16e7157d8031a4aa8fd2764458e$0.m(android.text.StaticLayout$Builder,android.text.TextDirectionHeuristic) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29:
# {"id":"sourceFile","fileName":"AppCompatTextViewAutoSizeHelper.java"}
    140:140:void <init>() -> <init>
    150:150:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    144:144:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$InternalSyntheticApiModelOutline$1$4bd0b8dbfc2142eeb6a8aadc70a04bbad08754921d4929d7f99fefe931b04677$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.TextDirectionHeuristic androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29$$InternalSyntheticApiModelOutline$1$76011127f8b33c40fb128d8179a05b6d9d5b6f231b8da4ffee0b264fabc202d3$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
# {"id":"sourceFile","fileName":"AppCompatToggleButton.java"}
    65:65:void <init>(android.content.Context) -> <init>
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    162:167:void drawableStateChanged() -> drawableStateChanged
    183:186:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    128:129:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    156:157:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    238:238:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    281:281:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    191:192:void setAllCaps(boolean) -> setAllCaps
    98:100:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    90:92:void setBackgroundResource(int) -> setBackgroundResource
    208:210:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    218:220:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    197:197:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    173:173:void setFilters(android.text.InputFilter[]) -> setFilters
    113:114:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    141:142:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    261:262:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    301:302:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
# {"id":"sourceFile","fileName":"ButtonBarLayout.java"}
    50:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:157:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    186:186:boolean isStacked() -> isStacked
    79:150:void onMeasure(int,int) -> onMeasure
    68:73:void setAllowStacking(boolean) -> setAllowStacking
    165:180:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
# {"id":"sourceFile","fileName":"ContentFrameLayout.java"}
    60:60:void <init>(android.content.Context) -> <init>
    64:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    197:198:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    202:203:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    187:188:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    192:193:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    177:178:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    182:183:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    208:210:void onAttachedToWindow() -> onAttachedToWindow
    216:218:void onDetachedFromWindow() -> onDetachedFromWindow
    101:172:void onMeasure(int,int) -> onMeasure
    82:82:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    93:95:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener -> androidx.appcompat.widget.ContentFrameLayout$OnAttachListener:
# {"id":"sourceFile","fileName":"ContentFrameLayout.java"}
androidx.appcompat.widget.DecorContentParent -> androidx.appcompat.widget.DecorContentParent:
# {"id":"sourceFile","fileName":"DecorContentParent.java"}
androidx.appcompat.widget.DecorToolbar -> androidx.appcompat.widget.DecorToolbar:
# {"id":"sourceFile","fileName":"DecorToolbar.java"}
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
# {"id":"sourceFile","fileName":"DialogTitle.java"}
    42:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:50:void <init>(android.content.Context) -> <init>
    55:78:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
# {"id":"sourceFile","fileName":"DrawableUtils.java"}
    50:53:void <clinit>() -> <clinit>
    0:0:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    88:98:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    149:158:void forceDrawableStateChange(android.graphics.drawable.Drawable) -> forceDrawableStateChange
    65:74:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    167:177:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DrawableUtils$$ExternalSyntheticApiModelOutline0 -> androidx.appcompat.widget.DrawableUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.appcompat.widget.DrawableUtils$$InternalSyntheticApiModelOutline$1$2c278e7bda027994a3543295caa41737fb2fe1af3e83dca87c7710dc53b4b23d$0.m(android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.DrawableUtils$$ExternalSyntheticApiModelOutline1 -> androidx.appcompat.widget.DrawableUtils$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.appcompat.widget.DrawableUtils$$InternalSyntheticApiModelOutline$1$2c278e7bda027994a3543295caa41737fb2fe1af3e83dca87c7710dc53b4b23d$1.m(android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.DrawableUtils$$ExternalSyntheticApiModelOutline2 -> androidx.appcompat.widget.DrawableUtils$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.appcompat.widget.DrawableUtils$$InternalSyntheticApiModelOutline$1$2c278e7bda027994a3543295caa41737fb2fe1af3e83dca87c7710dc53b4b23d$2.m(android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.DrawableUtils$$ExternalSyntheticApiModelOutline3 -> androidx.appcompat.widget.DrawableUtils$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.appcompat.widget.DrawableUtils$$InternalSyntheticApiModelOutline$1$2c278e7bda027994a3543295caa41737fb2fe1af3e83dca87c7710dc53b4b23d$3.m(android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.DrawableUtils$Api18Impl -> androidx.appcompat.widget.DrawableUtils$Api18Impl:
# {"id":"sourceFile","fileName":"DrawableUtils.java"}
    202:230:void <clinit>() -> <clinit>
    241:258:android.graphics.Rect getOpticalInsets(android.graphics.drawable.Drawable) -> getOpticalInsets
androidx.appcompat.widget.DrawableUtils$Api29Impl -> androidx.appcompat.widget.DrawableUtils$Api29Impl:
# {"id":"sourceFile","fileName":"DrawableUtils.java"}
    270:270:android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable) -> getOpticalInsets
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    60:129:void <init>(android.content.Context,boolean) -> <init>
    650:662:void clearPressedItem() -> clearPressedItem
    566:567:void clickPressedItem(android.view.View,int) -> clickPressedItem
    219:222:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    589:593:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    205:212:void drawableStateChanged() -> drawableStateChanged
    183:183:boolean hasFocus() -> hasFocus
    163:163:boolean hasWindowFocus() -> hasWindowFocus
    173:173:boolean isFocused() -> isFocused
    153:153:boolean isInTouchMode() -> isInTouchMode
    309:366:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    495:496:void onDetachedFromWindow() -> onDetachedFromWindow
    509:555:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    447:487:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    227:236:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    629:644:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    610:623:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    599:603:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    578:578:void setListSelectionHidden(boolean) -> setListSelectionHidden
    667:710:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    188:199:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    390:391:void setSelectorEnabled(boolean) -> setSelectorEnabled
    134:137:boolean superIsSelectedChildViewEnabled() -> superIsSelectedChildViewEnabled
    143:146:void superSetSelectedChildViewEnabled(boolean) -> superSetSelectedChildViewEnabled
    714:714:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    582:584:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$Api21Impl -> androidx.appcompat.widget.DropDownListView$Api21Impl:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    810:810:void drawableHotspotChanged(android.view.View,float,float) -> drawableHotspotChanged
androidx.appcompat.widget.DropDownListView$Api30Impl -> androidx.appcompat.widget.DropDownListView$Api30Impl:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    751:763:void <clinit>() -> <clinit>
    776:776:boolean canPositionSelectorForHoveredItem() -> canPositionSelectorForHoveredItem
    791:797:void positionSelectorForHoveredItem(androidx.appcompat.widget.DropDownListView,int,android.view.View) -> positionSelectorForHoveredItem
androidx.appcompat.widget.DropDownListView$Api33Impl -> androidx.appcompat.widget.DropDownListView$Api33Impl:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    867:867:boolean isSelectedChildViewEnabled(android.widget.AbsListView) -> isSelectedChildViewEnabled
    872:872:void setSelectedChildViewEnabled(android.widget.AbsListView,boolean) -> setSelectedChildViewEnabled
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    399:400:void <init>(android.graphics.drawable.Drawable) -> <init>
    417:418:void draw(android.graphics.Canvas) -> draw
    404:404:void setEnabled(boolean) -> setEnabled
    424:425:void setHotspot(float,float) -> setHotspot
    431:432:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    409:410:boolean setState(int[]) -> setState
    438:439:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$PreApi33Impl -> androidx.appcompat.widget.DropDownListView$PreApi33Impl:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    823:829:void <clinit>() -> <clinit>
    837:841:boolean isSelectedChildViewEnabled(android.widget.AbsListView) -> isSelectedChildViewEnabled
    849:853:void setSelectedChildViewEnabled(android.widget.AbsListView,boolean) -> setSelectedChildViewEnabled
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
# {"id":"sourceFile","fileName":"DropDownListView.java"}
    721:721:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    732:733:void cancel() -> cancel
    737:737:void post() -> post
    727:728:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
# {"id":"sourceFile","fileName":"FitWindowsFrameLayout.java"}
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:48:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
# {"id":"sourceFile","fileName":"FitWindowsLinearLayout.java"}
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:48:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener:
# {"id":"sourceFile","fileName":"FitWindowsViewGroup.java"}
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    66:77:void <init>(android.view.View) -> <init>
    216:221:void clearCallbacks() -> clearCallbacks
    156:158:boolean onForwardingStopped() -> onForwardingStopped
    226:248:void onLongPress() -> onLongPress
    94:111:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:280:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:208:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    0:0:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:125:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    289:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:311:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:300:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    316:316:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:323:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
# {"id":"sourceFile","fileName":"ForwardingListener.java"}
    329:329:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:334:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
# {"id":"sourceFile","fileName":"LinearLayoutCompat.java"}
    153:153:void <init>(android.content.Context) -> <init>
    157:157:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    104:196:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1781:1781:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    342:378:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    315:337:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    383:385:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    389:391:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1341:1356:void forceUniformHeight(int,int) -> forceUniformHeight
    919:934:void forceUniformWidth(int,int) -> forceUniformWidth
    61:61:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1764:1767:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1751:1751:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1774:1774:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    445:493:int getBaseline() -> getBaseline
    503:503:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    0:0:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    240:240:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    288:288:int getDividerPadding() -> getDividerPadding
    298:298:int getDividerWidth() -> getDividerWidth
    1730:1730:int getGravity() -> getGravity
    0:0:int getLocationOffset(android.view.View) -> getLocationOffset
    0:0:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1695:1695:int getOrientation() -> getOrientation
    230:230:int getShowDividers() -> getShowDividers
    528:528:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    541:541:int getVirtualChildCount() -> getVirtualChildCount
    553:553:float getWeightSum() -> getWeightSum
    591:597:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1545:1663:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1450:1527:void layoutVertical(int,int,int,int) -> layoutVertical
    1401:1401:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    952:1333:void measureHorizontal(int,int) -> measureHorizontal
    0:0:int measureNullChild(int) -> measureNullChild
    619:913:void measureVertical(int,int) -> measureVertical
    303:310:void onDraw(android.graphics.Canvas) -> onDraw
    1786:1787:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1792:1793:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1430:1433:void onLayout(boolean,int,int,int,int) -> onLayout
    574:577:void onMeasure(int,int) -> onMeasure
    413:413:void setBaselineAligned(boolean) -> setBaselineAligned
    511:515:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1669:1669:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    251:263:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    276:276:void setDividerPadding(int) -> setDividerPadding
    1707:1717:void setGravity(int) -> setGravity
    1735:1737:void setHorizontalGravity(int) -> setHorizontalGravity
    440:440:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1678:1680:void setOrientation(int) -> setOrientation
    207:210:void setShowDividers(int) -> setShowDividers
    1743:1745:void setVerticalGravity(int) -> setVerticalGravity
    569:569:void setWeightSum(float) -> setWeightSum
    0:0:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
# {"id":"sourceFile","fileName":"LinearLayoutCompat.java"}
    1805:1805:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1812:1812:void <init>(int,int) -> <init>
    1833:1833:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    87:105:void <clinit>() -> <clinit>
    227:227:void <init>(android.content.Context) -> <init>
    238:238:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    251:251:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    118:280:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1161:1328:int buildDropDown() -> buildDropDown
    849:854:void clearListSelection() -> clearListSelection
    953:953:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    775:779:void dismiss() -> dismiss
    463:463:android.view.View getAnchorView() -> getAnchorView
    426:426:android.graphics.drawable.Drawable getBackground() -> getBackground
    480:480:int getHorizontalOffset() -> getHorizontalOffset
    949:949:android.widget.ListView getListView() -> getListView
    1448:1460:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    898:901:java.lang.Object getSelectedItem() -> getSelectedItem
    924:927:long getSelectedItemId() -> getSelectedItemId
    911:914:int getSelectedItemPosition() -> getSelectedItemPosition
    937:940:android.view.View getSelectedView() -> getSelectedView
    496:499:int getVerticalOffset() -> getVerticalOffset
    548:548:int getWidth() -> getWidth
    871:871:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    348:348:boolean isModal() -> isModal
    863:863:boolean isShowing() -> isShowing
    792:796:void removePromptView() -> removePromptView
    290:301:void setAdapter(android.widget.ListAdapter) -> setAdapter
    473:473:void setAnchorView(android.view.View) -> setAnchorView
    444:444:void setAnimationStyle(int) -> setAnimationStyle
    435:435:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    568:573:void setContentWidth(int) -> setContentWidth
    541:541:void setDropDownGravity(int) -> setDropDownGravity
    520:520:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    489:489:void setHorizontalOffset(int) -> setHorizontalOffset
    814:814:void setInputMethodMode(int) -> setInputMethodMode
    338:339:void setModal(boolean) -> setModal
    788:788:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    622:622:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    633:633:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    1341:1342:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1434:1443:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    315:315:void setPromptPosition(int) -> setPromptPosition
    833:839:void setSelection(int) -> setSelection
    508:509:void setVerticalOffset(int) -> setVerticalOffset
    558:558:void setWidth(int) -> setWidth
    666:765:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1170:1170:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1174:1176:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1189:1189:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1195:1198:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    0:0:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$Api24Impl -> androidx.appcompat.widget.ListPopupWindow$Api24Impl:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1491:1491:int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean) -> getMaxAvailableHeight
androidx.appcompat.widget.ListPopupWindow$Api29Impl -> androidx.appcompat.widget.ListPopupWindow$Api29Impl:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1473:1473:void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect) -> setEpicenterBounds
    1478:1478:void setIsClippedToScreen(android.widget.PopupWindow,boolean) -> setIsClippedToScreen
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1364:1364:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1369:1369:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1346:1346:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1351:1353:void onChanged() -> onChanged
    1359:1359:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1410:1410:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    0:0:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1421:1424:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1389:1389:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1394:1403:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
# {"id":"sourceFile","fileName":"ListPopupWindow.java"}
    1374:1374:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1379:1383:void run() -> run
androidx.appcompat.widget.MenuItemHoverListener -> androidx.appcompat.widget.MenuItemHoverListener:
# {"id":"sourceFile","fileName":"MenuItemHoverListener.java"}
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    63:64:void <clinit>() -> <clinit>
    76:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    82:83:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    124:125:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    132:133:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    88:89:void setEnterTransition(java.lang.Object) -> setEnterTransition
    94:95:void setExitTransition(java.lang.Object) -> setExitTransition
    100:100:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    108:117:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$Api23Impl -> androidx.appcompat.widget.MenuPopupWindow$Api23Impl:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    269:269:void setEnterTransition(android.widget.PopupWindow,android.transition.Transition) -> setEnterTransition
    274:274:void setExitTransition(android.widget.PopupWindow,android.transition.Transition) -> setExitTransition
androidx.appcompat.widget.MenuPopupWindow$Api29Impl -> androidx.appcompat.widget.MenuPopupWindow$Api29Impl:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    286:286:void setTouchModal(android.widget.PopupWindow,boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    149:159:void <init>(android.content.Context,boolean) -> <init>
    140:140:boolean hasFocus() -> hasFocus
    140:140:boolean hasWindowFocus() -> hasWindowFocus
    140:140:boolean isFocused() -> isFocused
    140:140:boolean isInTouchMode() -> isInTouchMode
    140:140:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    140:140:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    203:244:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    173:197:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    140:140:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    164:164:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    140:140:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl:
# {"id":"sourceFile","fileName":"MenuPopupWindow.java"}
    255:255:int getLayoutDirection(android.content.res.Configuration) -> getLayoutDirection
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    87:117:void <clinit>() -> <clinit>
    63:123:void <init>() -> <init>
    372:375:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> addDelegate
    341:351:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    407:415:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    499:509:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    172:172:long createCacheKey(android.util.TypedValue) -> createCacheKey
    177:197:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    480:481:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    98:102:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    320:336:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    137:137:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    142:160:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    487:495:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    384:394:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    398:400:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    379:379:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    109:113:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    515:516:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    234:310:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    164:169:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    356:363:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    133:134:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    205:223:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    441:471:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    368:368:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    559:559:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    537:537:void <init>() -> <init>
    545:545:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    421:421:void <init>(int) -> <init>
    435:435:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    425:425:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    429:429:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate -> androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    571:579:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks -> androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate:
# {"id":"sourceFile","fileName":"ResourceManagerInternal.java"}
    520:520:void <init>() -> <init>
    528:528:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
# {"id":"sourceFile","fileName":"ResourcesWrapper.java"}
    50:51:void <init>(android.content.res.Resources) -> <init>
    209:209:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    194:194:boolean getBoolean(int) -> getBoolean
    183:183:int getColor(int) -> getColor
    189:189:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    272:272:android.content.res.Configuration getConfiguration() -> getConfiguration
    112:112:float getDimension(int) -> getDimension
    117:117:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    122:122:int getDimensionPixelSize(int) -> getDimensionPixelSize
    267:267:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    155:155:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    149:149:android.graphics.drawable.Drawable getDrawableCanonical(int) -> getDrawableCanonical
    165:165:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    171:171:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    127:127:float getFraction(int,int,int) -> getFraction
    277:277:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    102:102:int[] getIntArray(int) -> getIntArray
    199:199:int getInteger(int) -> getInteger
    204:204:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    177:177:android.graphics.Movie getMovie(int) -> getMovie
    77:77:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    82:82:java.lang.String getQuantityString(int,int) -> getQuantityString
    61:61:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    297:297:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    282:282:java.lang.String getResourceName(int) -> getResourceName
    287:287:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    292:292:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    66:66:java.lang.String getString(int) -> getString
    71:71:java.lang.String getString(int,java.lang.Object[]) -> getString
    97:97:java.lang.String[] getStringArray(int) -> getStringArray
    56:56:java.lang.CharSequence getText(int) -> getText
    87:87:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    92:92:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    235:235:void getValue(int,android.util.TypedValue,boolean) -> getValue
    248:248:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    242:242:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    214:214:android.content.res.XmlResourceParser getXml(int) -> getXml
    253:253:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    107:107:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    219:219:java.io.InputStream openRawResource(int) -> openRawResource
    224:224:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    229:229:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    309:309:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    303:303:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    259:261:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
# {"id":"sourceFile","fileName":"RtlSpacingHelper.java"}
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:70:void setAbsolute(int,int) -> setAbsolute
    74:88:void setDirection(boolean) -> setDirection
    55:63:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
# {"id":"sourceFile","fileName":"ScrollingTabContainerView.java"}
    78:78:void <clinit>() -> <clinit>
    76:92:void <init>(android.content.Context) -> <init>
    261:273:void animateToTab(int) -> animateToTab
    215:220:android.widget.Spinner createSpinner() -> createSpinner
    205:209:androidx.appcompat.widget.LinearLayoutCompat createTabLayout() -> createTabLayout
    294:305:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    147:147:boolean isCollapsed() -> isCollapsed
    278:281:void onAttachedToWindow() -> onAttachedToWindow
    226:232:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    287:289:void onDetachedFromWindow() -> onDetachedFromWindow
    372:373:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    98:137:void onMeasure(int,int) -> onMeasure
    0:0:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    155:170:void performCollapse() -> performCollapse
    174:179:boolean performExpand() -> performExpand
    151:151:void setAllowCollapse(boolean) -> setAllowCollapse
    200:201:void setContentHeight(int) -> setContentHeight
    184:195:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
# {"id":"sourceFile","fileName":"ScrollingTabContainerView.java"}
    265:265:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    268:270:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
# {"id":"sourceFile","fileName":"ScrollingTabContainerView.java"}
    527:527:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    532:532:int getCount() -> getCount
    537:537:java.lang.Object getItem(int) -> getItem
    0:0:long getItemId(int) -> getItemId
    548:550:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
# {"id":"sourceFile","fileName":"ScrollingTabContainerView.java"}
    557:557:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    562:563:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
# {"id":"sourceFile","fileName":"ScrollingTabContainerView.java"}
    382:410:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    415:415:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    0:0:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    429:431:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    436:439:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    444:448:void onMeasure(int,int) -> onMeasure
    420:423:void setSelected(boolean) -> setSelected
    455:455:void update() -> update
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener:
# {"id":"sourceFile","fileName":"ScrollingTabContainerView.java"}
    572:573:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    599:599:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    591:594:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    585:586:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
# {"id":"sourceFile","fileName":"SearchView.java"}
    181:181:void <clinit>() -> <clinit>
    272:272:void <init>(android.content.Context) -> <init>
    276:276:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    136:1730:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1381:1388:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    1388:1400:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    505:509:void clearFocus() -> clearFocus
    1554:1576:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1673:1707:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1599:1652:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1584:1587:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1219:1219:void dismissSuggestions() -> dismissSuggestions
    1714:1718:void forceSuggestionQuery() -> forceSuggestionQuery
    862:866:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1105:1114:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    460:460:int getImeOptions() -> getImeOptions
    482:482:int getInputType() -> getInputType
    788:788:int getMaxWidth() -> getMaxWidth
    875:876:int getPreferredHeight() -> getPreferredHeight
    870:871:int getPreferredWidth() -> getPreferredWidth
    567:567:java.lang.CharSequence getQuery() -> getQuery
    628:633:java.lang.CharSequence getQueryHint() -> getQueryHint
    401:401:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    397:397:int getSuggestionRowLayout() -> getSuggestionRowLayout
    765:765:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    905:913:boolean hasVoiceSearch() -> hasVoiceSearch
    693:693:boolean isIconified() -> isIconified
    1723:1723:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    922:922:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1517:1519:void launchIntent(android.content.Intent) -> launchIntent
    1534:1535:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1494:1500:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1296:1300:void onActionViewCollapsed() -> onActionViewCollapsed
    1308:1314:void onActionViewExpanded() -> onActionViewExpanded
    1223:1237:void onCloseClicked() -> onCloseClicked
    976:978:void onDetachedFromWindow() -> onDetachedFromWindow
    1407:1409:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1418:1418:boolean onItemSelected(int) -> onItemSelected
    843:856:void onLayout(boolean,int,int,int,int) -> onLayout
    794:838:void onMeasure(int,int) -> onMeasure
    990:990:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1370:1377:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1362:1364:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1243:1247:void onSearchClicked() -> onSearchClicked
    1205:1213:void onSubmitQuery() -> onSubmitQuery
    1060:1093:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1191:1201:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1275:1280:void onTextFocusChanged() -> onTextFocusChanged
    1253:1265:void onVoiceClicked() -> onVoiceClicked
    1286:1288:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    957:957:void postUpdateFocusedState() -> postUpdateFocusedState
    488:499:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1461:1479:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    436:436:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    680:682:void setIconified(boolean) -> setIconified
    651:654:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    448:448:void setImeOptions(int) -> setImeOptions
    472:472:void setInputType(int) -> setInputType
    774:776:void setMaxWidth(int) -> setMaxWidth
    0:0:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    537:537:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    0:0:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    558:558:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    0:0:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    579:587:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1527:1529:void setQuery(java.lang.CharSequence) -> setQuery
    602:603:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    733:735:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    413:426:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    705:706:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    755:757:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    945:952:void updateCloseButton() -> updateCloseButton
    961:971:void updateFocusedState() -> updateFocusedState
    1119:1120:void updateQueryHint() -> updateQueryHint
    1127:1158:void updateSearchAutoComplete() -> updateSearchAutoComplete
    936:941:void updateSubmitArea() -> updateSubmitArea
    927:931:void updateSubmitButton(boolean) -> updateSubmitButton
    880:900:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1171:1175:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    183:183:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    186:186:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1730:1730:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1737:1737:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
# {"id":"sourceFile","fileName":"SearchView.java"}
    190:190:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    193:194:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
# {"id":"sourceFile","fileName":"SearchView.java"}
    338:338:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    341:342:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
# {"id":"sourceFile","fileName":"SearchView.java"}
    383:383:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    387:387:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
# {"id":"sourceFile","fileName":"SearchView.java"}
    993:993:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    996:1005:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1015:1015:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1019:1044:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1178:1178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1185:1185:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1424:1424:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1432:1432:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1436:1436:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1444:1444:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    0:0:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$Api29Impl -> androidx.appcompat.widget.SearchView$Api29Impl:
# {"id":"sourceFile","fileName":"SearchView.java"}
    2137:2137:void refreshAutoCompleteResults(android.widget.AutoCompleteTextView) -> refreshAutoCompleteResults
    2132:2132:void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int) -> setInputMethodMode
androidx.appcompat.widget.SearchView$OnCloseListener -> androidx.appcompat.widget.SearchView$OnCloseListener:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$OnQueryTextListener -> androidx.appcompat.widget.SearchView$OnQueryTextListener:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$OnSuggestionListener -> androidx.appcompat.widget.SearchView$OnSuggestionListener:
# {"id":"sourceFile","fileName":"SearchView.java"}
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector:
# {"id":"sourceFile","fileName":"SearchView.java"}
    2054:2080:void <init>() -> <init>
    2097:2100:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2087:2090:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2107:2110:void ensureImeVisible(android.widget.AutoCompleteTextView) -> ensureImeVisible
    2117:2118:void preApi29Check() -> preApi29Check
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1342:1342:void <clinit>() -> <clinit>
    1321:1321:void <init>(android.os.Parcelable) -> <init>
    1325:1326:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1337:1338:java.lang.String toString() -> toString
    1331:1332:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1342:1342:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1342:1342:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1345:1345:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1350:1350:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1342:1342:java.lang.Object[] newArray(int) -> newArray
    1355:1355:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1859:1859:void <init>(android.content.Context) -> <init>
    1863:1863:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1851:1868:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1948:1948:boolean enoughToFilter() -> enoughToFilter
    2042:2048:void ensureImeVisible() -> ensureImeVisible
    1981:1985:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1893:1893:boolean isEmpty() -> isEmpty
    2000:2003:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1873:1876:void onFinishInflate() -> onFinishInflate
    1938:1939:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1956:1974:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1920:1931:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    0:0:void performCompletion() -> performCompletion
    0:0:void replaceText(java.lang.CharSequence) -> replaceText
    2019:2038:void setImeVisibility(boolean) -> setImeVisibility
    1880:1880:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1885:1886:void setThreshold(int) -> setThreshold
    2009:2013:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1851:1851:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1854:1854:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1777:1783:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1795:1834:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1787:1790:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
# {"id":"sourceFile","fileName":"SuggestionsAdapter.java"}
    73:103:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    273:321:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    215:230:void changeCursor(android.database.Cursor) -> changeCursor
    582:587:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    418:431:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    334:344:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    645:659:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    623:633:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    674:675:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    604:610:android.graphics.drawable.Drawable getDefaultIcon1() -> getDefaultIcon1
    549:569:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    561:574:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    697:728:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    506:537:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    472:480:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    361:369:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    373:377:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    739:776:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    683:683:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    449:457:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    0:0:boolean hasStableIds() -> hasStableIds
    242:247:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    179:181:void notifyDataSetChanged() -> notifyDataSetChanged
    187:189:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    327:329:void onClick(android.view.View) -> onClick
    144:159:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    116:116:void setQueryRefinement(int) -> setQueryRefinement
    387:400:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    351:356:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    592:592:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    193:202:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
# {"id":"sourceFile","fileName":"SuggestionsAdapter.java"}
    262:267:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
# {"id":"sourceFile","fileName":"SwitchCompat.java"}
    120:212:void <clinit>() -> <clinit>
    222:222:void <init>(android.content.Context) -> <init>
    233:233:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    134:331:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1140:1145:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    753:767:void applyThumbTint() -> applyThumbTint
    624:638:void applyTrackTint() -> applyTrackTint
    1149:1150:void cancelPositionAnimator() -> cancelPositionAnimator
    1099:1102:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    0:0:float constrain(float,float,float) -> constrain
    876:878:java.lang.CharSequence doTransformForOnOffText(java.lang.CharSequence) -> doTransformForOnOffText
    1262:1322:void draw(android.graphics.Canvas) -> draw
    1483:1491:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1460:1476:void drawableStateChanged() -> drawableStateChanged
    1392:1397:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1404:1409:int getCompoundPaddingRight() -> getCompoundPaddingRight
    1557:1558:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    1614:1617:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    909:909:boolean getShowText() -> getShowText
    793:793:boolean getSplitTrack() -> getSplitTrack
    492:492:int getSwitchMinWidth() -> getSwitchMinWidth
    466:466:int getSwitchPadding() -> getSwitchPadding
    1155:1155:boolean getTargetCheckedState() -> getTargetCheckedState
    842:842:java.lang.CharSequence getTextOff() -> getTextOff
    803:803:java.lang.CharSequence getTextOn() -> getTextOn
    684:684:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1422:1427:int getThumbOffset() -> getThumbOffset
    1163:1163:float getThumbPosition() -> getThumbPosition
    1431:1442:int getThumbScrollRange() -> getThumbScrollRange
    516:516:int getThumbTextPadding() -> getThumbTextPadding
    717:717:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    749:749:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    557:557:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    589:589:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    620:620:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    1003:1015:boolean hitThumb(float,float) -> hitThumb
    1502:1514:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    993:995:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1451:1453:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1327:1387:void onDraw(android.graphics.Canvas) -> onDraw
    1665:1667:void onEmojiCompatInitializedForSwitchText() -> onEmojiCompatInitializedForSwitchText
    1520:1521:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1526:1537:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1206:1257:void onLayout(boolean,int,int,int,int) -> onLayout
    914:978:void onMeasure(int,int) -> onMeasure
    984:988:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1021:1095:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1599:1600:void setAllCaps(boolean) -> setAllCaps
    1183:1200:void setChecked(boolean) -> setChecked
    1550:1551:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    1622:1626:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    1568:1569:void setEnforceSwitchWidth(boolean) -> setEnforceSwitchWidth
    1605:1605:void setFilters(android.text.InputFilter[]) -> setFilters
    1589:1592:void setOffStateDescriptionOnRAndAbove() -> setOffStateDescriptionOnRAndAbove
    1580:1583:void setOnStateDescriptionOnRAndAbove() -> setOnStateDescriptionOnRAndAbove
    890:894:void setShowText(boolean) -> setShowText
    782:783:void setSplitTrack(boolean) -> setSplitTrack
    478:479:void setSwitchMinWidth(int) -> setSwitchMinWidth
    453:454:void setSwitchPadding(int) -> setSwitchPadding
    341:379:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    410:424:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    436:441:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    386:398:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    864:869:void setTextOff(java.lang.CharSequence) -> setTextOff
    850:854:void setTextOffInternal(java.lang.CharSequence) -> setTextOffInternal
    826:831:void setTextOn(java.lang.CharSequence) -> setTextOn
    811:815:void setTextOnInternal(java.lang.CharSequence) -> setTextOnInternal
    652:659:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1172:1173:void setThumbPosition(float) -> setThumbPosition
    671:671:void setThumbResource(int) -> setThumbResource
    503:504:void setThumbTextPadding(int) -> setThumbTextPadding
    702:705:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    733:736:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    527:534:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    545:545:void setTrackResource(int) -> setTrackResource
    574:577:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    604:607:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1642:1652:void setupEmojiCompatLoadCallback() -> setupEmojiCompatLoadCallback
    1111:1135:void stopDrag(android.view.MotionEvent) -> stopDrag
    1178:1178:void toggle() -> toggle
    1497:1497:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
# {"id":"sourceFile","fileName":"SwitchCompat.java"}
    121:121:void <init>(java.lang.Class,java.lang.String) -> <init>
    121:121:java.lang.Object get(java.lang.Object) -> get
    124:124:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    121:121:void set(java.lang.Object,java.lang.Object) -> set
    129:129:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.SwitchCompat$Api18Impl -> androidx.appcompat.widget.SwitchCompat$Api18Impl:
# {"id":"sourceFile","fileName":"SwitchCompat.java"}
    1704:1704:void setAutoCancel(android.animation.ObjectAnimator,boolean) -> setAutoCancel
androidx.appcompat.widget.SwitchCompat$EmojiCompatInitCallback -> androidx.appcompat.widget.SwitchCompat$EmojiCompatInitCallback:
# {"id":"sourceFile","fileName":"SwitchCompat.java"}
    1674:1675:void <init>(androidx.appcompat.widget.SwitchCompat) -> <init>
    1689:1691:void onFailed(java.lang.Throwable) -> onFailed
    1681:1683:void onInitialized() -> onInitialized
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
# {"id":"sourceFile","fileName":"ThemeUtils.java"}
    41:53:void <clinit>() -> <clinit>
    162:175:void checkAppCompatTheme(android.view.View,android.content.Context) -> checkAppCompatTheme
    126:138:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    91:97:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    152:154:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    109:115:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    143:146:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
# {"id":"sourceFile","fileName":"TintContextWrapper.java"}
    42:42:void <clinit>() -> <clinit>
    92:102:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:116:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:72:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
# {"id":"sourceFile","fileName":"TintInfo.java"}
    35:38:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
# {"id":"sourceFile","fileName":"TintResources.java"}
    35:36:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:49:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
# {"id":"sourceFile","fileName":"TintTypedArray.java"}
    68:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    159:159:boolean getBoolean(int,boolean) -> getBoolean
    171:171:int getColor(int,int) -> getColor
    175:185:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    193:193:float getDimension(int,float) -> getDimension
    197:197:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    201:201:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    81:87:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    91:94:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    167:167:float getFloat(int,float) -> getFloat
    120:127:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    163:163:int getInt(int,int) -> getInt
    189:189:int getInteger(int,int) -> getInteger
    209:209:int getLayoutDimension(int,int) -> getLayoutDimension
    217:217:int getResourceId(int,int) -> getResourceId
    151:151:java.lang.String getString(int) -> getString
    147:147:java.lang.CharSequence getText(int) -> getText
    221:221:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    77:77:android.content.res.TypedArray getWrappedTypeArray() -> getWrappedTypeArray
    241:241:boolean hasValue(int) -> hasValue
    55:55:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    60:61:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    65:65:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    253:253:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    258:258:void <init>(android.content.Context) -> <init>
    262:262:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    194:382:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2385:2390:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2277:2299:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    2480:2480:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    1641:1656:void addSystemView(android.view.View,boolean) -> addSystemView
    586:586:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2359:2359:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    799:802:void collapseActionView() -> collapseActionView
    667:668:void dismissPopupMenus() -> dismissPopupMenus
    1622:1631:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2422:2423:void ensureContentInsets() -> ensureContentInsets
    769:770:void ensureLogoView() -> ensureLogoView
    1236:1247:void ensureMenu() -> ensureMenu
    1252:1287:void ensureMenuView() -> ensureMenuView
    1601:1606:void ensureNavButtonView() -> ensureNavButtonView
    158:158:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2354:2354:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    158:158:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    158:158:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2336:2336:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2341:2348:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2306:2307:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2226:2250:int getChildTop(android.view.View,int) -> getChildTop
    2265:2265:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1117:1117:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1163:1163:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1382:1382:int getContentInsetEnd() -> getContentInsetEnd
    1508:1510:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1426:1426:int getContentInsetLeft() -> getContentInsetLeft
    1447:1447:int getContentInsetRight() -> getContentInsetRight
    1361:1361:int getContentInsetStart() -> getContentInsetStart
    1464:1466:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1561:1567:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1580:1582:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1595:1597:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1546:1548:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2457:2461:java.util.ArrayList getCurrentMenuItems() -> getCurrentMenuItems
    2324:2326:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    726:726:android.graphics.drawable.Drawable getLogo() -> getLogo
    765:765:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1210:1211:android.view.Menu getMenu() -> getMenu
    1292:1292:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1618:1618:android.view.View getNavButtonView() -> getNavButtonView
    994:994:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1088:1088:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2449:2449:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1231:1232:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2453:2453:android.content.Context getPopupContext() -> getPopupContext
    444:444:int getPopupTheme() -> getPopupTheme
    870:870:java.lang.CharSequence getSubtitle() -> getSubtitle
    2442:2442:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    813:813:java.lang.CharSequence getTitle() -> getTitle
    545:545:int getTitleMarginBottom() -> getTitleMarginBottom
    522:522:int getTitleMarginEnd() -> getTitleMarginEnd
    476:476:int getTitleMarginStart() -> getTitleMarginStart
    499:499:int getTitleMarginTop() -> getTitleMarginTop
    2433:2433:android.widget.TextView getTitleTextView() -> getTitleTextView
    2330:2331:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2181:2194:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2365:2368:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    785:785:boolean hasExpandedActionView() -> hasExpandedActionView
    620:620:boolean hideOverflowMenu() -> hideOverflowMenu
    1305:1305:void inflateMenu(int) -> inflateMenu
    2513:2516:void invalidateMenu() -> invalidateMenu
    2394:2394:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    602:602:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    596:596:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2201:2208:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2214:2221:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1790:1807:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1765:1781:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1709:1710:void onAttachedToWindow() -> onAttachedToWindow
    2468:2474:void onCreateMenu() -> onCreateMenu
    1702:1704:void onDetachedFromWindow() -> onDetachedFromWindow
    1744:1757:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1963:2177:void onLayout(boolean,int,int,int,int) -> onLayout
    1833:1958:void onMeasure(int,int) -> onMeasure
    1674:1691:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    563:567:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1662:1668:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1720:1733:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1696:1697:void postShowOverflowMenu() -> postShowOverflowMenu
    2372:2379:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    2500:2500:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
    399:403:void setBackInvokedCallbackEnabled(boolean) -> setBackInvokedCallbackEnabled
    1131:1131:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1145:1149:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1177:1177:void setCollapseIcon(int) -> setCollapseIcon
    1192:1195:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2404:2405:void setCollapsible(boolean) -> setCollapsible
    1529:1532:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1486:1489:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1404:1405:void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    1339:1340:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    580:580:void setLogo(int) -> setLogo
    704:713:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    738:738:void setLogoDescription(int) -> setLogoDescription
    750:754:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    626:660:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2414:2417:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    1008:1008:void setNavigationContentDescription(int) -> setNavigationContentDescription
    1022:1027:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    1046:1046:void setNavigationIcon(int) -> setNavigationIcon
    1065:1074:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1101:1102:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1317:1317:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1220:1221:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    426:431:void setPopupTheme(int) -> setPopupTheme
    881:881:void setSubtitle(int) -> setSubtitle
    892:915:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    934:936:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    967:967:void setSubtitleTextColor(int) -> setSubtitleTextColor
    976:978:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    825:825:void setTitle(int) -> setTitle
    837:860:void setTitle(java.lang.CharSequence) -> setTitle
    461:466:void setTitleMargin(int,int,int,int) -> setTitleMargin
    556:557:void setTitleMarginBottom(int) -> setTitleMarginBottom
    533:535:void setTitleMarginEnd(int) -> setTitleMarginEnd
    487:489:void setTitleMarginStart(int) -> setTitleMarginStart
    510:512:void setTitleMarginTop(int) -> setTitleMarginTop
    923:925:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    946:946:void setTitleTextColor(int) -> setTitleTextColor
    955:957:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1814:1820:boolean shouldCollapse() -> shouldCollapse
    2320:2320:boolean shouldLayout(android.view.View) -> shouldLayout
    611:611:boolean showOverflowMenu() -> showOverflowMenu
    2525:2544:void updateBackInvokedCallbackState() -> updateBackInvokedCallbackState
androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0 -> androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.Toolbar androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.f$0 -> f$0
    0:0:void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.<init>(androidx.appcompat.widget.Toolbar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9d491c767e08664ee770b78946284ac791fb0c59871b12cb09771a4b9103b30a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda1 -> androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.Toolbar androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9e812044a733917b2e0b0a51a5df731d94624bba79586e07f17ef43c5588bf30$0.f$0 -> f$0
    0:0:void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9e812044a733917b2e0b0a51a5df731d94624bba79586e07f17ef43c5588bf30$0.<init>(androidx.appcompat.widget.Toolbar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$1$9e812044a733917b2e0b0a51a5df731d94624bba79586e07f17ef43c5588bf30$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    218:218:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    221:225:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    251:251:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    253:253:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    1258:1258:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1266:1267:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1274:1279:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.Toolbar$4 -> androidx.appcompat.widget.Toolbar$4:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    1631:1631:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1634:1634:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$Api33Impl -> androidx.appcompat.widget.Toolbar$Api33Impl:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2833:2833:android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View) -> findOnBackInvokedDispatcher
    2839:2839:android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable) -> newOnBackInvokedCallback
    2818:2819:void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object) -> tryRegisterOnBackInvokedCallback
    2826:2827:void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object) -> tryUnregisterOnBackInvokedCallback
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2674:2674:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2775:2789:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2735:2766:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    0:0:boolean flagActionItems() -> flagActionItems
    0:0:int getId() -> getId
    2680:2683:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    0:0:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    0:0:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    0:0:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    0:0:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2694:2710:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2578:2581:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2578:2586:void <init>(int,int) -> <init>
    2578:2601:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2578:2605:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2578:2612:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2578:2616:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2620:2623:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener -> androidx.appcompat.widget.Toolbar$OnMenuItemClickListener:
# {"id":"sourceFile","fileName":"Toolbar.java"}
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2652:2652:void <clinit>() -> <clinit>
    2636:2638:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2642:2642:void <init>(android.os.Parcelable) -> <init>
    2647:2649:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2652:2652:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2652:2652:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2655:2655:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2660:2660:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2652:2652:java.lang.Object[] newArray(int) -> newArray
    2665:2665:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    96:96:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:182:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    338:338:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:232:void collapseActionView() -> collapseActionView
    208:210:int detectDisplayOptions() -> detectDisplayOptions
    378:378:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    383:383:int getDisplayOptions() -> getDisplayOptions
    680:680:android.view.Menu getMenu() -> getMenu
    461:461:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    358:358:boolean hideOverflowMenu() -> hideOverflowMenu
    0:0:void initIndeterminateProgress() -> initIndeterminateProgress
    0:0:void initProgress() -> initProgress
    348:348:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    343:343:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    451:451:void setCollapsible(boolean) -> setCollapsible
    543:548:void setCustomView(android.view.View) -> setCustomView
    196:201:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    388:417:void setDisplayOptions(int) -> setDisplayOptions
    425:435:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    0:0:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    304:304:void setIcon(int) -> setIcon
    309:310:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    315:315:void setLogo(int) -> setLogo
    320:321:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    368:373:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    675:675:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    363:363:void setMenuPrepared() -> setMenuPrepared
    623:624:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    629:629:void setNavigationContentDescription(int) -> setNavigationContentDescription
    596:597:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    602:602:void setNavigationIcon(int) -> setNavigationIcon
    276:278:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:256:void setTitle(java.lang.CharSequence) -> setTitle
    260:264:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    664:664:void setVisibility(int) -> setVisibility
    237:237:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:244:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    569:572:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    353:353:boolean showOverflowMenu() -> showOverflowMenu
    633:637:void updateHomeAccessibility() -> updateHomeAccessibility
    614:617:void updateNavigationIcon() -> updateNavigationIcon
    326:333:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:188:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
# {"id":"sourceFile","fileName":"ToolbarWidgetWrapper.java"}
    572:573:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    589:589:void onAnimationCancel(android.view.View) -> onAnimationCancel
    582:583:void onAnimationEnd(android.view.View) -> onAnimationEnd
    577:577:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
# {"id":"sourceFile","fileName":"TooltipCompat.java"}
    46:49:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompat$Api26Impl -> androidx.appcompat.widget.TooltipCompat$Api26Impl:
# {"id":"sourceFile","fileName":"TooltipCompat.java"}
    64:64:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
# {"id":"sourceFile","fileName":"TooltipCompatHandler.java"}
    0:0:void $r8$lambda$3aFESLcagOxECyCXdU9G39Uust4(androidx.appcompat.widget.TooltipCompatHandler) -> $r8$lambda$3aFESLcagOxECyCXdU9G39Uust4
      # {"id":"com.android.tools.r8.synthesized"}
    54:107:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    217:217:void cancelPendingShow() -> cancelPendingShow
    245:245:void forceNextChangeSignificant() -> forceNextChangeSignificant
    185:199:void hide() -> hide
    54:54:void lambda$new$0() -> lambda$new$0
    120:136:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    112:114:boolean onLongClick(android.view.View) -> onLongClick
    0:0:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    150:150:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    213:213:void scheduleShow() -> scheduleShow
    203:208:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    84:95:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    155:181:void show(boolean) -> show
    228:235:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda0 -> androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.TooltipCompatHandler androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$0.f$0 -> f$0
    0:0:void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$0.<init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda1 -> androidx.appcompat.widget.TooltipCompatHandler$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.TooltipCompatHandler androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$1.f$0 -> f$0
    0:0:void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$1.<init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.appcompat.widget.TooltipCompatHandler$$InternalSyntheticLambda$1$990bd139c764fdd0af01d525cfae7cb46744c3b2435b7922b50af1bf6983d455$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
# {"id":"sourceFile","fileName":"TooltipPopup.java"}
    54:72:void <init>(android.content.Context) -> <init>
    105:182:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    188:203:android.view.View getAppRootView(android.view.View) -> getAppRootView
    91:96:void hide() -> hide
    100:100:boolean isShowing() -> isShowing
    78:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
# {"id":"sourceFile","fileName":"VectorEnabledTintResources.java"}
    0:0:void <clinit>() -> <clinit>
    56:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    37:37:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    37:37:boolean getBoolean(int) -> getBoolean
    37:37:int getColor(int) -> getColor
    37:37:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    37:37:android.content.res.Configuration getConfiguration() -> getConfiguration
    37:37:float getDimension(int) -> getDimension
    37:37:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    37:37:int getDimensionPixelSize(int) -> getDimensionPixelSize
    37:37:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    37:37:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    67:74:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    37:37:float getFraction(int,int,int) -> getFraction
    37:37:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    37:37:int[] getIntArray(int) -> getIntArray
    37:37:int getInteger(int) -> getInteger
    37:37:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    37:37:android.graphics.Movie getMovie(int) -> getMovie
    37:37:java.lang.String getQuantityString(int,int) -> getQuantityString
    37:37:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    37:37:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    37:37:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    37:37:java.lang.String getResourceName(int) -> getResourceName
    37:37:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    37:37:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    37:37:java.lang.String getString(int) -> getString
    37:37:java.lang.String getString(int,java.lang.Object[]) -> getString
    37:37:java.lang.String[] getStringArray(int) -> getStringArray
    37:37:java.lang.CharSequence getText(int) -> getText
    37:37:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    37:37:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    37:37:void getValue(int,android.util.TypedValue,boolean) -> getValue
    37:37:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    37:37:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    37:37:android.content.res.XmlResourceParser getXml(int) -> getXml
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    37:37:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    37:37:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    37:37:java.io.InputStream openRawResource(int) -> openRawResource
    37:37:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    37:37:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    37:37:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    37:37:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    37:37:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
# {"id":"sourceFile","fileName":"ViewStubCompat.java"}
    55:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    0:0:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    0:0:void draw(android.graphics.Canvas) -> draw
    85:85:int getInflatedId() -> getInflatedId
    146:146:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    115:115:int getLayoutResource() -> getLayoutResource
    198:237:android.view.View inflate() -> inflate
    151:151:void onMeasure(int,int) -> onMeasure
    99:99:void setInflatedId(int) -> setInflatedId
    139:139:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    131:131:void setLayoutResource(int) -> setLayoutResource
    0:0:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    175:185:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewStubCompat$OnInflateListener -> androidx.appcompat.widget.ViewStubCompat$OnInflateListener:
# {"id":"sourceFile","fileName":"ViewStubCompat.java"}
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    48:56:void <clinit>() -> <clinit>
    75:77:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    67:67:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    93:97:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
# {"id":"sourceFile","fileName":"ArchTaskExecutor.java"}
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
# {"id":"sourceFile","fileName":"ArchTaskExecutor.java"}
    45:45:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
# {"id":"sourceFile","fileName":"ArchTaskExecutor.java"}
    53:53:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> createAsync
    59:59:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:72:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$$ExternalSyntheticApiModelOutline0 -> androidx.arch.core.executor.DefaultTaskExecutor$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Handler androidx.arch.core.executor.DefaultTaskExecutor$$InternalSyntheticApiModelOutline$1$416d82203521fb01792f2f0fcaafe5117f4c0c1e70e79c1a67f9072614d176bd$0.m(android.os.Looper) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:49:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
# {"id":"sourceFile","fileName":"TaskExecutor.java"}
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
# {"id":"sourceFile","fileName":"FastSafeIterableMap.java"}
    35:37:void <init>() -> <init>
    75:76:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:50:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:57:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    35:43:void <init>() -> <init>
    150:151:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    184:201:boolean equals(java.lang.Object) -> equals
    46:51:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    207:209:int hashCode() -> hashCode
    140:141:java.util.Iterator iterator() -> iterator
    160:161:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:85:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:70:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    283:283:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    300:300:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    362:364:void <init>(java.lang.Object,java.lang.Object) -> <init>
    395:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    316:318:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:326:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    234:236:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:272:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:257:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> androidx.arch.core.internal.SafeIterableMap$SupportRemove:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
androidx.cardview.R$styleable -> androidx.cardview.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
# {"id":"sourceFile","fileName":"CardView.java"}
    81:92:void <clinit>() -> <clinit>
    113:113:void <init>(android.content.Context) -> <init>
    117:117:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    108:447:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> access$001
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:260:void onMeasure(int,int) -> onMeasure
    283:283:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:293:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:376:void setCardElevation(float) -> setCardElevation
    226:227:void setContentPadding(int,int,int,int) -> setContentPadding
    402:402:void setMaxCardElevation(float) -> setMaxCardElevation
    272:273:void setMinimumHeight(int) -> setMinimumHeight
    266:267:void setMinimumWidth(int) -> setMinimumWidth
    0:0:void setPadding(int,int,int,int) -> setPadding
    0:0:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    441:443:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:354:void setRadius(float) -> setRadius
    203:205:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$1:
# {"id":"sourceFile","fileName":"CardView.java"}
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    485:485:android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    490:490:android.view.View getCardView() -> getCardView
    463:463:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    458:458:boolean getUseCompatPadding() -> getUseCompatPadding
    452:453:void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    468:469:void setShadowPadding(int,int,int,int) -> setShadowPadding
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.CardViewApi21Impl:
# {"id":"sourceFile","fileName":"CardViewApi21Impl.java"}
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> getCardBackground
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    0:0:void initStatic() -> initStatic
    31:37:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    103:103:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> onCompatPaddingChanged
    108:108:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    113:113:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    78:78:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    51:53:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    42:42:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    88:98:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewDelegate -> androidx.cardview.widget.CardViewDelegate:
# {"id":"sourceFile","fileName":"CardViewDelegate.java"}
androidx.cardview.widget.CardViewImpl -> androidx.cardview.widget.CardViewImpl:
# {"id":"sourceFile","fileName":"CardViewImpl.java"}
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.RoundRectDrawable:
# {"id":"sourceFile","fileName":"RoundRectDrawable.java"}
    47:61:void <init>(android.content.res.ColorStateList,float) -> <init>
    209:210:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:100:void draw(android.graphics.Canvas) -> draw
    164:164:android.content.res.ColorStateList getColor() -> getColor
    0:0:int getOpacity() -> getOpacity
    127:127:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:122:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:189:boolean onStateChange(int[]) -> onStateChange
    141:141:void setAlpha(int) -> setAlpha
    65:66:void setBackground(android.content.res.ColorStateList) -> setBackground
    159:160:void setColor(android.content.res.ColorStateList) -> setColor
    146:146:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:78:void setPadding(float,boolean,boolean) -> setPadding
    131:136:void setRadius(float) -> setRadius
    169:171:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:178:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    106:115:void updateBounds(android.graphics.Rect) -> updateBounds
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.RoundRectDrawableWithShadow:
# {"id":"sourceFile","fileName":"RoundRectDrawableWithShadow.java"}
    41:41:void <clinit>() -> <clinit>
    190:190:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    181:181:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
    57:57:void <init>() -> <init>
    64:64:void <init>(int) -> <init>
    71:71:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:144:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:119:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:104:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:114:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
# {"id":"sourceFile","fileName":"ArraySet.java"}
    50:51:void <clinit>() -> <clinit>
    240:240:void <init>() -> <init>
    247:254:void <init>(int) -> <init>
    361:401:boolean add(java.lang.Object) -> add
    719:722:boolean addAll(java.util.Collection) -> addAll
    161:195:void allocArrays(int) -> allocArrays
    282:286:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:706:boolean containsAll(java.util.Collection) -> containsAll
    295:303:void ensureCapacity(int) -> ensureCapacity
    562:571:boolean equals(java.lang.Object) -> equals
    200:231:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:593:int hashCode() -> hashCode
    83:110:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:148:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:435:boolean remove(java.lang.Object) -> remove
    735:736:boolean removeAll(java.util.Collection) -> removeAll
    447:491:java.lang.Object removeAt(int) -> removeAt
    750:752:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:529:java.lang.Object[] toArray() -> toArray
    536:543:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
# {"id":"sourceFile","fileName":"ArraySet.java"}
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:678:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:663:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:673:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
# {"id":"sourceFile","fileName":"ContainerHelpers.java"}
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    0:0:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
# {"id":"sourceFile","fileName":"LongSparseArray.java"}
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    456:482:void append(long,java.lang.Object) -> append
    440:448:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    217:237:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:120:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    353:357:long keyAt(int) -> keyAt
    248:290:void put(long,java.lang.Object) -> put
    139:144:void remove(long) -> remove
    171:173:void removeAt(int) -> removeAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
# {"id":"sourceFile","fileName":"LruCache.java"}
    51:56:void <init>(int) -> <init>
    0:0:java.lang.Object create(java.lang.Object) -> create
    0:0:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    84:125:java.lang.Object get(java.lang.Object) -> get
    139:156:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    0:0:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    348:351:java.lang.String toString() -> toString
    171:189:void trimToSize(int) -> trimToSize
androidx.collection.LruCacheKt$lruCache$1 -> androidx.collection.LruCacheKt$lruCache$1:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:int invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
androidx.collection.LruCacheKt$lruCache$2 -> androidx.collection.LruCacheKt$lruCache$2:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.collection.LruCacheKt$lruCache$3 -> androidx.collection.LruCacheKt$lruCache$3:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:void invoke(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
androidx.collection.MapCollections -> androidx.collection.MapCollections:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    459:461:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    518:522:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:493:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:509:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    41:45:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:58:java.lang.Object next() -> next
    64:70:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:184:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:204:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    259:263:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:283:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    349:351:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:310:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    77:81:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:93:java.util.Map$Entry next() -> next
    99:105:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:371:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:383:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:404:boolean remove(java.lang.Object) -> remove
    412:417:boolean removeAll(java.util.Collection) -> removeAll
    428:433:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
# {"id":"sourceFile","fileName":"SimpleArrayMap.java"}
    236:239:void <init>() -> <init>
    246:253:void <init>(int) -> <init>
    260:262:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    166:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    684:724:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:748:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:489:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:508:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:525:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:540:java.lang.Object remove(java.lang.Object) -> remove
    553:557:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:625:java.lang.Object removeAt(int) -> removeAt
    637:639:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:657:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    410:411:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
# {"id":"sourceFile","fileName":"SparseArrayCompat.java"}
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    460:486:void append(int,java.lang.Object) -> append
    444:452:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    437:437:boolean containsValue(java.lang.Object) -> containsValue
    230:250:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:120:java.lang.Object get(int,java.lang.Object) -> get
    401:405:int indexOfKey(int) -> indexOfKey
    419:424:int indexOfValue(java.lang.Object) -> indexOfValue
    352:352:boolean isEmpty() -> isEmpty
    361:365:int keyAt(int) -> keyAt
    261:303:void put(int,java.lang.Object) -> put
    171:173:void removeAt(int) -> removeAt
    198:201:java.lang.Object replace(int,java.lang.Object) -> replace
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayKt -> androidx.collection.SparseArrayKt:
# {"id":"sourceFile","fileName":"SparseArray.kt"}
    69:69:java.util.Iterator valueIterator(androidx.collection.SparseArrayCompat) -> valueIterator
androidx.collection.SparseArrayKt$valueIterator$1 -> androidx.collection.SparseArrayKt$valueIterator$1:
# {"id":"sourceFile","fileName":"SparseArray.kt"}
    69:69:void <init>(androidx.collection.SparseArrayCompat) -> <init>
    71:71:boolean hasNext() -> hasNext
    72:72:java.lang.Object next() -> next
    0:0:void remove() -> remove
androidx.constraintlayout.helper.widget.Flow -> androidx.constraintlayout.helper.widget.Flow:
# {"id":"sourceFile","fileName":"Flow.java"}
    124:124:void <init>(android.content.Context) -> <init>
    128:128:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    132:132:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    199:263:void init(android.util.AttributeSet) -> init
    183:187:void loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.solver.widgets.HelperWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> loadParameters
    149:149:void onMeasure(int,int) -> onMeasure
    161:169:void onMeasure(androidx.constraintlayout.solver.widgets.VirtualLayout,int,int) -> onMeasure
    143:143:void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> resolveRtl
    414:415:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    394:395:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    424:425:void setFirstVerticalBias(float) -> setFirstVerticalBias
    404:405:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    439:440:void setHorizontalAlign(int) -> setHorizontalAlign
    374:375:void setHorizontalBias(float) -> setHorizontalBias
    465:466:void setHorizontalGap(int) -> setHorizontalGap
    350:351:void setHorizontalStyle(int) -> setHorizontalStyle
    485:486:void setMaxElementsWrap(int) -> setMaxElementsWrap
    272:273:void setOrientation(int) -> setOrientation
    282:283:void setPadding(int) -> setPadding
    322:323:void setPaddingBottom(int) -> setPaddingBottom
    292:293:void setPaddingLeft(int) -> setPaddingLeft
    312:313:void setPaddingRight(int) -> setPaddingRight
    302:303:void setPaddingTop(int) -> setPaddingTop
    455:456:void setVerticalAlign(int) -> setVerticalAlign
    384:385:void setVerticalBias(float) -> setVerticalBias
    475:476:void setVerticalGap(int) -> setVerticalGap
    364:365:void setVerticalStyle(int) -> setVerticalStyle
    336:337:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.helper.widget.Layer -> androidx.constraintlayout.helper.widget.Layer:
# {"id":"sourceFile","fileName":"Layer.java"}
    21:43:void <init>(android.content.Context) -> <init>
    21:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    21:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    257:300:void calcCenters() -> calcCenters
    59:69:void init(android.util.AttributeSet) -> init
    77:94:void onAttachedToWindow() -> onAttachedToWindow
    240:252:void reCacheViews() -> reCacheViews
    208:209:void setElevation(float) -> setElevation
    159:160:void setPivotX(float) -> setPivotX
    170:171:void setPivotY(float) -> setPivotY
    127:128:void setRotation(float) -> setRotation
    137:138:void setScaleX(float) -> setScaleX
    148:149:void setScaleY(float) -> setScaleY
    180:181:void setTranslationX(float) -> setTranslationX
    190:191:void setTranslationY(float) -> setTranslationY
    199:200:void setVisibility(int) -> setVisibility
    306:335:void transform() -> transform
    218:234:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
    109:116:void updatePreDraw(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreDraw
androidx.constraintlayout.motion.utils.ArcCurveFit -> androidx.constraintlayout.motion.utils.ArcCurveFit:
# {"id":"sourceFile","fileName":"ArcCurveFit.java"}
    168:188:void <init>(int[],double[],double[][]) -> <init>
    40:56:void getPos(double,double[]) -> getPos
    64:79:void getPos(double,float[]) -> getPos
    110:130:double getPos(double,int) -> getPos
    87:102:void getSlope(double,double[]) -> getSlope
    138:157:double getSlope(double,int) -> getSlope
    165:165:double[] getTimePoints() -> getTimePoints
androidx.constraintlayout.motion.utils.ArcCurveFit$Arc -> androidx.constraintlayout.motion.utils.ArcCurveFit$Arc:
# {"id":"sourceFile","fileName":"ArcCurveFit.java"}
    194:194:void <clinit>() -> <clinit>
    209:240:void <init>(int,double,double,double,double,double,double) -> <init>
    311:343:void buildTable(double,double,double,double) -> buildTable
    260:263:double getDX() -> getDX
    267:270:double getDY() -> getDY
    284:284:double getLinearDX(double) -> getLinearDX
    288:288:double getLinearDY(double) -> getLinearDY
    274:275:double getLinearX(double) -> getLinearX
    279:280:double getLinearY(double) -> getLinearY
    252:252:double getX() -> getX
    256:256:double getY() -> getY
    298:303:double lookup(double) -> lookup
    244:248:void setPoint(double) -> setPoint
androidx.constraintlayout.motion.utils.CurveFit -> androidx.constraintlayout.motion.utils.CurveFit:
# {"id":"sourceFile","fileName":"CurveFit.java"}
    30:39:androidx.constraintlayout.motion.utils.CurveFit get(int,double[],double[][]) -> get
    44:44:androidx.constraintlayout.motion.utils.CurveFit getArc(int[],double[],double[][]) -> getArc
androidx.constraintlayout.motion.utils.CurveFit$Constant -> androidx.constraintlayout.motion.utils.CurveFit$Constant:
# {"id":"sourceFile","fileName":"CurveFit.java"}
    63:65:void <init>(double,double[]) -> <init>
    70:70:void getPos(double,double[]) -> getPos
    75:76:void getPos(double,float[]) -> getPos
    82:82:double getPos(double,int) -> getPos
    0:0:double getSlope(double,int) -> getSlope
    87:88:void getSlope(double,double[]) -> getSlope
    99:99:double[] getTimePoints() -> getTimePoints
androidx.constraintlayout.motion.utils.Easing -> androidx.constraintlayout.motion.utils.Easing:
# {"id":"sourceFile","fileName":"Easing.java"}
    29:40:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    0:0:double get(double) -> get
    0:0:double getDiff(double) -> getDiff
    46:65:androidx.constraintlayout.motion.utils.Easing getInterpolator(java.lang.String) -> getInterpolator
    73:73:java.lang.String toString() -> toString
androidx.constraintlayout.motion.utils.Easing$CubicEasing -> androidx.constraintlayout.motion.utils.Easing$CubicEasing:
# {"id":"sourceFile","fileName":"Easing.java"}
    0:0:void <clinit>() -> <clinit>
    86:97:void <init>(java.lang.String) -> <init>
    177:190:double get(double) -> get
    146:159:double getDiff(double) -> getDiff
    117:117:double getX(double) -> getX
    126:126:double getY(double) -> getY
androidx.constraintlayout.motion.utils.LinearCurveFit -> androidx.constraintlayout.motion.utils.LinearCurveFit:
# {"id":"sourceFile","fileName":"LinearCurveFit.java"}
    28:47:void <init>(double[],double[][]) -> <init>
    101:129:void getPos(double,double[]) -> getPos
    137:165:void getPos(double,float[]) -> getPos
    173:189:double getPos(double,int) -> getPos
    198:214:void getSlope(double,double[]) -> getSlope
    223:235:double getSlope(double,int) -> getSlope
    244:244:double[] getTimePoints() -> getTimePoints
androidx.constraintlayout.motion.utils.MonotonicCurveFit -> androidx.constraintlayout.motion.utils.MonotonicCurveFit:
# {"id":"sourceFile","fileName":"MonotonicCurveFit.java"}
    29:66:void <init>(double[],double[][]) -> <init>
    0:0:double diff(double,double,double,double,double,double) -> diff
    71:100:void getPos(double,double[]) -> getPos
    109:138:void getPos(double,float[]) -> getPos
    147:166:double getPos(double,int) -> getPos
    175:192:void getSlope(double,double[]) -> getSlope
    202:217:double getSlope(double,int) -> getSlope
    225:225:double[] getTimePoints() -> getTimePoints
    0:0:double interpolate(double,double,double,double,double,double) -> interpolate
androidx.constraintlayout.motion.utils.Oscillator -> androidx.constraintlayout.motion.utils.Oscillator:
# {"id":"sourceFile","fileName":"Oscillator.java"}
    0:0:void <clinit>() -> <clinit>
    27:41:void <init>() -> <init>
    54:65:void addPoint(double,float) -> addPoint
    143:151:double getDP(double) -> getDP
    101:109:double getP(double) -> getP
    158:173:double getSlope(double) -> getSlope
    117:132:double getValue(double) -> getValue
    74:92:void normalize() -> normalize
    50:50:void setType(int) -> setType
    46:46:java.lang.String toString() -> toString
androidx.constraintlayout.motion.utils.StopLogic -> androidx.constraintlayout.motion.utils.StopLogic:
# {"id":"sourceFile","fileName":"StopLogic.java"}
    31:37:void <init>() -> <init>
    112:131:float calcY(float) -> calcY
    137:142:void config(float,float,float,float,float,float) -> config
    148:150:float getInterpolation(float) -> getInterpolation
    89:108:float getVelocity(float) -> getVelocity
    155:155:float getVelocity() -> getVelocity
    163:260:void setup(float,float,float,float,float) -> setup
androidx.constraintlayout.motion.utils.VelocityMatrix -> androidx.constraintlayout.motion.utils.VelocityMatrix:
# {"id":"sourceFile","fileName":"VelocityMatrix.java"}
    0:0:void <clinit>() -> <clinit>
    102:115:void applyTransform(float,float,int,int,float[]) -> applyTransform
    31:31:void clear() -> clear
    36:37:void setRotationVelocity(androidx.constraintlayout.motion.widget.SplineSet,float) -> setRotationVelocity
    63:63:void setRotationVelocity(androidx.constraintlayout.motion.widget.KeyCycleOscillator,float) -> setRotationVelocity
    54:57:void setScaleVelocity(androidx.constraintlayout.motion.widget.SplineSet,androidx.constraintlayout.motion.widget.SplineSet,float) -> setScaleVelocity
    84:87:void setScaleVelocity(androidx.constraintlayout.motion.widget.KeyCycleOscillator,androidx.constraintlayout.motion.widget.KeyCycleOscillator,float) -> setScaleVelocity
    44:47:void setTranslationVelocity(androidx.constraintlayout.motion.widget.SplineSet,androidx.constraintlayout.motion.widget.SplineSet,float) -> setTranslationVelocity
    70:74:void setTranslationVelocity(androidx.constraintlayout.motion.widget.KeyCycleOscillator,androidx.constraintlayout.motion.widget.KeyCycleOscillator,float) -> setTranslationVelocity
androidx.constraintlayout.motion.widget.Debug -> androidx.constraintlayout.motion.widget.Debug:
# {"id":"sourceFile","fileName":"Debug.java"}
    222:223:java.lang.String getLocation() -> getLocation
    85:86:java.lang.String getName(android.view.View) -> getName
    138:143:java.lang.String getName(android.content.Context,int) -> getName
    189:190:java.lang.String getState(androidx.constraintlayout.motion.widget.MotionLayout,int) -> getState
androidx.constraintlayout.motion.widget.DesignTool -> androidx.constraintlayout.motion.widget.DesignTool:
# {"id":"sourceFile","fileName":"DesignTool.java"}
    86:115:void <clinit>() -> <clinit>
    77:83:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
androidx.constraintlayout.motion.widget.Key -> androidx.constraintlayout.motion.widget.Key:
# {"id":"sourceFile","fileName":"Key.java"}
    0:0:void <clinit>() -> <clinit>
androidx.constraintlayout.motion.widget.KeyAttributes -> androidx.constraintlayout.motion.widget.KeyAttributes:
# {"id":"sourceFile","fileName":"KeyAttributes.java"}
androidx.constraintlayout.motion.widget.KeyCache -> androidx.constraintlayout.motion.widget.KeyCache:
# {"id":"sourceFile","fileName":"KeyCache.java"}
    26:28:void <init>() -> <init>
    56:65:float getFloatValue(java.lang.Object,java.lang.String,int) -> getFloatValue
    31:50:void setFloatValue(java.lang.Object,java.lang.String,int,float) -> setFloatValue
androidx.constraintlayout.motion.widget.KeyCycle -> androidx.constraintlayout.motion.widget.KeyCycle:
# {"id":"sourceFile","fileName":"KeyCycle.java"}
androidx.constraintlayout.motion.widget.KeyCycleOscillator -> androidx.constraintlayout.motion.widget.KeyCycleOscillator:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    40:48:void <init>() -> <init>
    85:85:float get(float) -> get
    89:89:float getSlope(float) -> getSlope
    97:128:androidx.constraintlayout.motion.widget.KeyCycleOscillator makeSpline(java.lang.String) -> makeSpline
    79:79:void setType(java.lang.String) -> setType
    173:195:void setup(float) -> setup
    70:73:java.lang.String toString() -> toString
    51:51:boolean variesByPath() -> variesByPath
androidx.constraintlayout.motion.widget.KeyCycleOscillator$1 -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$1:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    177:177:void <init>(androidx.constraintlayout.motion.widget.KeyCycleOscillator) -> <init>
    177:177:int compare(java.lang.Object,java.lang.Object) -> compare
    180:180:int compare(androidx.constraintlayout.motion.widget.KeyCycleOscillator$WavePoint,androidx.constraintlayout.motion.widget.KeyCycleOscillator$WavePoint) -> compare
androidx.constraintlayout.motion.widget.KeyCycleOscillator$AlphaSet -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$AlphaSet:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    207:207:void <init>() -> <init>
    210:210:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$CustomSet -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$CustomSet:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    282:283:void <init>() -> <init>
    287:288:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$CycleOscillator -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$CycleOscillator:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    413:461:void <init>(int,int,int) -> <init>
    449:458:double getSlope(float) -> getSlope
    437:445:double getValues(float) -> getValues
    493:516:void setup(float) -> setup
androidx.constraintlayout.motion.widget.KeyCycleOscillator$ElevationSet -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$ElevationSet:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    198:198:void <init>() -> <init>
    202:202:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$PathRotateSet -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$PathRotateSet:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    235:235:void <init>() -> <init>
    241:241:void setPathRotate(android.view.View,float,double,double) -> setPathRotate
    0:0:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$ProgressSet:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    292:293:void <init>() -> <init>
    297:311:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$RotationSet -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$RotationSet:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    214:214:void <init>() -> <init>
    217:217:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$RotationXset -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$RotationXset:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    221:221:void <init>() -> <init>
    224:224:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$RotationYset -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$RotationYset:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    228:228:void <init>() -> <init>
    231:231:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$ScaleXset -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$ScaleXset:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    245:245:void <init>() -> <init>
    248:248:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$ScaleYset -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$ScaleYset:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    252:252:void <init>() -> <init>
    255:255:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$TranslationXset -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$TranslationXset:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    259:259:void <init>() -> <init>
    262:262:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$TranslationYset -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$TranslationYset:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    266:266:void <init>() -> <init>
    269:269:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$TranslationZset -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$TranslationZset:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
    273:273:void <init>() -> <init>
    277:277:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.KeyCycleOscillator$WavePoint -> androidx.constraintlayout.motion.widget.KeyCycleOscillator$WavePoint:
# {"id":"sourceFile","fileName":"KeyCycleOscillator.java"}
androidx.constraintlayout.motion.widget.KeyFrames -> androidx.constraintlayout.motion.widget.KeyFrames:
# {"id":"sourceFile","fileName":"KeyFrames.java"}
    44:53:void <clinit>() -> <clinit>
    43:106:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    111:120:void addFrames(androidx.constraintlayout.motion.widget.MotionController) -> addFrames
androidx.constraintlayout.motion.widget.KeyPosition -> androidx.constraintlayout.motion.widget.KeyPosition:
# {"id":"sourceFile","fileName":"KeyPosition.java"}
androidx.constraintlayout.motion.widget.KeyPositionBase -> androidx.constraintlayout.motion.widget.KeyPositionBase:
# {"id":"sourceFile","fileName":"KeyPositionBase.java"}
androidx.constraintlayout.motion.widget.KeyTimeCycle -> androidx.constraintlayout.motion.widget.KeyTimeCycle:
# {"id":"sourceFile","fileName":"KeyTimeCycle.java"}
androidx.constraintlayout.motion.widget.KeyTrigger -> androidx.constraintlayout.motion.widget.KeyTrigger:
# {"id":"sourceFile","fileName":"KeyTrigger.java"}
androidx.constraintlayout.motion.widget.MotionConstrainedPoint -> androidx.constraintlayout.motion.widget.MotionConstrainedPoint:
# {"id":"sourceFile","fileName":"MotionConstrainedPoint.java"}
    67:67:void <clinit>() -> <clinit>
    40:151:void <init>() -> <init>
    254:320:void addValues(java.util.HashMap,int) -> addValues
    202:218:void applyParameters(android.view.View) -> applyParameters
    223:248:void applyParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint) -> applyParameters
    36:36:int compareTo(java.lang.Object) -> compareTo
    197:197:int compareTo(androidx.constraintlayout.motion.widget.MotionConstrainedPoint) -> compareTo
    77:80:boolean diff(float,float) -> diff
    90:136:void different(androidx.constraintlayout.motion.widget.MotionConstrainedPoint,java.util.HashSet) -> different
    189:192:void setBounds(float,float,float,float) -> setBounds
    328:329:void setState(android.view.View) -> setState
    333:334:void setState(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintSet,int) -> setState
androidx.constraintlayout.motion.widget.MotionController -> androidx.constraintlayout.motion.widget.MotionController:
# {"id":"sourceFile","fileName":"MotionController.java"}
    71:106:void <init>(android.view.View) -> <init>
    452:452:void addKeys(java.util.ArrayList) -> addKeys
    338:351:int buildKeyFrames(float[],int[]) -> buildKeyFrames
    136:196:void buildPath(float[],int) -> buildPath
    392:394:void buildRect(float,float[],int) -> buildRect
    877:914:float getAdjustedPosition(float,float[]) -> getAdjustedPosition
    1054:1083:void getDpDt(float,float,float,float[]) -> getDpDt
    1167:1171:int getDrawPath() -> getDrawPath
    118:118:float getFinalX() -> getFinalX
    122:122:float getFinalY() -> getFinalY
    102:102:androidx.constraintlayout.motion.widget.MotionPaths getKeyFrame(int) -> getKeyFrame
    1101:1163:void getPostLayoutDvDp(float,int,int,float,float,float[]) -> getPostLayoutDvDp
    277:306:float getPreCycleDistance() -> getPreCycleDistance
    932:1034:boolean interpolate(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> interpolate
    826:826:void readView(androidx.constraintlayout.motion.widget.MotionPaths) -> readView
    857:863:void setEndState(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintSet) -> setEndState
    468:468:void setPathMotionArc(int) -> setPathMotionArc
    839:842:void setStartCurrentState(android.view.View) -> setStartCurrentState
    846:853:void setStartState(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintSet) -> setStartState
    830:834:void setView(android.view.View) -> setView
    475:796:void setup(int,int,float,long) -> setup
    821:821:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.MotionHelper -> androidx.constraintlayout.motion.widget.MotionHelper:
# {"id":"sourceFile","fileName":"MotionHelper.java"}
    17:23:void <init>(android.content.Context) -> <init>
    17:28:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    17:33:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    75:75:float getProgress() -> getProgress
    40:49:void init(android.util.AttributeSet) -> init
    70:70:boolean isUseOnHide() -> isUseOnHide
    61:61:boolean isUsedOnShow() -> isUsedOnShow
    0:0:void onTransitionChange(androidx.constraintlayout.motion.widget.MotionLayout,int,int,float) -> onTransitionChange
    0:0:void onTransitionCompleted(androidx.constraintlayout.motion.widget.MotionLayout,int) -> onTransitionCompleted
    0:0:void onTransitionStarted(androidx.constraintlayout.motion.widget.MotionLayout,int,int) -> onTransitionStarted
    0:0:void setProgress(android.view.View,float) -> setProgress
    80:97:void setProgress(float) -> setProgress
androidx.constraintlayout.motion.widget.MotionInterpolator -> androidx.constraintlayout.motion.widget.MotionInterpolator:
# {"id":"sourceFile","fileName":"MotionInterpolator.java"}
androidx.constraintlayout.motion.widget.MotionLayout -> androidx.constraintlayout.motion.widget.MotionLayout:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
    876:3715:void <init>(android.content.Context) -> <init>
    876:3715:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    876:3715:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    859:859:int access$000(androidx.constraintlayout.motion.widget.MotionLayout) -> access$000
    859:859:int access$100(androidx.constraintlayout.motion.widget.MotionLayout) -> access$100
    859:859:int access$1000(androidx.constraintlayout.motion.widget.MotionLayout) -> access$1000
    859:859:void access$1100(androidx.constraintlayout.motion.widget.MotionLayout) -> access$1100
    859:859:void access$1200(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> access$1200
    859:859:void access$1300(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> access$1300
    859:859:void access$1400(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> access$1400
    859:859:void access$1500(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> access$1500
    859:859:void access$1600(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> access$1600
    859:859:void access$1700(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> access$1700
    859:859:void access$1800(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> access$1800
    859:859:void access$1900(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> access$1900
    859:859:androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer access$200(androidx.constraintlayout.motion.widget.MotionLayout) -> access$200
    859:859:void access$2000(androidx.constraintlayout.motion.widget.MotionLayout,int,int,int,int,boolean,boolean) -> access$2000
    859:859:androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer access$300(androidx.constraintlayout.motion.widget.MotionLayout) -> access$300
    859:859:androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer access$400(androidx.constraintlayout.motion.widget.MotionLayout) -> access$400
    859:859:androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer access$500(androidx.constraintlayout.motion.widget.MotionLayout) -> access$500
    859:859:boolean access$600(androidx.constraintlayout.motion.widget.MotionLayout) -> access$600
    859:859:boolean access$700(androidx.constraintlayout.motion.widget.MotionLayout) -> access$700
    859:859:void access$800(androidx.constraintlayout.motion.widget.MotionLayout,boolean,android.view.View,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> access$800
    859:859:int access$900(androidx.constraintlayout.motion.widget.MotionLayout) -> access$900
    1716:1743:void animateTo(float) -> animateTo
    3263:3297:void checkStructure() -> checkStructure
    3303:3328:void checkStructure(int,androidx.constraintlayout.widget.ConstraintSet) -> checkStructure
    3334:3336:void checkStructure(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> checkStructure
    1747:1754:void computeCurrentPositions() -> computeCurrentPositions
    2878:2924:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    2980:3156:void evaluate(boolean) -> evaluate
    2932:2974:void evaluateLayout() -> evaluateLayout
    3687:3710:void fireTransitionChange() -> fireTransitionChange
    3721:3733:void fireTransitionCompleted() -> fireTransitionCompleted
    3545:3564:void getAnchorDpDt(int,float,float,float,float[]) -> getAnchorDpDt
    3832:3835:int[] getConstraintSetIds() -> getConstraintSetIds
    3518:3518:int getCurrentState() -> getCurrentState
    3897:3900:java.util.ArrayList getDefinedTransitions() -> getDefinedTransitions
    3758:3761:androidx.constraintlayout.motion.widget.DesignTool getDesignTool() -> getDesignTool
    3919:3919:int getEndState() -> getEndState
    983:983:long getNanoTime() -> getNanoTime
    3527:3527:float getProgress() -> getProgress
    3910:3910:int getStartState() -> getStartState
    3929:3929:float getTargetPosition() -> getTargetPosition
    3947:3947:androidx.constraintlayout.motion.widget.MotionScene$Transition getTransition(int) -> getTransition
    1434:1438:android.os.Bundle getTransitionState() -> getTransitionState
    3574:3577:long getTransitionTimeMs() -> getTransitionTimeMs
    1926:1926:float getVelocity() -> getVelocity
    1939:1965:void getViewVelocity(android.view.View,float,float,float[],int) -> getViewVelocity
    3378:3397:boolean handlesTouchEvent(float,float,android.view.View,android.view.MotionEvent) -> handlesTouchEvent
    3202:3246:void init(android.util.AttributeSet) -> init
    1277:1277:boolean isAttachedToWindow() -> isAttachedToWindow
    4009:4009:boolean isInteractionEnabled() -> isInteractionEnabled
    992:992:androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker obtainVelocityTracker() -> obtainVelocityTracker
    3470:3481:void onAttachedToWindow() -> onAttachedToWindow
    3413:3439:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3163:3187:void onLayout(boolean,int,int,int,int) -> onLayout
    3187:3188:void onLayout(boolean,int,int,int,int) -> onLayout
    2339:2384:void onMeasure(int,int) -> onMeasure
    0:0:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    0:0:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    2440:2504:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    0:0:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    2423:2427:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    0:0:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3497:3508:void onNewStateAttachHandlers() -> onNewStateAttachHandlers
    3487:3488:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2392:2395:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2415:2418:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    3454:3465:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3769:3787:void onViewAdded(android.view.View) -> onViewAdded
    3797:3802:void onViewRemoved(android.view.View) -> onViewRemoved
    3198:3198:void parseLayoutDescription(int) -> parseLayoutDescription
    3737:3751:void processTransitionCompleted() -> processTransitionCompleted
    3866:3867:void rebuildScene() -> rebuildScene
    2317:2324:void requestLayout() -> requestLayout
    3348:3349:void setDebugMode(int) -> setDebugMode
    3996:3996:void setInteractionEnabled(boolean) -> setInteractionEnabled
    1309:1317:void setInterpolatedProgress(float) -> setInterpolatedProgress
    3817:3821:void setOnHide(float) -> setOnHide
    3807:3811:void setOnShow(float) -> setOnShow
    1327:1338:void setProgress(float,float) -> setProgress
    1447:1489:void setProgress(float) -> setProgress
    3257:3259:void setScene(androidx.constraintlayout.motion.widget.MotionScene) -> setScene
    1040:1061:void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState) -> setState
    1292:1299:void setState(int,int,int) -> setState
    1134:1155:void setTransition(int,int) -> setTransition
    1166:1204:void setTransition(int) -> setTransition
    1210:1244:void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> setTransition
    3933:3937:void setTransitionDuration(int) -> setTransitionDuration
    3587:3587:void setTransitionListener(androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener) -> setTransitionListener
    1421:1426:void setTransitionState(android.os.Bundle) -> setTransitionState
    1496:1569:void setupMotionViews() -> setupMotionViews
    2329:2331:java.lang.String toString() -> toString
    1594:1654:void touchAnimateTo(int,float,float) -> touchAnimateTo
    1773:1773:void transitionToEnd() -> transitionToEnd
    1764:1764:void transitionToStart() -> transitionToStart
    1783:1790:void transitionToState(int) -> transitionToState
    1811:1917:void transitionToState(int,int,int) -> transitionToState
    0:0:boolean willJump(float,float,float) -> willJump
androidx.constraintlayout.motion.widget.MotionLayout$1 -> androidx.constraintlayout.motion.widget.MotionLayout$1:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
    2474:2474:void <init>(androidx.constraintlayout.motion.widget.MotionLayout,android.view.View) -> <init>
    2477:2477:void run() -> run
androidx.constraintlayout.motion.widget.MotionLayout$2 -> androidx.constraintlayout.motion.widget.MotionLayout$2:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
    1049:1049:void <clinit>() -> <clinit>
androidx.constraintlayout.motion.widget.MotionLayout$DecelerateInterpolator -> androidx.constraintlayout.motion.widget.MotionLayout$DecelerateInterpolator:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
    1672:1674:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    1678:1680:void config(float,float,float) -> config
    1685:1699:float getInterpolation(float) -> getInterpolation
    1705:1705:float getVelocity() -> getVelocity
androidx.constraintlayout.motion.widget.MotionLayout$DevModeDraw -> androidx.constraintlayout.motion.widget.MotionLayout$DevModeDraw:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
    2534:2580:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    2587:2636:void draw(android.graphics.Canvas,java.util.HashMap,int,int) -> draw
    2641:2650:void drawAll(android.graphics.Canvas,int,int,androidx.constraintlayout.motion.widget.MotionController) -> drawAll
    2654:2654:void drawBasicPath(android.graphics.Canvas) -> drawBasicPath
    2730:2742:void drawPathAsConfigured(android.graphics.Canvas) -> drawPathAsConfigured
    2772:2780:void drawPathCartesian(android.graphics.Canvas) -> drawPathCartesian
    2784:2806:void drawPathCartesianTicks(android.graphics.Canvas,float,float) -> drawPathCartesianTicks
    2723:2723:void drawPathRelative(android.graphics.Canvas) -> drawPathRelative
    2747:2764:void drawPathRelativeTicks(android.graphics.Canvas,float,float) -> drawPathRelativeTicks
    2819:2832:void drawPathScreenTicks(android.graphics.Canvas,float,float,int,int) -> drawPathScreenTicks
    2836:2853:void drawRectangle(android.graphics.Canvas,androidx.constraintlayout.motion.widget.MotionController) -> drawRectangle
    2660:2712:void drawTicks(android.graphics.Canvas,int,int,androidx.constraintlayout.motion.widget.MotionController) -> drawTicks
    2768:2768:void getTextBounds(java.lang.String,android.graphics.Paint) -> getTextBounds
androidx.constraintlayout.motion.widget.MotionLayout$Model -> androidx.constraintlayout.motion.widget.MotionLayout$Model:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
    1971:1975:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    2265:2296:void build() -> build
    1980:2002:void copy(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> copy
    2120:2127:androidx.constraintlayout.solver.widgets.ConstraintWidget getWidget(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,android.view.View) -> getWidget
    2007:2058:void initFrom(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.widget.ConstraintSet,androidx.constraintlayout.widget.ConstraintSet) -> initFrom
    2309:2309:boolean isNotConfiguredWith(int,int) -> isNotConfiguredWith
    2190:2254:void measure(int,int) -> measure
    2185:2186:void reEvaluateState() -> reEvaluateState
    2304:2305:void setMeasuredId(int,int) -> setMeasuredId
    2064:2114:void setupConstraintWidget(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.widget.ConstraintSet) -> setupConstraintWidget
androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker -> androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
androidx.constraintlayout.motion.widget.MotionLayout$MyTracker -> androidx.constraintlayout.motion.widget.MotionLayout$MyTracker:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
    1071:1071:void <clinit>() -> <clinit>
    1091:1092:void addMovement(android.view.MotionEvent) -> addMovement
    1098:1098:void computeCurrentVelocity(int) -> computeCurrentVelocity
    1108:1108:float getXVelocity() -> getXVelocity
    1113:1113:float getYVelocity() -> getYVelocity
    1074:1075:androidx.constraintlayout.motion.widget.MotionLayout$MyTracker obtain() -> obtain
    1080:1081:void recycle() -> recycle
androidx.constraintlayout.motion.widget.MotionLayout$StateCache -> androidx.constraintlayout.motion.widget.MotionLayout$StateCache:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
    1342:1350:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    1353:1374:void apply() -> apply
    1378:1382:android.os.Bundle getTransitionState() -> getTransitionState
    1410:1413:void recordState() -> recordState
    1398:1398:void setEndState(int) -> setEndState
    1394:1394:void setProgress(float) -> setProgress
    1406:1406:void setStartState(int) -> setStartState
    1387:1390:void setTransitionState(android.os.Bundle) -> setTransitionState
    1402:1402:void setVelocity(float) -> setVelocity
androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener -> androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState -> androidx.constraintlayout.motion.widget.MotionLayout$TransitionState:
# {"id":"sourceFile","fileName":"MotionLayout.java"}
    952:956:void <clinit>() -> <clinit>
    952:952:void <init>(java.lang.String,int) -> <init>
    952:952:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState valueOf(java.lang.String) -> valueOf
    952:952:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] values() -> values
androidx.constraintlayout.motion.widget.MotionPaths -> androidx.constraintlayout.motion.widget.MotionPaths:
# {"id":"sourceFile","fileName":"MotionPaths.java"}
    52:52:void <clinit>() -> <clinit>
    54:309:void <init>() -> <init>
    681:690:void applyParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint) -> applyParameters
    38:38:int compareTo(java.lang.Object) -> compareTo
    676:676:int compareTo(androidx.constraintlayout.motion.widget.MotionPaths) -> compareTo
    236:239:boolean diff(float,float) -> diff
    244:248:void different(androidx.constraintlayout.motion.widget.MotionPaths,boolean[],java.lang.String[],boolean) -> different
    634:638:void fillStandard(double[],int[]) -> fillStandard
    253:277:void getCenter(int[],double[],float[],int) -> getCenter
    652:661:int getCustomData(java.lang.String,double[],int) -> getCustomData
    648:648:int getCustomDataCount(java.lang.String) -> getCustomDataCount
    432:544:void getRect(int[],double[],float[],int) -> getRect
    644:644:boolean hasCustomData(java.lang.String) -> hasCustomData
    668:671:void setBounds(float,float,float,float) -> setBounds
    572:630:void setDpDt(float,float,float[],int[],double[],double[]) -> setDpDt
    313:423:void setView(android.view.View,int[],double[],double[],double[]) -> setView
androidx.constraintlayout.motion.widget.MotionScene -> androidx.constraintlayout.motion.widget.MotionScene:
# {"id":"sourceFile","fileName":"MotionScene.java"}
    69:872:void <init>(android.content.Context,androidx.constraintlayout.motion.widget.MotionLayout,int) -> <init>
    60:60:int access$1000(androidx.constraintlayout.motion.widget.MotionScene) -> access$1000
    60:60:android.util.SparseArray access$1100(androidx.constraintlayout.motion.widget.MotionScene) -> access$1100
    60:60:androidx.constraintlayout.motion.widget.MotionLayout access$800(androidx.constraintlayout.motion.widget.MotionScene) -> access$800
    60:60:int access$900(androidx.constraintlayout.motion.widget.MotionScene) -> access$900
    242:267:void addOnClickListeners(androidx.constraintlayout.motion.widget.MotionLayout,int) -> addOnClickListeners
    356:403:boolean autoTransition(androidx.constraintlayout.motion.widget.MotionLayout,int) -> autoTransition
    276:322:androidx.constraintlayout.motion.widget.MotionScene$Transition bestTransitionFor(int,float,float,android.view.MotionEvent) -> bestTransitionFor
    1419:1419:int gatPathMotionArc() -> gatPathMotionArc
    1057:1057:androidx.constraintlayout.widget.ConstraintSet getConstraintSet(int) -> getConstraintSet
    1061:1075:androidx.constraintlayout.widget.ConstraintSet getConstraintSet(int,int,int) -> getConstraintSet
    339:341:int[] getConstraintSetIds() -> getConstraintSetIds
    326:326:java.util.ArrayList getDefinedTransitions() -> getDefinedTransitions
    1399:1402:int getDuration() -> getDuration
    1351:1354:int getEndId() -> getEndId
    983:992:int getId(android.content.Context,java.lang.String) -> getId
    1365:1388:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    1094:1103:void getKeyFrames(androidx.constraintlayout.motion.widget.MotionController) -> getKeyFrames
    1436:1437:float getMaxAcceleration() -> getMaxAcceleration
    1443:1444:float getMaxVelocity() -> getMaxVelocity
    1456:1457:boolean getMoveWhenScrollAtTop() -> getMoveWhenScrollAtTop
    1335:1336:float getProgressDirection(float,float) -> getProgressDirection
    219:220:int getRealID(int) -> getRealID
    1429:1430:float getStaggered() -> getStaggered
    1344:1347:int getStartId() -> getStartId
    330:331:androidx.constraintlayout.motion.widget.MotionScene$Transition getTransitionById(int) -> getTransitionById
    229:233:java.util.List getTransitionsWithState(int) -> getTransitionsWithState
    1492:1501:boolean hasCycleDependency(int) -> hasCycleDependency
    412:412:boolean isProcessingTouch() -> isProcessingTouch
    883:962:void load(android.content.Context,int) -> load
    1001:1030:void parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
    967:978:void parseMotionSceneTags(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseMotionSceneTags
    1316:1317:void processScrollMove(float,float) -> processScrollMove
    1322:1323:void processScrollUp(float,float) -> processScrollUp
    1232:1309:void processTouchEvent(android.view.MotionEvent,int,androidx.constraintlayout.motion.widget.MotionLayout) -> processTouchEvent
    1510:1521:void readConstraintChain(int) -> readConstraintChain
    1471:1481:void readFallback(androidx.constraintlayout.motion.widget.MotionLayout) -> readFallback
    1411:1414:void setDuration(int) -> setDuration
    416:418:void setRtl(boolean) -> setRtl
    100:147:void setTransition(int,int) -> setTransition
    212:214:void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> setTransition
    1450:1451:void setupTouch() -> setupTouch
    1530:1534:java.lang.String stripID(java.lang.String) -> stripID
    1218:1223:boolean supportTouch() -> supportTouch
androidx.constraintlayout.motion.widget.MotionScene$1 -> androidx.constraintlayout.motion.widget.MotionScene$1:
# {"id":"sourceFile","fileName":"MotionScene.java"}
    1368:1368:void <init>(androidx.constraintlayout.motion.widget.MotionScene,androidx.constraintlayout.motion.utils.Easing) -> <init>
    1371:1371:float getInterpolation(float) -> getInterpolation
androidx.constraintlayout.motion.widget.MotionScene$Transition -> androidx.constraintlayout.motion.widget.MotionScene$Transition:
# {"id":"sourceFile","fileName":"MotionScene.java"}
    432:750:void <init>(androidx.constraintlayout.motion.widget.MotionScene,androidx.constraintlayout.motion.widget.MotionScene$Transition) -> <init>
    432:780:void <init>(androidx.constraintlayout.motion.widget.MotionScene,android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    431:431:int access$000(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$000
    431:431:int access$002(androidx.constraintlayout.motion.widget.MotionScene$Transition,int) -> access$002
    431:431:int access$100(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$100
    431:431:int access$102(androidx.constraintlayout.motion.widget.MotionScene$Transition,int) -> access$102
    431:431:boolean access$1200(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1200
    431:431:java.util.ArrayList access$1300(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1300
    431:431:int access$1400(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1400
    431:431:java.lang.String access$1500(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1500
    431:431:int access$1600(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1600
    431:431:int access$1700(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1700
    431:431:int access$1800(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1800
    431:431:float access$1900(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1900
    431:431:androidx.constraintlayout.motion.widget.TouchResponse access$200(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$200
    431:431:androidx.constraintlayout.motion.widget.TouchResponse access$202(androidx.constraintlayout.motion.widget.MotionScene$Transition,androidx.constraintlayout.motion.widget.TouchResponse) -> access$202
    431:431:int access$300(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$300
    431:431:java.util.ArrayList access$400(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$400
    431:431:boolean access$500(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$500
    431:431:int access$600(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$600
    431:431:androidx.constraintlayout.motion.widget.MotionScene access$700(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$700
    462:462:void addOnClick(android.content.Context,org.xmlpull.v1.XmlPullParser) -> addOnClick
    598:606:java.lang.String debugString(android.content.Context) -> debugString
    790:852:void fill(androidx.constraintlayout.motion.widget.MotionScene,android.content.Context,android.content.res.TypedArray) -> fill
    784:786:void fillFromAttributeList(androidx.constraintlayout.motion.widget.MotionScene,android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    506:506:int getDuration() -> getDuration
    479:479:int getEndConstraintSetId() -> getEndConstraintSetId
    458:458:int getLayoutDuringTransition() -> getLayoutDuringTransition
    488:488:int getStartConstraintSetId() -> getStartConstraintSetId
    537:537:androidx.constraintlayout.motion.widget.TouchResponse getTouchResponse() -> getTouchResponse
    576:576:boolean isEnabled() -> isEnabled
    612:612:boolean isTransitionFlag(int) -> isTransitionFlag
    497:497:void setDuration(int) -> setDuration
androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick -> androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick:
# {"id":"sourceFile","fileName":"MotionScene.java"}
    617:637:void <init>(android.content.Context,androidx.constraintlayout.motion.widget.MotionScene$Transition,org.xmlpull.v1.XmlPullParser) -> <init>
    641:660:void addOnClickListeners(androidx.constraintlayout.motion.widget.MotionLayout,int,androidx.constraintlayout.motion.widget.MotionScene$Transition) -> addOnClickListeners
    677:685:boolean isTransitionViable(androidx.constraintlayout.motion.widget.MotionScene$Transition,androidx.constraintlayout.motion.widget.MotionLayout) -> isTransitionViable
    691:734:void onClick(android.view.View) -> onClick
    665:673:void removeOnClickListeners(androidx.constraintlayout.motion.widget.MotionLayout) -> removeOnClickListeners
androidx.constraintlayout.motion.widget.SplineSet -> androidx.constraintlayout.motion.widget.SplineSet:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    37:41:void <init>() -> <init>
    63:63:float get(float) -> get
    67:67:float getSlope(float) -> getSlope
    75:75:androidx.constraintlayout.motion.widget.SplineSet makeCustomSpline(java.lang.String,android.util.SparseArray) -> makeCustomSpline
    79:111:androidx.constraintlayout.motion.widget.SplineSet makeSpline(java.lang.String) -> makeSpline
    120:126:void setPoint(int,float) -> setPoint
    57:57:void setType(java.lang.String) -> setType
    130:156:void setup(int) -> setup
    47:50:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.SplineSet$AlphaSet -> androidx.constraintlayout.motion.widget.SplineSet$AlphaSet:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    168:168:void <init>() -> <init>
    171:171:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$CustomSet -> androidx.constraintlayout.motion.widget.SplineSet$CustomSet:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    259:261:void <init>(java.lang.String,android.util.SparseArray) -> <init>
    287:287:void setPoint(int,float) -> setPoint
    291:291:void setPoint(int,androidx.constraintlayout.widget.ConstraintAttribute) -> setPoint
    296:297:void setProperty(android.view.View,float) -> setProperty
    265:282:void setup(int) -> setup
androidx.constraintlayout.motion.widget.SplineSet$ElevationSet -> androidx.constraintlayout.motion.widget.SplineSet$ElevationSet:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    159:159:void <init>() -> <init>
    163:163:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$PathRotate -> androidx.constraintlayout.motion.widget.SplineSet$PathRotate:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    207:207:void <init>() -> <init>
    213:213:void setPathRotate(android.view.View,float,double,double) -> setPathRotate
    0:0:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$PivotXset -> androidx.constraintlayout.motion.widget.SplineSet$PivotXset:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    195:195:void <init>() -> <init>
    198:198:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$PivotYset -> androidx.constraintlayout.motion.widget.SplineSet$PivotYset:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    201:201:void <init>() -> <init>
    204:204:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$ProgressSet -> androidx.constraintlayout.motion.widget.SplineSet$ProgressSet:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    301:302:void <init>() -> <init>
    306:320:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$RotationSet -> androidx.constraintlayout.motion.widget.SplineSet$RotationSet:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    175:175:void <init>() -> <init>
    178:178:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$RotationXset -> androidx.constraintlayout.motion.widget.SplineSet$RotationXset:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    182:182:void <init>() -> <init>
    185:185:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$RotationYset -> androidx.constraintlayout.motion.widget.SplineSet$RotationYset:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    189:189:void <init>() -> <init>
    192:192:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$ScaleXset -> androidx.constraintlayout.motion.widget.SplineSet$ScaleXset:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    217:217:void <init>() -> <init>
    220:220:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$ScaleYset -> androidx.constraintlayout.motion.widget.SplineSet$ScaleYset:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    224:224:void <init>() -> <init>
    227:227:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$Sort -> androidx.constraintlayout.motion.widget.SplineSet$Sort:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    335:347:void doubleQuickSort(int[],float[],int,int) -> doubleQuickSort
    353:361:int partition(int[],float[],int,int) -> partition
    366:371:void swap(int[],float[],int,int) -> swap
androidx.constraintlayout.motion.widget.SplineSet$TranslationXset -> androidx.constraintlayout.motion.widget.SplineSet$TranslationXset:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    231:231:void <init>() -> <init>
    234:234:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$TranslationYset -> androidx.constraintlayout.motion.widget.SplineSet$TranslationYset:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    238:238:void <init>() -> <init>
    241:241:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.SplineSet$TranslationZset -> androidx.constraintlayout.motion.widget.SplineSet$TranslationZset:
# {"id":"sourceFile","fileName":"SplineSet.java"}
    245:245:void <init>() -> <init>
    249:249:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    0:0:void <clinit>() -> <clinit>
    36:51:void <init>() -> <init>
    100:115:float calcWave(float) -> calcWave
    70:90:float get(float,long,android.view.View,androidx.constraintlayout.motion.widget.KeyCache) -> get
    125:125:androidx.constraintlayout.motion.widget.TimeCycleSplineSet makeCustomSpline(java.lang.String,android.util.SparseArray) -> makeCustomSpline
    130:170:androidx.constraintlayout.motion.widget.TimeCycleSplineSet makeSpline(java.lang.String,long) -> makeSpline
    175:175:void setStartTime(long) -> setStartTime
    64:64:void setType(java.lang.String) -> setType
    188:216:void setup(int) -> setup
    55:58:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$AlphaSet -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$AlphaSet:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    229:229:void <init>() -> <init>
    232:233:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$CustomSet -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$CustomSet:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    318:324:void <init>(java.lang.String,android.util.SparseArray) -> <init>
    361:377:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
    328:346:void setup(int) -> setup
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$ElevationSet -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$ElevationSet:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    219:219:void <init>() -> <init>
    223:225:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$PathRotate -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$PathRotate:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    261:261:void <init>() -> <init>
    268:269:boolean setPathRotate(android.view.View,androidx.constraintlayout.motion.widget.KeyCache,float,long,double,double) -> setPathRotate
    264:264:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$ProgressSet -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$ProgressSet:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    381:382:void <init>() -> <init>
    386:408:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$RotationSet -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$RotationSet:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    237:237:void <init>() -> <init>
    240:241:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$RotationXset -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$RotationXset:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    245:245:void <init>() -> <init>
    248:249:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$RotationYset -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$RotationYset:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    253:253:void <init>() -> <init>
    256:257:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$ScaleXset -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$ScaleXset:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    273:273:void <init>() -> <init>
    276:277:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$ScaleYset -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$ScaleYset:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    281:281:void <init>() -> <init>
    284:285:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$Sort -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$Sort:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    414:426:void doubleQuickSort(int[],float[][],int,int) -> doubleQuickSort
    432:440:int partition(int[],float[][],int,int) -> partition
    445:450:void swap(int[],float[][],int,int) -> swap
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$TranslationXset -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$TranslationXset:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    289:289:void <init>() -> <init>
    292:293:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$TranslationYset -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$TranslationYset:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    297:297:void <init>() -> <init>
    300:301:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TimeCycleSplineSet$TranslationZset -> androidx.constraintlayout.motion.widget.TimeCycleSplineSet$TranslationZset:
# {"id":"sourceFile","fileName":"TimeCycleSplineSet.java"}
    305:305:void <init>() -> <init>
    309:311:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.TouchResponse -> androidx.constraintlayout.motion.widget.TouchResponse:
# {"id":"sourceFile","fileName":"TouchResponse.java"}
    59:68:void <clinit>() -> <clinit>
    45:103:void <init>(android.content.Context,androidx.constraintlayout.motion.widget.MotionLayout,org.xmlpull.v1.XmlPullParser) -> <init>
    536:536:float dot(float,float) -> dot
    130:160:void fill(android.content.res.TypedArray) -> fill
    124:126:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    548:548:int getFlags() -> getFlags
    522:529:android.graphics.RectF getLimitBoundsTo(android.view.ViewGroup,android.graphics.RectF) -> getLimitBoundsTo
    476:476:float getMaxAcceleration() -> getMaxAcceleration
    486:486:float getMaxVelocity() -> getMaxVelocity
    490:490:boolean getMoveWhenScrollAtTop() -> getMoveWhenScrollAtTop
    327:339:float getProgressDirection(float,float) -> getProgressDirection
    501:508:android.graphics.RectF getTouchRegion(android.view.ViewGroup,android.graphics.RectF) -> getTouchRegion
    512:512:int getTouchRegionId() -> getTouchRegionId
    183:308:void processTouchEvent(android.view.MotionEvent,androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker,int,androidx.constraintlayout.motion.widget.MotionScene) -> processTouchEvent
    368:390:void scrollMove(float,float) -> scrollMove
    345:360:void scrollUp(float,float) -> scrollUp
    316:317:void setDown(float,float) -> setDown
    108:121:void setRTL(boolean) -> setRTL
    167:169:void setUpTouchEvent(float,float) -> setUpTouchEvent
    402:416:void setupTouch() -> setupTouch
    540:540:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.TouchResponse$1 -> androidx.constraintlayout.motion.widget.TouchResponse$1:
# {"id":"sourceFile","fileName":"TouchResponse.java"}
    410:410:void <init>(androidx.constraintlayout.motion.widget.TouchResponse) -> <init>
    0:0:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.constraintlayout.motion.widget.TouchResponse$2 -> androidx.constraintlayout.motion.widget.TouchResponse$2:
# {"id":"sourceFile","fileName":"TouchResponse.java"}
    416:416:void <init>(androidx.constraintlayout.motion.widget.TouchResponse) -> <init>
    0:0:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.constraintlayout.solver.ArrayLinkedVariables -> androidx.constraintlayout.solver.ArrayLinkedVariables:
# {"id":"sourceFile","fileName":"ArrayLinkedVariables.java"}
    0:0:void <clinit>() -> <clinit>
    43:103:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    226:338:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> add
    409:422:void clear() -> clear
    432:441:boolean contains(androidx.constraintlayout.solver.SolverVariable) -> contains
    500:504:void divideByAmount(float) -> divideByAmount
    593:599:float get(androidx.constraintlayout.solver.SolverVariable) -> get
    509:509:int getCurrentSize() -> getCurrentSize
    558:564:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> getVariable
    576:582:float getVariableValue(int) -> getVariableValue
    485:489:void invert() -> invert
    119:212:void put(androidx.constraintlayout.solver.SolverVariable,float) -> put
    369:400:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> remove
    634:640:java.lang.String toString() -> toString
    349:356:float use(androidx.constraintlayout.solver.ArrayRow,boolean) -> use
androidx.constraintlayout.solver.ArrayRow -> androidx.constraintlayout.solver.ArrayRow:
# {"id":"sourceFile","fileName":"ArrayRow.java"}
    26:55:void <init>() -> <init>
    26:58:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    349:350:androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int) -> addError
    671:682:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    178:178:androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int) -> addSingleError
    432:440:boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> chooseSubject
    464:492:androidx.constraintlayout.solver.SolverVariable chooseSubjectInVariables(androidx.constraintlayout.solver.LinearSystem) -> chooseSubjectInVariables
    645:647:void clear() -> clear
    307:342:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowCentering
    139:142:androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int) -> createRowDefinition
    356:357:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionPercent
    375:378:androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionRatio
    240:265:androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> createRowEqualMatchDimensions
    148:152:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    165:172:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    192:201:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowGreaterThan
    221:230:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowLowerThan
    393:397:androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowWithAngle
    415:418:void ensurePositiveConstant() -> ensurePositiveConstant
    687:687:androidx.constraintlayout.solver.SolverVariable getKey() -> getKey
    640:640:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    63:63:boolean hasKeyVariable() -> hasKeyVariable
    135:135:boolean hasVariable(androidx.constraintlayout.solver.SolverVariable) -> hasVariable
    656:663:void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> initFromRow
    559:559:boolean isEmpty() -> isEmpty
    532:532:boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem) -> isNew
    635:635:androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable) -> pickPivot
    596:605:androidx.constraintlayout.solver.SolverVariable pickPivotInVariables(boolean[],androidx.constraintlayout.solver.SolverVariable) -> pickPivotInVariables
    536:548:void pivot(androidx.constraintlayout.solver.SolverVariable) -> pivot
    128:131:void reset() -> reset
    76:119:java.lang.String toReadableString() -> toReadableString
    71:71:java.lang.String toString() -> toString
    573:580:void updateFromFinalVariable(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,boolean) -> updateFromFinalVariable
    564:568:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
    692:713:void updateFromSystem(androidx.constraintlayout.solver.LinearSystem) -> updateFromSystem
androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables -> androidx.constraintlayout.solver.ArrayRow$ArrayRowVariables:
# {"id":"sourceFile","fileName":"ArrayRow.java"}
androidx.constraintlayout.solver.Cache -> androidx.constraintlayout.solver.Cache:
# {"id":"sourceFile","fileName":"Cache.java"}
    21:25:void <init>() -> <init>
androidx.constraintlayout.solver.LinearSystem -> androidx.constraintlayout.solver.LinearSystem:
# {"id":"sourceFile","fileName":"LinearSystem.java"}
    0:0:void <clinit>() -> <clinit>
    46:96:void <init>() -> <init>
    352:364:androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> acquireSolverVariable
    1292:1309:void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> addCenterPoint
    1178:1183:void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addCentering
    526:589:void addConstraint(androidx.constraintlayout.solver.ArrayRow) -> addConstraint
    1205:1220:androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addEquality
    1230:1258:void addEquality(androidx.constraintlayout.solver.SolverVariable,int) -> addEquality
    1119:1123:void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addGreaterBarrier
    1104:1112:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addGreaterThan
    1152:1156:void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addLowerBarrier
    1137:1145:void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addLowerThan
    1190:1195:void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int) -> addRatio
    594:609:void addRow(androidx.constraintlayout.solver.ArrayRow) -> addRow
    305:306:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int) -> addSingleError
    934:936:void computeValues() -> computeValues
    333:342:androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String) -> createErrorVariable
    276:283:androidx.constraintlayout.solver.SolverVariable createExtraVariable() -> createExtraVariable
    205:225:androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    236:253:androidx.constraintlayout.solver.ArrayRow createRow() -> createRow
    1277:1278:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionPercent
    261:268:androidx.constraintlayout.solver.SolverVariable createSlackVariable() -> createSlackVariable
    800:895:int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row) -> enforceBFS
    1061:1061:androidx.constraintlayout.solver.Cache getCache() -> getCache
    0:0:androidx.constraintlayout.solver.Metrics getMetrics() -> getMetrics
    391:393:int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    129:134:void increaseTableSize() -> increaseTableSize
    430:451:void minimize() -> minimize
    478:488:void minimizeGoal(androidx.constraintlayout.solver.LinearSystem$Row) -> minimizeGoal
    642:747:int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean) -> optimize
    146:160:void releaseRows() -> releaseRows
    169:193:void reset() -> reset
androidx.constraintlayout.solver.LinearSystem$Row -> androidx.constraintlayout.solver.LinearSystem$Row:
# {"id":"sourceFile","fileName":"LinearSystem.java"}
androidx.constraintlayout.solver.LinearSystem$ValuesRow -> androidx.constraintlayout.solver.LinearSystem$ValuesRow:
# {"id":"sourceFile","fileName":"LinearSystem.java"}
    83:84:void <init>(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.Cache) -> <init>
androidx.constraintlayout.solver.Metrics -> androidx.constraintlayout.solver.Metrics:
# {"id":"sourceFile","fileName":"Metrics.java"}
androidx.constraintlayout.solver.Pools$Pool -> androidx.constraintlayout.solver.Pools$Pool:
# {"id":"sourceFile","fileName":"Pools.java"}
androidx.constraintlayout.solver.Pools$SimplePool -> androidx.constraintlayout.solver.Pools$SimplePool:
# {"id":"sourceFile","fileName":"Pools.java"}
    96:100:void <init>(int) -> <init>
    106:110:java.lang.Object acquire() -> acquire
    123:125:boolean release(java.lang.Object) -> release
    133:145:void releaseAll(java.lang.Object[],int) -> releaseAll
androidx.constraintlayout.solver.PriorityGoalRow -> androidx.constraintlayout.solver.PriorityGoalRow:
# {"id":"sourceFile","fileName":"PriorityGoalRow.java"}
    29:161:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    25:25:void access$000(androidx.constraintlayout.solver.PriorityGoalRow,androidx.constraintlayout.solver.SolverVariable) -> access$000
    191:194:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    198:221:void addToGoal(androidx.constraintlayout.solver.SolverVariable) -> addToGoal
    153:154:void clear() -> clear
    169:186:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    225:231:void removeGoal(androidx.constraintlayout.solver.SolverVariable) -> removeGoal
    261:265:java.lang.String toString() -> toString
    239:255:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
androidx.constraintlayout.solver.PriorityGoalRow$1 -> androidx.constraintlayout.solver.PriorityGoalRow$1:
# {"id":"sourceFile","fileName":"PriorityGoalRow.java"}
    209:209:void <init>(androidx.constraintlayout.solver.PriorityGoalRow) -> <init>
    209:209:int compare(java.lang.Object,java.lang.Object) -> compare
    212:212:int compare(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> compare
androidx.constraintlayout.solver.PriorityGoalRow$GoalVariableAccessor -> androidx.constraintlayout.solver.PriorityGoalRow$GoalVariableAccessor:
# {"id":"sourceFile","fileName":"PriorityGoalRow.java"}
    39:40:void <init>(androidx.constraintlayout.solver.PriorityGoalRow,androidx.constraintlayout.solver.PriorityGoalRow) -> <init>
    48:72:boolean addToGoal(androidx.constraintlayout.solver.SolverVariable,float) -> addToGoal
    130:131:int compareTo(java.lang.Object) -> compareTo
    44:44:void init(androidx.constraintlayout.solver.SolverVariable) -> init
    92:92:boolean isNegative() -> isNegative
    105:106:boolean isSmallerThan(androidx.constraintlayout.solver.SolverVariable) -> isSmallerThan
    135:135:void reset() -> reset
    140:145:java.lang.String toString() -> toString
androidx.constraintlayout.solver.SolverVariable -> androidx.constraintlayout.solver.SolverVariable:
# {"id":"sourceFile","fileName":"SolverVariable.java"}
    0:0:void <clinit>() -> <clinit>
    53:169:void <init>(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> <init>
    175:184:void addToRow(androidx.constraintlayout.solver.ArrayRow) -> addToRow
    96:96:void increaseErrorId() -> increaseErrorId
    192:198:void removeFromRow(androidx.constraintlayout.solver.ArrayRow) -> removeFromRow
    231:249:void reset() -> reset
    221:227:void setFinalValue(androidx.constraintlayout.solver.LinearSystem,float) -> setFinalValue
    263:263:void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> setType
    278:281:java.lang.String toString() -> toString
    212:216:void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow) -> updateReferencesWithNewDefinition
androidx.constraintlayout.solver.SolverVariable$Type -> androidx.constraintlayout.solver.SolverVariable$Type:
# {"id":"sourceFile","fileName":"SolverVariable.java"}
    72:92:void <clinit>() -> <clinit>
    72:72:void <init>(java.lang.String,int) -> <init>
    72:72:androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    72:72:androidx.constraintlayout.solver.SolverVariable$Type[] values() -> values
androidx.constraintlayout.solver.SolverVariableValues -> androidx.constraintlayout.solver.SolverVariableValues:
# {"id":"sourceFile","fileName":"SolverVariableValues.java"}
    0:0:void <clinit>() -> <clinit>
    29:49:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    410:420:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> add
    216:232:void addToHashMap(androidx.constraintlayout.solver.SolverVariable,int) -> addToHashMap
    289:295:void addVariable(int,androidx.constraintlayout.solver.SolverVariable,float) -> addVariable
    180:195:void clear() -> clear
    94:94:boolean contains(androidx.constraintlayout.solver.SolverVariable) -> contains
    481:485:void divideByAmount(float) -> divideByAmount
    299:300:int findEmptySlot() -> findEmptySlot
    125:127:float get(androidx.constraintlayout.solver.SolverVariable) -> get
    54:54:int getCurrentSize() -> getCurrentSize
    59:68:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> getVariable
    78:84:float getVariableValue(int) -> getVariableValue
    199:209:void increaseSize() -> increaseSize
    99:117:int indexOf(androidx.constraintlayout.solver.SolverVariable) -> indexOf
    308:326:void insertVariable(int,androidx.constraintlayout.solver.SolverVariable,float) -> insertVariable
    468:472:void invert() -> invert
    334:366:void put(androidx.constraintlayout.solver.SolverVariable,float) -> put
    381:400:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> remove
    260:280:void removeFromHashMap(androidx.constraintlayout.solver.SolverVariable) -> removeFromHashMap
    148:171:java.lang.String toString() -> toString
    427:458:float use(androidx.constraintlayout.solver.ArrayRow,boolean) -> use
androidx.constraintlayout.solver.state.Dimension$Type -> androidx.constraintlayout.solver.state.Dimension$Type:
# {"id":"sourceFile","fileName":"Dimension.java"}
    44:48:void <clinit>() -> <clinit>
    44:44:void <init>(java.lang.String,int) -> <init>
    44:44:androidx.constraintlayout.solver.state.Dimension$Type valueOf(java.lang.String) -> valueOf
    44:44:androidx.constraintlayout.solver.state.Dimension$Type[] values() -> values
androidx.constraintlayout.solver.state.State$Chain -> androidx.constraintlayout.solver.state.State$Chain:
# {"id":"sourceFile","fileName":"State.java"}
    89:92:void <clinit>() -> <clinit>
    89:89:void <init>(java.lang.String,int) -> <init>
    89:89:androidx.constraintlayout.solver.state.State$Chain valueOf(java.lang.String) -> valueOf
    89:89:androidx.constraintlayout.solver.state.State$Chain[] values() -> values
androidx.constraintlayout.solver.state.State$Constraint -> androidx.constraintlayout.solver.state.State$Constraint:
# {"id":"sourceFile","fileName":"State.java"}
    52:67:void <clinit>() -> <clinit>
    52:52:void <init>(java.lang.String,int) -> <init>
    52:52:androidx.constraintlayout.solver.state.State$Constraint valueOf(java.lang.String) -> valueOf
    52:52:androidx.constraintlayout.solver.state.State$Constraint[] values() -> values
androidx.constraintlayout.solver.state.State$Direction -> androidx.constraintlayout.solver.state.State$Direction:
# {"id":"sourceFile","fileName":"State.java"}
    70:76:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    70:70:androidx.constraintlayout.solver.state.State$Direction valueOf(java.lang.String) -> valueOf
    70:70:androidx.constraintlayout.solver.state.State$Direction[] values() -> values
androidx.constraintlayout.solver.state.State$Helper -> androidx.constraintlayout.solver.state.State$Helper:
# {"id":"sourceFile","fileName":"State.java"}
    79:86:void <clinit>() -> <clinit>
    79:79:void <init>(java.lang.String,int) -> <init>
    79:79:androidx.constraintlayout.solver.state.State$Helper valueOf(java.lang.String) -> valueOf
    79:79:androidx.constraintlayout.solver.state.State$Helper[] values() -> values
androidx.constraintlayout.solver.widgets.Barrier -> androidx.constraintlayout.solver.widgets.Barrier:
# {"id":"sourceFile","fileName":"Barrier.java"}
    29:39:void <init>() -> <init>
    104:186:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    0:0:boolean allowedInBarrier() -> allowedInBarrier
    54:54:boolean allowsGoneWidget() -> allowsGoneWidget
    58:62:void copy(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashMap) -> copy
    46:46:int getBarrierType() -> getBarrierType
    195:195:int getMargin() -> getMargin
    80:85:void markWidgets() -> markWidgets
    52:52:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    49:49:void setBarrierType(int) -> setBarrierType
    191:191:void setMargin(int) -> setMargin
    67:75:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.Chain -> androidx.constraintlayout.solver.widgets.Chain:
# {"id":"sourceFile","fileName":"Chain.java"}
    51:64:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int) -> applyChainConstraints
    80:443:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> applyChainConstraints
androidx.constraintlayout.solver.widgets.ChainHead -> androidx.constraintlayout.solver.widgets.ChainHead:
# {"id":"sourceFile","fileName":"ChainHead.java"}
    42:66:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> <init>
    234:237:void define() -> define
    84:198:void defineChainProperties() -> defineChainProperties
    77:77:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> isMatchConstraintEqualityCandidate
androidx.constraintlayout.solver.widgets.ConstraintAnchor -> androidx.constraintlayout.solver.widgets.ConstraintAnchor:
# {"id":"sourceFile","fileName":"ConstraintAnchor.java"}
    34:100:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> <init>
    179:195:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,boolean) -> connect
    207:207:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> connect
    137:144:int getMargin() -> getMargin
    450:470:androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite() -> getOpposite
    124:124:androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner() -> getOwner
    107:107:androidx.constraintlayout.solver.SolverVariable getSolverVariable() -> getSolverVariable
    151:151:androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget() -> getTarget
    130:130:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType() -> getType
    43:48:boolean hasCenteredDependents() -> hasCenteredDependents
    215:215:boolean isConnected() -> isConnected
    227:263:boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> isValidConnection
    157:164:void reset() -> reset
    113:116:void resetSolverVariable(androidx.constraintlayout.solver.Cache) -> resetSolverVariable
    336:337:void setGoneMargin(int) -> setGoneMargin
    370:370:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1 -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$1:
# {"id":"sourceFile","fileName":"ConstraintAnchor.java"}
    235:235:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type:
# {"id":"sourceFile","fileName":"ConstraintAnchor.java"}
    58:58:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    58:58:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidget -> androidx.constraintlayout.solver.widgets.ConstraintWidget:
# {"id":"sourceFile","fileName":"ConstraintWidget.java"}
    0:0:void <clinit>() -> <clinit>
    59:368:void <init>() -> <init>
    415:422:void addAnchors() -> addAnchors
    2253:2253:boolean addFirst() -> addFirst
    1986:2238:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    1423:1423:boolean allowedInBarrier() -> allowedInBarrier
    2349:2718:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    1454:1455:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> connect
    1484:1649:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int) -> connect
    496:498:void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> connectCircularConstraint
    2760:2854:void copy(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashMap) -> copy
    592:597:void createObjectVariables(androidx.constraintlayout.solver.LinearSystem) -> createObjectVariables
    1749:1777:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    877:877:int getBaselineDistance() -> getBaselineDistance
    854:856:float getBiasPercent(int) -> getBiasPercent
    794:794:int getBottom() -> getBottom
    887:887:java.lang.Object getCompanionWidget() -> getCompanionWidget
    543:543:java.lang.String getDebugName() -> getDebugName
    1806:1808:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> getDimensionBehaviour
    1124:1124:float getDimensionRatio() -> getDimensionRatio
    1133:1133:int getDimensionRatioSide() -> getDimensionRatioSide
    701:704:int getHeight() -> getHeight
    832:832:float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    1396:1396:int getHorizontalChainStyle() -> getHorizontalChainStyle
    1786:1786:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    802:806:int getHorizontalMargin() -> getHorizontalMargin
    715:717:int getLength(int) -> getLength
    139:139:int getMaxHeight() -> getMaxHeight
    143:143:int getMaxWidth() -> getMaxWidth
    758:758:int getMinHeight() -> getMinHeight
    749:749:int getMinWidth() -> getMinWidth
    1872:1877:androidx.constraintlayout.solver.widgets.ConstraintWidget getNextChainMember(int) -> getNextChainMember
    440:440:androidx.constraintlayout.solver.widgets.ConstraintWidget getParent() -> getParent
    1853:1858:androidx.constraintlayout.solver.widgets.ConstraintWidget getPreviousChainMember(int) -> getPreviousChainMember
    785:785:int getRight() -> getRight
    73:75:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun getRun(int) -> getRun
    842:842:float getVerticalBiasPercent() -> getVerticalBiasPercent
    1416:1416:int getVerticalChainStyle() -> getVerticalChainStyle
    1795:1795:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    816:820:int getVerticalMargin() -> getVerticalMargin
    534:534:int getVisibility() -> getVisibility
    653:656:int getWidth() -> getWidth
    629:632:int getX() -> getX
    641:644:int getY() -> getY
    868:868:boolean hasBaseline() -> hasBaseline
    1441:1443:void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    1963:1963:boolean isChainHead(int) -> isChainHead
    1838:1838:boolean isInHorizontalChain() -> isInHorizontalChain
    179:179:boolean isInPlaceholder() -> isInPlaceholder
    1919:1919:boolean isInVerticalChain() -> isInVerticalChain
    299:357:void reset() -> reset
    1729:1738:void resetAnchors() -> resetAnchors
    401:408:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
    1322:1323:void setBaselineDistance(int) -> setBaselineDistance
    1333:1333:void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    550:550:void setDebugName(java.lang.String) -> setDebugName
    1052:1104:void setDimensionRatio(java.lang.String) -> setDimensionRatio
    1211:1235:void setFrame(int,int,int,int) -> setFrame
    171:171:void setHasBaseline(boolean) -> setHasBaseline
    990:992:void setHeight(int) -> setHeight
    1143:1143:void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    1386:1386:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    1265:1268:void setHorizontalDimension(int,int) -> setHorizontalDimension
    1820:1820:void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    1019:1024:void setHorizontalMatchStyle(int,int,int,float) -> setHorizontalMatchStyle
    1367:1367:void setHorizontalWeight(float) -> setHorizontalWeight
    187:187:void setInBarrier(int,boolean) -> setInBarrier
    183:183:void setInPlaceholder(boolean) -> setInPlaceholder
    135:135:void setInVirtualLayout(boolean) -> setInVirtualLayout
    151:151:void setMaxHeight(int) -> setMaxHeight
    147:147:void setMaxWidth(int) -> setMaxWidth
    1176:1178:void setMinHeight(int) -> setMinHeight
    1163:1165:void setMinWidth(int) -> setMinWidth
    924:925:void setOrigin(int,int) -> setOrigin
    449:449:void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> setParent
    1153:1153:void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    1406:1406:void setVerticalChainStyle(int) -> setVerticalChainStyle
    1279:1282:void setVerticalDimension(int,int) -> setVerticalDimension
    1829:1829:void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    1037:1042:void setVerticalMatchStyle(int,int,int,float) -> setVerticalMatchStyle
    1376:1376:void setVerticalWeight(float) -> setVerticalWeight
    525:525:void setVisibility(int) -> setVisibility
    978:980:void setWidth(int) -> setWidth
    905:905:void setX(int) -> setX
    914:914:void setY(int) -> setY
    2266:2312:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> setupDimensionRatio
    608:608:java.lang.String toString() -> toString
    2858:2910:void updateFromRuns(boolean,boolean) -> updateFromRuns
    2729:2755:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.ConstraintWidget$1 -> androidx.constraintlayout.solver.widgets.ConstraintWidget$1:
# {"id":"sourceFile","fileName":"ConstraintWidget.java"}
    946:2378:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour -> androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour:
# {"id":"sourceFile","fileName":"ConstraintWidget.java"}
    193:194:void <clinit>() -> <clinit>
    193:193:void <init>(java.lang.String,int) -> <init>
    193:193:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    193:193:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer -> androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
# {"id":"sourceFile","fileName":"ConstraintWidgetContainer.java"}
    46:265:void <init>() -> <init>
    695:697:void addChain(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> addChain
    280:339:boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem) -> addChildrenToSolver
    708:713:void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addHorizontalChain
    723:728:void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addVerticalChain
    70:70:boolean directMeasure(boolean) -> directMeasure
    89:89:boolean directMeasureSetup(boolean) -> directMeasureSetup
    93:93:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    133:133:androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer getMeasurer() -> getMeasurer
    217:217:int getOptimizationLevel() -> getOptimizationLevel
    0:0:boolean handlesInternalConstraints() -> handlesInternalConstraints
    58:58:void invalidateGraph() -> invalidateGraph
    65:65:void invalidateMeasures() -> invalidateMeasures
    262:262:boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    399:399:boolean isRtl() -> isRtl
    255:255:boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    418:616:void layout() -> layout
    115:117:long measure(int,int,int,int,int,int,int,int,int) -> measure
    227:227:boolean optimizeFor(int) -> optimizeFor
    242:248:void reset() -> reset
    682:683:void resetChains() -> resetChains
    128:129:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
    207:208:void setOptimizationLevel(int) -> setOptimizationLevel
    390:390:void setRtl(boolean) -> setRtl
    350:355:void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> updateChildrenFromSolver
    361:365:void updateFromRuns(boolean,boolean) -> updateFromRuns
    122:122:void updateHierarchy() -> updateHierarchy
androidx.constraintlayout.solver.widgets.Flow -> androidx.constraintlayout.solver.widgets.Flow:
# {"id":"sourceFile","fileName":"Flow.java"}
    32:80:void <init>() -> <init>
    32:32:int access$000(androidx.constraintlayout.solver.widgets.Flow) -> access$000
    32:32:int access$100(androidx.constraintlayout.solver.widgets.Flow) -> access$100
    32:32:int access$1000(androidx.constraintlayout.solver.widgets.Flow) -> access$1000
    32:32:float access$1100(androidx.constraintlayout.solver.widgets.Flow) -> access$1100
    32:32:int access$1200(androidx.constraintlayout.solver.widgets.Flow) -> access$1200
    32:32:float access$1300(androidx.constraintlayout.solver.widgets.Flow) -> access$1300
    32:32:float access$1400(androidx.constraintlayout.solver.widgets.Flow) -> access$1400
    32:32:int access$1500(androidx.constraintlayout.solver.widgets.Flow) -> access$1500
    32:32:float access$1600(androidx.constraintlayout.solver.widgets.Flow) -> access$1600
    32:32:int access$1700(androidx.constraintlayout.solver.widgets.Flow) -> access$1700
    32:32:float access$1800(androidx.constraintlayout.solver.widgets.Flow) -> access$1800
    32:32:int access$1900(androidx.constraintlayout.solver.widgets.Flow) -> access$1900
    32:32:int access$200(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> access$200
    32:32:int access$300(androidx.constraintlayout.solver.widgets.Flow,androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> access$300
    32:32:int access$400(androidx.constraintlayout.solver.widgets.Flow) -> access$400
    32:32:androidx.constraintlayout.solver.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.solver.widgets.Flow) -> access$500
    32:32:int access$600(androidx.constraintlayout.solver.widgets.Flow) -> access$600
    32:32:int access$700(androidx.constraintlayout.solver.widgets.Flow) -> access$700
    32:32:int access$800(androidx.constraintlayout.solver.widgets.Flow) -> access$800
    32:32:float access$900(androidx.constraintlayout.solver.widgets.Flow) -> access$900
    1215:1237:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    85:111:void copy(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashMap) -> copy
    1119:1198:void createAlignedConstraints(boolean) -> createAlignedConstraints
    202:217:int getWidgetHeight(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> getWidgetHeight
    180:195:int getWidgetWidth(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> getWidgetWidth
    225:324:void measure(int,int,int,int) -> measure
    970:1115:void measureAligned(androidx.constraintlayout.solver.widgets.ConstraintWidget[],int,int,int,int[]) -> measureAligned
    780:913:void measureChainWrap(androidx.constraintlayout.solver.widgets.ConstraintWidget[],int,int,int,int[]) -> measureChainWrap
    933:949:void measureNoWrap(androidx.constraintlayout.solver.widgets.ConstraintWidget[],int,int,int,int[]) -> measureNoWrap
    146:146:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    122:122:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    148:148:void setFirstVerticalBias(float) -> setFirstVerticalBias
    124:124:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    155:155:void setHorizontalAlign(int) -> setHorizontalAlign
    139:139:void setHorizontalBias(float) -> setHorizontalBias
    166:166:void setHorizontalGap(int) -> setHorizontalGap
    131:131:void setHorizontalStyle(int) -> setHorizontalStyle
    150:150:void setLastHorizontalBias(float) -> setLastHorizontalBias
    126:126:void setLastHorizontalStyle(int) -> setLastHorizontalStyle
    152:152:void setLastVerticalBias(float) -> setLastVerticalBias
    128:128:void setLastVerticalStyle(int) -> setLastVerticalStyle
    170:170:void setMaxElementsWrap(int) -> setMaxElementsWrap
    119:119:void setOrientation(int) -> setOrientation
    159:159:void setVerticalAlign(int) -> setVerticalAlign
    143:143:void setVerticalBias(float) -> setVerticalBias
    168:168:void setVerticalGap(int) -> setVerticalGap
    135:135:void setVerticalStyle(int) -> setVerticalStyle
    163:163:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.solver.widgets.Flow$WidgetsList -> androidx.constraintlayout.solver.widgets.Flow$WidgetsList:
# {"id":"sourceFile","fileName":"Flow.java"}
    333:363:void <init>(androidx.constraintlayout.solver.widgets.Flow,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> <init>
    331:331:androidx.constraintlayout.solver.widgets.ConstraintWidget access$2000(androidx.constraintlayout.solver.widgets.Flow$WidgetsList) -> access$2000
    409:444:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    383:389:void clear() -> clear
    448:681:void createConstraints(boolean,int,boolean) -> createConstraints
    402:405:int getHeight() -> getHeight
    395:398:int getWidth() -> getWidth
    693:717:void measureMatchConstraints(int) -> measureMatchConstraints
    721:755:void recomputeDimensions() -> recomputeDimensions
    392:392:void setStartIndex(int) -> setStartIndex
    370:379:void setup(int,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,int) -> setup
androidx.constraintlayout.solver.widgets.Guideline -> androidx.constraintlayout.solver.widgets.Guideline:
# {"id":"sourceFile","fileName":"Guideline.java"}
    39:52:void <init>() -> <init>
    199:230:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    0:0:boolean allowedInBarrier() -> allowedInBarrier
    58:63:void copy(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashMap) -> copy
    126:148:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    117:117:int getOrientation() -> getOrientation
    184:184:int getRelativeBegin() -> getRelativeBegin
    188:188:int getRelativeEnd() -> getRelativeEnd
    180:180:float getRelativePercent() -> getRelativePercent
    165:167:void setGuideBegin(int) -> setGuideBegin
    173:175:void setGuideEnd(int) -> setGuideEnd
    157:159:void setGuidePercent(float) -> setGuidePercent
    85:98:void setOrientation(int) -> setOrientation
    237:250:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.Guideline$1 -> androidx.constraintlayout.solver.widgets.Guideline$1:
# {"id":"sourceFile","fileName":"Guideline.java"}
    126:126:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.Helper -> androidx.constraintlayout.solver.widgets.Helper:
# {"id":"sourceFile","fileName":"Helper.java"}
androidx.constraintlayout.solver.widgets.HelperWidget -> androidx.constraintlayout.solver.widgets.HelperWidget:
# {"id":"sourceFile","fileName":"HelperWidget.java"}
    9:11:void <init>() -> <init>
    27:31:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    36:41:void copy(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashMap) -> copy
    49:50:void removeAllIds() -> removeAllIds
    0:0:void updateConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.solver.widgets.Optimizer -> androidx.constraintlayout.solver.widgets.Optimizer:
# {"id":"sourceFile","fileName":"Optimizer.java"}
    51:51:void <clinit>() -> <clinit>
    64:94:void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> checkMatchParent
    0:0:boolean enabled(int,int) -> enabled
androidx.constraintlayout.solver.widgets.VirtualLayout -> androidx.constraintlayout.solver.widgets.VirtualLayout:
# {"id":"sourceFile","fileName":"VirtualLayout.java"}
    26:202:void <init>() -> <init>
    72:78:void applyRtl(boolean) -> applyRtl
    130:133:void captureWidgets() -> captureWidgets
    143:143:int getMeasuredHeight() -> getMeasuredHeight
    139:139:int getMeasuredWidth() -> getMeasuredWidth
    98:98:int getPaddingBottom() -> getPaddingBottom
    100:100:int getPaddingLeft() -> getPaddingLeft
    102:102:int getPaddingRight() -> getPaddingRight
    96:96:int getPaddingTop() -> getPaddingTop
    207:219:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    153:197:boolean measureChildren() -> measureChildren
    113:113:boolean needSolverPass() -> needSolverPass
    109:109:void needsCallbackFromSolver(boolean) -> needsCallbackFromSolver
    147:148:void setMeasure(int,int) -> setMeasure
    48:53:void setPadding(int) -> setPadding
    93:93:void setPaddingBottom(int) -> setPaddingBottom
    63:63:void setPaddingEnd(int) -> setPaddingEnd
    67:68:void setPaddingLeft(int) -> setPaddingLeft
    88:89:void setPaddingRight(int) -> setPaddingRight
    57:59:void setPaddingStart(int) -> setPaddingStart
    84:84:void setPaddingTop(int) -> setPaddingTop
    126:126:void updateConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.solver.widgets.WidgetContainer -> androidx.constraintlayout.solver.widgets.WidgetContainer:
# {"id":"sourceFile","fileName":"WidgetContainer.java"}
    26:35:void <init>() -> <init>
    72:77:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    108:108:java.util.ArrayList getChildren() -> getChildren
    98:99:void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> remove
    181:181:void removeAllChildren() -> removeAllChildren
    62:63:void reset() -> reset
    172:176:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency:
# {"id":"sourceFile","fileName":"BaselineDimensionDependency.java"}
    22:22:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure:
# {"id":"sourceFile","fileName":"BasicMeasure.java"}
    50:75:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    403:432:boolean measure(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> measure
    79:110:void measureChildren(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> measureChildren
    119:130:void solveLinearSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,java.lang.String,int,int) -> solveLinearSystem
    156:386:long solverMeasure(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int) -> solverMeasure
    54:65:void updateHierarchy(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateHierarchy
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure:
# {"id":"sourceFile","fileName":"BasicMeasure.java"}
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$MeasureType -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$MeasureType:
# {"id":"sourceFile","fileName":"BasicMeasure.java"}
    68:68:void <clinit>() -> <clinit>
    68:68:androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$MeasureType valueOf(java.lang.String) -> valueOf
    68:68:androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$MeasureType[] values() -> values
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer:
# {"id":"sourceFile","fileName":"BasicMeasure.java"}
androidx.constraintlayout.solver.widgets.analyzer.ChainRun -> androidx.constraintlayout.solver.widgets.analyzer.ChainRun:
# {"id":"sourceFile","fileName":"ChainRun.java"}
    32:38:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> <init>
    523:579:void apply() -> apply
    494:496:void applyToWidget() -> applyToWidget
    77:102:void build() -> build
    108:110:void clear() -> clear
    501:504:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    511:514:androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    65:71:long getWrapDimension() -> getWrapDimension
    54:57:boolean supportsWrapComputation() -> supportsWrapComputation
    43:47:java.lang.String toString() -> toString
    122:486:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.Dependency -> androidx.constraintlayout.solver.widgets.analyzer.Dependency:
# {"id":"sourceFile","fileName":"Dependency.java"}
androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph -> androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph:
# {"id":"sourceFile","fileName":"DependencyGraph.java"}
    44:625:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    711:754:void applyGroup(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,int,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,java.util.ArrayList,androidx.constraintlayout.solver.widgets.analyzer.RunGroup) -> applyGroup
    383:555:boolean basicMeasureWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> basicMeasureWidgets
    629:638:void buildGraph() -> buildGraph
    642:693:void buildGraph(java.util.ArrayList) -> buildGraph
    64:69:int computeWrap(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrap
    111:224:boolean directMeasure(boolean) -> directMeasure
    230:258:boolean directMeasureSetup(boolean) -> directMeasureSetup
    265:354:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    760:782:void findGroup(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int,java.util.ArrayList) -> findGroup
    615:615:void invalidateGraph() -> invalidateGraph
    622:622:void invalidateMeasures() -> invalidateMeasures
    371:379:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    564:606:void measureWidgets() -> measureWidgets
    60:60:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode:
# {"id":"sourceFile","fileName":"DependencyNode.java"}
    23:41:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    100:102:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> addDependency
    119:124:void clear() -> clear
    50:57:void resolve(int) -> resolve
    45:46:java.lang.String toString() -> toString
    62:95:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type:
# {"id":"sourceFile","fileName":"DependencyNode.java"}
    27:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String) -> valueOf
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values() -> values
androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency:
# {"id":"sourceFile","fileName":"DimensionDependency.java"}
    24:28:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    33:39:void resolve(int) -> resolve
androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference -> androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference:
# {"id":"sourceFile","fileName":"GuidelineReference.java"}
    25:28:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    48:49:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    69:106:void apply() -> apply
    112:116:void applyToWidget() -> applyToWidget
    33:33:void clear() -> clear
    0:0:boolean supportsWrapComputation() -> supportsWrapComputation
    54:64:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HelperReferences -> androidx.constraintlayout.solver.widgets.analyzer.HelperReferences:
# {"id":"sourceFile","fileName":"HelperReferences.java"}
    24:24:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    44:45:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    50:114:void apply() -> apply
    144:151:void applyToWidget() -> applyToWidget
    29:30:void clear() -> clear
    0:0:boolean supportsWrapComputation() -> supportsWrapComputation
    122:139:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun:
# {"id":"sourceFile","fileName":"HorizontalWidgetRun.java"}
    37:37:void <clinit>() -> <clinit>
    40:43:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    83:264:void apply() -> apply
    548:549:void applyToWidget() -> applyToWidget
    53:57:void clear() -> clear
    280:297:void computeInsetRatio(int[],int,int,int,int,float,int) -> computeInsetRatio
    62:67:void reset() -> reset
    72:73:boolean supportsWrapComputation() -> supportsWrapComputation
    48:48:java.lang.String toString() -> toString
    305:544:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1:
# {"id":"sourceFile","fileName":"HorizontalWidgetRun.java"}
    305:305:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.RunGroup -> androidx.constraintlayout.solver.widgets.analyzer.RunGroup:
# {"id":"sourceFile","fileName":"RunGroup.java"}
    33:48:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int) -> <init>
    52:53:void add(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> add
    121:179:long computeWrapSize(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrapSize
    89:114:long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseEnd
    57:82:long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseStart
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun:
# {"id":"sourceFile","fileName":"VerticalWidgetRun.java"}
    34:42:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    200:418:void apply() -> apply
    424:425:void applyToWidget() -> applyToWidget
    52:57:void clear() -> clear
    62:69:void reset() -> reset
    74:75:boolean supportsWrapComputation() -> supportsWrapComputation
    47:47:java.lang.String toString() -> toString
    85:194:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1:
# {"id":"sourceFile","fileName":"VerticalWidgetRun.java"}
    85:85:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun:
# {"id":"sourceFile","fileName":"WidgetRun.java"}
    34:44:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    280:282:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int) -> addTarget
    286:291:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency) -> addTarget
    234:248:int getLimitedDimension(int,int) -> getLimitedDimension
    95:120:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> getTarget
    258:273:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> getTarget
    295:296:long getWrapDimension() -> getWrapDimension
    301:301:boolean isResolved() -> isResolved
    171:214:void resolveDimension(int,int) -> resolveDimension
    127:167:void updateRunCenter(androidx.constraintlayout.solver.widgets.analyzer.Dependency,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> updateRunCenter
    0:0:void updateRunEnd(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> updateRunEnd
    0:0:void updateRunStart(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> updateRunStart
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1:
# {"id":"sourceFile","fileName":"WidgetRun.java"}
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType:
# {"id":"sourceFile","fileName":"WidgetRun.java"}
    303:303:void <clinit>() -> <clinit>
    303:303:void <init>(java.lang.String,int) -> <init>
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String) -> valueOf
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values() -> values
androidx.constraintlayout.utils.widget.ImageFilterButton -> androidx.constraintlayout.utils.widget.ImageFilterButton:
# {"id":"sourceFile","fileName":"ImageFilterButton.java"}
    82:96:void <init>(android.content.Context) -> <init>
    82:101:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    82:106:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:81:float access$000(androidx.constraintlayout.utils.widget.ImageFilterButton) -> access$000
    81:81:float access$100(androidx.constraintlayout.utils.widget.ImageFilterButton) -> access$100
    391:391:void draw(android.graphics.Canvas) -> draw
    196:196:float getContrast() -> getContrast
    240:240:float getCrossfade() -> getCrossfade
    378:378:float getRound() -> getRound
    369:369:float getRoundPercent() -> getRoundPercent
    177:177:float getSaturation() -> getSaturation
    215:215:float getWarmth() -> getWarmth
    110:144:void init(android.content.Context,android.util.AttributeSet) -> init
    251:252:void setBrightness(float) -> setBrightness
    186:187:void setContrast(float) -> setContrast
    224:230:void setCrossfade(float) -> setCrossfade
    156:156:void setOverlay(boolean) -> setOverlay
    313:357:void setRound(float) -> setRound
    263:300:void setRoundPercent(float) -> setRoundPercent
    167:168:void setSaturation(float) -> setSaturation
    205:206:void setWarmth(float) -> setWarmth
androidx.constraintlayout.utils.widget.ImageFilterButton$1 -> androidx.constraintlayout.utils.widget.ImageFilterButton$1:
# {"id":"sourceFile","fileName":"ImageFilterButton.java"}
    274:274:void <init>(androidx.constraintlayout.utils.widget.ImageFilterButton) -> <init>
    277:280:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.ImageFilterButton$2 -> androidx.constraintlayout.utils.widget.ImageFilterButton$2:
# {"id":"sourceFile","fileName":"ImageFilterButton.java"}
    332:332:void <init>(androidx.constraintlayout.utils.widget.ImageFilterButton) -> <init>
    335:337:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.ImageFilterView -> androidx.constraintlayout.utils.widget.ImageFilterView:
# {"id":"sourceFile","fileName":"ImageFilterView.java"}
    284:298:void <init>(android.content.Context) -> <init>
    284:303:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    284:308:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    85:85:float access$000(androidx.constraintlayout.utils.widget.ImageFilterView) -> access$000
    85:85:float access$100(androidx.constraintlayout.utils.widget.ImageFilterView) -> access$100
    601:601:void draw(android.graphics.Canvas) -> draw
    462:462:float getBrightness() -> getBrightness
    397:397:float getContrast() -> getContrast
    441:441:float getCrossfade() -> getCrossfade
    588:588:float getRound() -> getRound
    579:579:float getRoundPercent() -> getRoundPercent
    378:378:float getSaturation() -> getSaturation
    416:416:float getWarmth() -> getWarmth
    313:345:void init(android.content.Context,android.util.AttributeSet) -> init
    452:453:void setBrightness(float) -> setBrightness
    387:388:void setContrast(float) -> setContrast
    425:431:void setCrossfade(float) -> setCrossfade
    357:357:void setOverlay(boolean) -> setOverlay
    524:567:void setRound(float) -> setRound
    473:511:void setRoundPercent(float) -> setRoundPercent
    368:369:void setSaturation(float) -> setSaturation
    406:407:void setWarmth(float) -> setWarmth
androidx.constraintlayout.utils.widget.ImageFilterView$1 -> androidx.constraintlayout.utils.widget.ImageFilterView$1:
# {"id":"sourceFile","fileName":"ImageFilterView.java"}
    484:484:void <init>(androidx.constraintlayout.utils.widget.ImageFilterView) -> <init>
    487:490:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.ImageFilterView$2 -> androidx.constraintlayout.utils.widget.ImageFilterView$2:
# {"id":"sourceFile","fileName":"ImageFilterView.java"}
    543:543:void <init>(androidx.constraintlayout.utils.widget.ImageFilterView) -> <init>
    546:548:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix -> androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix:
# {"id":"sourceFile","fileName":"ImageFilterView.java"}
    86:93:void <init>() -> <init>
    225:247:void brightness(float) -> brightness
    106:128:void saturation(float) -> saturation
    251:279:void updateMatrix(android.widget.ImageView) -> updateMatrix
    144:220:void warmth(float) -> warmth
androidx.constraintlayout.utils.widget.MockView -> androidx.constraintlayout.utils.widget.MockView:
# {"id":"sourceFile","fileName":"MockView.java"}
    23:37:void <init>(android.content.Context) -> <init>
    23:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    23:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    52:82:void init(android.content.Context,android.util.AttributeSet) -> init
    87:108:void onDraw(android.graphics.Canvas) -> onDraw
androidx.constraintlayout.utils.widget.MotionTelltales -> androidx.constraintlayout.utils.widget.MotionTelltales:
# {"id":"sourceFile","fileName":"MotionTelltales.java"}
    47:56:void <init>(android.content.Context) -> <init>
    47:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:85:void init(android.content.Context,android.util.AttributeSet) -> init
    90:90:void onAttachedToWindow() -> onAttachedToWindow
    106:131:void onDraw(android.graphics.Canvas) -> onDraw
    100:101:void onLayout(boolean,int,int,int,int) -> onLayout
    94:95:void setText(java.lang.CharSequence) -> setText
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
# {"id":"sourceFile","fileName":"Barrier.java"}
    118:119:void <init>(android.content.Context) -> <init>
    123:124:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    128:129:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    219:219:boolean allowsGoneWidget() -> allowsGoneWidget
    239:239:int getMargin() -> getMargin
    138:138:int getType() -> getType
    193:211:void init(android.util.AttributeSet) -> init
    253:260:void loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.solver.widgets.HelperWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> loadParameters
    184:184:void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> resolveRtl
    215:215:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    228:230:void setDpMargin(int) -> setDpMargin
    248:248:void setMargin(int) -> setMargin
    147:147:void setType(int) -> setType
    151:178:void updateType(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> updateType
androidx.constraintlayout.widget.ConstraintAttribute -> androidx.constraintlayout.widget.ConstraintAttribute:
# {"id":"sourceFile","fileName":"ConstraintAttribute.java"}
    211:214:void <init>(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType,java.lang.Object) -> <init>
    217:220:void <init>(androidx.constraintlayout.widget.ConstraintAttribute,java.lang.Object) -> <init>
    0:0:int clamp(int) -> clamp
    250:271:java.util.HashMap extractAttributes(java.util.HashMap,android.view.View) -> extractAttributes
    62:62:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType getType() -> getType
    103:116:float getValueToInterpolate() -> getValueToInterpolate
    122:149:void getValuesToInterpolate(float[]) -> getValuesToInterpolate
    88:88:int noOfInterpValues() -> noOfInterpValues
    399:444:void parse(android.content.Context,org.xmlpull.v1.XmlPullParser,java.util.HashMap) -> parse
    278:325:void setAttributes(android.view.View,java.util.HashMap) -> setAttributes
    340:394:void setInterpolatedValue(android.view.View,float[]) -> setInterpolatedValue
    225:243:void setValue(java.lang.Object) -> setValue
androidx.constraintlayout.widget.ConstraintAttribute$1 -> androidx.constraintlayout.widget.ConstraintAttribute$1:
# {"id":"sourceFile","fileName":"ConstraintAttribute.java"}
    88:88:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType -> androidx.constraintlayout.widget.ConstraintAttribute$AttributeType:
# {"id":"sourceFile","fileName":"ConstraintAttribute.java"}
    51:58:void <clinit>() -> <clinit>
    51:51:void <init>(java.lang.String,int) -> <init>
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String) -> valueOf
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values() -> values
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
# {"id":"sourceFile","fileName":"ConstraintHelper.java"}
    48:81:void <init>(android.content.Context) -> <init>
    48:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:93:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:259:void addID(java.lang.String) -> addID
    192:199:void addRscID(int) -> addRscID
    369:380:void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeatures
    390:392:void applyLayoutFeatures() -> applyLayoutFeatures
    503:516:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    270:303:int findId(java.lang.String) -> findId
    321:336:int findId(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String) -> findId
    173:173:int[] getReferencedIds() -> getReferencedIds
    443:451:android.view.View[] getViews(androidx.constraintlayout.widget.ConstraintLayout) -> getViews
    101:107:void init(android.util.AttributeSet) -> init
    483:496:void loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.solver.widgets.HelperWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> loadParameters
    115:117:void onAttachedToWindow() -> onAttachedToWindow
    0:0:void onDraw(android.graphics.Canvas) -> onDraw
    215:218:void onMeasure(int,int) -> onMeasure
    0:0:void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> resolveRtl
    347:359:void setIds(java.lang.String) -> setIds
    181:184:void setReferencedIds(int[]) -> setReferencedIds
    0:0:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
    0:0:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    0:0:void updatePreDraw(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreDraw
    403:428:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
    434:437:void updatePreLayout(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.Helper,android.util.SparseArray) -> updatePreLayout
    227:233:void validateParams() -> validateParams
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    493:1488:void <init>(android.content.Context) -> <init>
    493:1488:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    493:1488:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    481:481:java.util.ArrayList access$000(androidx.constraintlayout.widget.ConstraintLayout) -> access$000
    936:936:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1217:1442:void applyConstraintsFromLayoutParams(boolean,android.view.View,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyConstraintsFromLayoutParams
    1847:1847:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1873:1915:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    3151:3152:void forceLayout() -> forceLayout
    481:481:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1831:1831:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    481:481:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1823:1823:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1839:1839:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    552:555:java.lang.Object getDesignInformation(int,java.lang.Object) -> getDesignInformation
    1088:1088:int getMaxHeight() -> getMaxHeight
    1078:1078:int getMaxWidth() -> getMaxWidth
    1041:1041:int getMinHeight() -> getMinHeight
    1031:1031:int getMinWidth() -> getMinWidth
    1815:1815:int getOptimizationLevel() -> getOptimizationLevel
    1633:1637:int getPaddingWidth() -> getPaddingWidth
    1450:1462:androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int) -> getTargetWidget
    1865:1865:android.view.View getViewById(int) -> getViewById
    1473:1475:androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    878:919:void init(android.util.AttributeSet,int,int) -> init
    1622:1623:boolean isRtl() -> isRtl
    3156:3163:void markHierarchyDirty() -> markHierarchyDirty
    1738:1776:void onLayout(boolean,int,int,int,int) -> onLayout
    1590:1609:void onMeasure(int,int) -> onMeasure
    959:980:void onViewAdded(android.view.View) -> onViewAdded
    989:995:void onViewRemoved(android.view.View) -> onViewRemoved
    928:928:void parseLayoutDescription(int) -> parseLayoutDescription
    947:947:void removeView(android.view.View) -> removeView
    3145:3146:void requestLayout() -> requestLayout
    1550:1572:void resolveMeasuredDimension(int,int,int,int,boolean,boolean) -> resolveMeasuredDimension
    1500:1532:void resolveSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> resolveSystem
    1109:1207:void setChildrenConstraints() -> setChildrenConstraints
    1856:1856:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    534:544:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> setDesignInformation
    587:589:void setId(int) -> setId
    1063:1067:void setMaxHeight(int) -> setMaxHeight
    1050:1054:void setMaxWidth(int) -> setMaxWidth
    1017:1021:void setMinHeight(int) -> setMinHeight
    1004:1008:void setMinWidth(int) -> setMinWidth
    1966:1967:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    1804:1805:void setOptimizationLevel(int) -> setOptimizationLevel
    1647:1712:void setSelfDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int) -> setSelfDimensionBehaviour
    1724:1725:void setState(int,int,int) -> setState
    0:0:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1092:1103:boolean updateHierarchy() -> updateHierarchy
androidx.constraintlayout.widget.ConstraintLayout$1 -> androidx.constraintlayout.widget.ConstraintLayout$1:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    660:660:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    2091:2948:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2091:2999:void <init>(int,int) -> <init>
    2091:3003:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3136:3136:java.lang.String getConstraintTag() -> getConstraintTag
    2399:2399:androidx.constraintlayout.solver.widgets.ConstraintWidget getConstraintWidget() -> getConstraintWidget
    3012:3123:void resolveLayoutDirection(int) -> resolveLayoutDirection
    2952:2994:void validate() -> validate
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    2540:2593:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$Measurer -> androidx.constraintlayout.widget.ConstraintLayout$Measurer:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    617:618:void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout) -> <init>
    609:614:void captureLayoutInfos(int,int,int,int,int,int) -> captureLayoutInfos
    857:869:void didMeasures() -> didMeasures
    628:846:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure) -> measure
androidx.constraintlayout.widget.ConstraintLayoutStates -> androidx.constraintlayout.widget.ConstraintLayoutStates:
# {"id":"sourceFile","fileName":"ConstraintLayoutStates.java"}
    42:50:void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    285:342:void load(android.content.Context,int) -> load
    347:370:void parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
    0:0:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    73:124:void updateConstraints(int,float,float) -> updateConstraints
androidx.constraintlayout.widget.ConstraintLayoutStates$State -> androidx.constraintlayout.widget.ConstraintLayoutStates$State:
# {"id":"sourceFile","fileName":"ConstraintLayoutStates.java"}
    141:167:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    171:171:void add(androidx.constraintlayout.widget.ConstraintLayoutStates$Variant) -> add
    175:176:int findMatch(float,float) -> findMatch
androidx.constraintlayout.widget.ConstraintLayoutStates$Variant -> androidx.constraintlayout.widget.ConstraintLayoutStates$Variant:
# {"id":"sourceFile","fileName":"ConstraintLayoutStates.java"}
    186:235:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    258:268:boolean match(float,float) -> match
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.ConstraintSet:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    220:399:void <clinit>() -> <clinit>
    74:223:void <init>() -> <init>
    74:74:int access$100(android.content.res.TypedArray,int,int) -> access$100
    74:74:int[] access$200() -> access$200
    1607:1621:void applyCustomAttributes(androidx.constraintlayout.widget.ConstraintLayout) -> applyCustomAttributes
    1585:1587:void applyTo(androidx.constraintlayout.widget.ConstraintLayout) -> applyTo
    1635:1640:void applyToHelper(androidx.constraintlayout.widget.ConstraintHelper,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyToHelper
    1662:1772:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean) -> applyToInternal
    1652:1654:void applyToLayoutParams(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyToLayoutParams
    1478:1478:void clone(android.content.Context,int) -> clone
    1499:1546:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> clone
    1557:1575:void clone(androidx.constraintlayout.widget.Constraints) -> clone
    2712:2715:void constrainCircle(int,int,int,float) -> constrainCircle
    3750:3780:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    3417:3420:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    3241:3244:androidx.constraintlayout.widget.ConstraintSet$Constraint get(int) -> get
    3789:3790:androidx.constraintlayout.widget.ConstraintSet$Constraint getConstraint(int) -> getConstraint
    2472:2472:int getHeight(int) -> getHeight
    3799:3802:int[] getKnownIds() -> getKnownIds
    407:407:androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int) -> getParameters
    2462:2462:int getVisibility(int) -> getVisibility
    2452:2452:int getVisibilityMode(int) -> getVisibilityMode
    2482:2482:int getWidth(int) -> getWidth
    3276:3307:void load(android.content.Context,int) -> load
    3321:3404:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    3409:3411:int lookupID(android.content.res.TypedArray,int,int) -> lookupID
    3425:3744:void populateConstraint(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> populateConstraint
    417:439:void readFallback(androidx.constraintlayout.widget.ConstraintSet) -> readFallback
    452:506:void readFallback(androidx.constraintlayout.widget.ConstraintLayout) -> readFallback
    3822:3822:void setForceId(boolean) -> setForceId
    3832:3832:void setValidateOnParse(boolean) -> setValidateOnParse
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.ConstraintSet$Constraint:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    1256:1263:void <init>() -> <init>
    1256:1256:void access$000(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> access$000
    1256:1256:void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$300
    1256:1256:void access$400(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$400
    1401:1466:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyTo
    1256:1256:java.lang.Object clone() -> clone
    1297:1302:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
    1336:1396:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> fillFrom
    1308:1314:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
    1319:1332:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
androidx.constraintlayout.widget.ConstraintSet$Layout -> androidx.constraintlayout.widget.ConstraintSet$Layout:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    654:767:void <clinit>() -> <clinit>
    517:581:void <init>() -> <init>
    584:651:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Layout) -> copyFrom
    771:970:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Motion -> androidx.constraintlayout.widget.ConstraintSet$Motion:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    1198:1212:void <clinit>() -> <clinit>
    1179:1186:void <init>() -> <init>
    1189:1195:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Motion) -> copyFrom
    1216:1248:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$PropertySet -> androidx.constraintlayout.widget.ConstraintSet$PropertySet:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    1139:1144:void <init>() -> <init>
    1147:1151:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$PropertySet) -> copyFrom
    1155:1172:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Transform -> androidx.constraintlayout.widget.ConstraintSet$Transform:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    1057:1081:void <clinit>() -> <clinit>
    1026:1039:void <init>() -> <init>
    1042:1054:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Transform) -> copyFrom
    1085:1132:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.Constraints -> androidx.constraintlayout.widget.Constraints:
# {"id":"sourceFile","fileName":"Constraints.java"}
    41:42:void <init>(android.content.Context) -> <init>
    46:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:54:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    135:135:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    147:147:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    151:156:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
    0:0:void init(android.util.AttributeSet) -> init
    0:0:void onLayout(boolean,int,int,int,int) -> onLayout
androidx.constraintlayout.widget.Constraints$LayoutParams -> androidx.constraintlayout.widget.Constraints$LayoutParams:
# {"id":"sourceFile","fileName":"Constraints.java"}
    67:82:void <init>(int,int) -> <init>
    67:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.ConstraintsChangedListener -> androidx.constraintlayout.widget.ConstraintsChangedListener:
# {"id":"sourceFile","fileName":"ConstraintsChangedListener.java"}
androidx.constraintlayout.widget.Group -> androidx.constraintlayout.widget.Group:
# {"id":"sourceFile","fileName":"Group.java"}
    40:40:void <init>(android.content.Context) -> <init>
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:57:void init(android.util.AttributeSet) -> init
    62:63:void onAttachedToWindow() -> onAttachedToWindow
    74:75:void setElevation(float) -> setElevation
    68:69:void setVisibility(int) -> setVisibility
    84:86:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
# {"id":"sourceFile","fileName":"Guideline.java"}
    55:56:void <init>(android.content.Context) -> <init>
    60:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    0:0:void draw(android.graphics.Canvas) -> draw
    93:93:void onMeasure(int,int) -> onMeasure
    102:104:void setGuidelineBegin(int) -> setGuidelineBegin
    113:115:void setGuidelineEnd(int) -> setGuidelineEnd
    123:125:void setGuidelinePercent(float) -> setGuidelinePercent
    0:0:void setVisibility(int) -> setVisibility
androidx.constraintlayout.widget.Placeholder -> androidx.constraintlayout.widget.Placeholder:
# {"id":"sourceFile","fileName":"Placeholder.java"}
    45:51:void <init>(android.content.Context) -> <init>
    45:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    112:112:android.view.View getContent() -> getContent
    104:104:int getEmptyVisibility() -> getEmptyVisibility
    70:81:void init(android.util.AttributeSet) -> init
    120:137:void onDraw(android.graphics.Canvas) -> onDraw
    168:183:void setContentId(int) -> setContentId
    95:95:void setEmptyVisibility(int) -> setEmptyVisibility
    193:206:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    146:158:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
androidx.constraintlayout.widget.R$styleable -> androidx.constraintlayout.widget.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.StateSet -> androidx.constraintlayout.widget.StateSet:
# {"id":"sourceFile","fileName":"StateSet.java"}
    41:56:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    176:204:int convertToConstraintSet(int,int,float,float) -> convertToConstraintSet
    70:135:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    163:163:int stateGetConstraintID(int,int,int) -> stateGetConstraintID
    212:238:int updateConstraints(int,int,float,float) -> updateConstraints
androidx.constraintlayout.widget.StateSet$State -> androidx.constraintlayout.widget.StateSet$State:
# {"id":"sourceFile","fileName":"StateSet.java"}
    248:269:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    273:273:void add(androidx.constraintlayout.widget.StateSet$Variant) -> add
    277:278:int findMatch(float,float) -> findMatch
androidx.constraintlayout.widget.StateSet$Variant -> androidx.constraintlayout.widget.StateSet$Variant:
# {"id":"sourceFile","fileName":"StateSet.java"}
    288:325:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    348:358:boolean match(float,float) -> match
androidx.constraintlayout.widget.VirtualLayout -> androidx.constraintlayout.widget.VirtualLayout:
# {"id":"sourceFile","fileName":"VirtualLayout.java"}
    35:35:void <init>(android.content.Context) -> <init>
    39:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    48:57:void init(android.util.AttributeSet) -> init
    72:91:void onAttachedToWindow() -> onAttachedToWindow
    0:0:void onMeasure(androidx.constraintlayout.solver.widgets.VirtualLayout,int,int) -> onMeasure
    114:115:void setElevation(float) -> setElevation
    105:106:void setVisibility(int) -> setVisibility
androidx.coordinatorlayout.R$styleable -> androidx.coordinatorlayout.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    118:152:void <clinit>() -> <clinit>
    207:207:void <init>(android.content.Context) -> <init>
    211:211:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:252:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:158:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1615:1626:void addPreDrawListener() -> addPreDrawListener
    1760:1760:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    0:0:int clamp(int,int,int) -> clamp
    1066:1077:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    854:867:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1523:1531:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1253:1277:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    332:343:void drawableStateChanged() -> drawableStateChanged
    1585:1598:void ensurePreDrawListener() -> ensurePreDrawListener
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1755:1755:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1740:1740:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1745:1750:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    979:986:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1547:1552:java.util.List getDependencies(android.view.View) -> getDependencies
    1576:1577:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1566:1571:java.util.List getDependents(android.view.View) -> getDependents
    732:732:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1090:1095:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    992:1062:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    600:610:int getKeyline(int) -> getKeyline
    965:966:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    401:401:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    2017:2017:int getNestedScrollAxes() -> getNestedScrollAxes
    654:682:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    327:327:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    742:742:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    737:737:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    444:455:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1607:1607:boolean hasDependencies(android.view.View) -> hasDependencies
    1704:1710:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1193:1216:void layoutChild(android.view.View,int) -> layoutChild
    1106:1114:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1114:1115:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1130:1182:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1413:1490:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1653:1690:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    264:278:void onAttachedToWindow() -> onAttachedToWindow
    1307:1408:void onChildViewsChanged(int) -> onChildViewsChanged
    283:292:void onDetachedFromWindow() -> onDetachedFromWindow
    926:931:void onDraw(android.graphics.Canvas) -> onDraw
    532:542:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    906:919:void onLayout(boolean,int,int,int,int) -> onLayout
    889:899:void onLayoutChild(android.view.View,int) -> onLayoutChild
    767:849:void onMeasure(int,int) -> onMeasure
    760:760:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1964:1984:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1994:2009:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1913:1913:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1923:1955:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1852:1852:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1859:1859:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1868:1907:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1796:1796:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1802:1815:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3241:3260:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3269:3286:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1765:1765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1773:1788:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1823:1823:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1829:1846:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    555:584:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    615:649:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    466:525:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    689:721:void prepareChildren() -> prepareChildren
    953:954:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    164:165:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1634:1640:void removePreDrawListener() -> removePreDrawListener
    3293:3301:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    592:595:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    412:436:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    0:0:int resolveAnchoredChildGravity(int) -> resolveAnchoredChildGravity
    0:0:int resolveGravity(int) -> resolveGravity
    0:0:int resolveKeylineGravity(int) -> resolveKeylineGravity
    938:939:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1494:1498:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1503:1507:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    259:259:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    302:316:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    380:380:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    369:369:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    354:358:void setVisibility(int) -> setVisibility
    384:391:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3309:3327:void setupForInsets() -> setupForInsets
    349:349:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$$ExternalSyntheticApiModelOutline0 -> androidx.coordinatorlayout.widget.CoordinatorLayout$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.coordinatorlayout.widget.CoordinatorLayout$$InternalSyntheticApiModelOutline$1$f6dcace6decf12b06be2bc9b49299cd0c53491d5a28b623a9096bfd229a98271$0.m(androidx.coordinatorlayout.widget.CoordinatorLayout,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    3312:3312:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3316:3316:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    2091:2091:void <init>() -> <init>
    2102:2102:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2229:2229:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    0:0:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    0:0:int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    0:0:float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    0:0:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    0:0:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    0:0:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    0:0:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    0:0:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    0:0:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    0:0:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    0:0:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    0:0:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    0:0:boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    0:0:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    0:0:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    2634:2634:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    0:0:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    2541:2541:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2583:2585:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    0:0:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    2470:2470:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    0:0:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    0:0:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2778:2778:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    0:0:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    2427:2427:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    0:0:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    2510:2510:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    0:0:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    3218:3218:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3223:3224:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3230:3233:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    2809:2869:void <init>(int,int) -> <init>
    2809:2903:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2809:2908:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2809:2912:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2809:2916:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3003:3003:boolean checkAnchorChanged() -> checkAnchorChanged
    3100:3102:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    3014:3017:boolean didBlockInteraction() -> didBlockInteraction
    3125:3133:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2926:2926:int getAnchorId() -> getAnchorId
    2952:2952:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    3079:3079:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2995:2995:android.graphics.Rect getLastChildRect() -> getLastChildRect
    3033:3038:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    3071:3073:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    3087:3087:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    3054:3054:void resetNestedScroll(int) -> resetNestedScroll
    3050:3050:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3141:3175:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2965:2977:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    3083:3083:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2987:2987:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    3060:3063:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3210:3213:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3186:3202:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    2020:2020:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    2023:2023:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    3373:3373:void <clinit>() -> <clinit>
    3335:3346:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3351:3351:void <init>(android.os.Parcelable) -> <init>
    3356:3369:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3377:3377:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3382:3382:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object[] newArray(int) -> newArray
    3387:3387:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    2031:2031:int compare(java.lang.Object,java.lang.Object) -> compare
    2034:2035:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
# {"id":"sourceFile","fileName":"DirectedAcyclicGraph.java"}
    39:44:void <init>() -> <init>
    76:88:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:55:void addNode(java.lang.Object) -> addNode
    143:149:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:193:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:207:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    110:116:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:132:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:214:void poolList(java.util.ArrayList) -> poolList
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
# {"id":"sourceFile","fileName":"ViewGroupUtils.java"}
    35:36:void <clinit>() -> <clinit>
    77:78:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:92:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:65:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.R$styleable -> androidx.core.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.core.animation.AnimatorKt$addListener$1 -> androidx.core.animation.AnimatorKt$addListener$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.animation.Animator) -> invoke
    96:96:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.animation.AnimatorKt$addListener$2 -> androidx.core.animation.AnimatorKt$addListener$2:
# {"id":"sourceFile","fileName":"Animator.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.animation.Animator) -> invoke
    97:97:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.animation.AnimatorKt$addListener$3 -> androidx.core.animation.AnimatorKt$addListener$3:
# {"id":"sourceFile","fileName":"Animator.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.animation.Animator) -> invoke
    98:98:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.animation.AnimatorKt$addListener$4 -> androidx.core.animation.AnimatorKt$addListener$4:
# {"id":"sourceFile","fileName":"Animator.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.animation.Animator) -> invoke
    99:99:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    0:0:void $r8$lambda$gwIVdSe1wJYEvrkKzQghxQatlNg(android.app.Activity) -> $r8$lambda$gwIVdSe1wJYEvrkKzQghxQatlNg
      # {"id":"com.android.tools.r8.synthesized"}
    300:300:void finishAffinity(android.app.Activity) -> finishAffinity
    672:674:void lambda$recreate$0(android.app.Activity) -> lambda$recreate$0
    663:671:void recreate(android.app.Activity) -> recreate
    524:560:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    375:381:android.view.View requireViewById(android.app.Activity,int) -> requireViewById
    246:246:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    283:283:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.core.app.ActivityCompat$$ExternalSyntheticLambda0 -> androidx.core.app.ActivityCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.Activity androidx.core.app.ActivityCompat$$InternalSyntheticLambda$1$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.f$0 -> f$0
    0:0:void androidx.core.app.ActivityCompat$$InternalSyntheticLambda$1$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.<init>(android.app.Activity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.app.ActivityCompat$$InternalSyntheticLambda$1$6e9d625f7499cc02f53fe1dade3df85b3b9ea91cb0138464c0ece30ad7359ed5$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    560:560:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    563:574:void run() -> run
androidx.core.app.ActivityCompat$Api16Impl -> androidx.core.app.ActivityCompat$Api16Impl:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    822:822:void finishAffinity(android.app.Activity) -> finishAffinity
    809:809:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    816:816:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.core.app.ActivityCompat$Api23Impl -> androidx.core.app.ActivityCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    903:904:void onSharedElementsReady(java.lang.Object) -> onSharedElementsReady
    893:893:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    898:898:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
androidx.core.app.ActivityCompat$Api28Impl -> androidx.core.app.ActivityCompat$Api28Impl:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    881:881:java.lang.Object requireViewById(android.app.Activity,int) -> requireViewById
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback -> androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator -> androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
androidx.core.app.ActivityOptionsCompat -> androidx.core.app.ActivityOptionsCompat:
# {"id":"sourceFile","fileName":"ActivityOptionsCompat.java"}
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    91:99:void <clinit>() -> <clinit>
    378:378:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    358:359:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    320:322:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    306:308:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    334:349:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    368:369:java.lang.reflect.Field getTokenField() -> getTokenField
    330:330:boolean needsRelaunchCall() -> needsRelaunchCall
    257:269:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity) -> queueOnStopIfNecessary
    109:169:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    143:143:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    146:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    159:159:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    166:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    269:269:void <init>(java.lang.Object,java.lang.Object) -> <init>
    273:285:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
# {"id":"sourceFile","fileName":"ActivityRecreator.java"}
    183:195:void <init>(android.app.Activity) -> <init>
    0:0:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    241:246:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    218:226:void onActivityPaused(android.app.Activity) -> onActivityPaused
    0:0:void onActivityResumed(android.app.Activity) -> onActivityResumed
    0:0:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    207:208:void onActivityStarted(android.app.Activity) -> onActivityStarted
    0:0:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    201:216:int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String) -> checkOrNoteProxyOp
    178:180:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    78:79:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.AppOpsManagerCompat$Api23Impl -> androidx.core.app.AppOpsManagerCompat$Api23Impl:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    271:271:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    276:276:int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String) -> noteProxyOp
    282:282:int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    266:266:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.AppOpsManagerCompat$Api29Impl -> androidx.core.app.AppOpsManagerCompat$Api29Impl:
# {"id":"sourceFile","fileName":"AppOpsManagerCompat.java"}
    246:246:int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String) -> checkOpNoThrow
    254:254:java.lang.String getOpPackageName(android.content.Context) -> getOpPackageName
    233:233:android.app.AppOpsManager getSystemService(android.content.Context) -> getSystemService
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    51:66:void <init>() -> <init>
    140:144:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    131:135:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    116:116:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    88:89:void onCreate(android.os.Bundle) -> onCreate
    95:96:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    169:169:boolean shouldDumpInternalState(java.lang.String[]) -> shouldDumpInternalState
    174:185:boolean shouldSkipDump(java.lang.String[]) -> shouldSkipDump
    126:126:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
# {"id":"sourceFile","fileName":"CoreComponentFactory.java"}
    39:39:void <init>() -> <init>
    0:0:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.JobIntentService -> androidx.core.app.JobIntentService:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
    109:110:void <clinit>() -> <clinit>
    103:424:void <init>() -> <init>
    644:653:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    603:607:boolean doStopCurrentWork() -> doStopCurrentWork
    612:618:void ensureProcessorRunningLocked(boolean) -> ensureProcessorRunningLocked
    533:543:androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> getWorkEnqueuer
    469:470:android.os.IBinder onBind(android.content.Intent) -> onBind
    430:438:void onCreate() -> onCreate
    480:485:void onDestroy() -> onDestroy
    448:455:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    0:0:boolean onStopCurrentWork() -> onStopCurrentWork
    623:639:void processorFinished() -> processorFinished
androidx.core.app.JobIntentService$CommandProcessor -> androidx.core.app.JobIntentService$CommandProcessor:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
    387:387:void <init>(androidx.core.app.JobIntentService) -> <init>
    387:387:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    394:398:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    387:387:void onCancelled(java.lang.Object) -> onCancelled
    408:408:void onCancelled(java.lang.Void) -> onCancelled
    387:387:void onPostExecute(java.lang.Object) -> onPostExecute
    413:413:void onPostExecute(java.lang.Void) -> onPostExecute
androidx.core.app.JobIntentService$CompatJobEngine -> androidx.core.app.JobIntentService$CompatJobEngine:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
androidx.core.app.JobIntentService$CompatWorkEnqueuer -> androidx.core.app.JobIntentService$CompatWorkEnqueuer:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
    167:178:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    228:238:void serviceProcessingFinished() -> serviceProcessingFinished
    214:223:void serviceProcessingStarted() -> serviceProcessingStarted
    205:209:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.JobIntentService$CompatWorkItem -> androidx.core.app.JobIntentService$CompatWorkItem:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
    367:369:void <init>(androidx.core.app.JobIntentService,android.content.Intent,int) -> <init>
    380:380:void complete() -> complete
    374:374:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$GenericWorkItem -> androidx.core.app.JobIntentService$GenericWorkItem:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
androidx.core.app.JobIntentService$JobServiceEngineImpl -> androidx.core.app.JobIntentService$JobServiceEngineImpl:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
    253:280:void <init>(androidx.core.app.JobIntentService) -> <init>
    285:285:android.os.IBinder compatGetBinder() -> compatGetBinder
    315:323:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    291:293:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    300:305:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.core.app.JobIntentService$JobServiceEngineImpl$$ExternalSyntheticApiModelOutline0 -> androidx.core.app.JobIntentService$JobServiceEngineImpl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.IBinder androidx.core.app.JobIntentService$JobServiceEngineImpl$$InternalSyntheticApiModelOutline$1$68af0a7e46e467315c144c608634e1e4c80ec5af1a33fd20d90865105b280e4b$0.m(androidx.core.app.JobIntentService$JobServiceEngineImpl) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.JobIntentService$JobServiceEngineImpl$$ExternalSyntheticApiModelOutline1 -> androidx.core.app.JobIntentService$JobServiceEngineImpl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.app.job.JobWorkItem androidx.core.app.JobIntentService$JobServiceEngineImpl$$InternalSyntheticApiModelOutline$1$ebcacfecb6783417b73e5ea173a4d8004aeacce96fe4c10fe466eb1f942c2d4b$0.m(android.app.job.JobParameters) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.JobIntentService$JobServiceEngineImpl$$ExternalSyntheticApiModelOutline2 -> androidx.core.app.JobIntentService$JobServiceEngineImpl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.content.Intent androidx.core.app.JobIntentService$JobServiceEngineImpl$$InternalSyntheticApiModelOutline$1$ebcacfecb6783417b73e5ea173a4d8004aeacce96fe4c10fe466eb1f942c2d4b$1.m(android.app.job.JobWorkItem) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
    259:260:void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    270:274:void complete() -> complete
    265:265:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem$$ExternalSyntheticApiModelOutline0 -> androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem$$InternalSyntheticApiModelOutline$2$c841524f85d99407c4162859db7c56ded9bb83d00e6c564863494f11e016c3b7$0.m(android.app.job.JobParameters,android.app.job.JobWorkItem) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.JobIntentService$JobWorkEnqueuer -> androidx.core.app.JobIntentService$JobWorkEnqueuer:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
    336:340:void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
androidx.core.app.JobIntentService$WorkEnqueuer -> androidx.core.app.JobIntentService$WorkEnqueuer:
# {"id":"sourceFile","fileName":"JobIntentService.java"}
    122:123:void <init>(android.content.ComponentName) -> <init>
    127:131:void ensureJobId(int) -> ensureJobId
    0:0:void serviceProcessingFinished() -> serviceProcessingFinished
    0:0:void serviceProcessingStarted() -> serviceProcessingStarted
    0:0:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.MultiWindowModeChangedInfo -> androidx.core.app.MultiWindowModeChangedInfo:
# {"id":"sourceFile","fileName":"MultiWindowModeChangedInfo.java"}
    39:41:void <init>(boolean) -> <init>
    54:56:void <init>(boolean,android.content.res.Configuration) -> <init>
    65:65:boolean isInMultiWindowMode() -> isInMultiWindowMode
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
# {"id":"sourceFile","fileName":"NavUtils.java"}
    134:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    197:206:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    222:225:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    242:278:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    111:111:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    63:63:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NavUtils$Api16Impl -> androidx.core.app.NavUtils$Api16Impl:
# {"id":"sourceFile","fileName":"NavUtils.java"}
    305:305:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    300:300:boolean navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    295:295:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompatSideChannelService -> androidx.core.app.NotificationCompatSideChannelService:
# {"id":"sourceFile","fileName":"NotificationCompatSideChannelService.java"}
    45:45:void <init>() -> <init>
    48:48:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
# {"id":"sourceFile","fileName":"NotificationManagerCompat.java"}
    105:114:void <clinit>() -> <clinit>
    164:166:void <init>(android.content.Context) -> <init>
    235:249:boolean areNotificationsEnabled() -> areNotificationsEnabled
    161:161:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> from
androidx.core.app.NotificationManagerCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.app.NotificationManagerCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.core.app.NotificationManagerCompat$$InternalSyntheticApiModelOutline$1$a72af6d5190063792df6d39a579bc37c91253d0097c1bdf991345448519d2197$0.m(android.app.NotificationManager) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.OnMultiWindowModeChangedProvider -> androidx.core.app.OnMultiWindowModeChangedProvider:
# {"id":"sourceFile","fileName":"OnMultiWindowModeChangedProvider.java"}
androidx.core.app.OnPictureInPictureModeChangedProvider -> androidx.core.app.OnPictureInPictureModeChangedProvider:
# {"id":"sourceFile","fileName":"OnPictureInPictureModeChangedProvider.java"}
androidx.core.app.PictureInPictureModeChangedInfo -> androidx.core.app.PictureInPictureModeChangedInfo:
# {"id":"sourceFile","fileName":"PictureInPictureModeChangedInfo.java"}
    39:41:void <init>(boolean) -> <init>
    54:56:void <init>(boolean,android.content.res.Configuration) -> <init>
    65:65:boolean isInPictureInPictureMode() -> isInPictureInPictureMode
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
# {"id":"sourceFile","fileName":"RemoteActionCompat.java"}
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.SharedElementCallback -> androidx.core.app.SharedElementCallback:
# {"id":"sourceFile","fileName":"SharedElementCallback.java"}
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
# {"id":"sourceFile","fileName":"TaskStackBuilder.java"}
    81:85:void <init>(android.content.Context) -> <init>
    123:123:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    141:148:androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    162:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    204:213:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    97:97:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    250:250:android.content.Intent editIntentAt(int) -> editIntentAt
    222:222:int getIntentCount() -> getIntentCount
    260:260:java.util.Iterator iterator() -> iterator
    272:272:void startActivities() -> startActivities
    287:298:void startActivities(android.os.Bundle) -> startActivities
androidx.core.app.TaskStackBuilder$SupportParentable -> androidx.core.app.TaskStackBuilder$SupportParentable:
# {"id":"sourceFile","fileName":"TaskStackBuilder.java"}
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportCallback.java"}
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportCallback.java"}
    45:49:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback asInterface(android.os.IBinder) -> asInterface
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportCallback.java"}
    91:92:void <init>(android.os.IBinder) -> <init>
    96:96:android.os.IBinder asBinder() -> asBinder
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportService.java"}
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub:
# {"id":"sourceFile","fileName":"IUnusedAppRestrictionsBackportService.java"}
    35:36:void <init>() -> <init>
    0:0:android.os.IBinder asBinder() -> asBinder
    61:82:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    172:175:void <clinit>() -> <clinit>
    594:601:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    577:580:int getColor(android.content.Context,int) -> getColor
    558:558:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    522:522:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    501:501:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    448:448:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    732:735:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
    767:772:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    869:872:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
    291:291:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    318:318:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    973:973:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    978:978:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api19Impl -> androidx.core.content.ContextCompat$Api19Impl:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    990:990:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    995:995:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    1000:1000:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1022:1022:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    1012:1012:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    1017:1017:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.ContextCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1034:1034:int getColor(android.content.Context,int) -> getColor
    1039:1039:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    1044:1044:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
androidx.core.content.ContextCompat$Api28Impl -> androidx.core.content.ContextCompat$Api28Impl:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    1103:1103:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
androidx.core.content.ContextCompat$LegacyServiceMapHolder -> androidx.core.content.ContextCompat$LegacyServiceMapHolder:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
    896:961:void <clinit>() -> <clinit>
androidx.core.content.ContextKt -> R8$$REMOVED$$CLASS$$0:
# {"id":"sourceFile","fileName":"Context.kt"}
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
# {"id":"sourceFile","fileName":"FileProvider.java"}
    355:377:void <clinit>() -> <clinit>
    382:383:void <init>() -> <init>
    409:424:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    901:903:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    910:911:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    916:917:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    606:607:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    664:676:android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int) -> getFileProviderPathsMetaData
    641:655:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int) -> getPathStrategy
    558:563:java.lang.String getType(android.net.Uri) -> getType
    578:578:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    876:894:int modeToMode(java.lang.String) -> modeToMode
    0:0:boolean onCreate() -> onCreate
    630:632:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    691:734:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int) -> parsePathStrategy
    517:541:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    588:588:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$Api21Impl -> androidx.core.content.FileProvider$Api21Impl:
# {"id":"sourceFile","fileName":"FileProvider.java"}
    930:930:java.io.File[] getExternalMediaDirs(android.content.Context) -> getExternalMediaDirs
androidx.core.content.FileProvider$PathStrategy -> androidx.core.content.FileProvider$PathStrategy:
# {"id":"sourceFile","fileName":"FileProvider.java"}
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
# {"id":"sourceFile","fileName":"FileProvider.java"}
    779:782:void <init>(java.lang.String) -> <init>
    790:802:void addRoot(java.lang.String,java.io.File) -> addRoot
    845:864:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
androidx.core.content.OnConfigurationChangedProvider -> androidx.core.content.OnConfigurationChangedProvider:
# {"id":"sourceFile","fileName":"OnConfigurationChangedProvider.java"}
androidx.core.content.OnTrimMemoryProvider -> androidx.core.content.OnTrimMemoryProvider:
# {"id":"sourceFile","fileName":"OnTrimMemoryProvider.java"}
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
# {"id":"sourceFile","fileName":"PermissionChecker.java"}
    98:124:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    143:144:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.UnusedAppRestrictionsBackportCallback -> androidx.core.content.UnusedAppRestrictionsBackportCallback:
# {"id":"sourceFile","fileName":"UnusedAppRestrictionsBackportCallback.java"}
    40:41:void <init>(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) -> <init>
androidx.core.content.UnusedAppRestrictionsBackportService -> androidx.core.content.UnusedAppRestrictionsBackportService:
# {"id":"sourceFile","fileName":"UnusedAppRestrictionsBackportService.java"}
    40:50:void <init>() -> <init>
    70:70:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.content.UnusedAppRestrictionsBackportService$1 -> androidx.core.content.UnusedAppRestrictionsBackportService$1:
# {"id":"sourceFile","fileName":"UnusedAppRestrictionsBackportService.java"}
    51:51:void <init>(androidx.core.content.UnusedAppRestrictionsBackportService) -> <init>
    59:62:void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) -> isPermissionRevocationEnabledForApp
androidx.core.content.res.CamColor -> androidx.core.content.res.CamColor:
# {"id":"sourceFile","fileName":"CamColor.java"}
    128:137:void <init>(float,float,float,float,float,float,float,float,float) -> <init>
    290:294:float distance(androidx.core.content.res.CamColor) -> distance
    490:509:androidx.core.content.res.CamColor findCamByJ(float,float,float) -> findCamByJ
    160:160:androidx.core.content.res.CamColor fromColor(int) -> fromColor
    171:242:androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions) -> fromColorInViewingConditions
    253:253:androidx.core.content.res.CamColor fromJch(float,float,float) -> fromJch
    266:280:androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions) -> fromJchInFrame
    116:116:float getAStar() -> getAStar
    123:123:float getBStar() -> getBStar
    63:63:float getChroma() -> getChroma
    57:57:float getHue() -> getHue
    69:69:float getJ() -> getJ
    109:109:float getJStar() -> getJStar
    149:149:int toColor(float,float,float) -> toColor
    414:471:int toColor(float,float,float,androidx.core.content.res.ViewingConditions) -> toColor
    308:353:int viewed(androidx.core.content.res.ViewingConditions) -> viewed
    301:301:int viewedInSrgb() -> viewedInSrgb
androidx.core.content.res.CamUtils -> androidx.core.content.res.CamUtils:
# {"id":"sourceFile","fileName":"CamUtils.java"}
    52:73:void <clinit>() -> <clinit>
    101:101:int intFromLStar(float) -> intFromLStar
    111:111:float lStarFromInt(int) -> lStarFromInt
    121:121:float lStarFromY(float) -> lStarFromY
    0:0:float lerp(float,float,float) -> lerp
    163:163:float linearized(int) -> linearized
    137:144:float[] xyzFromInt(int) -> xyzFromInt
    127:131:float yFromInt(int) -> yFromInt
    151:151:float yFromLStar(float) -> yFromLStar
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
# {"id":"sourceFile","fileName":"ColorStateListInflaterCompat.java"}
    53:53:void <clinit>() -> <clinit>
    92:104:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    119:125:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    224:227:android.util.TypedValue getTypedValue() -> getTypedValue
    71:72:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    134:212:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    216:218:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    247:252:int modulateColorAlpha(int,float,float) -> modulateColorAlpha
    234:235:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
# {"id":"sourceFile","fileName":"ComplexColorCompat.java"}
    61:64:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:171:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:140:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    109:114:boolean onStateChanged(int[]) -> onStateChanged
    90:90:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    258:258:int getType(android.content.res.TypedArray,int) -> getType
    186:194:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    277:300:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    300:301:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    199:204:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    211:251:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    315:343:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    350:350:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    306:308:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$Api21Impl -> androidx.core.content.res.FontResourcesParserCompat$Api21Impl:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    372:372:int getType(android.content.res.TypedArray,int) -> getType
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    171:172:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    176:176:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    131:137:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    141:141:java.lang.String getFileName() -> getFileName
    161:161:int getResourceId() -> getResourceId
    157:157:int getTtcIndex() -> getTtcIndex
    153:153:java.lang.String getVariationSettings() -> getVariationSettings
    145:145:int getWeight() -> getWeight
    149:149:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
# {"id":"sourceFile","fileName":"FontResourcesParserCompat.java"}
    88:92:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String) -> <init>
    105:105:int getFetchStrategy() -> getFetchStrategy
    101:101:androidx.core.provider.FontRequest getRequest() -> getRequest
    115:115:java.lang.String getSystemFontFamilyName() -> getSystemFontFamilyName
    109:109:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
# {"id":"sourceFile","fileName":"GradientColorInflaterCompat.java"}
    195:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:142:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:185:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    204:209:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
# {"id":"sourceFile","fileName":"GradientColorInflaterCompat.java"}
    217:223:void <init>(java.util.List,java.util.List) -> <init>
    227:229:void <init>(int,int) -> <init>
    232:234:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
# {"id":"sourceFile","fileName":"GrowingArrayUtils.java"}
    42:48:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:61:int[] append(int[],int,int) -> append
    0:0:int growSize(int) -> growSize
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    75:80:void <clinit>() -> <clinit>
    296:304:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList,android.content.res.Resources$Theme) -> addColorStateListToCache
    272:288:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int) -> getCachedColorStateList
    436:439:android.graphics.Typeface getCachedFont(android.content.Context,int) -> getCachedFont
    230:246:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    137:137:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    170:170:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    408:411:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    523:529:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    543:546:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    316:319:android.util.TypedValue getTypedValue() -> getTypedValue
    256:262:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflateColorStateList
    308:310:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    568:574:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    600:660:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$Api21Impl -> androidx.core.content.res.ResourcesCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    705:705:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    711:711:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
androidx.core.content.res.ResourcesCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    693:693:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    688:688:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    355:358:void <init>(android.content.res.ColorStateList,android.content.res.Configuration,android.content.res.Resources$Theme) -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    328:330:void <init>(android.content.res.Resources,android.content.res.Resources$Theme) -> <init>
    336:339:boolean equals(java.lang.Object) -> equals
    344:344:int hashCode() -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    0:0:void $r8$lambda$3yv7dDJDSSH8XKTxkNkwYH6nK6w(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> $r8$lambda$3yv7dDJDSSH8XKTxkNkwYH6nK6w
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ogWJ7e4UAkgZnU7fNvmJ6umiBig(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> $r8$lambda$ogWJ7e4UAkgZnU7fNvmJ6umiBig
      # {"id":"com.android.tools.r8.synthesized"}
    490:490:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    478:478:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
    497:497:android.os.Handler getHandler(android.os.Handler) -> getHandler
    490:490:void lambda$callbackFailAsync$1(int) -> lambda$callbackFailAsync$1
    478:478:void lambda$callbackSuccessAsync$0(android.graphics.Typeface) -> lambda$callbackSuccessAsync$0
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda0 -> androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$0 -> f$0
    android.graphics.Typeface androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.f$1 -> f$1
    0:0:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$c2bd2b13acab29532b8305b19332e4b2946ea3f2308a446b41aca23adcb71af6$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda1 -> androidx.core.content.res.ResourcesCompat$FontCallback$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.content.res.ResourcesCompat$FontCallback androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.f$0 -> f$0
    int androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.f$1 -> f$1
    0:0:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.<init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.content.res.ResourcesCompat$FontCallback$$InternalSyntheticLambda$1$eb024717ed4c535c671b8ebfdb6d8b6605f4b7bfdc73b1f041999a70ce54ed62$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    753:756:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    778:778:void <clinit>() -> <clinit>
    785:803:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl -> androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    768:768:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.TypedArrayKt -> R8$$REMOVED$$CLASS$$1:
# {"id":"sourceFile","fileName":"TypedArray.kt"}
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
# {"id":"sourceFile","fileName":"TypedArrayUtils.java"}
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:180:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    253:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.content.res.ViewingConditions -> androidx.core.content.res.ViewingConditions:
# {"id":"sourceFile","fileName":"ViewingConditions.java"}
    53:56:void <clinit>() -> <clinit>
    112:122:void <init>(float,float,float,float,float,float,float[],float,float,float) -> <init>
    71:71:float getAw() -> getAw
    87:87:float getC() -> getC
    100:100:float getFl() -> getFl
    104:104:float getFlRoot() -> getFlRoot
    75:75:float getN() -> getN
    79:79:float getNbb() -> getNbb
    91:91:float getNc() -> getNc
    83:83:float getNcb() -> getNcb
    96:96:float[] getRgbD() -> getRgbD
    108:108:float getZ() -> getZ
    130:191:androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean) -> make
androidx.core.graphics.BlendModeCompat -> androidx.core.graphics.BlendModeCompat:
# {"id":"sourceFile","fileName":"BlendModeCompat.java"}
    27:419:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.core.graphics.BlendModeCompat valueOf(java.lang.String) -> valueOf
    27:27:androidx.core.graphics.BlendModeCompat[] values() -> values
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
# {"id":"sourceFile","fileName":"ColorUtils.java"}
    46:46:void <clinit>() -> <clinit>
    457:470:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    561:568:int XYZToColor(double,double,double) -> XYZToColor
    629:633:int blendARGB(int,int,float) -> blendARGB
    158:161:double calculateLuminance(int) -> calculateLuminance
    434:434:void colorToXYZ(int,double[]) -> colorToXYZ
    144:144:int compositeAlpha(int,int) -> compositeAlpha
    54:65:int compositeColors(int,int) -> compositeColors
    149:149:int compositeComponent(int,int,int,int,int) -> compositeComponent
    605:605:int constrain(int,int,int) -> constrain
    697:700:double[] getTempDouble3Array() -> getTempDouble3Array
    379:379:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
# {"id":"sourceFile","fileName":"Insets.java"}
    37:37:void <clinit>() -> <clinit>
    44:48:void <init>(int,int,int,int) -> <init>
    145:152:boolean equals(java.lang.Object) -> equals
    159:162:int hashCode() -> hashCode
    116:117:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    65:67:androidx.core.graphics.Insets of(int,int,int,int) -> of
    78:78:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    192:192:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    202:202:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    169:169:java.lang.String toString() -> toString
androidx.core.graphics.Insets$Api29Impl -> androidx.core.graphics.Insets$Api29Impl:
# {"id":"sourceFile","fileName":"Insets.java"}
    213:213:android.graphics.Insets of(int,int,int,int) -> of
androidx.core.graphics.PaintCompat -> androidx.core.graphics.PaintCompat:
# {"id":"sourceFile","fileName":"PaintCompat.java"}
    42:42:void <clinit>() -> <clinit>
    53:112:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
    149:155:androidx.core.util.Pair obtainEmptyRects() -> obtainEmptyRects
androidx.core.graphics.PaintCompat$Api23Impl -> androidx.core.graphics.PaintCompat$Api23Impl:
# {"id":"sourceFile","fileName":"PaintCompat.java"}
    183:183:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
# {"id":"sourceFile","fileName":"PathParser.java"}
    190:190:void addNode(java.util.ArrayList,char,float[]) -> addNode
    141:146:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    55:64:float[] copyOfRange(float[],int,int) -> copyOfRange
    97:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:79:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    123:125:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    260:299:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    174:175:int nextStart(java.lang.String,int) -> nextStart
    163:166:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
# {"id":"sourceFile","fileName":"PathParser.java"}
    199:199:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
# {"id":"sourceFile","fileName":"PathParser.java"}
    352:354:void <init>(char,float[]) -> <init>
    357:359:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    399:642:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:780:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:719:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    388:390:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    371:373:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
# {"id":"sourceFile","fileName":"TypefaceCompat.java"}
    50:69:void <clinit>() -> <clinit>
    286:297:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    255:255:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    152:189:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    223:227:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int,int) -> createFromResourcesFontFile
    110:120:java.lang.String createResourceUid(android.content.res.Resources,int,java.lang.String,int,int) -> createResourceUid
    83:83:android.graphics.Typeface findFromCache(android.content.res.Resources,int,java.lang.String,int,int) -> findFromCache
    131:134:android.graphics.Typeface getSystemFontFamily(java.lang.String) -> getSystemFontFamily
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter:
# {"id":"sourceFile","fileName":"TypefaceCompat.java"}
    371:372:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    384:385:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    377:378:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatApi21Impl.java"}
    0:0:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:196:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    196:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:168:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    163:168:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    154:168:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:104:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:96:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatApi24Impl.java"}
    69:87:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:114:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:124:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:94:boolean isUsable() -> isUsable
    103:103:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatApi26Impl.java"}
    74:107:void <init>() -> <init>
    194:194:void abortCreation(java.lang.Object) -> abortCreation
    140:142:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:156:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:172:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:246:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    237:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:183:boolean freeze(java.lang.Object) -> freeze
    118:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:127:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:351:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatApi28Impl.java"}
    38:38:void <init>() -> <init>
    51:56:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    63:66:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatApi29Impl.java"}
    44:44:void <init>() -> <init>
    132:156:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    90:119:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    172:177:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    53:63:android.graphics.fonts.Font findBaseFont(android.graphics.fonts.FontFamily,int) -> findBaseFont
    75:75:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    48:49:int getMatchScore(android.graphics.fonts.FontStyle,android.graphics.fonts.FontStyle) -> getMatchScore
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
    45:52:void <init>() -> <init>
    119:134:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    134:135:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    223:238:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    238:239:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    64:64:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    72:74:java.lang.Object findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    104:104:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
    104:104:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    104:104:int getWeight(java.lang.Object) -> getWeight
    107:107:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    104:104:boolean isItalic(java.lang.Object) -> isItalic
    112:112:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor -> androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor:
# {"id":"sourceFile","fileName":"TypefaceCompatBaseImpl.java"}
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
# {"id":"sourceFile","fileName":"TypefaceCompatUtil.java"}
    195:195:void closeQuietly(java.io.Closeable) -> closeQuietly
    136:146:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    146:147:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    155:169:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    168:169:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    169:170:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    180:184:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    71:80:java.io.File getTempFile(android.content.Context) -> getTempFile
    96:100:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    112:123:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    113:123:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    221:236:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> readFontInfoIntoByteBuffer
androidx.core.graphics.TypefaceCompatUtil$Api19Impl -> androidx.core.graphics.TypefaceCompatUtil$Api19Impl:
# {"id":"sourceFile","fileName":"TypefaceCompatUtil.java"}
    249:249:android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal) -> openFileDescriptor
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    193:193:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    203:203:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    229:252:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    181:181:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    218:218:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    401:420:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    277:277:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    98:98:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    64:64:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    81:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    113:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    126:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    363:383:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    138:138:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    152:152:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    166:166:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    343:344:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    316:320:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.DrawableCompat$Api19Impl -> androidx.core.graphics.drawable.DrawableCompat$Api19Impl:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    450:450:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    456:456:android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int) -> getChild
    461:461:android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable) -> getDrawable
    445:445:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    440:440:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
androidx.core.graphics.drawable.DrawableCompat$Api21Impl -> androidx.core.graphics.drawable.DrawableCompat$Api21Impl:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    493:493:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    498:498:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    503:503:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    510:510:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    473:473:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    515:515:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    478:478:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    483:483:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    488:488:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.DrawableCompat$Api23Impl -> androidx.core.graphics.drawable.DrawableCompat$Api23Impl:
# {"id":"sourceFile","fileName":"DrawableCompat.java"}
    532:532:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    527:527:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    213:213:void <clinit>() -> <clinit>
    157:376:void <init>() -> <init>
    1024:1058:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    433:439:int getResId() -> getResId
    406:420:java.lang.String getResPackage() -> getResPackage
    478:484:android.net.Uri getUri() -> getUri
    666:679:java.io.InputStream getUriInputStream(android.content.Context) -> getUriInputStream
    888:924:void onPostParceling() -> onPostParceling
    851:881:void onPreParceling(boolean) -> onPreParceling
    809:846:java.lang.String toString() -> toString
    0:0:java.lang.String typeToString(int) -> typeToString
androidx.core.graphics.drawable.IconCompat$Api23Impl -> androidx.core.graphics.drawable.IconCompat$Api23Impl:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1231:1235:int getResId(java.lang.Object) -> getResId
    1184:1188:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1260:1264:android.net.Uri getUri(java.lang.Object) -> getUri
    1342:1342:android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context) -> loadDrawable
    1281:1335:android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context) -> toIcon
androidx.core.graphics.drawable.IconCompat$Api26Impl -> androidx.core.graphics.drawable.IconCompat$Api26Impl:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1098:1098:android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> createAdaptiveIconDrawable
    1103:1103:android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
androidx.core.graphics.drawable.IconCompat$Api28Impl -> androidx.core.graphics.drawable.IconCompat$Api28Impl:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1080:1080:int getResId(java.lang.Object) -> getResId
    1070:1070:java.lang.String getResPackage(java.lang.Object) -> getResPackage
    1075:1075:int getType(java.lang.Object) -> getType
    1085:1085:android.net.Uri getUri(java.lang.Object) -> getUri
androidx.core.graphics.drawable.IconCompat$Api30Impl -> androidx.core.graphics.drawable.IconCompat$Api30Impl:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1115:1115:android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri) -> createWithAdaptiveBitmapContentUri
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:53:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.TintAwareDrawable -> androidx.core.graphics.drawable.TintAwareDrawable:
# {"id":"sourceFile","fileName":"TintAwareDrawable.java"}
androidx.core.graphics.drawable.WrappedDrawable -> androidx.core.graphics.drawable.WrappedDrawable:
# {"id":"sourceFile","fileName":"WrappedDrawable.java"}
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
# {"id":"sourceFile","fileName":"WrappedDrawableApi14.java"}
    41:41:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:65:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    222:224:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    216:216:int getLayoutDirection() -> getLayoutDirection
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    334:334:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    263:263:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:81:void jumpToCurrentState() -> jumpToCurrentState
    232:240:android.graphics.drawable.Drawable mutate() -> mutate
    255:255:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> mutateConstantState
    91:92:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    210:210:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    284:284:boolean onLevelChange(int) -> onLevelChange
    271:271:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:120:void setAlpha(int) -> setAlpha
    198:198:void setAutoMirrored(boolean) -> setAutoMirrored
    98:98:void setChangingConfigurations(int) -> setChangingConfigurations
    125:125:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:110:void setDither(boolean) -> setDither
    115:115:void setFilterBitmap(boolean) -> setFilterBitmap
    138:139:boolean setState(int[]) -> setState
    289:289:void setTint(int) -> setTint
    294:295:void setTintList(android.content.res.ColorStateList) -> setTintList
    300:301:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    342:360:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    279:279:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:75:void updateLocalState(android.content.res.Resources) -> updateLocalState
    305:324:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
# {"id":"sourceFile","fileName":"WrappedDrawableApi21.java"}
    43:44:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:49:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    141:143:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:64:void getOutline(android.graphics.Outline) -> getOutline
    0:0:boolean isCompatTintEnabled() -> isCompatTintEnabled
    129:131:boolean isProjected() -> isProjected
    54:54:void setHotspot(float,float) -> setHotspot
    59:59:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:105:boolean setState(int[]) -> setState
    84:87:void setTint(int) -> setTint
    75:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:96:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.WrappedDrawableState:
# {"id":"sourceFile","fileName":"WrappedDrawableState.java"}
    32:40:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> canConstantState
    61:62:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    54:54:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.internal.view.SupportMenu -> androidx.core.internal.view.SupportMenu:
# {"id":"sourceFile","fileName":"SupportMenu.java"}
androidx.core.internal.view.SupportMenuItem -> androidx.core.internal.view.SupportMenuItem:
# {"id":"sourceFile","fileName":"SupportMenuItem.java"}
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
# {"id":"sourceFile","fileName":"MathUtils.java"}
    0:0:float clamp(float,float,float) -> clamp
    0:0:int clamp(int,int,int) -> clamp
    0:0:long clamp(long,long,long) -> clamp
androidx.core.net.ParseException -> androidx.core.net.ParseException:
# {"id":"sourceFile","fileName":"ParseException.java"}
    29:30:void <init>(java.lang.String) -> <init>
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
# {"id":"sourceFile","fileName":"BuildCompat.java"}
    54:62:boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String) -> isAtLeastPreReleaseCodename
    160:160:boolean isAtLeastR() -> isAtLeastR
    209:211:boolean isAtLeastT() -> isAtLeastT
androidx.core.os.BundleApi18ImplKt -> androidx.core.os.BundleApi18ImplKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    0:0:void <clinit>() -> <clinit>
    118:118:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.os.BundleApi21ImplKt -> androidx.core.os.BundleApi21ImplKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    0:0:void <clinit>() -> <clinit>
    125:125:void putSize(android.os.Bundle,java.lang.String,android.util.Size) -> putSize
    129:129:void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF) -> putSizeF
androidx.core.os.BundleKt -> androidx.core.os.BundleKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    34:102:android.os.Bundle bundleOf(kotlin.Pair[]) -> bundleOf
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
# {"id":"sourceFile","fileName":"CancellationSignal.java"}
    39:39:void <init>() -> <init>
    71:93:void cancel() -> cancel
    113:124:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    155:157:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.CancellationSignal$Api16Impl -> androidx.core.os.CancellationSignal$Api16Impl:
# {"id":"sourceFile","fileName":"CancellationSignal.java"}
    182:182:void cancel(java.lang.Object) -> cancel
    187:187:android.os.CancellationSignal createCancellationSignal() -> createCancellationSignal
androidx.core.os.CancellationSignal$OnCancelListener -> androidx.core.os.CancellationSignal$OnCancelListener:
# {"id":"sourceFile","fileName":"CancellationSignal.java"}
androidx.core.os.ExecutorCompat -> androidx.core.os.ExecutorCompat:
# {"id":"sourceFile","fileName":"ExecutorCompat.java"}
    36:36:java.util.concurrent.Executor create(android.os.Handler) -> create
androidx.core.os.ExecutorCompat$HandlerExecutor -> androidx.core.os.ExecutorCompat$HandlerExecutor:
# {"id":"sourceFile","fileName":"ExecutorCompat.java"}
    45:46:void <init>(android.os.Handler) -> <init>
    51:52:void execute(java.lang.Runnable) -> execute
androidx.core.os.LocaleListCompat -> androidx.core.os.LocaleListCompat:
# {"id":"sourceFile","fileName":"LocaleListCompat.java"}
    37:37:void <clinit>() -> <clinit>
    41:42:void <init>(androidx.core.os.LocaleListInterface) -> <init>
    76:79:androidx.core.os.LocaleListCompat create(java.util.Locale[]) -> create
    319:319:boolean equals(java.lang.Object) -> equals
    178:200:java.util.Locale forLanguageTagCompat(java.lang.String) -> forLanguageTagCompat
    162:172:androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String) -> forLanguageTags
    90:90:java.util.Locale get(int) -> get
    149:149:androidx.core.os.LocaleListCompat getEmptyLocaleList() -> getEmptyLocaleList
    324:324:int hashCode() -> hashCode
    100:100:boolean isEmpty() -> isEmpty
    108:108:int size() -> size
    129:129:java.lang.String toLanguageTags() -> toLanguageTags
    330:330:java.lang.String toString() -> toString
    58:58:androidx.core.os.LocaleListCompat wrap(android.os.LocaleList) -> wrap
androidx.core.os.LocaleListCompat$Api21Impl -> androidx.core.os.LocaleListCompat$Api21Impl:
# {"id":"sourceFile","fileName":"LocaleListCompat.java"}
    299:299:void <clinit>() -> <clinit>
    313:313:java.util.Locale forLanguageTag(java.lang.String) -> forLanguageTag
    303:304:boolean isPseudoLocale(java.util.Locale) -> isPseudoLocale
    271:296:boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale) -> matchesLanguageAndScript
androidx.core.os.LocaleListCompat$Api24Impl -> androidx.core.os.LocaleListCompat$Api24Impl:
# {"id":"sourceFile","fileName":"LocaleListCompat.java"}
    341:341:android.os.LocaleList createLocaleList(java.util.Locale[]) -> createLocaleList
    346:346:android.os.LocaleList getAdjustedDefault() -> getAdjustedDefault
    351:351:android.os.LocaleList getDefault() -> getDefault
androidx.core.os.LocaleListCompatWrapper -> androidx.core.os.LocaleListCompatWrapper:
# {"id":"sourceFile","fileName":"LocaleListCompatWrapper.java"}
    43:222:void <clinit>() -> <clinit>
    125:148:void <init>(java.util.Locale[]) -> <init>
    81:89:boolean equals(java.lang.Object) -> equals
    53:53:java.util.Locale get(int) -> get
    0:0:java.lang.Object getLocaleList() -> getLocaleList
    99:100:int hashCode() -> hashCode
    58:58:boolean isEmpty() -> isEmpty
    63:63:int size() -> size
    154:160:void toLanguageTag(java.lang.StringBuilder,java.util.Locale) -> toLanguageTag
    122:122:java.lang.String toLanguageTags() -> toLanguageTags
    108:117:java.lang.String toString() -> toString
androidx.core.os.LocaleListInterface -> androidx.core.os.LocaleListInterface:
# {"id":"sourceFile","fileName":"LocaleListInterface.java"}
androidx.core.os.LocaleListPlatformWrapper -> androidx.core.os.LocaleListPlatformWrapper:
# {"id":"sourceFile","fileName":"LocaleListPlatformWrapper.java"}
    31:32:void <init>(java.lang.Object) -> <init>
    62:62:boolean equals(java.lang.Object) -> equals
    42:42:java.util.Locale get(int) -> get
    37:37:java.lang.Object getLocaleList() -> getLocaleList
    67:67:int hashCode() -> hashCode
    47:47:boolean isEmpty() -> isEmpty
    52:52:int size() -> size
    77:77:java.lang.String toLanguageTags() -> toLanguageTags
    72:72:java.lang.String toString() -> toString
androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline0 -> androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Locale androidx.core.os.LocaleListPlatformWrapper$$InternalSyntheticApiModelOutline$1$027ee814b55446baf6c31b578187c5742df92f44d0d77e296cca70b1b24b01cb$0.m(android.os.LocaleList,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline1 -> androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.os.LocaleListPlatformWrapper$$InternalSyntheticApiModelOutline$1$421d97c54810767c5f8c3548ad8bba1dfb6e4ea739703a57d6ec8f12b823dde1$0.m(android.os.LocaleList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline2 -> androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.os.LocaleListPlatformWrapper$$InternalSyntheticApiModelOutline$1$72a20e85372f041b1ac806f781bb4392d15052a5312a03dab957e4165f18cb01$0.m(android.os.LocaleList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline3 -> androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.LocaleList androidx.core.os.LocaleListPlatformWrapper$$InternalSyntheticApiModelOutline$1$86fb9c8236624716260d333378b00994c83197a22909571a0576513d3ebe8dae$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline4 -> androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String androidx.core.os.LocaleListPlatformWrapper$$InternalSyntheticApiModelOutline$1$ca10413e3767cd90f508f5fa325e7f3e2af8782c534e520949a5060d5222a73f$0.m(android.os.LocaleList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline5 -> androidx.core.os.LocaleListPlatformWrapper$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.core.os.LocaleListPlatformWrapper$$InternalSyntheticApiModelOutline$1$da57f566d1006d249d13acf0f123b6275caed5ace223cf67601ec8cbfaee9b29$0.m(android.os.LocaleList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.os.OperationCanceledException -> androidx.core.os.OperationCanceledException:
# {"id":"sourceFile","fileName":"OperationCanceledException.java"}
    28:28:void <init>() -> <init>
    33:33:void <init>(java.lang.String) -> <init>
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
# {"id":"sourceFile","fileName":"TraceCompat.java"}
    53:63:void <clinit>() -> <clinit>
    109:109:void beginSection(java.lang.String) -> beginSection
    122:122:void endSection() -> endSection
androidx.core.os.TraceCompat$Api18Impl -> androidx.core.os.TraceCompat$Api18Impl:
# {"id":"sourceFile","fileName":"TraceCompat.java"}
    225:225:void beginSection(java.lang.String) -> beginSection
    230:230:void endSection() -> endSection
androidx.core.provider.CallbackWithHandler -> androidx.core.provider.CallbackWithHandler:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    40:42:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> <init>
    67:68:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    80:83:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult) -> onTypefaceResult
    54:55:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.CallbackWithHandler$1 -> androidx.core.provider.CallbackWithHandler$1:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    55:55:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface) -> <init>
    58:58:void run() -> run
androidx.core.provider.CallbackWithHandler$2 -> androidx.core.provider.CallbackWithHandler$2:
# {"id":"sourceFile","fileName":"CallbackWithHandler.java"}
    68:68:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int) -> <init>
    71:71:void run() -> run
androidx.core.provider.CalleeHandler -> androidx.core.provider.CalleeHandler:
# {"id":"sourceFile","fileName":"CalleeHandler.java"}
    36:39:android.os.Handler create() -> create
androidx.core.provider.FontProvider -> androidx.core.provider.FontProvider:
# {"id":"sourceFile","fileName":"FontProvider.java"}
    0:0:int $r8$lambda$Wi4h7Y1RxUrqSUowKMegxTqKvJo(byte[],byte[]) -> $r8$lambda$Wi4h7Y1RxUrqSUowKMegxTqKvJo
      # {"id":"com.android.tools.r8.synthesized"}
    197:197:void <clinit>() -> <clinit>
    223:225:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    211:215:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    190:194:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    55:63:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal) -> getFontFamilyResult
    77:102:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    198:202:int lambda$static$0(byte[],byte[]) -> lambda$static$0
    120:186:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> query
androidx.core.provider.FontProvider$$ExternalSyntheticLambda0 -> androidx.core.provider.FontProvider$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.provider.FontProvider$$InternalSyntheticLambda$1$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.provider.FontProvider$$InternalSyntheticLambda$1$dea2eb8be429cfd62f5acef186358e480674e03c0f86125880269ad68ae94a4b$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.provider.FontProvider$Api16Impl -> androidx.core.provider.FontProvider$Api16Impl:
# {"id":"sourceFile","fileName":"FontProvider.java"}
    241:241:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object) -> query
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
# {"id":"sourceFile","fileName":"FontRequest.java"}
    57:63:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    93:94:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String) -> createIdentifier
    133:133:java.util.List getCertificates() -> getCertificates
    145:145:int getCertificatesArrayResId() -> getCertificatesArrayResId
    164:164:java.lang.String getId() -> getId
    103:103:java.lang.String getProviderAuthority() -> getProviderAuthority
    112:112:java.lang.String getProviderPackage() -> getProviderPackage
    121:121:java.lang.String getQuery() -> getQuery
    169:188:java.lang.String toString() -> toString
androidx.core.provider.FontRequestWorker -> androidx.core.provider.FontRequestWorker:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    58:72:void <clinit>() -> <clinit>
    227:227:java.lang.String createCacheId(androidx.core.provider.FontRequest,int) -> createCacheId
    269:285:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult) -> getFontFamilyResultStatus
    238:262:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> getFontSync
    164:206:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler) -> requestFontAsync
    102:133:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int) -> requestFontSync
androidx.core.provider.FontRequestWorker$1 -> androidx.core.provider.FontRequestWorker$1:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    117:117:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    117:117:java.lang.Object call() -> call
    120:120:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$2 -> androidx.core.provider.FontRequestWorker$2:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    171:171:void <init>(androidx.core.provider.CallbackWithHandler) -> <init>
    171:171:void accept(java.lang.Object) -> accept
    175:177:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$3 -> androidx.core.provider.FontRequestWorker$3:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    194:194:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    194:194:java.lang.Object call() -> call
    198:200:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$4 -> androidx.core.provider.FontRequestWorker$4:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    206:206:void <init>(java.lang.String) -> <init>
    206:206:void accept(java.lang.Object) -> accept
    210:218:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$TypefaceResult -> androidx.core.provider.FontRequestWorker$TypefaceResult:
# {"id":"sourceFile","fileName":"FontRequestWorker.java"}
    301:303:void <init>(int) -> <init>
    307:309:void <init>(android.graphics.Typeface) -> <init>
    314:314:boolean isSuccess() -> isSuccess
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    76:76:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    102:102:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    163:169:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> requestFont
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    390:392:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    407:407:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> create
    400:400:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    396:396:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
    292:297:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    308:308:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int) -> create
    345:345:int getResultCode() -> getResultCode
    322:322:int getTtcIndex() -> getTtcIndex
    315:315:android.net.Uri getUri() -> getUri
    329:329:int getWeight() -> getWeight
    336:336:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
# {"id":"sourceFile","fileName":"FontsContractCompat.java"}
androidx.core.provider.RequestExecutor -> androidx.core.provider.RequestExecutor:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    82:93:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int) -> createDefaultExecutor
    56:57:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer) -> execute
    65:73:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int) -> submit
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> androidx.core.provider.RequestExecutor$DefaultThreadFactory:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    164:166:void <init>(java.lang.String,int) -> <init>
    171:171:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    178:179:void <init>(java.lang.Runnable,java.lang.String,int) -> <init>
    184:185:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> androidx.core.provider.RequestExecutor$ReplyRunnable:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    135:138:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer) -> <init>
    145:151:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> androidx.core.provider.RequestExecutor$ReplyRunnable$1:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    151:151:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object) -> <init>
    154:154:void run() -> run
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
# {"id":"sourceFile","fileName":"BidiFormatter.java"}
    85:222:void <clinit>() -> <clinit>
    262:265:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:306:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:334:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    392:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    412:427:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
# {"id":"sourceFile","fileName":"BidiFormatter.java"}
    139:140:void <init>() -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:169:void initialize(boolean) -> initialize
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
# {"id":"sourceFile","fileName":"BidiFormatter.java"}
    584:586:void <clinit>() -> <clinit>
    628:631:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:859:byte dirTypeBackward() -> dirTypeBackward
    816:829:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:707:int getEntryDir() -> getEntryDir
    744:748:int getExitDir() -> getExitDir
    944:955:byte skipEntityBackward() -> skipEntityBackward
    929:929:byte skipEntityForward() -> skipEntityForward
    901:919:byte skipTagBackward() -> skipTagBackward
    872:887:byte skipTagForward() -> skipTagForward
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
# {"id":"sourceFile","fileName":"ICUCompat.java"}
    40:58:void <clinit>() -> <clinit>
    88:102:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.ICUCompat$Api21Impl -> androidx.core.text.ICUCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ICUCompat.java"}
    182:182:java.lang.String getScript(java.util.Locale) -> getScript
androidx.core.text.ICUCompat$Api24Impl -> androidx.core.text.ICUCompat$Api24Impl:
# {"id":"sourceFile","fileName":"ICUCompat.java"}
    165:165:android.icu.util.ULocale addLikelySubtags(java.lang.Object) -> addLikelySubtags
    160:160:android.icu.util.ULocale forLocale(java.util.Locale) -> forLocale
    170:170:java.lang.String getScript(java.lang.Object) -> getScript
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
    196:209:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    213:218:void <init>(android.text.PrecomputedText$Params) -> <init>
    334:342:boolean equals(java.lang.Object) -> equals
    274:317:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    252:252:int getBreakStrategy() -> getBreakStrategy
    264:264:int getHyphenationFrequency() -> getHyphenationFrequency
    240:240:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    227:227:android.text.TextPaint getTextPaint() -> getTextPaint
    351:360:int hashCode() -> hashCode
    378:399:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.LocaleList androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$07a33788f0340d46167a52a800a185e7f3ff39fe498d2f890acfcd77d2b8ff76$0.m(android.text.TextPaint) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline1 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$07a33788f0340d46167a52a800a185e7f3ff39fe498d2f890acfcd77d2b8ff76$1.m(android.text.TextPaint) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline10 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$8$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$0.m(android.text.TextPaint) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline2 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.TextPaint androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$0.m(android.text.PrecomputedText$Params) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline3 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.TextDirectionHeuristic androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$1.m(android.text.PrecomputedText$Params) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline4 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$2.m(android.text.PrecomputedText$Params) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline5 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$ca265a76fe352945436ce274dfb971278d619f9bbe007f51308c97f0abc297d7$3.m(android.text.PrecomputedText$Params) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline6 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$0.m(android.text.PrecomputedText$Params$Builder,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline7 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$1.m(android.text.PrecomputedText$Params$Builder,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline8 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params$Builder androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$2.m(android.text.PrecomputedText$Params$Builder,android.text.TextDirectionHeuristic) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline9 -> androidx.core.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.PrecomputedText$Params androidx.core.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$1$d539f91e740aecc14230a6be59093fa1df0850e96c3d5ef7514b1176d74b662e$3.m(android.text.PrecomputedText$Params$Builder) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
    116:125:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.TextDirectionHeuristicCompat -> androidx.core.text.TextDirectionHeuristicCompat:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicCompat.java"}
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    33:68:void <clinit>() -> <clinit>
    0:0:int isRtlText(int) -> isRtlText
    0:0:int isRtlTextOrFormat(int) -> isRtlTextOrFormat
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    235:235:void <clinit>() -> <clinit>
    231:232:void <init>(boolean) -> <init>
    208:226:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    193:193:void <clinit>() -> <clinit>
    190:190:void <init>() -> <init>
    185:185:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    114:115:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    130:136:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    156:157:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
# {"id":"sourceFile","fileName":"TextDirectionHeuristicsCompat.java"}
    253:253:void <clinit>() -> <clinit>
    244:244:void <init>() -> <init>
    249:249:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
# {"id":"sourceFile","fileName":"TextUtilsCompat.java"}
    35:35:void <clinit>() -> <clinit>
    93:93:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.text.TextUtilsCompat$Api17Impl -> androidx.core.text.TextUtilsCompat$Api17Impl:
# {"id":"sourceFile","fileName":"TextUtilsCompat.java"}
    143:143:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.transition.TransitionKt$addListener$1 -> androidx.core.transition.TransitionKt$addListener$1:
# {"id":"sourceFile","fileName":"Transition.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.transition.Transition) -> invoke
    70:70:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.transition.TransitionKt$addListener$2 -> androidx.core.transition.TransitionKt$addListener$2:
# {"id":"sourceFile","fileName":"Transition.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.transition.Transition) -> invoke
    71:71:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.transition.TransitionKt$addListener$3 -> androidx.core.transition.TransitionKt$addListener$3:
# {"id":"sourceFile","fileName":"Transition.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.transition.Transition) -> invoke
    72:72:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.transition.TransitionKt$addListener$4 -> androidx.core.transition.TransitionKt$addListener$4:
# {"id":"sourceFile","fileName":"Transition.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.transition.Transition) -> invoke
    73:73:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.transition.TransitionKt$addListener$5 -> androidx.core.transition.TransitionKt$addListener$5:
# {"id":"sourceFile","fileName":"Transition.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.transition.Transition) -> invoke
    74:74:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.util.Consumer -> androidx.core.util.Consumer:
# {"id":"sourceFile","fileName":"Consumer.java"}
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
# {"id":"sourceFile","fileName":"DebugUtils.java"}
    33:45:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.LruCacheKt$lruCache$1 -> androidx.core.util.LruCacheKt$lruCache$1:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    40:40:java.lang.Integer invoke(java.lang.Object,java.lang.Object):40 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
androidx.core.util.LruCacheKt$lruCache$2 -> androidx.core.util.LruCacheKt$lruCache$2:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.util.LruCacheKt$lruCache$3 -> androidx.core.util.LruCacheKt$lruCache$3:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
# {"id":"sourceFile","fileName":"ObjectsCompat.java"}
    55:55:boolean equals(java.lang.Object,java.lang.Object) -> equals
    97:97:int hash(java.lang.Object[]) -> hash
    159:159:java.lang.Object requireNonNull(java.lang.Object,java.lang.String) -> requireNonNull
    114:114:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
androidx.core.util.ObjectsCompat$Api19Impl -> androidx.core.util.ObjectsCompat$Api19Impl:
# {"id":"sourceFile","fileName":"ObjectsCompat.java"}
    171:171:boolean equals(java.lang.Object,java.lang.Object) -> equals
    176:176:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pair -> androidx.core.util.Pair:
# {"id":"sourceFile","fileName":"Pair.java"}
    37:39:void <init>(java.lang.Object,java.lang.Object) -> <init>
    84:84:androidx.core.util.Pair create(java.lang.Object,java.lang.Object) -> create
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.util.Pools$Pool -> androidx.core.util.Pools$Pool:
# {"id":"sourceFile","fileName":"Pools.java"}
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
# {"id":"sourceFile","fileName":"Pools.java"}
    94:98:void <init>(int) -> <init>
    104:108:java.lang.Object acquire() -> acquire
    128:129:boolean isInPool(java.lang.Object) -> isInPool
    116:121:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
# {"id":"sourceFile","fileName":"Pools.java"}
    143:153:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
# {"id":"sourceFile","fileName":"Preconditions.java"}
    52:52:void checkArgument(boolean,java.lang.Object) -> checkArgument
    246:252:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    209:209:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    225:225:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    191:193:int checkFlagsArgument(int,int) -> checkFlagsArgument
    137:137:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    154:154:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    169:169:void checkState(boolean,java.lang.String) -> checkState
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    135:135:void <clinit>() -> <clinit>
    144:144:void <init>() -> <init>
    151:153:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    223:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    330:332:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    411:413:java.util.List getActionList(android.view.View) -> getActionList
    160:160:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    398:401:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    265:265:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    285:286:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    244:244:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    310:310:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    360:373:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    380:388:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    178:178:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    201:201:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    68:69:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    75:75:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    123:126:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    80:80:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    86:95:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    101:101:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    107:107:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    131:131:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    112:112:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    117:117:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$Api16Impl -> androidx.core.view.AccessibilityDelegateCompat$Api16Impl:
# {"id":"sourceFile","fileName":"AccessibilityDelegateCompat.java"}
    425:425:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View) -> getAccessibilityNodeProvider
    431:431:boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
# {"id":"sourceFile","fileName":"ActionProvider.java"}
    135:136:void <init>(android.content.Context) -> <init>
    313:314:void reset() -> reset
    290:290:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    280:281:void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
androidx.core.view.ActionProvider$SubUiVisibilityListener -> androidx.core.view.ActionProvider$SubUiVisibilityListener:
# {"id":"sourceFile","fileName":"ActionProvider.java"}
androidx.core.view.ActionProvider$VisibilityListener -> androidx.core.view.ActionProvider$VisibilityListener:
# {"id":"sourceFile","fileName":"ActionProvider.java"}
androidx.core.view.ContentInfoCompat -> androidx.core.view.ContentInfoCompat:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    151:152:void <init>(androidx.core.view.ContentInfoCompat$Compat) -> <init>
    145:145:java.lang.String flagsToString(int) -> flagsToString
    196:196:android.content.ClipData getClip() -> getClip
    213:213:int getFlags() -> getFlags
    205:205:int getSource() -> getSource
    114:114:java.lang.String sourceToString(int) -> sourceToString
    182:182:android.view.ContentInfo toContentInfo() -> toContentInfo
    167:167:androidx.core.view.ContentInfoCompat toContentInfoCompat(android.view.ContentInfo) -> toContentInfoCompat
    188:188:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ContentInfoCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo androidx.core.view.ContentInfoCompat$$InternalSyntheticApiModelOutline$1$4f7b48e3a4cd49533a8068912450a1fa92878e6f99f5b6981d716c890701104f$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.ContentInfoCompat$Builder:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    517:521:void <init>(android.content.ClipData,int) -> <init>
    592:592:androidx.core.view.ContentInfoCompat build() -> build
    583:583:androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle) -> setExtras
    558:558:androidx.core.view.ContentInfoCompat$Builder setFlags(int) -> setFlags
    571:571:androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$BuilderCompat -> androidx.core.view.ContentInfoCompat$BuilderCompat:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    668:669:void <init>(android.content.ClipData,int) -> <init>
    704:704:androidx.core.view.ContentInfoCompat build() -> build
    698:698:void setExtras(android.os.Bundle) -> setExtras
    688:688:void setFlags(int) -> setFlags
    693:693:void setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo$Builder androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$1$3bc1660159d81e26cf63e5fc74aac032046fefd8fccac9f5865700fde4996424$0.m(android.view.ContentInfo$Builder,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$1$dafd072194ec4197845d9786223d9dc30bd25efd65a79b57445e409cbd3e7107$0.m(android.view.ContentInfo$Builder) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo$Builder androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$3$1d9d2ad6e4da531f16af947280438658a516139f84a26232f8adb98e05cf1d5d$0.m(android.view.ContentInfo$Builder,android.os.Bundle) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo$Builder androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$3$a9170f138ee3e057999d712963c512aa029438eba362b138d0010117498c3421$0.m(android.view.ContentInfo$Builder,android.net.Uri) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ContentInfo$Builder androidx.core.view.ContentInfoCompat$BuilderCompat31Impl$$InternalSyntheticApiModelOutline$8$4b13573966f84996e6c030ce4d15f96e408aa543c2fb9c2ccffc65198071f2ff$0.m(android.content.ClipData,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$BuilderCompatImpl -> androidx.core.view.ContentInfoCompat$BuilderCompatImpl:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    618:620:void <init>(android.content.ClipData,int) -> <init>
    659:659:androidx.core.view.ContentInfoCompat build() -> build
    653:653:void setExtras(android.os.Bundle) -> setExtras
    643:643:void setFlags(int) -> setFlags
    648:648:void setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.ContentInfoCompat$Compat -> androidx.core.view.ContentInfoCompat$Compat:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
androidx.core.view.ContentInfoCompat$Compat31Impl -> androidx.core.view.ContentInfoCompat$Compat31Impl:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    446:447:void <init>(android.view.ContentInfo) -> <init>
    459:459:android.content.ClipData getClip() -> getClip
    471:471:int getFlags() -> getFlags
    465:465:int getSource() -> getSource
    453:453:android.view.ContentInfo getWrapped() -> getWrapped
    489:489:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.content.ClipData androidx.core.view.ContentInfoCompat$Compat31Impl$$InternalSyntheticApiModelOutline$1$369f13d7419cf036bec9ef6d7236efc35387a21a6d08f82fe727fee658710189$0.m(android.view.ContentInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.ContentInfoCompat$Compat31Impl$$InternalSyntheticApiModelOutline$1$ef970f20e0cfa67ecfa0368d0465008ea4bd078e48ca1576f418aa6304e5d689$0.m(android.view.ContentInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.ContentInfoCompat$Compat31Impl$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.ContentInfoCompat$Compat31Impl$$InternalSyntheticApiModelOutline$1$f1863533b38de5528ccee698ee59416a4b1953fb5ce2c4e0e697d9a62c6937fb$0.m(android.view.ContentInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$CompatImpl -> androidx.core.view.ContentInfoCompat$CompatImpl:
# {"id":"sourceFile","fileName":"ContentInfoCompat.java"}
    383:389:void <init>(androidx.core.view.ContentInfoCompat$BuilderCompatImpl) -> <init>
    401:401:android.content.ClipData getClip() -> getClip
    413:413:int getFlags() -> getFlags
    407:407:int getSource() -> getSource
    0:0:android.view.ContentInfo getWrapped() -> getWrapped
    431:436:java.lang.String toString() -> toString
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
# {"id":"sourceFile","fileName":"DisplayCutoutCompat.java"}
    112:113:void <init>(android.view.DisplayCutout) -> <init>
    194:198:boolean equals(java.lang.Object) -> equals
    127:128:int getSafeInsetBottom() -> getSafeInsetBottom
    136:137:int getSafeInsetLeft() -> getSafeInsetLeft
    145:146:int getSafeInsetRight() -> getSafeInsetRight
    118:119:int getSafeInsetTop() -> getSafeInsetTop
    203:203:int hashCode() -> hashCode
    209:209:java.lang.String toString() -> toString
    213:213:androidx.core.view.DisplayCutoutCompat wrap(android.view.DisplayCutout) -> wrap
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.DisplayCutoutCompat$$InternalSyntheticApiModelOutline$2$5995697582f938161ab89c8390e62ddcc8be8764d4286173706240625ed8d046$0.m(android.view.DisplayCutout) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat$Api28Impl -> androidx.core.view.DisplayCutoutCompat$Api28Impl:
# {"id":"sourceFile","fileName":"DisplayCutoutCompat.java"}
    229:229:android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List) -> createDisplayCutout
    254:254:java.util.List getBoundingRects(android.view.DisplayCutout) -> getBoundingRects
    239:239:int getSafeInsetBottom(android.view.DisplayCutout) -> getSafeInsetBottom
    244:244:int getSafeInsetLeft(android.view.DisplayCutout) -> getSafeInsetLeft
    249:249:int getSafeInsetRight(android.view.DisplayCutout) -> getSafeInsetRight
    234:234:int getSafeInsetTop(android.view.DisplayCutout) -> getSafeInsetTop
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
# {"id":"sourceFile","fileName":"GravityCompat.java"}
    69:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    151:151:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.GravityCompat$Api17Impl -> androidx.core.view.GravityCompat$Api17Impl:
# {"id":"sourceFile","fileName":"GravityCompat.java"}
    170:170:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    176:176:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    181:181:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
# {"id":"sourceFile","fileName":"KeyEventDispatcher.java"}
    0:0:void <clinit>() -> <clinit>
    98:112:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    121:144:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    168:181:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    64:64:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    85:94:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    149:160:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.KeyEventDispatcher$Component -> androidx.core.view.KeyEventDispatcher$Component:
# {"id":"sourceFile","fileName":"KeyEventDispatcher.java"}
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
# {"id":"sourceFile","fileName":"LayoutInflaterCompat.java"}
    141:141:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
# {"id":"sourceFile","fileName":"MarginLayoutParamsCompat.java"}
    67:67:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    48:48:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    105:105:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    86:86:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MarginLayoutParamsCompat$Api17Impl -> androidx.core.view.MarginLayoutParamsCompat$Api17Impl:
# {"id":"sourceFile","fileName":"MarginLayoutParamsCompat.java"}
    208:208:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    188:188:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    183:183:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    203:203:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    220:220:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    214:214:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    198:198:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    193:193:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuHost -> androidx.core.view.MenuHost:
# {"id":"sourceFile","fileName":"MenuHost.java"}
androidx.core.view.MenuHostHelper -> androidx.core.view.MenuHostHelper:
# {"id":"sourceFile","fileName":"MenuHostHelper.java"}
    56:67:void <init>(java.lang.Runnable) -> <init>
    132:133:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    92:93:void onCreateMenu(android.view.Menu,android.view.MenuInflater) -> onCreateMenu
    121:122:void onMenuClosed(android.view.Menu) -> onMenuClosed
    106:107:boolean onMenuItemSelected(android.view.MenuItem) -> onMenuItemSelected
    79:80:void onPrepareMenu(android.view.Menu) -> onPrepareMenu
    199:204:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
# {"id":"sourceFile","fileName":"MenuItemCompat.java"}
    214:215:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    487:491:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    331:334:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    531:535:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    567:571:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    437:441:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    363:366:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$Api26Impl -> androidx.core.view.MenuItemCompat$Api26Impl:
# {"id":"sourceFile","fileName":"MenuItemCompat.java"}
    647:647:int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    609:609:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    657:657:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    667:667:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    636:636:int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    619:619:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    642:642:android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    604:604:android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    652:652:android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    662:662:android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    631:631:android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    625:625:android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    614:614:android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuKt -> R8$$REMOVED$$CLASS$$2:
# {"id":"sourceFile","fileName":"Menu.kt"}
androidx.core.view.MenuProvider -> androidx.core.view.MenuProvider:
# {"id":"sourceFile","fileName":"MenuProvider.java"}
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
# {"id":"sourceFile","fileName":"MotionEventCompat.java"}
    555:555:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChild -> androidx.core.view.NestedScrollingChild:
# {"id":"sourceFile","fileName":"NestedScrollingChild.java"}
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
# {"id":"sourceFile","fileName":"NestedScrollingChildHelper.java"}
    56:57:void <init>(android.view.View) -> <init>
    348:351:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:371:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:332:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    231:231:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:271:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    406:408:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:73:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    416:419:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:161:boolean startNestedScroll(int,int) -> startNestedScroll
    175:175:void stopNestedScroll() -> stopNestedScroll
    186:189:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParent2 -> androidx.core.view.NestedScrollingParent2:
# {"id":"sourceFile","fileName":"NestedScrollingParent2.java"}
androidx.core.view.NestedScrollingParent3 -> androidx.core.view.NestedScrollingParent3:
# {"id":"sourceFile","fileName":"NestedScrollingParent3.java"}
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
# {"id":"sourceFile","fileName":"NestedScrollingParentHelper.java"}
    50:50:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:63:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:79:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    103:103:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    115:117:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OnApplyWindowInsetsListener -> androidx.core.view.OnApplyWindowInsetsListener:
# {"id":"sourceFile","fileName":"OnApplyWindowInsetsListener.java"}
androidx.core.view.OnReceiveContentListener -> androidx.core.view.OnReceiveContentListener:
# {"id":"sourceFile","fileName":"OnReceiveContentListener.java"}
androidx.core.view.OnReceiveContentViewBehavior -> androidx.core.view.OnReceiveContentViewBehavior:
# {"id":"sourceFile","fileName":"OnReceiveContentViewBehavior.java"}
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
# {"id":"sourceFile","fileName":"OneShotPreDrawListener.java"}
    43:46:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:64:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:71:boolean onPreDraw() -> onPreDraw
    90:90:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:95:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:85:void removeListener() -> removeListener
androidx.core.view.PointerIconCompat -> androidx.core.view.PointerIconCompat:
# {"id":"sourceFile","fileName":"PointerIconCompat.java"}
    110:111:void <init>(android.view.PointerIcon) -> <init>
    120:120:java.lang.Object getPointerIcon() -> getPointerIcon
    133:136:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
androidx.core.view.PointerIconCompat$Api24Impl -> androidx.core.view.PointerIconCompat$Api24Impl:
# {"id":"sourceFile","fileName":"PointerIconCompat.java"}
    204:204:android.view.PointerIcon create(android.graphics.Bitmap,float,float) -> create
    199:199:android.view.PointerIcon getSystemIcon(android.content.Context,int) -> getSystemIcon
    209:209:android.view.PointerIcon load(android.content.res.Resources,int) -> load
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    0:0:androidx.core.view.ContentInfoCompat $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg(androidx.core.view.ContentInfoCompat) -> $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg
      # {"id":"com.android.tools.r8.synthesized"}
    477:4541:void <clinit>() -> <clinit>
    4386:4386:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1234:1238:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    1329:1332:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    2082:2088:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    3695:3701:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    3647:3653:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2664:2664:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2585:2590:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    4184:4187:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4176:4179:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    939:943:void ensureAccessibilityDelegateCompat(android.view.View) -> ensureAccessibilityDelegateCompat
    4085:4085:int generateViewId() -> generateViewId
    928:935:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    948:951:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    959:979:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1800:1800:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    4302:4302:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1364:1368:java.util.List getActionList(android.view.View) -> getActionList
    1280:1292:int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence) -> getAvailableActionIdFromResources
    3012:3012:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    3059:3059:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3740:3740:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3862:3862:android.view.Display getDisplay(android.view.View) -> getDisplay
    2367:2367:float getElevation(android.view.View) -> getElevation
    498:506:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2851:2854:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View) -> getFallback
    2498:2498:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1108:1108:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    788:789:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1621:1621:int getLayoutDirection(android.view.View) -> getLayoutDirection
    2049:2049:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2013:2013:int getMinimumWidth(android.view.View) -> getMinimumWidth
    2808:2811:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View) -> getOnReceiveContentMimeTypes
    1867:1867:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1851:1851:int getPaddingStart(android.view.View) -> getPaddingStart
    1660:1660:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2641:2644:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    1407:1407:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2424:2424:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2388:2388:float getTranslationZ(android.view.View) -> getTranslationZ
    2681:2690:androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View) -> getWindowInsetsController
    2441:2441:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    3587:3587:float getZ(android.view.View) -> getZ
    914:914:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3762:3762:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2971:2971:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    994:994:boolean hasTransientState(android.view.View) -> hasTransientState
    4365:4366:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3750:3750:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3556:3556:boolean isLaidOut(android.view.View) -> isLaidOut
    3138:3138:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    2984:2984:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    4227:4228:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    0:0:androidx.core.view.ContentInfoCompat lambda$static$0(androidx.core.view.ContentInfoCompat) -> lambda$static$0
    4482:4516:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3664:3687:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3616:3639:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2557:2562:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    700:700:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    4306:4306:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1209:1209:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    2834:2847:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    1023:1023:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1063:1063:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1086:1086:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1346:1347:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1353:1356:void removeActionWithId(int,android.view.View) -> removeActionWithId
    1320:1322:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2452:2452:void requestApplyInsets(android.view.View) -> requestApplyInsets
    529:530:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    4232:4232:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    731:734:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    4382:4382:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1836:1836:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    4276:4280:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    2997:2997:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    3029:3029:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    3077:3077:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3725:3725:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2356:2356:void setElevation(android.view.View,float) -> setElevation
    2513:2513:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    1008:1008:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1136:1136:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    832:833:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    1562:1562:void setLabelFor(android.view.View,int) -> setLabelFor
    2537:2537:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1888:1888:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    3842:3844:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> setPointerIcon
    4208:4208:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
    3813:3814:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    1389:1389:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
    2402:2402:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2377:2377:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4523:4537:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    3606:3606:void setZ(android.view.View,float) -> setZ
    4329:4329:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3179:3179:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3707:3709:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
androidx.core.view.ViewCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.ViewCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.PointerIcon androidx.core.view.ViewCompat$$InternalSyntheticApiModelOutline$1$b3c06cde64008b6c0371866abd690df73946b3c56985f7acd64fea7fb98562b2$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$$ExternalSyntheticLambda1 -> androidx.core.view.ViewCompat$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$1$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:androidx.core.view.ContentInfoCompat androidx.core.view.ViewCompat$$InternalSyntheticLambda$1$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4233:4233:void <init>(int,java.lang.Class,int) -> <init>
    4233:4233:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4238:4238:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4233:4233:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4244:4244:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4233:4233:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4249:4249:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4307:4307:void <init>(int,java.lang.Class,int,int) -> <init>
    4307:4307:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4312:4312:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4307:4307:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4318:4318:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4307:4307:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4323:4323:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4330:4330:void <init>(int,java.lang.Class,int,int) -> <init>
    4330:4330:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4335:4335:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4330:4330:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4341:4341:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4330:4330:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4346:4346:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4387:4387:void <init>(int,java.lang.Class,int) -> <init>
    4387:4387:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4392:4392:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4387:4387:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4398:4398:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4387:4387:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4403:4403:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4544:4546:void <init>() -> <init>
    4572:4575:void addAccessibilityPane(android.view.View) -> addAccessibilityPane
    4588:4594:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4551:4553:void onGlobalLayout() -> onGlobalLayout
    4562:4562:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    4600:4600:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
    4581:4583:void removeAccessibilityPane(android.view.View) -> removeAccessibilityPane
    4605:4606:void unregisterForLayoutCallback(android.view.View) -> unregisterForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4416:4416:void <init>(int,java.lang.Class,int) -> <init>
    4421:4425:void <init>(int,java.lang.Class,int,int) -> <init>
    4473:4474:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    0:0:boolean extrasAvailable() -> extrasAvailable
    4456:4456:boolean frameworkAvailable() -> frameworkAvailable
    4444:4448:java.lang.Object get(android.view.View) -> get
    4430:4438:void set(android.view.View,java.lang.Object) -> set
androidx.core.view.ViewCompat$Api15Impl -> androidx.core.view.ViewCompat$Api15Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5257:5257:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
androidx.core.view.ViewCompat$Api16Impl -> androidx.core.view.ViewCompat$Api16Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5411:5411:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    5441:5441:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    5401:5401:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    5426:5426:int getMinimumHeight(android.view.View) -> getMinimumHeight
    5421:5421:int getMinimumWidth(android.view.View) -> getMinimumWidth
    5416:5416:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    5431:5431:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    5451:5451:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    5371:5371:boolean hasTransientState(android.view.View) -> hasTransientState
    5446:5446:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    5381:5381:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    5386:5386:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    5391:5391:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    5396:5396:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    5462:5462:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
    5436:5436:void requestFitSystemWindows(android.view.View) -> requestFitSystemWindows
    5456:5456:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    5376:5376:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    5406:5406:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
androidx.core.view.ViewCompat$Api17Impl -> androidx.core.view.ViewCompat$Api17Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5314:5314:int generateViewId() -> generateViewId
    5309:5309:android.view.Display getDisplay(android.view.View) -> getDisplay
    5319:5319:int getLabelFor(android.view.View) -> getLabelFor
    5334:5334:int getLayoutDirection(android.view.View) -> getLayoutDirection
    5349:5349:int getPaddingEnd(android.view.View) -> getPaddingEnd
    5344:5344:int getPaddingStart(android.view.View) -> getPaddingStart
    5359:5359:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    5324:5324:void setLabelFor(android.view.View,int) -> setLabelFor
    5329:5329:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    5339:5339:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    5354:5354:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
androidx.core.view.ViewCompat$Api18Impl -> androidx.core.view.ViewCompat$Api18Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5202:5202:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    5192:5192:boolean isInLayout(android.view.View) -> isInLayout
    5197:5197:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
androidx.core.view.ViewCompat$Api19Impl -> androidx.core.view.ViewCompat$Api19Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5229:5229:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    5219:5219:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    5214:5214:boolean isLaidOut(android.view.View) -> isLaidOut
    5224:5224:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    5245:5245:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    5234:5234:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    5239:5239:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.ViewCompat$Api20Impl -> androidx.core.view.ViewCompat$Api20Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5564:5564:android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets) -> dispatchApplyWindowInsets
    5559:5559:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
    5554:5554:void requestApplyInsets(android.view.View) -> requestApplyInsets
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4886:4890:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4811:4816:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    4897:4897:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    4903:4903:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    5006:5006:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    4999:4999:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    4958:4958:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    4963:4963:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    4943:4943:float getElevation(android.view.View) -> getElevation
    4805:4805:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    4948:4948:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    4928:4928:float getTranslationZ(android.view.View) -> getTranslationZ
    4908:4908:float getZ(android.view.View) -> getZ
    4993:4993:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    4938:4938:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    4978:4978:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    4953:4953:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    4968:4968:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    4918:4918:void setElevation(android.view.View,float) -> setElevation
    4973:4973:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    4826:4840:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    4933:4933:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4923:4923:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4913:4913:void setZ(android.view.View,float) -> setZ
    4983:4983:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    4988:4988:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4840:4841:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4846:4872:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5018:5025:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    5041:5041:int getScrollIndicators(android.view.View) -> getScrollIndicators
    5031:5031:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    5036:5036:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
androidx.core.view.ViewCompat$Api24Impl -> androidx.core.view.ViewCompat$Api24Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5281:5281:void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    5297:5297:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    5292:5292:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    5269:5269:void setPointerIcon(android.view.View,android.view.PointerIcon) -> setPointerIcon
    5276:5276:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    5287:5287:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
androidx.core.view.ViewCompat$Api26Impl -> androidx.core.view.ViewCompat$Api26Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5155:5155:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    5170:5170:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    5118:5118:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    5165:5165:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    5138:5138:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    5180:5180:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    5128:5128:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    5149:5149:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    5160:5160:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    5108:5108:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    5143:5143:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    5175:5175:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    5133:5133:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    5123:5123:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    5113:5113:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.ViewCompat$Api28Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5514:5525:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    5480:5480:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    5496:5496:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    5501:5501:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    5533:5541:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    5475:5475:java.lang.Object requireViewById(android.view.View,int) -> requireViewById
    5491:5491:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    5486:5486:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    5506:5506:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.<init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$1$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5061:5061:android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    5071:5071:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    5055:5055:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    5066:5066:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
androidx.core.view.ViewCompat$Api30Impl -> androidx.core.view.ViewCompat$Api30Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    5096:5096:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    5083:5085:androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View) -> getWindowInsetsController
    5091:5091:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
androidx.core.view.ViewCompat$Api31Impl -> androidx.core.view.ViewCompat$Api31Impl:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    2878:2878:java.lang.String[] getReceiveContentMimeTypes(android.view.View) -> getReceiveContentMimeTypes
    2885:2894:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    2868:2870:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener) -> setOnReceiveContentListener
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter -> androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    2905:2906:void <init>(androidx.core.view.OnReceiveContentListener) -> <init>
    2912:2921:android.view.ContentInfo onReceiveContent(android.view.View,android.view.ContentInfo) -> onReceiveContent
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4614:4614:void <clinit>() -> <clinit>
    4610:4629:void <init>() -> <init>
    4639:4643:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4649:4660:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4668:4682:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4632:4635:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4727:4732:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4694:4717:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4767:4791:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    42:45:void <clinit>() -> <clinit>
    110:121:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    84:87:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    132:135:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    101:104:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    146:152:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewConfigurationCompat$Api26Impl -> androidx.core.view.ViewConfigurationCompat$Api26Impl:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    166:166:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration) -> getScaledHorizontalScrollFactor
    171:171:float getScaledVerticalScrollFactor(android.view.ViewConfiguration) -> getScaledVerticalScrollFactor
androidx.core.view.ViewConfigurationCompat$Api28Impl -> androidx.core.view.ViewConfigurationCompat$Api28Impl:
# {"id":"sourceFile","fileName":"ViewConfigurationCompat.java"}
    183:183:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    189:189:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
# {"id":"sourceFile","fileName":"ViewGroupCompat.java"}
    160:160:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewGroupCompat$Api21Impl -> androidx.core.view.ViewGroupCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ViewGroupCompat.java"}
    227:227:int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    222:222:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    217:217:void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
# {"id":"sourceFile","fileName":"ViewParentCompat.java"}
    429:431:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    466:468:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    387:396:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    332:352:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    250:260:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    209:219:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    285:294:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
androidx.core.view.ViewParentCompat$Api21Impl -> androidx.core.view.ViewParentCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ViewParentCompat.java"}
    558:558:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    563:563:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    552:552:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    547:547:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    536:536:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    531:531:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    541:541:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompat.java"}
    0:0:void $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> $r8$lambda$-X-OeeZ3zgiQP_YgN-Cy4Y7jVqc
      # {"id":"com.android.tools.r8.synthesized"}
    38:46:void <init>(android.view.View) -> <init>
    148:149:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    493:494:void cancel() -> cancel
    252:253:long getDuration() -> getDuration
    830:830:void lambda$setUpdateListener$0(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator) -> lambda$setUpdateListener$0
    132:133:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    270:271:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    778:780:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    791:808:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    305:306:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    826:833:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    687:688:void start() -> start
    196:197:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0 -> androidx.core.view.ViewPropertyAnimatorCompat$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewPropertyAnimatorUpdateListener androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$0 -> f$0
    android.view.View androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.f$1 -> f$1
    0:0:void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.<init>(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.ViewPropertyAnimatorCompat$$InternalSyntheticLambda$1$56b5ddebd4eed0da034de87f77c6e02d47cd4c786473978faa1193e25da055e5$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompat.java"}
    791:791:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    794:794:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    799:799:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    804:804:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl -> androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorCompat.java"}
    914:914:android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener) -> setUpdateListener
androidx.core.view.ViewPropertyAnimatorListener -> androidx.core.view.ViewPropertyAnimatorListener:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorListener.java"}
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorListenerAdapter.java"}
    0:0:void onAnimationCancel(android.view.View) -> onAnimationCancel
    0:0:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorUpdateListener -> androidx.core.view.ViewPropertyAnimatorUpdateListener:
# {"id":"sourceFile","fileName":"ViewPropertyAnimatorUpdateListener.java"}
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
# {"id":"sourceFile","fileName":"WindowCompat.java"}
    135:135:androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window,android.view.View) -> getInsetsController
    118:121:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Api16Impl -> androidx.core.view.WindowCompat$Api16Impl:
# {"id":"sourceFile","fileName":"WindowCompat.java"}
    151:153:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Api30Impl -> androidx.core.view.WindowCompat$Api30Impl:
# {"id":"sourceFile","fileName":"WindowCompat.java"}
    168:168:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    78:81:void <clinit>() -> <clinit>
    88:96:void <init>(android.view.WindowInsets) -> <init>
    109:129:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    506:506:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    477:477:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    318:318:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2114:2114:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    721:725:boolean equals(java.lang.Object) -> equals
    490:490:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    668:668:androidx.core.graphics.Insets getInsets(int) -> getInsets
    549:549:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    606:606:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    239:239:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    191:191:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    223:223:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    207:207:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    256:256:boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    730:730:int hashCode() -> hashCode
    651:651:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1337:1344:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    286:286:boolean isConsumed() -> isConsumed
    339:341:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    1706:1706:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2110:2110:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2106:2106:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1804:1804:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    741:741:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    148:148:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    168:173:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    2133:2142:void <clinit>() -> <clinit>
    2150:2174:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1399:1405:void <init>() -> <init>
    1416:1422:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1613:1613:androidx.core.view.WindowInsetsCompat build() -> build
    1587:1587:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1442:1442:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1623:1623:void <init>() -> <init>
    1626:1627:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1672:1694:void applyInsetTypes() -> applyInsetTypes
    0:0:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    0:0:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    0:0:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    0:0:void <clinit>() -> <clinit>
    1720:1721:void <init>() -> <init>
    1725:1726:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1745:1749:androidx.core.view.WindowInsetsCompat build() -> build
    1761:1792:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1739:1739:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1731:1732:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1812:1813:void <init>() -> <init>
    1817:1821:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1857:1860:androidx.core.view.WindowInsetsCompat build() -> build
    1836:1836:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1846:1846:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1831:1831:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1826:1826:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1841:1841:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$59943e04c37930a0531d4f6494ed649568ab127f92ede377b1f504d2dcd54863$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$9d187abb3bbc9745a880878a21bef611d92809b2198c7b753440a50ba682397e$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$a7bac0df715b28c98a7dcfbd576701be30c0b9593556f6a2c1e40d1cb3582ae7$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$e2db7d8c486f2bd0b97fa630bde348b860e908278df8e0203f613641cfeefcc4$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$e9cf16e04656d3d7361528f4e1263ec758c19a703cd1553ad658eb1456381f1b$0.m(android.view.WindowInsets$Builder,android.graphics.Insets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$1$ee8cb0ef857f0d92636e84006869a5dab776eec7bf08e3331dcf284032d49109$0.m(android.view.WindowInsets$Builder) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$8$a11ad5c9cc549f75dd7923508d73cc514cb5aa1277eb5f6155c086e9e4374653$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$8$a11ad5c9cc549f75dd7923508d73cc514cb5aa1277eb5f6155c086e9e4374653$1.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1868:1868:void <init>() -> <init>
    1872:1872:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    747:751:void <clinit>() -> <clinit>
    755:756:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    784:784:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    774:774:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    769:769:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    0:0:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    0:0:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    841:847:boolean equals(java.lang.Object) -> equals
    0:0:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    822:822:androidx.core.graphics.Insets getInsets(int) -> getInsets
    806:806:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    794:794:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    800:800:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    789:789:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    812:812:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    853:854:int hashCode() -> hashCode
    817:817:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    0:0:boolean isConsumed() -> isConsumed
    0:0:boolean isRound() -> isRound
    0:0:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    0:0:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    0:0:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    0:0:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    0:0:void <clinit>() -> <clinit>
    892:899:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    903:903:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1111:1115:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1086:1087:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1187:1189:boolean equals(java.lang.Object) -> equals
    914:914:androidx.core.graphics.Insets getInsets(int) -> getInsets
    940:945:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    956:1042:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    1102:1105:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1064:1071:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1126:1155:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    1078:1081:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    908:908:boolean isRound() -> isRound
    1171:1182:void loadReflectionField() -> loadReflectionField
    1164:1164:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1097:1097:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1092:1092:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1195:1198:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1195:1203:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1214:1214:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1220:1220:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1226:1233:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1208:1208:boolean isConsumed() -> isConsumed
    1238:1238:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1246:1246:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1250:1250:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1262:1262:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1268:1272:boolean equals(java.lang.Object) -> equals
    1256:1256:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1277:1277:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.DisplayCutout androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$1$1ac87aafd592b5506d107ed040b16d853d1a131cdb8856d2e13ed11b9a207052$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$1$9207719b7ce5d8db03f418025a4671b26e9b85828127b36d45b1560d40c7fc23$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1284:1289:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1284:1293:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1308:1312:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1299:1302:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1318:1321:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    1327:1327:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    0:0:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$463f5d2e905bee7a94c5e1e784176828b7f74fb1bd3f21ce4d1229a6ccfdd624$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$8f53c81c8f092140ac3e804e5c1bbe674a9a15bae1dde5747b904aef74c08e69$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$a095b61c286ceceac8def73d5e6718b1c88d3a7c271856e1785f04ff68e4f101$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$1$f664a1d55d0eb033fb74a33efb760cefd4a66acac9fd2d520010b680a8b11057$0.m(android.view.WindowInsets,int,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    1350:1350:void <clinit>() -> <clinit>
    1353:1353:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1357:1357:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    0:0:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1363:1364:androidx.core.graphics.Insets getInsets(int) -> getInsets
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$1$7c95e3cf87277cc9e90a5ee20212fa74552db1fed9bbd019afd18ee3ae455fac$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$1$f14b93863108dc0e407f09f9bde286f72e692d6f9a2448abe9587c9d544bc2bf$0.m(android.view.WindowInsets,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    0:0:int ime() -> ime
    2046:2046:int indexOf(int) -> indexOf
    0:0:int mandatorySystemGestures() -> mandatorySystemGestures
    0:0:int systemBars() -> systemBars
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
# {"id":"sourceFile","fileName":"WindowInsetsCompat.java"}
    2075:2096:int toPlatformType(int) -> toPlatformType
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$2.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$3.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$4.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$5.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$6.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$2$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$7.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.WindowInsetsControllerCompat:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    96:97:void <init>(android.view.WindowInsetsController) -> <init>
    100:108:void <init>(android.view.Window,android.view.View) -> <init>
    168:168:void hide(int) -> hide
    217:217:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    193:193:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    154:154:void show(int) -> show
    128:128:androidx.core.view.WindowInsetsControllerCompat toWindowInsetsControllerCompat(android.view.WindowInsetsController) -> toWindowInsetsControllerCompat
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.WindowInsetsControllerCompat$Impl:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    348:348:void <init>() -> <init>
    0:0:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    0:0:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.WindowInsetsControllerCompat$Impl20:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    0:0:void $r8$lambda$pAhi3kcyEfefAOVk6cMro6TSEfc(android.view.View) -> $r8$lambda$pAhi3kcyEfefAOVk6cMro6TSEfc
      # {"id":"com.android.tools.r8.synthesized"}
    403:405:void <init>(android.view.Window,android.view.View) -> <init>
    467:467:void hide(int) -> hide
    474:482:void hideForType(int) -> hideForType
    451:453:void lambda$showForType$0(android.view.View) -> lambda$showForType$0
    488:490:void setSystemUiFlag(int) -> setSystemUiFlag
    502:502:void setWindowFlag(int) -> setWindowFlag
    415:415:void show(int) -> show
    422:449:void showForType(int) -> showForType
    495:497:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
    506:506:void unsetWindowFlag(int) -> unsetWindowFlag
androidx.core.view.WindowInsetsControllerCompat$Impl20$$ExternalSyntheticLambda0 -> androidx.core.view.WindowInsetsControllerCompat$Impl20$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View androidx.core.view.WindowInsetsControllerCompat$Impl20$$InternalSyntheticLambda$3$319e1760a8231388672c0875f97d4375b66c4c12da576c10f128d46a32ced4c0$0.f$0 -> f$0
    0:0:void androidx.core.view.WindowInsetsControllerCompat$Impl20$$InternalSyntheticLambda$3$319e1760a8231388672c0875f97d4375b66c4c12da576c10f128d46a32ced4c0$0.<init>(android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.WindowInsetsControllerCompat$Impl20$$InternalSyntheticLambda$3$319e1760a8231388672c0875f97d4375b66c4c12da576c10f128d46a32ced4c0$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.WindowInsetsControllerCompat$Impl23:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    554:554:void <init>(android.view.Window,android.view.View) -> <init>
    566:570:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.WindowInsetsControllerCompat$Impl26:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    579:579:void <init>(android.view.Window,android.view.View) -> <init>
    591:595:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.WindowInsetsControllerCompat$Impl30:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    613:614:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    605:620:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    644:644:void hide(int) -> hide
    683:695:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    656:668:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    803:805:void setSystemUiFlag(int) -> setSystemUiFlag
    625:639:void show(int) -> show
    796:798:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$1$d6fb3db9c12ac2c8a355cda7e3de6180a104013a10776c246d439dbb950c3f8b$0.m(android.view.WindowInsetsController,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsetsController androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$1$e51a200b697bfb4d6155e4ad6744e47698f53e8b6d3d57e5cc6e876a3b3d93d4$0.m(android.view.Window) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$3$452cba933c9381f5a7b832f9bf059a98c8d8276b4346aaf6a234a82e764b7bb4$0.m(android.view.WindowInsetsController,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$3$f5b4447ac723ba195910b61cc57d723c944edd664a5f44a5709e41618785edaa$0.m(android.view.WindowInsetsController,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
# {"id":"sourceFile","fileName":"AccessibilityClickableSpanCompat.java"}
    55:58:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:71:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
# {"id":"sourceFile","fileName":"AccessibilityEventCompat.java"}
    382:382:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    361:361:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl -> androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl:
# {"id":"sourceFile","fileName":"AccessibilityEventCompat.java"}
    463:463:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    458:458:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
# {"id":"sourceFile","fileName":"AccessibilityManagerCompat.java"}
    171:171:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    187:187:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl -> androidx.core.view.accessibility.AccessibilityManagerCompat$Api19Impl:
# {"id":"sourceFile","fileName":"AccessibilityManagerCompat.java"}
    286:286:boolean addTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListenerWrapper
    294:294:boolean removeTouchExplorationStateChangeListenerWrapper(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListenerWrapper
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener:
# {"id":"sourceFile","fileName":"AccessibilityManagerCompat.java"}
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
# {"id":"sourceFile","fileName":"AccessibilityManagerCompat.java"}
    199:200:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    213:218:boolean equals(java.lang.Object) -> equals
    205:205:int hashCode() -> hashCode
    223:223:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    0:0:void <clinit>() -> <clinit>
    1317:1812:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    2111:2111:void addAction(int) -> addAction
    2145:2145:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    2020:2020:void addChild(android.view.View) -> addChild
    2039:2039:void addChild(android.view.View,int) -> addChild
    2935:2938:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2864:2875:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    2927:2930:void clearExtrasSpans() -> clearExtrasSpans
    4343:4357:boolean equals(java.lang.Object) -> equals
    2118:2122:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    3289:3300:java.util.List getActionList() -> getActionList
    0:0:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    2096:2096:int getActions() -> getActions
    4436:4438:boolean getBooleanProperty(int) -> getBooleanProperty
    2341:2341:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2373:2373:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1988:1988:int getChildCount() -> getChildCount
    2802:2802:java.lang.CharSequence getClassName() -> getClassName
    2901:2903:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2962:2962:java.lang.CharSequence getContentDescription() -> getContentDescription
    3619:3619:android.os.Bundle getExtras() -> getExtras
    2238:2238:int getMovementGranularities() -> getMovementGranularities
    2882:2885:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2778:2778:java.lang.CharSequence getPackageName() -> getPackageName
    2892:2892:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2826:2840:java.lang.CharSequence getText() -> getText
    3022:3025:java.lang.String getUniqueId() -> getUniqueId
    3092:3092:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2922:2922:boolean hasSpans() -> hasSpans
    4332:4332:int hashCode() -> hashCode
    2911:2918:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2525:2525:boolean isAccessibilityFocused() -> isAccessibilityFocused
    2397:2397:boolean isCheckable() -> isCheckable
    2421:2421:boolean isChecked() -> isChecked
    2579:2579:boolean isClickable() -> isClickable
    2627:2627:boolean isEnabled() -> isEnabled
    2445:2445:boolean isFocusable() -> isFocusable
    2469:2469:boolean isFocused() -> isFocused
    2603:2603:boolean isLongClickable() -> isLongClickable
    2651:2651:boolean isPassword() -> isPassword
    2675:2675:boolean isScrollable() -> isScrollable
    2555:2555:boolean isSelected() -> isSelected
    4127:4130:boolean isShowingHintText() -> isShowingHintText
    2494:2494:boolean isVisibleToUser() -> isVisibleToUser
    1850:1850:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1878:1878:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1889:1889:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2207:2207:boolean performAction(int,android.os.Bundle) -> performAction
    3058:3058:void recycle() -> recycle
    2170:2170:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    2942:2951:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2545:2545:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    4426:4431:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2364:2364:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2388:2388:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    3564:3564:void setCanOpenPopup(boolean) -> setCanOpenPopup
    2412:2412:void setCheckable(boolean) -> setCheckable
    2436:2436:void setChecked(boolean) -> setChecked
    2817:2817:void setClassName(java.lang.CharSequence) -> setClassName
    2594:2594:void setClickable(boolean) -> setClickable
    3196:3197:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3205:3206:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2992:2992:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    2642:2642:void setEnabled(boolean) -> setEnabled
    3415:3415:void setError(java.lang.CharSequence) -> setError
    2460:2460:void setFocusable(boolean) -> setFocusable
    2484:2484:void setFocused(boolean) -> setFocused
    4184:4187:void setHeading(boolean) -> setHeading
    3393:3396:void setHintText(java.lang.CharSequence) -> setHintText
    3440:3440:void setLabelFor(android.view.View) -> setLabelFor
    2618:2618:void setLongClickable(boolean) -> setLongClickable
    3716:3716:void setMaxTextLength(int) -> setMaxTextLength
    2227:2227:void setMovementGranularities(int) -> setMovementGranularities
    2793:2793:void setPackageName(java.lang.CharSequence) -> setPackageName
    4060:4063:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2294:2296:void setParent(android.view.View) -> setParent
    2321:2324:void setParent(android.view.View,int) -> setParent
    3254:3254:void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    4277:4277:void setRoleDescription(java.lang.CharSequence) -> setRoleDescription
    4112:4115:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2690:2690:void setScrollable(boolean) -> setScrollable
    2570:2570:void setSelected(boolean) -> setSelected
    4147:4150:void setShowingHintText(boolean) -> setShowingHintText
    1898:1900:void setSource(android.view.View) -> setSource
    1925:1928:void setSource(android.view.View,int) -> setSource
    3007:3010:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    2856:2856:void setText(java.lang.CharSequence) -> setText
    3877:3877:void setTraversalAfter(android.view.View) -> setTraversalAfter
    2514:2514:void setVisibleToUser(boolean) -> setVisibleToUser
    4367:4422:java.lang.String toString() -> toString
    1829:1829:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1822:1822:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$158b7f276cfaf6c373f3df9403abf1ad8426faae8d0f152b72b92b2d03c14609$0.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$4d38159007d0b31eda46da8085292a0315e0f0fbdefb2f40a583a39f67825376$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$68f45127f60fc20923c2801f8c2a0854389ae7292b2f5c3f1ae90ffae2d9457f$0.m(android.view.accessibility.AccessibilityNodeInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$8d12ce1004cec7cc3110efed7cdf52738f26796c558e4eabb0bcd23b154c19e1$0.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$bb9fd610a63e02320be8d299acf7b4380bf37d6c12d8cd670fe3ab5c7e6f4dfe$0.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$cd72e59e9f21cc9debd5dd8bba9b036b76ce6817728da61a544fd531bd7d28d5$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$1$d7f0b69eabd3b8255e511b271003f9cf6c4e31c2bb69b88140c248916e27199c$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat$$InternalSyntheticApiModelOutline$2$1aafc8a7e540efc36d9606a211722f1ebcefa94800f4f6843831897e7114e21a$0.m(android.view.accessibility.AccessibilityNodeInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    111:653:void <clinit>() -> <clinit>
    673:673:void <init>(int,java.lang.CharSequence) -> <init>
    687:687:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    691:691:void <init>(java.lang.Object) -> <init>
    696:696:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    701:709:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    773:773:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    787:796:boolean equals(java.lang.Object) -> equals
    719:719:int getId() -> getId
    733:733:java.lang.CharSequence getLabel() -> getLabel
    779:779:int hashCode() -> hashCode
    748:762:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$10.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline10 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$19.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline11 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline12 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$20.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline13 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$2.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline14 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline14:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$3.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline15 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline15:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$4.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline16 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline16:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$5.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline17 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline17:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$6.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline18 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline18:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$7.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline19 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline19:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$8.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$11.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline20 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline20:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$9.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$12.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$13.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$14.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$15.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$16.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline8 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$17.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline9 -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$ExternalSyntheticApiModelOutline9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat$$InternalSyntheticApiModelOutline$1$32b66231ce0e8ef8eeab38c7038fe1fe404c4b5c14841837aaf20b59c85736fc$18.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    873:874:void <init>(java.lang.Object) -> <init>
    844:844:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    866:866:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    997:998:void <init>(java.lang.Object) -> <init>
    965:965:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeInfoCompat.java"}
    1115:1116:void <init>(java.lang.Object) -> <init>
    1106:1107:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
    120:124:void <init>() -> <init>
    138:139:void <init>(java.lang.Object) -> <init>
    0:0:void addExtraDataToAccessibilityNodeInfo(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
    0:0:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    0:0:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    0:0:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    147:147:java.lang.Object getProvider() -> getProvider
    0:0:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
    39:40:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    45:50:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    57:66:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    74:74:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
    81:81:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    86:90:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26:
# {"id":"sourceFile","fileName":"AccessibilityNodeProviderCompat.java"}
    98:98:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    104:105:void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
# {"id":"sourceFile","fileName":"AccessibilityRecordCompat.java"}
    516:516:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    566:566:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    146:146:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl -> androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl:
# {"id":"sourceFile","fileName":"AccessibilityRecordCompat.java"}
    805:805:int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    815:815:int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    810:810:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    820:820:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl -> androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl:
# {"id":"sourceFile","fileName":"AccessibilityRecordCompat.java"}
    792:792:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityViewCommand -> androidx.core.view.accessibility.AccessibilityViewCommand:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
# {"id":"sourceFile","fileName":"AccessibilityViewCommand.java"}
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
# {"id":"sourceFile","fileName":"PathInterpolatorCompat.java"}
    54:54:android.view.animation.Interpolator create(android.graphics.Path) -> create
    89:89:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl -> androidx.core.view.animation.PathInterpolatorCompat$Api21Impl:
# {"id":"sourceFile","fileName":"PathInterpolatorCompat.java"}
    102:102:android.view.animation.PathInterpolator createPathInterpolator(android.graphics.Path) -> createPathInterpolator
    107:107:android.view.animation.PathInterpolator createPathInterpolator(float,float) -> createPathInterpolator
    113:113:android.view.animation.PathInterpolator createPathInterpolator(float,float,float,float) -> createPathInterpolator
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
# {"id":"sourceFile","fileName":"EditorInfoCompat.java"}
    93:93:void <clinit>() -> <clinit>
    183:194:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    463:465:boolean isCutOnSurrogate(java.lang.CharSequence,int,int) -> isCutOnSurrogate
    0:0:boolean isPasswordInputType(int) -> isPasswordInputType
    160:167:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
    237:269:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
    214:217:void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence) -> setInitialSurroundingText
    485:493:void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> setSurroundingText
    297:339:void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> trimLongSurroundingText
androidx.core.view.inputmethod.EditorInfoCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.inputmethod.EditorInfoCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.view.inputmethod.EditorInfoCompat$$InternalSyntheticApiModelOutline$1$146b49169c1e54fa61ed4a40cd4c1de6db19541b4186361dd99f2554fe43f4a5$0.m(android.view.inputmethod.EditorInfo,java.lang.String[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.EditorInfoCompat$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.inputmethod.EditorInfoCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String[] androidx.core.view.inputmethod.EditorInfoCompat$$InternalSyntheticApiModelOutline$1$d4c23b0cc5bef645969461ffd56524e9b58afec392f5ae845b127b399ad09ddd$0.m(android.view.inputmethod.EditorInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl -> androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl:
# {"id":"sourceFile","fileName":"EditorInfoCompat.java"}
    536:536:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    0:0:boolean $r8$lambda$KpUNHX7G_3SrNfrFIzMfcFEp1Cw(android.view.View,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> $r8$lambda$KpUNHX7G_3SrNfrFIzMfcFEp1Cw
      # {"id":"com.android.tools.r8.synthesized"}
    360:361:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListenerUsingPerformReceiveContent(android.view.View) -> createOnCommitContentListenerUsingPerformReceiveContent
    272:297:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    348:349:android.view.inputmethod.InputConnection createWrapper(android.view.View,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> createWrapper
    96:133:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
    363:388:boolean lambda$createOnCommitContentListenerUsingPerformReceiveContent$0(android.view.View,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> lambda$createOnCommitContentListenerUsingPerformReceiveContent$0
androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.inputmethod.InputContentInfo androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticApiModelOutline$2$a114172aba6e440135c668603d67bf510beb56c634d750edaaecf31c9221fbe1$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticLambda1 -> androidx.core.view.inputmethod.InputConnectionCompat$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$1$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.f$0 -> f$0
    0:0:void androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$1$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.<init>(android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.core.view.inputmethod.InputConnectionCompat$$InternalSyntheticLambda$1$9ca49cbbfd3efba151d118d3a92f0eaa941bc2c8d62e7c5cde2c2e096aa30913$0.onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> onCommitContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    279:279:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    284:288:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
    297:297:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    300:303:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener -> androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener:
# {"id":"sourceFile","fileName":"InputConnectionCompat.java"}
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
    167:171:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    175:176:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    184:184:android.net.Uri getContentUri() -> getContentUri
    194:194:android.content.ClipDescription getDescription() -> getDescription
    202:202:android.net.Uri getLinkUri() -> getLinkUri
    249:249:void requestPermission() -> requestPermission
    236:236:java.lang.Object unwrap() -> unwrap
    220:223:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
    107:108:void <init>(java.lang.Object) -> <init>
    112:113:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    119:119:android.net.Uri getContentUri() -> getContentUri
    125:125:android.content.ClipDescription getDescription() -> getDescription
    137:137:java.lang.Object getInputContentInfo() -> getInputContentInfo
    131:131:android.net.Uri getLinkUri() -> getLinkUri
    142:142:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
    62:65:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    0:0:java.lang.Object getInputContentInfo() -> getInputContentInfo
    83:83:android.net.Uri getLinkUri() -> getLinkUri
    0:0:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl:
# {"id":"sourceFile","fileName":"InputContentInfoCompat.java"}
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    195:195:void <clinit>() -> <clinit>
    138:225:void <init>(android.view.View) -> <init>
    687:691:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    0:0:float constrain(float,float,float) -> constrain
    0:0:int constrain(int,int,int) -> constrain
    638:645:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:543:void requestStop() -> requestStop
    420:420:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:359:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:240:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:403:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:297:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:316:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:452:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:436:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:380:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:338:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:529:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    756:761:void <init>() -> <init>
    831:842:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    0:0:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:791:void requestStop() -> requestStop
    769:769:void setRampDownDuration(int) -> setRampDownDuration
    765:765:void setRampUpDuration(int) -> setRampUpDuration
    852:853:void setTargetVelocity(float,float) -> setTargetVelocity
    776:781:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
# {"id":"sourceFile","fileName":"AutoScrollHelper.java"}
    695:695:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:727:void run() -> run
androidx.core.widget.CheckedTextViewCompat -> androidx.core.widget.CheckedTextViewCompat:
# {"id":"sourceFile","fileName":"CheckedTextViewCompat.java"}
    122:122:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
    57:57:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    92:92:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CheckedTextViewCompat$Api16Impl -> androidx.core.widget.CheckedTextViewCompat$Api16Impl:
# {"id":"sourceFile","fileName":"CheckedTextViewCompat.java"}
    163:163:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
androidx.core.widget.CheckedTextViewCompat$Api21Impl -> androidx.core.widget.CheckedTextViewCompat$Api21Impl:
# {"id":"sourceFile","fileName":"CheckedTextViewCompat.java"}
    136:136:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    146:146:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
# {"id":"sourceFile","fileName":"CompoundButtonCompat.java"}
    125:144:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    74:74:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    110:110:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    60:60:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    96:96:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.CompoundButtonCompat$Api21Impl -> androidx.core.widget.CompoundButtonCompat$Api21Impl:
# {"id":"sourceFile","fileName":"CompoundButtonCompat.java"}
    163:163:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    173:173:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    158:158:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    168:168:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.CompoundButtonCompat$Api23Impl -> androidx.core.widget.CompoundButtonCompat$Api23Impl:
# {"id":"sourceFile","fileName":"CompoundButtonCompat.java"}
    185:185:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
androidx.core.widget.ContentLoadingProgressBar -> androidx.core.widget.ContentLoadingProgressBar:
# {"id":"sourceFile","fileName":"ContentLoadingProgressBar.java"}
    0:0:void $r8$lambda$9ZVtVfM7MwrgGmJEIZNfuhCC7eY(androidx.core.widget.ContentLoadingProgressBar) -> $r8$lambda$9ZVtVfM7MwrgGmJEIZNfuhCC7eY
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ovrYLeWrClCHhOWg8t_Ay80kDrs(androidx.core.widget.ContentLoadingProgressBar) -> $r8$lambda$ovrYLeWrClCHhOWg8t_Ay80kDrs
      # {"id":"com.android.tools.r8.synthesized"}
    59:59:void <init>(android.content.Context) -> <init>
    39:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:47:void lambda$new$0() -> lambda$new$0
    51:54:void lambda$new$1() -> lambda$new$1
    68:69:void onAttachedToWindow() -> onAttachedToWindow
    74:75:void onDetachedFromWindow() -> onDetachedFromWindow
    79:80:void removeCallbacks() -> removeCallbacks
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda0 -> androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$1$14b434ebeca3be45220c0f738558abffd7dc9f852269cee8b9724b01d3ca50be$0.f$0 -> f$0
    0:0:void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$1$14b434ebeca3be45220c0f738558abffd7dc9f852269cee8b9724b01d3ca50be$0.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$1$14b434ebeca3be45220c0f738558abffd7dc9f852269cee8b9724b01d3ca50be$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda1 -> androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$1$14b434ebeca3be45220c0f738558abffd7dc9f852269cee8b9724b01d3ca50be$1.f$0 -> f$0
    0:0:void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$1$14b434ebeca3be45220c0f738558abffd7dc9f852269cee8b9724b01d3ca50be$1.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$1$14b434ebeca3be45220c0f738558abffd7dc9f852269cee8b9724b01d3ca50be$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    69:73:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    90:91:float getDistance(android.widget.EdgeEffect) -> getDistance
    198:198:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    245:248:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.EdgeEffectCompat$Api21Impl -> androidx.core.widget.EdgeEffectCompat$Api21Impl:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    349:349:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.EdgeEffectCompat$Api31Impl -> androidx.core.widget.EdgeEffectCompat$Api31Impl:
# {"id":"sourceFile","fileName":"EdgeEffectCompat.java"}
    311:313:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    334:334:float getDistance(android.widget.EdgeEffect) -> getDistance
    324:326:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
# {"id":"sourceFile","fileName":"ImageViewCompat.java"}
    40:40:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    77:77:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    53:53:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    91:91:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ImageViewCompat$Api21Impl -> androidx.core.widget.ImageViewCompat$Api21Impl:
# {"id":"sourceFile","fileName":"ImageViewCompat.java"}
    120:120:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    130:130:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    125:125:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    135:135:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
# {"id":"sourceFile","fileName":"ListViewAutoScrollHelper.java"}
    33:35:void <init>(android.widget.ListView) -> <init>
    0:0:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:73:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:40:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
# {"id":"sourceFile","fileName":"ListViewCompat.java"}
    71:71:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    41:41:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.ListViewCompat$Api19Impl -> androidx.core.widget.ListViewCompat$Api19Impl:
# {"id":"sourceFile","fileName":"ListViewCompat.java"}
    108:108:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    103:103:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    90:210:void <clinit>() -> <clinit>
    222:222:void <init>(android.content.Context) -> <init>
    226:226:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    124:256:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1899:1900:void abortAnimatedScroll() -> abortAnimatedScroll
    514:518:void addView(android.view.View) -> addView
    523:527:void addView(android.view.View,int) -> addView
    532:536:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    541:545:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1517:1561:boolean arrowScroll(int) -> arrowScroll
    1224:1226:boolean canOverScroll() -> canOverScroll
    565:569:boolean canScroll() -> canScroll
    0:0:int clamp(int,int,int) -> clamp
    1762:1762:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1755:1755:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1748:1748:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1798:1850:void computeScroll() -> computeScroll
    1951:2010:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1741:1741:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1734:1734:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1710:1720:int computeVerticalScrollRange() -> computeVerticalScrollRange
    1070:1085:int consumeFlingInVerticalStretch(int) -> consumeFlingInVerticalStretch
    663:663:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    340:340:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    345:345:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    295:295:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    335:335:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    264:264:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    328:328:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1593:1596:void doScrollY(int) -> doScrollY
    2209:2256:void draw(android.graphics.Canvas) -> draw
    1108:1118:boolean edgeEffectFling(int) -> edgeEffectFling
    2175:2181:void endDrag() -> endDrag
    675:708:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1338:1371:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    2163:2170:void fling(int) -> fling
    1454:1469:boolean fullScroll(int) -> fullScroll
    477:485:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    498:498:int getMaxScrollAmount() -> getMaxScrollAmount
    450:450:int getNestedScrollAxes() -> getNestedScrollAxes
    1311:1316:int getScrollRange() -> getScrollRange
    1100:1103:float getSplineFlingDistance(int) -> getSplineFlingDistance
    462:467:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1230:1241:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    282:282:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    322:322:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    717:723:boolean inChild(int,int) -> inChild
    729:732:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    502:509:void initScrollView() -> initScrollView
    737:738:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    307:307:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1571:1571:boolean isOffScreen(android.view.View) -> isOffScreen
    2151:2152:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1579:1583:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1768:1778:void measureChild(android.view.View,int,int) -> measureChild
    1784:1792:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    2118:2120:void onAttachedToWindow() -> onAttachedToWindow
    1168:1211:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    770:866:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2080:2113:void onLayout(boolean,int,int,int,int) -> onLayout
    627:655:void onMeasure(int,int) -> onMeasure
    436:437:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    445:445:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    399:399:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    429:429:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    353:353:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    393:393:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    424:424:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    380:381:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    413:413:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    357:366:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1247:1247:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    2047:2059:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2292:2300:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2306:2308:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    618:621:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1151:1161:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    2125:2139:void onSizeChanged(int,int,int,int) -> onSizeChanged
    0:0:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    407:407:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    386:387:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    418:418:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    871:1035:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1256:1304:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1416:1437:boolean pageScroll(int) -> pageScroll
    743:745:void recycleVelocityTracker() -> recycleVelocityTracker
    1867:1883:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    2017:2023:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2066:2069:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    752:754:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    2074:2075:void requestLayout() -> requestLayout
    1890:1895:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1487:1504:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    2192:2202:void scrollTo(int,int) -> scrollTo
    1909:1917:void scrollToChild(android.view.View) -> scrollToChild
    1930:1936:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    595:597:void setFillViewport(boolean) -> setFillViewport
    302:302:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    558:558:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    613:613:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    1053:1056:boolean shouldAbsorb(android.widget.EdgeEffect,int) -> shouldAbsorb
    0:0:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1608:1608:void smoothScrollBy(int,int) -> smoothScrollBy
    1631:1652:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1686:1686:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1699:1699:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    272:272:boolean startNestedScroll(int,int) -> startNestedScroll
    312:312:boolean startNestedScroll(int) -> startNestedScroll
    1139:1144:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    277:277:void stopNestedScroll(int) -> stopNestedScroll
    317:317:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    2352:2352:void <init>() -> <init>
    2424:2432:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2399:2415:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2355:2388:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$Api21Impl -> androidx.core.widget.NestedScrollView$Api21Impl:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    2444:2444:boolean getClipToPadding(android.view.ViewGroup) -> getClipToPadding
androidx.core.widget.NestedScrollView$OnScrollChangeListener -> androidx.core.widget.NestedScrollView$OnScrollChangeListener:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    2338:2338:void <clinit>() -> <clinit>
    2316:2316:void <init>(android.os.Parcelable) -> <init>
    2320:2321:void <init>(android.os.Parcel) -> <init>
    2333:2334:java.lang.String toString() -> toString
    2326:2327:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    2339:2339:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2342:2342:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2339:2339:java.lang.Object[] newArray(int) -> newArray
    2347:2347:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    93:107:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    157:172:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    71:71:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api19Impl -> androidx.core.widget.PopupWindowCompat$Api19Impl:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    247:247:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api23Impl -> androidx.core.widget.PopupWindowCompat$Api23Impl:
# {"id":"sourceFile","fileName":"PopupWindowCompat.java"}
    224:224:boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    234:234:int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    219:219:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    229:229:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    301:301:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    794:794:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    804:804:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    232:232:int getMaxLines(android.widget.TextView) -> getMaxLines
    990:1004:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    933:981:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    841:853:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1020:1024:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1054:1058:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    155:155:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    719:742:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    764:783:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    822:828:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    910:916:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    288:291:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    868:893:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    546:547:android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> unwrapCustomSelectionActionModeCallback
    524:534:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.core.widget.TextViewCompat$$InternalSyntheticApiModelOutline$1$ec43ce9301d10f1a886eea43c38228d6c0367fa94f8ec6725b783a18aa23e616$0.m(android.widget.TextView,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$Api16Impl -> androidx.core.widget.TextViewCompat$Api16Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1148:1148:boolean getIncludeFontPadding(android.widget.TextView) -> getIncludeFontPadding
    1138:1138:int getMaxLines(android.widget.TextView) -> getMaxLines
    1143:1143:int getMinLines(android.widget.TextView) -> getMinLines
androidx.core.widget.TextViewCompat$Api17Impl -> androidx.core.widget.TextViewCompat$Api17Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1111:1111:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    1094:1094:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1126:1126:int getTextDirection(android.view.View) -> getTextDirection
    1121:1121:java.util.Locale getTextLocale(android.widget.TextView) -> getTextLocale
    1089:1089:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    1100:1100:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1106:1106:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1116:1116:void setTextDirection(android.view.View,int) -> setTextDirection
androidx.core.widget.TextViewCompat$Api23Impl -> androidx.core.widget.TextViewCompat$Api23Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1234:1234:int getBreakStrategy(android.widget.TextView) -> getBreakStrategy
    1259:1259:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView) -> getCompoundDrawableTintList
    1254:1254:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView) -> getCompoundDrawableTintMode
    1244:1244:int getHyphenationFrequency(android.widget.TextView) -> getHyphenationFrequency
    1239:1239:void setBreakStrategy(android.widget.TextView,int) -> setBreakStrategy
    1264:1264:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1269:1269:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    1249:1249:void setHyphenationFrequency(android.widget.TextView,int) -> setHyphenationFrequency
androidx.core.widget.TextViewCompat$Api24Impl -> androidx.core.widget.TextViewCompat$Api24Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1281:1281:android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale) -> getInstance
androidx.core.widget.TextViewCompat$Api28Impl -> androidx.core.widget.TextViewCompat$Api28Impl:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    1221:1221:java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols) -> getDigitStrings
    1216:1216:android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1211:1211:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
# {"id":"sourceFile","fileName":"TextViewCompat.java"}
    569:572:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    697:697:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    685:687:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    656:665:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    598:598:android.view.ActionMode$Callback getWrappedCallback() -> getWrappedCallback
    691:693:boolean isEditable(android.widget.TextView) -> isEditable
    672:679:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    588:588:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    577:577:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    593:593:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    582:583:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    602:649:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.core.widget.TextViewCompat$OreoCallback$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.TextViewCompat$OreoCallback$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.core.widget.TextViewCompat$OreoCallback$$InternalSyntheticApiModelOutline$1$a6e6859eeeea66ecd2b0693aaf7e3b24fa0bdb27d8152169d43fcde602cd607f$0.m(android.content.Context,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewKt$addTextChangedListener$1 -> androidx.core.widget.TextViewKt$addTextChangedListener$1:
# {"id":"sourceFile","fileName":"TextView.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(java.lang.CharSequence,int,int,int) -> invoke
    71:71:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
androidx.core.widget.TextViewKt$addTextChangedListener$2 -> androidx.core.widget.TextViewKt$addTextChangedListener$2:
# {"id":"sourceFile","fileName":"TextView.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(java.lang.CharSequence,int,int,int) -> invoke
    77:77:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
androidx.core.widget.TextViewKt$addTextChangedListener$3 -> androidx.core.widget.TextViewKt$addTextChangedListener$3:
# {"id":"sourceFile","fileName":"TextView.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void invoke(android.text.Editable) -> invoke
    78:78:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.widget.TextViewOnReceiveContentListener -> androidx.core.widget.TextViewOnReceiveContentListener:
# {"id":"sourceFile","fileName":"TextViewOnReceiveContentListener.java"}
    95:95:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int) -> coerceToText
    56:85:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> onReceiveContent
    103:108:void replaceSelection(android.text.Editable,java.lang.CharSequence) -> replaceSelection
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl -> androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl:
# {"id":"sourceFile","fileName":"TextViewOnReceiveContentListener.java"}
    118:121:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.core.widget.TintableCompoundButton -> androidx.core.widget.TintableCompoundButton:
# {"id":"sourceFile","fileName":"TintableCompoundButton.java"}
androidx.core.widget.TintableCompoundDrawablesView -> androidx.core.widget.TintableCompoundDrawablesView:
# {"id":"sourceFile","fileName":"TintableCompoundDrawablesView.java"}
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    150:151:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:336:void changeCursor(android.database.Cursor) -> changeCursor
    216:217:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:288:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:230:java.lang.Object getItem(int) -> getItem
    241:243:long getItemId(int) -> getItemId
    262:274:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    179:198:void init(android.content.Context,android.database.Cursor,int) -> init
    469:471:void onContentChanged() -> onContentChanged
    351:371:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    476:477:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    0:0:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:487:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
# {"id":"sourceFile","fileName":"CursorAdapter.java"}
    492:492:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:498:void onChanged() -> onChanged
    503:504:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
# {"id":"sourceFile","fileName":"CursorFilter.java"}
    39:40:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:58:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:68:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient -> androidx.cursoradapter.widget.CursorFilter$CursorFilterClient:
# {"id":"sourceFile","fileName":"CursorFilter.java"}
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
# {"id":"sourceFile","fileName":"ResourceCursorAdapter.java"}
    82:84:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:40:void <init>() -> <init>
    48:52:void <init>(android.os.Parcelable) -> <init>
    70:72:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    0:0:int describeContents() -> describeContents
    77:77:android.os.Parcelable getSuperState() -> getSuperState
    87:87:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
# {"id":"sourceFile","fileName":"AbsSavedState.java"}
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
# {"id":"sourceFile","fileName":"ExploreByTouchHelper.java"}
    100:347:void <clinit>() -> <clinit>
    104:150:void <init>(android.view.View) -> <init>
    1001:1004:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1053:1061:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    483:483:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    641:643:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    679:702:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    655:656:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    793:889:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    736:749:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:194:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    218:251:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:435:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:329:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    452:469:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    544:544:void invalidateVirtualView(int) -> invalidateVirtualView
    568:575:void invalidateVirtualView(int,int) -> invalidateVirtualView
    935:951:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    0:0:int keyToDirection(int) -> keyToDirection
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    722:725:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:280:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    662:665:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    757:760:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    0:0:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    0:0:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    0:0:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    0:0:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
    900:902:boolean performAction(int,int,android.os.Bundle) -> performAction
    913:921:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    907:907:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    971:986:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1019:1040:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    507:517:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    614:624:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
# {"id":"sourceFile","fileName":"ExploreByTouchHelper.java"}
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:339:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
# {"id":"sourceFile","fileName":"ExploreByTouchHelper.java"}
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
# {"id":"sourceFile","fileName":"ExploreByTouchHelper.java"}
    1245:1245:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1252:1254:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1265:1269:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1259:1259:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
# {"id":"sourceFile","fileName":"FocusStrategy.java"}
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    329:334:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:178:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:55:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:69:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:84:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    0:0:int getWeightedDistanceFor(int,int) -> getWeightedDistanceFor
    203:230:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    299:311:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    345:353:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    372:380:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    400:408:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    427:435:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$BoundsAdapter -> androidx.customview.widget.FocusStrategy$BoundsAdapter:
# {"id":"sourceFile","fileName":"FocusStrategy.java"}
androidx.customview.widget.FocusStrategy$CollectionAdapter -> androidx.customview.widget.FocusStrategy$CollectionAdapter:
# {"id":"sourceFile","fileName":"FocusStrategy.java"}
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
# {"id":"sourceFile","fileName":"FocusStrategy.java"}
    95:103:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:129:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.Openable -> androidx.customview.widget.Openable:
# {"id":"sourceFile","fileName":"Openable.java"}
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
# {"id":"sourceFile","fileName":"ViewDragHelper.java"}
    334:334:void <clinit>() -> <clinit>
    120:404:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    554:563:void abort() -> abort
    540:545:void cancel() -> cancel
    500:508:void captureChildView(android.view.View,int) -> captureChildView
    1305:1318:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1335:1343:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1363:1365:boolean checkTouchSlop(int) -> checkTouchSlop
    1388:1403:boolean checkTouchSlop(int,int) -> checkTouchSlop
    699:699:int clampMag(int,int,int) -> clampMag
    716:716:float clampMag(float,float,float) -> clampMag
    819:829:void clearMotionHistory() -> clearMotionHistory
    833:843:void clearMotionHistory(int) -> clearMotionHistory
    671:685:int computeAxisDuration(int,int,int) -> computeAxisDuration
    646:661:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    764:798:boolean continueSettling(boolean) -> continueSettling
    357:357:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    371:372:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    808:814:void dispatchViewReleased(float,float) -> dispatchViewReleased
    725:725:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1455:1469:void dragTo(int,int,int,int) -> dragTo
    847:872:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1516:1520:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    626:641:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    516:516:android.view.View getCapturedView() -> getCapturedView
    488:488:int getDefaultEdgeSize() -> getDefaultEdgeSize
    462:462:int getEdgeSize() -> getEdgeSize
    1530:1533:int getEdgesTouched(int,int) -> getEdgesTouched
    532:532:int getTouchSlop() -> getTouchSlop
    434:434:int getViewDragState() -> getViewDragState
    1484:1484:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    913:913:boolean isPointerDown(int) -> isPointerDown
    1539:1540:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1500:1503:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1126:1277:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1442:1449:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1285:1300:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    877:881:void saveInitialMotion(float,float,int) -> saveInitialMotion
    885:895:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    917:922:void setDragState(int) -> setDragState
    475:475:void setEdgeSize(int) -> setEdgeSize
    450:450:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    414:414:void setMinVelocity(float) -> setMinVelocity
    606:613:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    992:1116:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    581:588:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    937:943:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
# {"id":"sourceFile","fileName":"ViewDragHelper.java"}
    0:0:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
# {"id":"sourceFile","fileName":"ViewDragHelper.java"}
    342:342:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    345:345:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
# {"id":"sourceFile","fileName":"ViewDragHelper.java"}
    0:0:int getOrderedChildIndex(int) -> getOrderedChildIndex
    0:0:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    0:0:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    0:0:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    0:0:boolean onEdgeLock(int) -> onEdgeLock
    0:0:void onEdgeTouched(int,int) -> onEdgeTouched
    0:0:void onViewCaptured(android.view.View,int) -> onViewCaptured
androidx.databinding.BaseObservable -> androidx.databinding.BaseObservable:
# {"id":"sourceFile","fileName":"BaseObservable.java"}
    28:28:void <init>() -> <init>
    33:38:void addOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback) -> addOnPropertyChangedCallback
    55:60:void notifyChange() -> notifyChange
    71:76:void notifyPropertyChanged(int) -> notifyPropertyChanged
    43:48:void removeOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback) -> removeOnPropertyChangedCallback
androidx.databinding.BaseObservableField -> androidx.databinding.BaseObservableField:
# {"id":"sourceFile","fileName":"BaseObservableField.java"}
    8:8:void <init>() -> <init>
    11:16:void <init>(androidx.databinding.Observable[]) -> <init>
androidx.databinding.BaseObservableField$DependencyCallback -> androidx.databinding.BaseObservableField$DependencyCallback:
# {"id":"sourceFile","fileName":"BaseObservableField.java"}
    21:21:void <init>(androidx.databinding.BaseObservableField) -> <init>
    24:24:void onPropertyChanged(androidx.databinding.Observable,int) -> onPropertyChanged
androidx.databinding.CallbackRegistry -> androidx.databinding.CallbackRegistry:
# {"id":"sourceFile","fileName":"CallbackRegistry.java"}
    48:76:void <init>(androidx.databinding.CallbackRegistry$NotifierCallback) -> <init>
    214:220:void add(java.lang.Object) -> add
    44:44:java.lang.Object clone() -> clone
    380:394:androidx.databinding.CallbackRegistry clone() -> clone
    232:244:boolean isRemoved(int) -> isRemoved
    90:108:void notifyCallbacks(java.lang.Object,int,java.lang.Object) -> notifyCallbacks
    201:201:void notifyCallbacks(java.lang.Object,int,java.lang.Object,int,int,long) -> notifyCallbacks
    121:122:void notifyFirst64(java.lang.Object,int,java.lang.Object) -> notifyFirst64
    140:152:void notifyRecurse(java.lang.Object,int,java.lang.Object) -> notifyRecurse
    169:175:void notifyRemainder(java.lang.Object,int,java.lang.Object,int) -> notifyRemainder
    277:285:void remove(java.lang.Object) -> remove
    265:265:void removeRemovedCallbacks(int,long) -> removeRemovedCallbacks
    291:303:void setRemovalBit(int) -> setRemovalBit
androidx.databinding.CallbackRegistry$NotifierCallback -> androidx.databinding.CallbackRegistry$NotifierCallback:
# {"id":"sourceFile","fileName":"CallbackRegistry.java"}
androidx.databinding.DataBinderMapper -> androidx.databinding.DataBinderMapper:
# {"id":"sourceFile","fileName":"DataBinderMapper.java"}
androidx.databinding.DataBindingUtil -> androidx.databinding.DataBindingUtil:
# {"id":"sourceFile","fileName":"DataBindingUtil.java"}
    32:33:void <clinit>() -> <clinit>
    266:266:androidx.databinding.ViewDataBinding getBinding(android.view.View) -> getBinding
androidx.databinding.ListChangeRegistry -> androidx.databinding.ListChangeRegistry:
# {"id":"sourceFile","fileName":"ListChangeRegistry.java"}
    28:38:void <clinit>() -> <clinit>
    143:143:void <init>() -> <init>
    123:129:androidx.databinding.ListChangeRegistry$ListChanges acquire(int,int,int) -> acquire
    136:140:void notifyCallbacks(androidx.databinding.ObservableList,int,androidx.databinding.ListChangeRegistry$ListChanges) -> notifyCallbacks
    81:82:void notifyChanged(androidx.databinding.ObservableList,int,int) -> notifyChanged
    93:94:void notifyInserted(androidx.databinding.ObservableList,int,int) -> notifyInserted
    118:119:void notifyRemoved(androidx.databinding.ObservableList,int,int) -> notifyRemoved
androidx.databinding.ListChangeRegistry$1 -> androidx.databinding.ListChangeRegistry$1:
# {"id":"sourceFile","fileName":"ListChangeRegistry.java"}
    39:39:void <init>() -> <init>
    39:39:void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object) -> onNotifyCallback
    45:58:void onNotifyCallback(androidx.databinding.ObservableList$OnListChangedCallback,androidx.databinding.ObservableList,int,androidx.databinding.ListChangeRegistry$ListChanges) -> onNotifyCallback
androidx.databinding.ListChangeRegistry$ListChanges -> androidx.databinding.ListChangeRegistry$ListChanges:
# {"id":"sourceFile","fileName":"ListChangeRegistry.java"}
androidx.databinding.MergedDataBinderMapper -> androidx.databinding.MergedDataBinderMapper:
# {"id":"sourceFile","fileName":"MergedDataBinderMapper.java"}
    32:43:void <init>() -> <init>
androidx.databinding.Observable -> androidx.databinding.Observable:
# {"id":"sourceFile","fileName":"Observable.java"}
androidx.databinding.Observable$OnPropertyChangedCallback -> androidx.databinding.Observable$OnPropertyChangedCallback:
# {"id":"sourceFile","fileName":"Observable.java"}
androidx.databinding.ObservableArrayList -> androidx.databinding.ObservableArrayList:
# {"id":"sourceFile","fileName":"ObservableArrayList.java"}
    24:25:void <init>() -> <init>
    44:45:boolean add(java.lang.Object) -> add
    51:52:void add(int,java.lang.Object) -> add
    57:60:boolean addAll(java.util.Collection) -> addAll
    67:69:boolean addAll(int,java.util.Collection) -> addAll
    29:32:void addOnListChangedCallback(androidx.databinding.ObservableList$OnListChangedCallback) -> addOnListChangedCallback
    76:79:void clear() -> clear
    117:118:void notifyAdd(int,int) -> notifyAdd
    123:124:void notifyRemove(int,int) -> notifyRemove
    85:86:java.lang.Object remove(int) -> remove
    92:94:boolean remove(java.lang.Object) -> remove
    37:38:void removeOnListChangedCallback(androidx.databinding.ObservableList$OnListChangedCallback) -> removeOnListChangedCallback
    112:113:void removeRange(int,int) -> removeRange
    103:105:java.lang.Object set(int,java.lang.Object) -> set
androidx.databinding.ObservableBoolean -> androidx.databinding.ObservableBoolean:
# {"id":"sourceFile","fileName":"ObservableBoolean.java"}
    101:101:void <clinit>() -> <clinit>
    52:53:void <init>(boolean) -> <init>
    59:59:void <init>() -> <init>
    70:70:void <init>(androidx.databinding.Observable[]) -> <init>
    0:0:int describeContents() -> describeContents
    77:77:boolean get() -> get
    85:87:void set(boolean) -> set
    98:98:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableBoolean$1 -> androidx.databinding.ObservableBoolean$1:
# {"id":"sourceFile","fileName":"ObservableBoolean.java"}
    102:102:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    106:106:androidx.databinding.ObservableBoolean createFromParcel(android.os.Parcel) -> createFromParcel
    102:102:java.lang.Object[] newArray(int) -> newArray
    111:111:androidx.databinding.ObservableBoolean[] newArray(int) -> newArray
androidx.databinding.ObservableByte -> androidx.databinding.ObservableByte:
# {"id":"sourceFile","fileName":"ObservableByte.java"}
    103:103:void <clinit>() -> <clinit>
    53:54:void <init>(byte) -> <init>
    60:60:void <init>() -> <init>
    71:71:void <init>(androidx.databinding.Observable[]) -> <init>
    0:0:int describeContents() -> describeContents
    78:78:byte get() -> get
    87:89:void set(byte) -> set
    100:100:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableByte$1 -> androidx.databinding.ObservableByte$1:
# {"id":"sourceFile","fileName":"ObservableByte.java"}
    104:104:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    108:108:androidx.databinding.ObservableByte createFromParcel(android.os.Parcel) -> createFromParcel
    104:104:java.lang.Object[] newArray(int) -> newArray
    113:113:androidx.databinding.ObservableByte[] newArray(int) -> newArray
androidx.databinding.ObservableChar -> androidx.databinding.ObservableChar:
# {"id":"sourceFile","fileName":"ObservableChar.java"}
    102:102:void <clinit>() -> <clinit>
    52:53:void <init>(char) -> <init>
    59:59:void <init>() -> <init>
    70:70:void <init>(androidx.databinding.Observable[]) -> <init>
    0:0:int describeContents() -> describeContents
    77:77:char get() -> get
    86:88:void set(char) -> set
    99:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableChar$1 -> androidx.databinding.ObservableChar$1:
# {"id":"sourceFile","fileName":"ObservableChar.java"}
    103:103:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    107:107:androidx.databinding.ObservableChar createFromParcel(android.os.Parcel) -> createFromParcel
    103:103:java.lang.Object[] newArray(int) -> newArray
    112:112:androidx.databinding.ObservableChar[] newArray(int) -> newArray
androidx.databinding.ObservableDouble -> androidx.databinding.ObservableDouble:
# {"id":"sourceFile","fileName":"ObservableDouble.java"}
    102:102:void <clinit>() -> <clinit>
    52:53:void <init>(double) -> <init>
    59:59:void <init>() -> <init>
    70:70:void <init>(androidx.databinding.Observable[]) -> <init>
    0:0:int describeContents() -> describeContents
    77:77:double get() -> get
    86:88:void set(double) -> set
    99:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableDouble$1 -> androidx.databinding.ObservableDouble$1:
# {"id":"sourceFile","fileName":"ObservableDouble.java"}
    103:103:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    107:107:androidx.databinding.ObservableDouble createFromParcel(android.os.Parcel) -> createFromParcel
    103:103:java.lang.Object[] newArray(int) -> newArray
    112:112:androidx.databinding.ObservableDouble[] newArray(int) -> newArray
androidx.databinding.ObservableField -> androidx.databinding.ObservableField:
# {"id":"sourceFile","fileName":"ObservableField.java"}
    55:56:void <init>(java.lang.Object) -> <init>
    62:62:void <init>() -> <init>
    73:73:void <init>(androidx.databinding.Observable[]) -> <init>
    81:81:java.lang.Object get() -> get
    90:92:void set(java.lang.Object) -> set
androidx.databinding.ObservableFloat -> androidx.databinding.ObservableFloat:
# {"id":"sourceFile","fileName":"ObservableFloat.java"}
    102:102:void <clinit>() -> <clinit>
    52:53:void <init>(float) -> <init>
    59:59:void <init>() -> <init>
    70:70:void <init>(androidx.databinding.Observable[]) -> <init>
    0:0:int describeContents() -> describeContents
    77:77:float get() -> get
    86:88:void set(float) -> set
    99:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableFloat$1 -> androidx.databinding.ObservableFloat$1:
# {"id":"sourceFile","fileName":"ObservableFloat.java"}
    103:103:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    107:107:androidx.databinding.ObservableFloat createFromParcel(android.os.Parcel) -> createFromParcel
    103:103:java.lang.Object[] newArray(int) -> newArray
    112:112:androidx.databinding.ObservableFloat[] newArray(int) -> newArray
androidx.databinding.ObservableInt -> androidx.databinding.ObservableInt:
# {"id":"sourceFile","fileName":"ObservableInt.java"}
    103:103:void <clinit>() -> <clinit>
    53:54:void <init>(int) -> <init>
    60:60:void <init>() -> <init>
    71:71:void <init>(androidx.databinding.Observable[]) -> <init>
    0:0:int describeContents() -> describeContents
    78:78:int get() -> get
    87:89:void set(int) -> set
    100:100:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableInt$1 -> androidx.databinding.ObservableInt$1:
# {"id":"sourceFile","fileName":"ObservableInt.java"}
    104:104:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    108:108:androidx.databinding.ObservableInt createFromParcel(android.os.Parcel) -> createFromParcel
    104:104:java.lang.Object[] newArray(int) -> newArray
    113:113:androidx.databinding.ObservableInt[] newArray(int) -> newArray
androidx.databinding.ObservableList -> androidx.databinding.ObservableList:
# {"id":"sourceFile","fileName":"ObservableList.java"}
androidx.databinding.ObservableList$OnListChangedCallback -> androidx.databinding.ObservableList$OnListChangedCallback:
# {"id":"sourceFile","fileName":"ObservableList.java"}
androidx.databinding.ObservableLong -> androidx.databinding.ObservableLong:
# {"id":"sourceFile","fileName":"ObservableLong.java"}
    103:103:void <clinit>() -> <clinit>
    53:54:void <init>(long) -> <init>
    60:60:void <init>() -> <init>
    71:71:void <init>(androidx.databinding.Observable[]) -> <init>
    0:0:int describeContents() -> describeContents
    78:78:long get() -> get
    87:89:void set(long) -> set
    100:100:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableLong$1 -> androidx.databinding.ObservableLong$1:
# {"id":"sourceFile","fileName":"ObservableLong.java"}
    104:104:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    108:108:androidx.databinding.ObservableLong createFromParcel(android.os.Parcel) -> createFromParcel
    104:104:java.lang.Object[] newArray(int) -> newArray
    113:113:androidx.databinding.ObservableLong[] newArray(int) -> newArray
androidx.databinding.ObservableParcelable -> androidx.databinding.ObservableParcelable:
# {"id":"sourceFile","fileName":"ObservableParcelable.java"}
    68:68:void <clinit>() -> <clinit>
    48:48:void <init>(android.os.Parcelable) -> <init>
    55:55:void <init>() -> <init>
    0:0:int describeContents() -> describeContents
    65:65:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableParcelable$1 -> androidx.databinding.ObservableParcelable$1:
# {"id":"sourceFile","fileName":"ObservableParcelable.java"}
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    74:74:androidx.databinding.ObservableParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    79:79:androidx.databinding.ObservableParcelable[] newArray(int) -> newArray
androidx.databinding.ObservableShort -> androidx.databinding.ObservableShort:
# {"id":"sourceFile","fileName":"ObservableShort.java"}
    102:102:void <clinit>() -> <clinit>
    52:53:void <init>(short) -> <init>
    59:59:void <init>() -> <init>
    70:70:void <init>(androidx.databinding.Observable[]) -> <init>
    0:0:int describeContents() -> describeContents
    77:77:short get() -> get
    86:88:void set(short) -> set
    99:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.databinding.ObservableShort$1 -> androidx.databinding.ObservableShort$1:
# {"id":"sourceFile","fileName":"ObservableShort.java"}
    103:103:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    107:107:androidx.databinding.ObservableShort createFromParcel(android.os.Parcel) -> createFromParcel
    103:103:java.lang.Object[] newArray(int) -> newArray
    112:112:androidx.databinding.ObservableShort[] newArray(int) -> newArray
androidx.databinding.OnRebindCallback -> androidx.databinding.OnRebindCallback:
# {"id":"sourceFile","fileName":"OnRebindCallback.java"}
androidx.databinding.PropertyChangeRegistry -> androidx.databinding.PropertyChangeRegistry:
# {"id":"sourceFile","fileName":"PropertyChangeRegistry.java"}
    26:26:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
androidx.databinding.PropertyChangeRegistry$1 -> androidx.databinding.PropertyChangeRegistry$1:
# {"id":"sourceFile","fileName":"PropertyChangeRegistry.java"}
    26:26:void <init>() -> <init>
    26:26:void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object) -> onNotifyCallback
    30:30:void onNotifyCallback(androidx.databinding.Observable$OnPropertyChangedCallback,androidx.databinding.Observable,int,java.lang.Void) -> onNotifyCallback
androidx.databinding.ViewDataBinding -> androidx.databinding.ViewDataBinding:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
    71:159:void <clinit>() -> <clinit>
    65:65:java.lang.Runnable access$100(androidx.databinding.ViewDataBinding) -> access$100
    525:525:androidx.databinding.ViewDataBinding getBinding(android.view.View) -> getBinding
androidx.databinding.ViewDataBinding$1 -> androidx.databinding.ViewDataBinding$1:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
androidx.databinding.ViewDataBinding$2 -> androidx.databinding.ViewDataBinding$2:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
androidx.databinding.ViewDataBinding$3 -> androidx.databinding.ViewDataBinding$3:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
androidx.databinding.ViewDataBinding$4 -> androidx.databinding.ViewDataBinding$4:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
androidx.databinding.ViewDataBinding$5 -> androidx.databinding.ViewDataBinding$5:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
    131:131:void <init>() -> <init>
    131:131:void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object) -> onNotifyCallback
    137:145:void onNotifyCallback(androidx.databinding.OnRebindCallback,androidx.databinding.ViewDataBinding,int,java.lang.Void) -> onNotifyCallback
androidx.databinding.ViewDataBinding$6 -> androidx.databinding.ViewDataBinding$6:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
    164:166:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.databinding.ViewDataBinding$CreateWeakListener -> androidx.databinding.ViewDataBinding$CreateWeakListener:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
androidx.databinding.ViewDataBinding$OnStartListener -> androidx.databinding.ViewDataBinding$OnStartListener:
# {"id":"sourceFile","fileName":"ViewDataBinding.java"}
    1685:1685:void onStart() -> onStart
androidx.databinding.library.baseAdapters.DataBinderMapperImpl -> androidx.databinding.library.baseAdapters.DataBinderMapperImpl:
# {"id":"sourceFile","fileName":"DataBinderMapperImpl.java"}
    19:19:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
androidx.drawerlayout.R$styleable -> androidx.drawerlayout.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    110:256:void <clinit>() -> <clinit>
    328:328:void <init>(android.content.Context) -> <init>
    332:332:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    204:398:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    546:549:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1986:2016:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2132:2150:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2036:2045:void cancelChildViewTouch() -> cancelChildViewTouch
    991:991:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    1976:1976:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1800:1800:void close() -> close
    1809:1809:void closeDrawer(android.view.View) -> closeDrawer
    1819:1841:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1851:1851:void closeDrawer(int) -> closeDrawer
    1862:1867:void closeDrawer(int,boolean) -> closeDrawer
    1682:1682:void closeDrawers() -> closeDrawers
    1687:1713:void closeDrawers(boolean) -> closeDrawers
    1359:1370:void computeScroll() -> computeScroll
    1586:1608:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    882:904:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    911:928:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    957:962:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    806:816:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> dispatchTransformedGenericPointerEvent
    1453:1510:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1026:1031:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    996:1000:android.view.View findOpenDrawer() -> findOpenDrawer
    2024:2027:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1962:1962:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1967:1971:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1981:1981:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    425:426:float getDrawerElevation() -> getDrawerElevation
    684:722:int getDrawerLockMode(int) -> getDrawerLockMode
    741:745:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    778:783:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    986:987:int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    978:978:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    1402:1402:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    826:836:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> getTransformedMotionEvent
    1052:1052:java.lang.String gravityToString(int) -> gravityToString
    1377:1379:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    1950:1953:boolean hasPeekingDrawer() -> hasPeekingDrawer
    2020:2020:boolean hasVisibleDrawer() -> hasVisibleDrawer
    2160:2162:boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    1516:1516:boolean isContentView(android.view.View) -> isContentView
    1881:1885:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1520:1522:boolean isDrawerView(android.view.View) -> isDrawerView
    1927:1930:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    793:797:boolean isInBoundsOfChild(float,float,android.view.View) -> isInBoundsOfChild
    1243:1244:void mirror(android.graphics.drawable.Drawable,int) -> mirror
    1008:1016:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    1063:1064:void onAttachedToWindow() -> onAttachedToWindow
    1057:1058:void onDetachedFromWindow() -> onDetachedFromWindow
    1435:1446:void onDraw(android.graphics.Canvas) -> onDraw
    1537:1577:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2051:2055:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2061:2067:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1250:1347:void onLayout(boolean,int,int,int,int) -> onLayout
    1072:1187:void onMeasure(int,int) -> onMeasure
    2072:2097:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1430:1430:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2103:2125:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1619:1657:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1722:1722:void open() -> open
    1731:1731:void openDrawer(android.view.View) -> openDrawer
    1741:1766:void openDrawer(android.view.View,boolean) -> openDrawer
    1776:1776:void openDrawer(int) -> openDrawer
    1787:1792:void openDrawer(int,boolean) -> openDrawer
    1671:1674:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1352:1353:void requestLayout() -> requestLayout
    1203:1218:android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    1222:1236:android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    1195:1199:void resolveShadowDrawables() -> resolveShadowDrawables
    437:440:void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    408:412:void setDrawerElevation(float) -> setDrawerElevation
    529:529:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    584:585:void setDrawerLockMode(int) -> setDrawerLockMode
    608:641:void setDrawerLockMode(int,int) -> setDrawerLockMode
    667:672:void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    463:479:void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    497:497:void setDrawerShadow(int,int) -> setDrawerShadow
    759:764:void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    968:974:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    506:507:void setScrimColor(int) -> setScrimColor
    1391:1392:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1412:1413:void setStatusBarBackground(int) -> setStatusBarBackground
    1424:1425:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    950:952:void updateChildAccessibilityAction(android.view.View) -> updateChildAccessibilityAction
    934:943:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    846:875:void updateDrawerState(int,android.view.View) -> updateDrawerState
androidx.drawerlayout.widget.DrawerLayout$$ExternalSyntheticApiModelOutline0 -> androidx.drawerlayout.widget.DrawerLayout$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowInsets androidx.drawerlayout.widget.DrawerLayout$$InternalSyntheticApiModelOutline$1$3b29bacd6754f0540fda8c31cafe8a38a4c27d35c48330451d142aca2e436347$0.m(androidx.drawerlayout.widget.DrawerLayout) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$1:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    259:259:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    262:263:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
androidx.drawerlayout.widget.DrawerLayout$2 -> androidx.drawerlayout.widget.DrawerLayout$2:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    365:365:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    368:370:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    2425:2426:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2502:2506:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    2518:2533:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    2475:2489:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2463:2465:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2430:2458:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2495:2496:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    2537:2537:void <init>() -> <init>
    2541:2547:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$DrawerListener -> androidx.drawerlayout.widget.DrawerLayout$DrawerListener:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    2388:2399:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2388:2403:void <init>(int,int) -> <init>
    2388:2413:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2388:2417:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2388:2421:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    2199:2199:void <clinit>() -> <clinit>
    2170:2182:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2170:2186:void <init>(android.os.Parcelable) -> <init>
    2191:2196:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    2199:2199:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2199:2199:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2202:2202:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2207:2207:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2199:2199:java.lang.Object[] newArray(int) -> newArray
    2212:2212:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    2221:2228:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2369:2373:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2379:2379:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2278:2281:void closeOtherDrawer() -> closeOtherDrawer
    2364:2364:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2352:2358:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    0:0:boolean onEdgeLock(int) -> onEdgeLock
    2306:2306:void onEdgeTouched(int,int) -> onEdgeTouched
    2271:2274:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2249:2249:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2255:2266:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2289:2301:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2312:2332:void peekDrawer() -> peekDrawer
    2236:2236:void removeCallbacks() -> removeCallbacks
    2232:2232:void setDragger(androidx.customview.widget.ViewDragHelper) -> setDragger
    2243:2244:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    2221:2221:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2223:2223:void run() -> run
androidx.dynamicanimation.animation.AnimationHandler -> androidx.dynamicanimation.animation.AnimationHandler:
# {"id":"sourceFile","fileName":"AnimationHandler.java"}
    69:69:void <clinit>() -> <clinit>
    40:85:void <init>() -> <init>
    125:133:void addAnimationFrameCallback(androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback,long) -> addAnimationFrameCallback
    183:189:void cleanUpList() -> cleanUpList
    151:161:void doAnimationFrame(long) -> doAnimationFrame
    88:91:androidx.dynamicanimation.animation.AnimationHandler getInstance() -> getInstance
    111:118:androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider getProvider() -> getProvider
    171:176:boolean isCallbackDue(androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback,long) -> isCallbackDue
    141:145:void removeCallback(androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback) -> removeCallback
androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher -> androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher:
# {"id":"sourceFile","fileName":"AnimationHandler.java"}
    58:58:void <init>(androidx.dynamicanimation.animation.AnimationHandler) -> <init>
    60:63:void dispatchAnimationFrame() -> dispatchAnimationFrame
androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback -> androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback:
# {"id":"sourceFile","fileName":"AnimationHandler.java"}
androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider -> androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider:
# {"id":"sourceFile","fileName":"AnimationHandler.java"}
    256:257:void <init>(androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher) -> <init>
androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16 -> androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16:
# {"id":"sourceFile","fileName":"AnimationHandler.java"}
    199:204:void <init>(androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher) -> <init>
    214:214:void postFrameCallback() -> postFrameCallback
androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16$1 -> androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16$1:
# {"id":"sourceFile","fileName":"AnimationHandler.java"}
    204:204:void <init>(androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16) -> <init>
    207:207:void doFrame(long) -> doFrame
androidx.dynamicanimation.animation.DynamicAnimation -> androidx.dynamicanimation.animation.DynamicAnimation:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    57:253:void <clinit>() -> <clinit>
    289:367:void <init>(java.lang.Object,androidx.dynamicanimation.animation.FloatPropertyCompat) -> <init>
    639:655:boolean doAnimationFrame(long) -> doAnimationFrame
    674:683:void endAnimationInternal(boolean) -> endAnimationInternal
    710:710:float getPropertyValue() -> getPropertyValue
    703:703:float getValueThreshold() -> getValueThreshold
    605:605:boolean isRunning() -> isRunning
    547:549:void removeNullEntries(java.util.ArrayList) -> removeNullEntries
    690:696:void setPropertyValue(float) -> setPropertyValue
    379:380:androidx.dynamicanimation.animation.DynamicAnimation setStartValue(float) -> setStartValue
    576:580:void start() -> start
    613:623:void startAnimationInternal() -> startAnimationInternal
androidx.dynamicanimation.animation.DynamicAnimation$1 -> androidx.dynamicanimation.animation.DynamicAnimation$1:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    57:57:void <init>(java.lang.String) -> <init>
    57:57:float getValue(java.lang.Object) -> getValue
    65:65:float getValue(android.view.View) -> getValue
    57:57:void setValue(java.lang.Object,float) -> setValue
    60:60:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$10 -> androidx.dynamicanimation.animation.DynamicAnimation$10:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    192:192:void <init>(java.lang.String) -> <init>
    192:192:float getValue(java.lang.Object) -> getValue
    200:200:float getValue(android.view.View) -> getValue
    192:192:void setValue(java.lang.Object,float) -> setValue
    195:195:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$11 -> androidx.dynamicanimation.animation.DynamicAnimation$11:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    207:207:void <init>(java.lang.String) -> <init>
    207:207:float getValue(java.lang.Object) -> getValue
    215:215:float getValue(android.view.View) -> getValue
    207:207:void setValue(java.lang.Object,float) -> setValue
    210:210:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$12 -> androidx.dynamicanimation.animation.DynamicAnimation$12:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    222:222:void <init>(java.lang.String) -> <init>
    222:222:float getValue(java.lang.Object) -> getValue
    230:230:float getValue(android.view.View) -> getValue
    222:222:void setValue(java.lang.Object,float) -> setValue
    225:225:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$13 -> androidx.dynamicanimation.animation.DynamicAnimation$13:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    238:238:void <init>(java.lang.String) -> <init>
    238:238:float getValue(java.lang.Object) -> getValue
    246:246:float getValue(android.view.View) -> getValue
    238:238:void setValue(java.lang.Object,float) -> setValue
    241:241:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$14 -> androidx.dynamicanimation.animation.DynamicAnimation$14:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    253:253:void <init>(java.lang.String) -> <init>
    253:253:float getValue(java.lang.Object) -> getValue
    261:261:float getValue(android.view.View) -> getValue
    253:253:void setValue(java.lang.Object,float) -> setValue
    256:256:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$2 -> androidx.dynamicanimation.animation.DynamicAnimation$2:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    72:72:void <init>(java.lang.String) -> <init>
    72:72:float getValue(java.lang.Object) -> getValue
    80:80:float getValue(android.view.View) -> getValue
    72:72:void setValue(java.lang.Object,float) -> setValue
    75:75:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$3 -> androidx.dynamicanimation.animation.DynamicAnimation$3:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    87:87:void <init>(java.lang.String) -> <init>
    87:87:float getValue(java.lang.Object) -> getValue
    95:95:float getValue(android.view.View) -> getValue
    87:87:void setValue(java.lang.Object,float) -> setValue
    90:90:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$4 -> androidx.dynamicanimation.animation.DynamicAnimation$4:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    102:102:void <init>(java.lang.String) -> <init>
    102:102:float getValue(java.lang.Object) -> getValue
    110:110:float getValue(android.view.View) -> getValue
    102:102:void setValue(java.lang.Object,float) -> setValue
    105:105:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$5 -> androidx.dynamicanimation.animation.DynamicAnimation$5:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    117:117:void <init>(java.lang.String) -> <init>
    117:117:float getValue(java.lang.Object) -> getValue
    125:125:float getValue(android.view.View) -> getValue
    117:117:void setValue(java.lang.Object,float) -> setValue
    120:120:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$6 -> androidx.dynamicanimation.animation.DynamicAnimation$6:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    132:132:void <init>(java.lang.String) -> <init>
    132:132:float getValue(java.lang.Object) -> getValue
    140:140:float getValue(android.view.View) -> getValue
    132:132:void setValue(java.lang.Object,float) -> setValue
    135:135:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$7 -> androidx.dynamicanimation.animation.DynamicAnimation$7:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    147:147:void <init>(java.lang.String) -> <init>
    147:147:float getValue(java.lang.Object) -> getValue
    155:155:float getValue(android.view.View) -> getValue
    147:147:void setValue(java.lang.Object,float) -> setValue
    150:150:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$8 -> androidx.dynamicanimation.animation.DynamicAnimation$8:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    162:162:void <init>(java.lang.String) -> <init>
    162:162:float getValue(java.lang.Object) -> getValue
    170:170:float getValue(android.view.View) -> getValue
    162:162:void setValue(java.lang.Object,float) -> setValue
    165:165:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$9 -> androidx.dynamicanimation.animation.DynamicAnimation$9:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    177:177:void <init>(java.lang.String) -> <init>
    177:177:float getValue(java.lang.Object) -> getValue
    185:185:float getValue(android.view.View) -> getValue
    177:177:void setValue(java.lang.Object,float) -> setValue
    180:180:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$MassState -> androidx.dynamicanimation.animation.DynamicAnimation$MassState:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty -> androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty:
# {"id":"sourceFile","fileName":"DynamicAnimation.java"}
    48:48:void <init>(java.lang.String,androidx.dynamicanimation.animation.DynamicAnimation$1) -> <init>
    50:50:void <init>(java.lang.String) -> <init>
androidx.dynamicanimation.animation.FloatPropertyCompat -> androidx.dynamicanimation.animation.FloatPropertyCompat:
# {"id":"sourceFile","fileName":"FloatPropertyCompat.java"}
    42:43:void <init>(java.lang.String) -> <init>
androidx.dynamicanimation.animation.SpringAnimation -> androidx.dynamicanimation.animation.SpringAnimation:
# {"id":"sourceFile","fileName":"SpringAnimation.java"}
    60:91:void <init>(java.lang.Object,androidx.dynamicanimation.animation.FloatPropertyCompat) -> <init>
    152:159:void animateToFinalPosition(float) -> animateToFinalPosition
    191:191:boolean canSkipToEnd() -> canSkipToEnd
    262:262:boolean isAtEquilibrium(float,float) -> isAtEquilibrium
    197:206:void sanityCheck() -> sanityCheck
    128:128:androidx.dynamicanimation.animation.SpringAnimation setSpring(androidx.dynamicanimation.animation.SpringForce) -> setSpring
    173:181:void skipToEnd() -> skipToEnd
    134:136:void start() -> start
    215:249:boolean updateValueAndVelocity(long) -> updateValueAndVelocity
androidx.dynamicanimation.animation.SpringForce -> androidx.dynamicanimation.animation.SpringForce:
# {"id":"sourceFile","fileName":"SpringForce.java"}
    83:113:void <init>() -> <init>
    83:123:void <init>(float) -> <init>
    206:206:float getFinalPosition() -> getFinalPosition
    247:267:void init() -> init
    232:233:boolean isAtEquilibrium(float,float) -> isAtEquilibrium
    172:176:androidx.dynamicanimation.animation.SpringForce setDampingRatio(float) -> setDampingRatio
    196:196:androidx.dynamicanimation.animation.SpringForce setFinalPosition(float) -> setFinalPosition
    138:142:androidx.dynamicanimation.animation.SpringForce setStiffness(float) -> setStiffness
    329:330:void setValueThreshold(double) -> setValueThreshold
    276:314:androidx.dynamicanimation.animation.DynamicAnimation$MassState updateValues(double,double,long) -> updateValues
androidx.emoji2.text.ConcurrencyHelpers -> androidx.emoji2.text.ConcurrencyHelpers:
# {"id":"sourceFile","fileName":"ConcurrencyHelpers.java"}
    0:0:java.lang.Thread $r8$lambda$rm7NN8F9tEuy2Vr8i0fl8_hnx_A(java.lang.String,java.lang.Runnable) -> $r8$lambda$rm7NN8F9tEuy2Vr8i0fl8_hnx_A
      # {"id":"com.android.tools.r8.synthesized"}
    56:69:java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String) -> createBackgroundPriorityExecutor
    57:58:java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String,java.lang.Runnable) -> lambda$createBackgroundPriorityExecutor$0
    77:80:android.os.Handler mainHandlerAsync() -> mainHandlerAsync
androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0 -> androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.f$0 -> f$0
    0:0:void androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.<init>(java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Thread androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$2$99b7997f70184b7bd3329246bb81dfdeae2dea638daba8dd1bf6fd60e9fd1279$0.newThread(java.lang.Runnable) -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl -> androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl:
# {"id":"sourceFile","fileName":"ConcurrencyHelpers.java"}
    105:105:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.emoji2.text.DefaultEmojiCompatConfig -> androidx.emoji2.text.DefaultEmojiCompatConfig:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    97:98:androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context) -> create
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    119:120:void <init>(androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper) -> <init>
    145:145:androidx.emoji2.text.EmojiCompat$Config configOrNull(android.content.Context,androidx.core.provider.FontRequest) -> configOrNull
    234:238:java.util.List convertToByteArray(android.content.pm.Signature[]) -> convertToByteArray
    130:130:androidx.emoji2.text.EmojiCompat$Config create(android.content.Context) -> create
    219:225:androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager) -> generateFontRequestFrom
    246:249:androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper getHelperForApi() -> getHelperForApi
    201:201:boolean hasFlagSystem(android.content.pm.ProviderInfo) -> hasFlagSystem
    183:188:android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager) -> queryDefaultInstalledContentProvider
    159:169:androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context) -> queryForDefaultFontRequest
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    270:272:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    302:302:void <init>() -> <init>
    315:315:android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo) -> getProviderInfo
    309:309:java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int) -> queryIntentContentProviders
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28:
# {"id":"sourceFile","fileName":"DefaultEmojiCompatConfig.java"}
    325:325:void <init>() -> <init>
    338:340:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
androidx.emoji2.text.DefaultGlyphChecker -> androidx.emoji2.text.DefaultGlyphChecker:
# {"id":"sourceFile","fileName":"DefaultGlyphChecker.java"}
    46:46:void <clinit>() -> <clinit>
    53:55:void <init>() -> <init>
    84:87:java.lang.StringBuilder getStringBuilder() -> getStringBuilder
    68:80:boolean hasGlyph(java.lang.CharSequence,int,int,int) -> hasGlyph
androidx.emoji2.text.EmojiCompat -> androidx.emoji2.text.EmojiCompat:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    349:350:void <clinit>() -> <clinit>
    459:477:void <init>(androidx.emoji2.text.EmojiCompat$Config) -> <init>
    111:111:androidx.emoji2.text.EmojiCompat$GlyphChecker access$000(androidx.emoji2.text.EmojiCompat) -> access$000
    648:652:androidx.emoji2.text.EmojiCompat get() -> get
    813:813:int getEmojiSpanIndicatorColor() -> getEmojiSpanIndicatorColor
    783:788:int getLoadState() -> getLoadState
    868:868:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    839:839:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    549:557:androidx.emoji2.text.EmojiCompat init(androidx.emoji2.text.EmojiCompat$Config) -> init
    593:593:boolean isConfigured() -> isConfigured
    804:804:boolean isEmojiSpanIndicatorEnabled() -> isEmojiSpanIndicatorEnabled
    795:795:boolean isInitialized() -> isInitialized
    672:681:void load() -> load
    681:684:void load() -> load
    688:698:void loadMetadata() -> loadMetadata
    719:728:void onMetadataLoadFailed(java.lang.Throwable) -> onMetadataLoadFailed
    704:714:void onMetadataLoadSuccess() -> onMetadataLoadSuccess
    956:957:java.lang.CharSequence process(java.lang.CharSequence) -> process
    991:991:java.lang.CharSequence process(java.lang.CharSequence,int,int) -> process
    1029:1029:java.lang.CharSequence process(java.lang.CharSequence,int,int,int) -> process
    1071:1106:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,int) -> process
    746:757:void registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> registerInitCallback
    766:772:void unregisterInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> unregisterInitCallback
    1143:1149:void updateEditorInfo(android.view.inputmethod.EditorInfo) -> updateEditorInfo
androidx.emoji2.text.EmojiCompat$CompatInternal -> androidx.emoji2.text.EmojiCompat$CompatInternal:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1566:1567:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
androidx.emoji2.text.EmojiCompat$CompatInternal19 -> androidx.emoji2.text.EmojiCompat$CompatInternal19:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1621:1621:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
    1627:1640:void loadMetadata() -> loadMetadata
    1648:1661:void onMetadataLoadSuccess(androidx.emoji2.text.MetadataRepo) -> onMetadataLoadSuccess
    1683:1683:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    1688:1689:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.text.EmojiCompat$CompatInternal19$1 -> androidx.emoji2.text.EmojiCompat$CompatInternal19$1:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1627:1627:void <init>(androidx.emoji2.text.EmojiCompat$CompatInternal19) -> <init>
    1635:1635:void onFailed(java.lang.Throwable) -> onFailed
    1630:1630:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompat$Config -> androidx.emoji2.text.EmojiCompat$Config:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1300:1315:void <init>(androidx.emoji2.text.EmojiCompat$MetadataRepoLoader) -> <init>
    1508:1508:androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader() -> getMetadataRepoLoader
    1486:1486:androidx.emoji2.text.EmojiCompat$Config setMetadataLoadStrategy(int) -> setMetadataLoadStrategy
androidx.emoji2.text.EmojiCompat$GlyphChecker -> androidx.emoji2.text.EmojiCompat$GlyphChecker:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
androidx.emoji2.text.EmojiCompat$InitCallback -> androidx.emoji2.text.EmojiCompat$InitCallback:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    0:0:void onFailed(java.lang.Throwable) -> onFailed
    0:0:void onInitialized() -> onInitialized
androidx.emoji2.text.EmojiCompat$ListenerDispatcher -> androidx.emoji2.text.EmojiCompat$ListenerDispatcher:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1523:1523:void <init>(androidx.emoji2.text.EmojiCompat$InitCallback,int) -> <init>
    1529:1529:void <init>(java.util.Collection,int) -> <init>
    1534:1538:void <init>(java.util.Collection,int,java.lang.Throwable) -> <init>
    1543:1553:void run() -> run
androidx.emoji2.text.EmojiCompat$MetadataRepoLoader -> androidx.emoji2.text.EmojiCompat$MetadataRepoLoader:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback -> androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
androidx.emoji2.text.EmojiCompat$SpanFactory -> androidx.emoji2.text.EmojiCompat$SpanFactory:
# {"id":"sourceFile","fileName":"EmojiCompat.java"}
    1168:1168:androidx.emoji2.text.EmojiSpan createSpan(androidx.emoji2.text.EmojiMetadata) -> createSpan
androidx.emoji2.text.EmojiCompatInitializer -> androidx.emoji2.text.EmojiCompatInitializer:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    73:73:java.lang.Object create(android.content.Context) -> create
    88:90:java.lang.Boolean create(android.content.Context) -> create
    103:107:void delayUntilFirstResume(android.content.Context) -> delayUntilFirstResume
    128:128:java.util.List dependencies() -> dependencies
    118:119:void loadEmojiCompatAfterDelay() -> loadEmojiCompatAfterDelay
androidx.emoji2.text.EmojiCompatInitializer$1 -> androidx.emoji2.text.EmojiCompatInitializer$1:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    107:107:void <init>(androidx.emoji2.text.EmojiCompatInitializer,androidx.lifecycle.Lifecycle) -> <init>
    0:0:void onCreate(androidx.lifecycle.LifecycleOwner) -> onCreate
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void onPause(androidx.lifecycle.LifecycleOwner) -> onPause
      # {"id":"com.android.tools.r8.synthesized"}
    110:111:void onResume(androidx.lifecycle.LifecycleOwner) -> onResume
    0:0:void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    150:151:void <init>(android.content.Context) -> <init>
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    0:0:void $r8$lambda$2V1iWTiAwNxOBlVvz73bbuEdzIw(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> $r8$lambda$2V1iWTiAwNxOBlVvz73bbuEdzIw
      # {"id":"com.android.tools.r8.synthesized"}
    159:160:void <init>(android.content.Context) -> <init>
    174:203:void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> doLoad
    167:167:void lambda$load$0(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> lambda$load$0
    165:167:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$0 -> f$0
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$1 -> f$1
    java.util.concurrent.ThreadPoolExecutor androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.f$2 -> f$2
    0:0:void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.<init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$1$140a2bd3fa101cb046040bbcca744ab7501b3b0c683a7652387846f552944305$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1 -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    180:180:void <init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
    195:198:void onFailed(java.lang.Throwable) -> onFailed
    185:188:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable -> androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable:
# {"id":"sourceFile","fileName":"EmojiCompatInitializer.java"}
    137:143:void run() -> run
androidx.emoji2.text.EmojiMetadata -> androidx.emoji2.text.EmojiMetadata:
# {"id":"sourceFile","fileName":"EmojiMetadata.java"}
    73:73:void <clinit>() -> <clinit>
    89:94:void <init>(androidx.emoji2.text.MetadataRepo,int) -> <init>
    108:117:void draw(android.graphics.Canvas,float,float,android.graphics.Paint) -> draw
    230:230:int getCodepointAt(int) -> getCodepointAt
    237:237:int getCodepointsLength() -> getCodepointsLength
    190:190:int getHasGlyph() -> getHasGlyph
    166:166:short getHeight() -> getHeight
    152:152:int getId() -> getId
    132:144:androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem() -> getMetadataItem
    180:180:short getSdkAdded() -> getSdkAdded
    159:159:short getWidth() -> getWidth
    221:221:boolean isDefaultEmoji() -> isDefaultEmoji
    213:213:void setHasGlyph(boolean) -> setHasGlyph
    242:252:java.lang.String toString() -> toString
androidx.emoji2.text.EmojiProcessor -> androidx.emoji2.text.EmojiProcessor:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    112:117:void <init>(androidx.emoji2.text.MetadataRepo,androidx.emoji2.text.EmojiCompat$SpanFactory,androidx.emoji2.text.EmojiCompat$GlyphChecker,boolean,int[]) -> <init>
    490:491:void addEmoji(android.text.Spannable,androidx.emoji2.text.EmojiMetadata,int,int) -> addEmoji
    375:395:boolean delete(android.text.Editable,android.view.KeyEvent,boolean) -> delete
    432:473:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    355:366:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    509:515:boolean hasGlyph(java.lang.CharSequence,int,int,androidx.emoji2.text.EmojiMetadata) -> hasGlyph
    0:0:boolean hasInvalidSelection(int,int) -> hasInvalidSelection
    485:485:boolean hasModifiers(android.view.KeyEvent) -> hasModifiers
    210:329:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder -> androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    725:759:int findIndexBackward(java.lang.CharSequence,int,int) -> findIndexBackward
    781:817:int findIndexForward(java.lang.CharSequence,int,int) -> findIndexForward
androidx.emoji2.text.EmojiProcessor$ProcessorSm -> androidx.emoji2.text.EmojiProcessor$ProcessorSm:
# {"id":"sourceFile","fileName":"EmojiProcessor.java"}
    526:569:void <init>(androidx.emoji2.text.MetadataRepo$Node,boolean,int[]) -> <init>
    575:619:int check(int) -> check
    642:642:androidx.emoji2.text.EmojiMetadata getCurrentMetadata() -> getCurrentMetadata
    635:635:androidx.emoji2.text.EmojiMetadata getFlushMetadata() -> getFlushMetadata
    0:0:boolean isEmojiStyle(int) -> isEmojiStyle
    653:654:boolean isInFlushableState() -> isInFlushableState
    0:0:boolean isTextStyle(int) -> isTextStyle
    625:627:int reset() -> reset
    658:673:boolean shouldUseEmojiPresentationStyleForSingleCodepoint() -> shouldUseEmojiPresentationStyleForSingleCodepoint
androidx.emoji2.text.EmojiSpan -> androidx.emoji2.text.EmojiSpan:
# {"id":"sourceFile","fileName":"EmojiSpan.java"}
    42:77:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    110:110:androidx.emoji2.text.EmojiMetadata getMetadata() -> getMetadata
    87:98:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    120:120:int getWidth() -> getWidth
androidx.emoji2.text.FontRequestEmojiCompatConfig -> androidx.emoji2.text.FontRequestEmojiCompatConfig:
# {"id":"sourceFile","fileName":"FontRequestEmojiCompatConfig.java"}
    442:442:void <clinit>() -> <clinit>
    122:122:void <init>(android.content.Context,androidx.core.provider.FontRequest) -> <init>
    148:148:androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor) -> setLoadingExecutor
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper:
# {"id":"sourceFile","fileName":"FontRequestEmojiCompatConfig.java"}
    424:424:android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo) -> buildTypeface
    417:417:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest) -> fetchFonts
    438:438:void unregisterObserver(android.content.Context,android.database.ContentObserver) -> unregisterObserver
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader:
# {"id":"sourceFile","fileName":"FontRequestEmojiCompatConfig.java"}
    208:240:void <init>(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper) -> <init>
    326:342:void cleanUp() -> cleanUp
    350:402:void createMetadata() -> createMetadata
    258:262:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
    267:278:void loadInternal() -> loadInternal
    285:296:androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo() -> retrieveFontInfo
    244:246:void setExecutor(java.util.concurrent.Executor) -> setExecutor
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.f$0 -> f$0
    0:0:void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.<init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$2$4d8265d104f33b0eb9fc891e7007fb0d4ab6ac155b9bdc9dd4448711d98a526a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.MetadataListReader -> androidx.emoji2.text.MetadataListReader:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    120:161:androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader) -> findOffsetInfo
    89:94:androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer) -> read
    0:0:long toUnsignedInt(int) -> toUnsignedInt
    0:0:int toUnsignedShort(short) -> toUnsignedShort
androidx.emoji2.text.MetadataListReader$ByteBufferReader -> androidx.emoji2.text.MetadataListReader$ByteBufferReader:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    315:317:void <init>(java.nio.ByteBuffer) -> <init>
    342:342:long getPosition() -> getPosition
    332:332:int readTag() -> readTag
    327:327:long readUnsignedInt() -> readUnsignedInt
    322:322:int readUnsignedShort() -> readUnsignedShort
    337:337:void skip(int) -> skip
androidx.emoji2.text.MetadataListReader$OffsetInfo -> androidx.emoji2.text.MetadataListReader$OffsetInfo:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
    171:173:void <init>(long,long) -> <init>
    177:177:long getStartOffset() -> getStartOffset
androidx.emoji2.text.MetadataListReader$OpenTypeReader -> androidx.emoji2.text.MetadataListReader$OpenTypeReader:
# {"id":"sourceFile","fileName":"MetadataListReader.java"}
androidx.emoji2.text.MetadataRepo -> androidx.emoji2.text.MetadataRepo:
# {"id":"sourceFile","fileName":"MetadataRepo.java"}
    75:80:void <init>(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList) -> <init>
    160:167:void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList) -> constructIndex
    129:133:androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer) -> create
    203:203:char[] getEmojiCharArray() -> getEmojiCharArray
    212:212:androidx.emoji2.text.flatbuffer.MetadataList getMetadataList() -> getMetadataList
    185:185:int getMetadataVersion() -> getMetadataVersion
    194:194:androidx.emoji2.text.MetadataRepo$Node getRootNode() -> getRootNode
    177:177:android.graphics.Typeface getTypeface() -> getTypeface
    223:227:void put(androidx.emoji2.text.EmojiMetadata) -> put
androidx.emoji2.text.MetadataRepo$Node -> androidx.emoji2.text.MetadataRepo$Node:
# {"id":"sourceFile","fileName":"MetadataRepo.java"}
    242:242:void <init>() -> <init>
    246:247:void <init>(int) -> <init>
    251:251:androidx.emoji2.text.MetadataRepo$Node get(int) -> get
    255:255:androidx.emoji2.text.EmojiMetadata getData() -> getData
    260:269:void put(androidx.emoji2.text.EmojiMetadata,int,int) -> put
androidx.emoji2.text.SpannableBuilder -> androidx.emoji2.text.SpannableBuilder:
# {"id":"sourceFile","fileName":"SpannableBuilder.java"}
    59:77:void <init>(java.lang.Class,java.lang.CharSequence) -> <init>
    59:88:void <init>(java.lang.Class,java.lang.CharSequence,int,int) -> <init>
    49:49:android.text.Editable append(char) -> append
    49:49:android.text.Editable append(java.lang.CharSequence) -> append
    49:49:android.text.Editable append(java.lang.CharSequence,int,int) -> append
    49:49:java.lang.Appendable append(char) -> append
    49:49:java.lang.Appendable append(java.lang.CharSequence) -> append
    49:49:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    344:344:android.text.SpannableStringBuilder append(java.lang.CharSequence) -> append
    351:351:android.text.SpannableStringBuilder append(char) -> append
    360:360:android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int) -> append
    367:367:android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int) -> append
    261:261:void beginBatchEdit() -> beginBatchEdit
    277:278:void blockWatchers() -> blockWatchers
    97:97:androidx.emoji2.text.SpannableBuilder create(java.lang.Class,java.lang.CharSequence) -> create
    49:49:android.text.Editable delete(int,int) -> delete
    337:337:android.text.SpannableStringBuilder delete(int,int) -> delete
    269:270:void endBatchEdit() -> endBatchEdit
    296:297:void fireWatchers() -> fireWatchers
    205:211:int getSpanEnd(java.lang.Object) -> getSpanEnd
    219:225:int getSpanFlags(java.lang.Object) -> getSpanFlags
    191:197:int getSpanStart(java.lang.Object) -> getSpanStart
    151:160:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    247:249:androidx.emoji2.text.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object) -> getWatcherFor
    49:49:android.text.Editable insert(int,java.lang.CharSequence) -> insert
    49:49:android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    323:323:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence) -> insert
    330:330:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    108:108:boolean isWatcher(java.lang.Object) -> isWatcher
    119:119:boolean isWatcher(java.lang.Class) -> isWatcher
    233:236:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    170:182:void removeSpan(java.lang.Object) -> removeSpan
    49:49:android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    49:49:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    304:306:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence) -> replace
    314:316:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int) -> replace
    135:140:void setSpan(java.lang.Object,int,int,int) -> setSpan
    125:125:java.lang.CharSequence subSequence(int,int) -> subSequence
    286:287:void unblockwatchers() -> unblockwatchers
androidx.emoji2.text.SpannableBuilder$WatcherWrapper -> androidx.emoji2.text.SpannableBuilder$WatcherWrapper:
# {"id":"sourceFile","fileName":"SpannableBuilder.java"}
    377:380:void <init>(java.lang.Object) -> <init>
    395:395:void afterTextChanged(android.text.Editable) -> afterTextChanged
    385:385:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    449:449:void blockCalls() -> blockCalls
    457:457:boolean isEmojiSpan(java.lang.Object) -> isEmojiSpan
    404:407:void onSpanAdded(android.text.Spannable,java.lang.Object,int,int) -> onSpanAdded
    429:445:void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int) -> onSpanChanged
    416:419:void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int) -> onSpanRemoved
    390:390:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    453:453:void unblockCalls() -> unblockCalls
androidx.emoji2.text.TypefaceEmojiSpan -> androidx.emoji2.text.TypefaceEmojiSpan:
# {"id":"sourceFile","fileName":"TypefaceEmojiSpan.java"}
    49:49:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    57:60:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    65:70:android.graphics.Paint getDebugPaint() -> getDebugPaint
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable:
# {"id":"sourceFile","fileName":"UnprecomputeTextOnModificationSpannable.java"}
    43:49:void <init>(android.text.Spannable) -> <init>
    43:57:void <init>(java.lang.CharSequence) -> <init>
    116:116:char charAt(int) -> charAt
    135:135:java.util.stream.IntStream chars() -> chars
    142:142:java.util.stream.IntStream codePoints() -> codePoints
    61:65:void ensureSafeWrites() -> ensureSafeWrites
    96:96:int getSpanEnd(java.lang.Object) -> getSpanEnd
    101:101:int getSpanFlags(java.lang.Object) -> getSpanFlags
    91:91:int getSpanStart(java.lang.Object) -> getSpanStart
    86:86:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    69:69:android.text.Spannable getUnwrappedSpannable() -> getUnwrappedSpannable
    111:111:int length() -> length
    106:106:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    161:162:androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector precomputedTextDetector() -> precomputedTextDetector
    80:81:void removeSpan(java.lang.Object) -> removeSpan
    74:75:void setSpan(java.lang.Object,int,int,int) -> setSpan
    122:122:java.lang.CharSequence subSequence(int,int) -> subSequence
    128:128:java.lang.String toString() -> toString
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24:
# {"id":"sourceFile","fileName":"UnprecomputeTextOnModificationSpannable.java"}
    156:156:java.util.stream.IntStream chars(java.lang.CharSequence) -> chars
    152:152:java.util.stream.IntStream codePoints(java.lang.CharSequence) -> codePoints
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24$$ExternalSyntheticApiModelOutline0 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.stream.IntStream androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24$$InternalSyntheticApiModelOutline$3$6c779e0a7c14832531144ed10673819d50383afd10a2e46ba335c5c20b5c3517$0.m(java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24$$ExternalSyntheticApiModelOutline1 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.stream.IntStream androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$CharSequenceHelper_API24$$InternalSyntheticApiModelOutline$3$f15d7b700dd2eeeb6cb4f89c61d22147d931581bf824d4993fc26525fb9d8e47$0.m(java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector:
# {"id":"sourceFile","fileName":"UnprecomputeTextOnModificationSpannable.java"}
    0:0:boolean isPrecomputedText(java.lang.CharSequence) -> isPrecomputedText
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28:
# {"id":"sourceFile","fileName":"UnprecomputeTextOnModificationSpannable.java"}
    173:173:void <init>() -> <init>
    177:177:boolean isPrecomputedText(java.lang.CharSequence) -> isPrecomputedText
androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28$$ExternalSyntheticApiModelOutline0 -> androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28$$InternalSyntheticApiModelOutline$3$0535eabcabf707fca03e76263ffa10d0f88ab15da0e1454efa4a071556c73197$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.flatbuffer.FlexBuffers$FlexBufferException -> androidx.emoji2.text.flatbuffer.FlexBuffers$FlexBufferException:
# {"id":"sourceFile","fileName":"FlexBuffers.java"}
    1083:1083:void <init>(java.lang.String) -> <init>
androidx.emoji2.text.flatbuffer.MetadataItem -> androidx.emoji2.text.flatbuffer.MetadataItem:
# {"id":"sourceFile","fileName":"MetadataItem.java"}
    28:28:void <init>() -> <init>
    33:33:androidx.emoji2.text.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    41:41:int codepoints(int) -> codepoints
    42:42:int codepointsLength() -> codepointsLength
    36:36:boolean emojiStyle() -> emojiStyle
    40:40:short height() -> height
    35:35:int id() -> id
    37:37:short sdkAdded() -> sdkAdded
    39:39:short width() -> width
androidx.emoji2.text.flatbuffer.MetadataList -> androidx.emoji2.text.flatbuffer.MetadataList:
# {"id":"sourceFile","fileName":"MetadataList.java"}
    28:28:void <init>() -> <init>
    33:33:androidx.emoji2.text.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    30:30:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer) -> getRootAsMetadataList
    31:31:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataList) -> getRootAsMetadataList
    37:37:androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int) -> list
    38:38:int listLength() -> listLength
    35:35:int version() -> version
androidx.emoji2.text.flatbuffer.Table -> androidx.emoji2.text.flatbuffer.Table:
# {"id":"sourceFile","fileName":"Table.java"}
    28:37:void <init>() -> <init>
    68:68:int __indirect(int) -> __indirect
    53:53:int __offset(int) -> __offset
    298:306:void __reset(int,java.nio.ByteBuffer) -> __reset
    135:136:int __vector(int) -> __vector
    123:125:int __vector_len(int) -> __vector_len
androidx.emoji2.text.flatbuffer.Utf8 -> androidx.emoji2.text.flatbuffer.Utf8:
# {"id":"sourceFile","fileName":"Utf8.java"}
    62:65:androidx.emoji2.text.flatbuffer.Utf8 getDefault() -> getDefault
androidx.emoji2.text.flatbuffer.Utf8Safe -> androidx.emoji2.text.flatbuffer.Utf8Safe:
# {"id":"sourceFile","fileName":"Utf8Safe.java"}
    63:63:void <init>() -> <init>
androidx.emoji2.viewsintegration.EmojiEditTextHelper -> androidx.emoji2.viewsintegration.EmojiEditTextHelper:
# {"id":"sourceFile","fileName":"EmojiEditTextHelper.java"}
    73:110:void <init>(android.widget.EditText,boolean) -> <init>
    155:155:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    174:174:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    227:227:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal:
# {"id":"sourceFile","fileName":"EmojiEditTextHelper.java"}
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19:
# {"id":"sourceFile","fileName":"EmojiEditTextHelper.java"}
    265:269:void <init>(android.widget.EditText,boolean) -> <init>
    284:299:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    305:310:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    315:315:void setEnabled(boolean) -> setEnabled
androidx.emoji2.viewsintegration.EmojiEditableFactory -> androidx.emoji2.viewsintegration.EmojiEditableFactory:
# {"id":"sourceFile","fileName":"EmojiEditableFactory.java"}
    44:44:void <clinit>() -> <clinit>
    51:54:void <init>() -> <init>
    62:69:android.text.Editable$Factory getInstance() -> getInstance
    74:77:android.text.Editable newEditable(java.lang.CharSequence) -> newEditable
androidx.emoji2.viewsintegration.EmojiInputConnection -> androidx.emoji2.viewsintegration.EmojiInputConnection:
# {"id":"sourceFile","fileName":"EmojiInputConnection.java"}
    49:49:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> <init>
    58:61:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper) -> <init>
    66:68:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    74:76:boolean deleteSurroundingTextInCodePoints(int,int) -> deleteSurroundingTextInCodePoints
    80:80:android.text.Editable getEditable() -> getEditable
androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper -> androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper:
# {"id":"sourceFile","fileName":"EmojiInputConnection.java"}
    90:90:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    95:96:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.viewsintegration.EmojiInputFilter -> androidx.emoji2.viewsintegration.EmojiInputFilter:
# {"id":"sourceFile","fileName":"EmojiInputFilter.java"}
    49:50:void <init>(android.widget.TextView) -> <init>
    56:83:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    93:96:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    164:168:void updateSelection(android.text.Spannable,int,int) -> updateSelection
androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl:
# {"id":"sourceFile","fileName":"EmojiInputFilter.java"}
    105:107:void <init>(android.widget.TextView,androidx.emoji2.viewsintegration.EmojiInputFilter) -> <init>
    148:154:boolean isInputFilterCurrentlyRegisteredOnTextView(android.widget.TextView,android.text.InputFilter) -> isInputFilterCurrentlyRegisteredOnTextView
    112:137:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiKeyListener -> androidx.emoji2.viewsintegration.EmojiKeyListener:
# {"id":"sourceFile","fileName":"EmojiKeyListener.java"}
    40:40:void <init>(android.text.method.KeyListener) -> <init>
    44:46:void <init>(android.text.method.KeyListener,androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper) -> <init>
    73:73:void clearMetaKeyState(android.view.View,android.text.Editable,int) -> clearMetaKeyState
    51:51:int getInputType() -> getInputType
    56:58:boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyDown
    68:68:boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent) -> onKeyOther
    63:63:boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyUp
androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper -> androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper:
# {"id":"sourceFile","fileName":"EmojiKeyListener.java"}
    79:79:boolean handleKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleKeyDown
androidx.emoji2.viewsintegration.EmojiTextViewHelper -> androidx.emoji2.viewsintegration.EmojiTextViewHelper:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    96:103:void <init>(android.widget.TextView,boolean) -> <init>
    132:132:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    180:180:boolean isEnabled() -> isEnabled
    173:173:void setAllCaps(boolean) -> setAllCaps
    163:163:void setEnabled(boolean) -> setEnabled
    145:145:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    322:325:void <init>(android.widget.TextView) -> <init>
    365:373:android.text.InputFilter[] addEmojiInputFilterIfMissing(android.text.InputFilter[]) -> addEmojiInputFilterIfMissing
    409:412:android.util.SparseArray getEmojiInputFilterPositionArray(android.text.InputFilter[]) -> getEmojiInputFilterPositionArray
    349:353:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    479:479:boolean isEnabled() -> isEnabled
    385:397:android.text.InputFilter[] removeEmojiInputFilterIfPresent(android.text.InputFilter[]) -> removeEmojiInputFilterIfPresent
    466:466:void setAllCaps(boolean) -> setAllCaps
    472:474:void setEnabled(boolean) -> setEnabled
    491:491:void setEnabledUnsafe(boolean) -> setEnabledUnsafe
    435:438:android.text.method.TransformationMethod unwrapForDisabled(android.text.method.TransformationMethod) -> unwrapForDisabled
    342:343:void updateFilters() -> updateFilters
    333:335:void updateTransformationMethod() -> updateTransformationMethod
    452:457:android.text.method.TransformationMethod wrapForEnabled(android.text.method.TransformationMethod) -> wrapForEnabled
    422:425:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19:
# {"id":"sourceFile","fileName":"EmojiTextViewHelper.java"}
    232:233:void <init>(android.widget.TextView) -> <init>
    261:264:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    312:312:boolean isEnabled() -> isEnabled
    289:292:void setAllCaps(boolean) -> setAllCaps
    303:306:void setEnabled(boolean) -> setEnabled
    237:237:boolean skipBecauseEmojiCompatNotInitialized() -> skipBecauseEmojiCompatNotInitialized
    276:279:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextWatcher -> androidx.emoji2.viewsintegration.EmojiTextWatcher:
# {"id":"sourceFile","fileName":"EmojiTextWatcher.java"}
    44:52:void <init>(android.widget.EditText,boolean) -> <init>
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    112:115:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    74:88:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    152:160:void processTextOnEnablingEvent(android.widget.EditText,int) -> processTextOnEnablingEvent
    123:129:void setEnabled(boolean) -> setEnabled
    98:98:boolean shouldSkipForDisabledOrNotConfigured() -> shouldSkipForDisabledOrNotConfigured
androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl:
# {"id":"sourceFile","fileName":"EmojiTextWatcher.java"}
    138:139:void <init>(android.widget.EditText) -> <init>
    144:146:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiTransformationMethod -> androidx.emoji2.viewsintegration.EmojiTransformationMethod:
# {"id":"sourceFile","fileName":"EmojiTransformationMethod.java"}
    39:40:void <init>(android.text.method.TransformationMethod) -> <init>
    81:81:android.text.method.TransformationMethod getOriginalTransformationMethod() -> getOriginalTransformationMethod
    45:56:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    70:71:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.fragment.R$styleable -> androidx.fragment.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
# {"id":"sourceFile","fileName":"BackStackRecord.java"}
    38:142:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    38:152:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    276:288:void bumpBackStackNesting(int) -> bumpBackStackNesting
    618:643:void collapseOps() -> collapseOps
    306:306:int commit() -> commit
    311:311:int commitAllowingStateLoss() -> commitAllowingStateLoss
    327:342:int commitInternal(boolean) -> commitInternal
    316:317:void commitNow() -> commitNow
    322:323:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    235:240:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    195:196:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    59:59:void dump(java.lang.String,java.io.PrintWriter) -> dump
    64:131:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    373:421:void executeOps() -> executeOps
    430:478:void executePopOps() -> executePopOps
    507:569:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    357:364:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    654:654:java.lang.String getName() -> getName
    202:207:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    296:300:void runOnCommitRunnables() -> runOnCommitRunnables
    259:272:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    246:252:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    43:55:java.lang.String toString() -> toString
    588:606:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackRecordState -> androidx.fragment.app.BackStackRecordState:
# {"id":"sourceFile","fileName":"BackStackRecordState.java"}
    211:211:void <clinit>() -> <clinit>
    50:83:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    86:100:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    155:185:void fillInBackStackRecord(androidx.fragment.app.BackStackRecord) -> fillInBackStackRecord
    111:120:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    133:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager,java.util.Map) -> instantiate
    195:208:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackRecordState$1 -> androidx.fragment.app.BackStackRecordState$1:
# {"id":"sourceFile","fileName":"BackStackRecordState.java"}
    212:212:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    215:215:androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel) -> createFromParcel
    212:212:java.lang.Object[] newArray(int) -> newArray
    220:220:androidx.fragment.app.BackStackRecordState[] newArray(int) -> newArray
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
# {"id":"sourceFile","fileName":"BackStackState.java"}
    88:88:void <clinit>() -> <clinit>
    36:38:void <init>(java.util.List,java.util.List) -> <init>
    41:43:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    51:72:java.util.List instantiate(androidx.fragment.app.FragmentManager,java.util.Map) -> instantiate
    84:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
# {"id":"sourceFile","fileName":"BackStackState.java"}
    89:89:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object[] newArray(int) -> newArray
    97:97:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    52:52:void <init>(android.view.ViewGroup) -> <init>
    843:844:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    798:815:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    61:134:void executeOperations(java.util.List,boolean) -> executeOperations
    825:835:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    780:784:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    161:325:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    345:766:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
    144:153:void syncAnimations(java.util.List) -> syncAnimations
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    109:109:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    112:114:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    210:210:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    213:221:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    234:234:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    237:239:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    286:286:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    300:308:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    0:0:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    289:290:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    300:300:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    303:304:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    325:325:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    328:332:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    530:530:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    533:534:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    561:561:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    564:564:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    653:653:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    656:656:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    722:722:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    725:727:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    884:891:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean) -> <init>
    896:903:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    853:855:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    877:877:void completeSpecialEffect() -> completeSpecialEffect
    860:860:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    865:865:androidx.core.os.CancellationSignal getSignal() -> getSignal
    869:872:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    918:944:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    968:975:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    988:997:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    963:963:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    950:950:java.lang.Object getTransition() -> getTransition
    958:958:boolean hasSharedElementTransition() -> hasSharedElementTransition
    954:954:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    108:189:void <init>() -> <init>
    61:61:android.app.Dialog access$000(androidx.fragment.app.DialogFragment) -> access$000
    61:61:android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment) -> access$100
    61:61:boolean access$200(androidx.fragment.app.DialogFragment) -> access$200
    526:527:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    310:310:void dismiss() -> dismiss
    333:376:void dismissInternal(boolean,boolean,boolean) -> dismissInternal
    388:388:android.app.Dialog getDialog() -> getDialog
    409:409:int getTheme() -> getTheme
    718:718:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    466:471:void onAttach(android.content.Context) -> onAttach
    0:0:void onCancel(android.content.DialogInterface) -> onCancel
    492:503:void onCreate(android.os.Bundle) -> onCreate
    633:636:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    778:795:void onDestroyView() -> onDestroyView
    478:485:void onDetach() -> onDetach
    645:653:void onDismiss(android.content.DialogInterface) -> onDismiss
    546:547:android.view.View onFindViewById(int) -> onFindViewById
    566:586:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    553:553:boolean onHasView() -> onHasView
    740:759:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    724:733:void onStart() -> onStart
    766:768:void onStop() -> onStop
    692:696:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    510:517:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    658:685:void prepareDialog(android.os.Bundle) -> prepareDialog
    400:402:android.app.Dialog requireDialog() -> requireDialog
    596:604:void setupDialog(android.app.Dialog,int) -> setupDialog
    257:262:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    108:108:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    112:112:void run() -> run
androidx.fragment.app.DialogFragment$2 -> androidx.fragment.app.DialogFragment$2:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    117:117:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    121:122:void onCancel(android.content.DialogInterface) -> onCancel
androidx.fragment.app.DialogFragment$3 -> androidx.fragment.app.DialogFragment$3:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    128:128:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    132:133:void onDismiss(android.content.DialogInterface) -> onDismiss
androidx.fragment.app.DialogFragment$4 -> androidx.fragment.app.DialogFragment$4:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    144:144:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    144:144:void onChanged(java.lang.Object) -> onChanged
    148:159:void onChanged(androidx.lifecycle.LifecycleOwner) -> onChanged
androidx.fragment.app.DialogFragment$5 -> androidx.fragment.app.DialogFragment$5:
# {"id":"sourceFile","fileName":"DialogFragment.java"}
    527:527:void <init>(androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentContainer) -> <init>
    531:534:android.view.View onFindViewById(int) -> onFindViewById
    539:539:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
# {"id":"sourceFile","fileName":"Fragment.java"}
    131:131:void <clinit>() -> <clinit>
    143:584:void <init>() -> <init>
    2906:2926:void callStartTransitionListener(boolean) -> callStartTransitionListener
    3037:3037:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2943:3024:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3383:3386:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    715:715:boolean equals(java.lang.Object) -> equals
    3029:3032:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    981:981:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2768:2769:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2793:2794:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3502:3505:android.view.View getAnimatingAway() -> getAnimatingAway
    785:785:android.os.Bundle getArguments() -> getArguments
    1141:1144:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    954:954:android.content.Context getContext() -> getContext
    474:495:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
    435:459:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    3405:3408:int getEnterAnim() -> getEnterAnim
    2551:2554:java.lang.Object getEnterTransition() -> getEnterTransition
    3488:3491:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    3413:3416:int getExitAnim() -> getExitAnim
    2630:2633:java.lang.Object getExitTransition() -> getExitTransition
    3495:3498:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3524:3527:android.view.View getFocusedView() -> getFocusedView
    1008:1008:java.lang.Object getHost() -> getHost
    754:754:int getId() -> getId
    1770:1775:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    335:335:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    426:429:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3450:3453:int getNextTransition() -> getNextTransition
    1153:1153:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1105:1107:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3436:3439:boolean getPopDirection() -> getPopDirection
    3421:3424:int getPopEnterAnim() -> getPopEnterAnim
    3429:3432:int getPopExitAnim() -> getPopExitAnim
    3513:3516:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2668:2671:java.lang.Object getReenterTransition() -> getReenterTransition
    1031:1031:android.content.res.Resources getResources() -> getResources
    2590:2593:java.lang.Object getReturnTransition() -> getReturnTransition
    503:503:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2701:2704:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2739:2743:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3466:3467:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3474:3475:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    1053:1053:java.lang.String getString(int) -> getString
    762:762:java.lang.String getTag() -> getTag
    918:927:androidx.fragment.app.Fragment getTargetFragment(boolean) -> getTargetFragment
    2050:2050:android.view.View getView() -> getView
    397:397:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    413:421:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    722:722:int hashCode() -> hashCode
    615:621:void initLifecycle() -> initLifecycle
    2264:2280:void initState() -> initState
    661:681:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    1183:1183:boolean isAdded() -> isAdded
    1242:1243:boolean isHidden() -> isHidden
    708:708:boolean isInBackStack() -> isInBackStack
    1256:1257:boolean isMenuVisible() -> isMenuVisible
    3531:3534:boolean isPostponed() -> isPostponed
    812:815:boolean isStateSaved() -> isStateSaved
    3193:3193:void noteStateNotSaved() -> noteStateNotSaved
    2096:2096:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1577:1578:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1877:1881:void onAttach(android.content.Context) -> onAttach
    1896:1896:void onAttach(android.app.Activity) -> onAttach
    0:0:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    2185:2185:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    0:0:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1964:1967:void onCreate(android.os.Bundle) -> onCreate
    0:0:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    0:0:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    2450:2450:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    0:0:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    2022:2023:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2254:2254:void onDestroy() -> onDestroy
    0:0:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    2244:2244:void onDestroyView() -> onDestroyView
    2290:2290:void onDetach() -> onDetach
    1720:1720:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    0:0:void onHiddenChanged(boolean) -> onHiddenChanged
    1825:1829:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1845:1845:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2229:2229:void onLowMemory() -> onLowMemory
    0:0:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    0:0:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    0:0:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    2211:2211:void onPause() -> onPause
    0:0:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    0:0:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    0:0:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    0:0:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    2135:2135:void onResume() -> onResume
    0:0:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    2123:2123:void onStart() -> onStart
    2222:2222:void onStop() -> onStop
    0:0:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    2112:2112:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    3134:3143:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    3056:3069:void performAttach() -> performAttach
    3216:3216:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3269:3273:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    3073:3096:void performCreate(android.os.Bundle) -> performCreate
    3234:3239:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    3101:3121:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3351:3358:void performDestroy() -> performDestroy
    3330:3347:void performDestroyView() -> performDestroyView
    3364:3378:void performDetach() -> performDetach
    1752:1752:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3220:3220:void performLowMemory() -> performLowMemory
    3208:3208:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3257:3263:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3279:3283:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3298:3307:void performPause() -> performPause
    3212:3212:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3246:3251:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3197:3203:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3176:3189:void performResume() -> performResume
    3288:3292:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3158:3171:void performStart() -> performStart
    3314:3323:void performStop() -> performStop
    3128:3129:void performViewCreated() -> performViewCreated
    3633:3637:void registerOnPreAttachListener(androidx.fragment.app.Fragment$OnPreAttachedListener) -> registerOnPreAttachListener
    993:995:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    965:967:android.content.Context requireContext() -> requireContext
    2061:2063:android.view.View requireView() -> requireView
    1986:1990:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    688:703:void restoreViewState(android.os.Bundle) -> restoreViewState
    3147:3153:void restoreViewState() -> restoreViewState
    3394:3400:void setAnimations(int,int,int,int) -> setAnimations
    773:776:void setArguments(android.os.Bundle) -> setArguments
    3520:3520:void setFocusedView(android.view.View) -> setFocusedView
    1357:1360:void setMenuVisibility(boolean) -> setMenuVisibility
    3457:3461:void setNextTransition(int) -> setNextTransition
    3443:3446:void setPopDirection(boolean) -> setPopDirection
    3509:3509:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    3482:3484:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    1389:1400:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1433:1433:void startActivity(android.content.Intent) -> startActivity
    1442:1445:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1471:1471:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1499:1502:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    2880:2894:void startPostponedEnterTransition() -> startPostponedEnterTransition
    728:745:java.lang.String toString() -> toString
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
# {"id":"sourceFile","fileName":"Fragment.java"}
    267:267:void <init>(androidx.fragment.app.Fragment) -> <init>
    270:270:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
# {"id":"sourceFile","fileName":"Fragment.java"}
    318:318:void <init>(androidx.fragment.app.Fragment) -> <init>
    321:322:void onPreAttached() -> onPreAttached
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
# {"id":"sourceFile","fileName":"Fragment.java"}
    2887:2887:void <init>(androidx.fragment.app.Fragment) -> <init>
    2890:2890:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
# {"id":"sourceFile","fileName":"Fragment.java"}
    2918:2918:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2921:2921:void run() -> run
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
# {"id":"sourceFile","fileName":"Fragment.java"}
    3037:3037:void <init>(androidx.fragment.app.Fragment) -> <init>
    3041:3045:android.view.View onFindViewById(int) -> onFindViewById
    3050:3050:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$6 -> androidx.fragment.app.Fragment$6:
# {"id":"sourceFile","fileName":"Fragment.java"}
    3077:3077:void <init>(androidx.fragment.app.Fragment) -> <init>
    3081:3083:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
# {"id":"sourceFile","fileName":"Fragment.java"}
    3650:3685:void <init>() -> <init>
androidx.fragment.app.Fragment$Api19Impl -> androidx.fragment.app.Fragment$Api19Impl:
# {"id":"sourceFile","fileName":"Fragment.java"}
    3697:3697:void cancelPendingInputEvents(android.view.View) -> cancelPendingInputEvents
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
# {"id":"sourceFile","fileName":"Fragment.java"}
    563:563:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
# {"id":"sourceFile","fileName":"Fragment.java"}
    314:314:void <init>(androidx.fragment.app.Fragment$1) -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
# {"id":"sourceFile","fileName":"Fragment.java"}
    537:537:void <clinit>() -> <clinit>
    519:522:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    0:0:int describeContents() -> describeContents
    533:533:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
# {"id":"sourceFile","fileName":"Fragment.java"}
    538:538:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    538:538:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    541:541:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    546:546:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    538:538:java.lang.Object[] newArray(int) -> newArray
    551:551:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    0:0:void $r8$lambda$SP1hanWdTqO_BoGCQWOxhjR39jQ(androidx.fragment.app.FragmentActivity,android.content.Intent) -> $r8$lambda$SP1hanWdTqO_BoGCQWOxhjR39jQ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$UpIcD_fWrvv5DXXVvwm-RJ3bKrA(androidx.fragment.app.FragmentActivity,android.content.res.Configuration) -> $r8$lambda$UpIcD_fWrvv5DXXVvwm-RJ3bKrA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$euPNEtWNfVdMY89Jt5kWt_WEHqw(androidx.fragment.app.FragmentActivity,android.content.Context) -> $r8$lambda$euPNEtWNfVdMY89Jt5kWt_WEHqw
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle $r8$lambda$t3WwJ1XbNlapyNW0l552nMkkXdo(androidx.fragment.app.FragmentActivity) -> $r8$lambda$t3WwJ1XbNlapyNW0l552nMkkXdo
      # {"id":"com.android.tools.r8.synthesized"}
    89:109:void <init>() -> <init>
    248:248:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    411:429:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    462:462:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    129:140:void init() -> init
    130:132:android.os.Bundle lambda$init$0() -> lambda$init$0
    136:136:void lambda$init$1(android.content.res.Configuration) -> lambda$init$1
    139:139:void lambda$init$2(android.content.Intent) -> lambda$init$2
    140:140:void lambda$init$3(android.content.Context) -> lambda$init$3
    764:764:void markFragmentsCreated() -> markFragmentsCreated
    770:785:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    151:152:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    0:0:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    217:220:void onCreate(android.os.Bundle) -> onCreate
    227:229:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    238:240:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    258:260:void onDestroy() -> onDestroy
    265:270:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    283:286:void onPause() -> onPause
    322:323:void onPostResume() -> onPostResume
    489:490:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    309:312:void onResume() -> onResume
    333:334:void onResumeFragments() -> onResumeFragments
    344:359:void onStart() -> onStart
    297:297:void onStateNotSaved() -> onStateNotSaved
    369:375:void onStop() -> onStop
    0:0:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0 -> androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentActivity androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$0.f$0 -> f$0
    0:0:void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$0.<init>(androidx.fragment.app.FragmentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$0.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1 -> androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentActivity androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$1.f$0 -> f$0
    0:0:void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$1.<init>(androidx.fragment.app.FragmentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$1.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda2 -> androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentActivity androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$2.f$0 -> f$0
    0:0:void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$2.<init>(androidx.fragment.app.FragmentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$2.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda3 -> androidx.fragment.app.FragmentActivity$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentActivity androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$3.f$0 -> f$0
    0:0:void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$3.<init>(androidx.fragment.app.FragmentActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.fragment.app.FragmentActivity$$InternalSyntheticLambda$1$ff06e2d7bdf291226d37b4353b1605437624ba3a9eae3873db87597251a20577$3.onContextAvailable(android.content.Context) -> onContextAvailable
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
# {"id":"sourceFile","fileName":"FragmentActivity.java"}
    585:586:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    736:736:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    690:690:void addOnConfigurationChangedListener(androidx.core.util.Consumer) -> addOnConfigurationChangedListener
    713:713:void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> addOnMultiWindowModeChangedListener
    725:725:void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> addOnPictureInPictureModeChangedListener
    702:702:void addOnTrimMemoryListener(androidx.core.util.Consumer) -> addOnTrimMemoryListener
    677:677:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    596:596:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    608:608:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    683:683:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    602:602:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    757:757:void invalidateMenu() -> invalidateMenu
    659:659:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    614:614:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    665:665:android.view.View onFindViewById(int) -> onFindViewById
    573:573:java.lang.Object onGetHost() -> onGetHost
    630:630:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    625:625:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    670:671:boolean onHasView() -> onHasView
    635:635:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    752:752:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
    697:697:void removeOnConfigurationChangedListener(androidx.core.util.Consumer) -> removeOnConfigurationChangedListener
    719:719:void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer) -> removeOnMultiWindowModeChangedListener
    731:731:void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer) -> removeOnPictureInPictureModeChangedListener
    707:707:void removeOnTrimMemoryListener(androidx.core.util.Consumer) -> removeOnTrimMemoryListener
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    123:131:int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean) -> getNextAnim
    45:111:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean) -> loadAnimation
    169:172:int toActivityTransitResId(android.content.Context,int) -> toActivityTransitResId
    142:159:int transitToAnimResourceId(android.content.Context,int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    183:187:void <init>(android.view.animation.Animation) -> <init>
    191:195:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    211:221:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    226:233:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    241:248:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    255:261:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
# {"id":"sourceFile","fileName":"FragmentContainer.java"}
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
# {"id":"sourceFile","fileName":"FragmentContainerView.kt"}
    0:0:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:98:void <init>(android.content.Context) -> <init>
    90:90:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    90:90:void <init>(android.content.Context):90 -> <init>
    91:91:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    91:91:void <init>(android.content.Context):91 -> <init>
    96:96:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    96:96:void <init>(android.content.Context):96 -> <init>
    105:105:void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    109:109:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    90:90:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    90:90:void <init>(android.content.Context,android.util.AttributeSet,int):90 -> <init>
    91:91:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    91:91:void <init>(android.content.Context,android.util.AttributeSet,int):91 -> <init>
    96:96:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    96:96:void <init>(android.content.Context,android.util.AttributeSet,int):96 -> <init>
    111:113:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,int):113 -> <init>
    115:115:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,int):113 -> <init>
    119:121:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    90:135:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):135 -> <init>
    137:139:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):135 -> <init>
    141:160:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    322:323:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    266:272:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    203:213:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets) -> dispatchApplyWindowInsets
    220:361:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    229:235:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    246:250:void endViewTransition(android.view.View) -> endViewTransition
    337:337:androidx.fragment.app.Fragment getFragment() -> getFragment
    0:0:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    308:312:void removeAllViewsInLayout() -> removeAllViewsInLayout
    287:288:void removeView(android.view.View) -> removeView
    276:278:void removeViewAt(int) -> removeViewAt
    282:283:void removeViewInLayout(android.view.View) -> removeViewInLayout
    293:296:void removeViews(int,int) -> removeViews
    301:304:void removeViewsInLayout(int,int) -> removeViewsInLayout
    256:256:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    183:183:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    190:190:void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    239:242:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentContainerView$Api20Impl -> androidx.fragment.app.FragmentContainerView$Api20Impl:
# {"id":"sourceFile","fileName":"FragmentContainerView.kt"}
    0:0:void <clinit>() -> <clinit>
    345:345:android.view.WindowInsets onApplyWindowInsets(android.view.View$OnApplyWindowInsetsListener,android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
# {"id":"sourceFile","fileName":"FragmentController.java"}
    61:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    117:117:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    58:58:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    263:263:void dispatchActivityCreated() -> dispatchActivityCreated
    469:469:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    252:252:void dispatchCreate() -> dispatchCreate
    346:346:void dispatchDestroy() -> dispatchDestroy
    296:296:void dispatchPause() -> dispatchPause
    285:285:void dispatchResume() -> dispatchResume
    274:274:void dispatchStart() -> dispatchStart
    307:307:void dispatchStop() -> dispatchStop
    495:495:boolean execPendingActions() -> execPendingActions
    70:70:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    143:143:void noteStateNotSaved() -> noteStateNotSaved
    135:136:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
# {"id":"sourceFile","fileName":"FragmentFactory.java"}
    33:33:void <clinit>() -> <clinit>
    70:71:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:54:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
# {"id":"sourceFile","fileName":"FragmentHostCallback.java"}
    92:92:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    82:100:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    243:243:android.app.Activity getActivity() -> getActivity
    248:248:android.content.Context getContext() -> getContext
    255:255:android.os.Handler getHandler() -> getHandler
    164:167:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
# {"id":"sourceFile","fileName":"FragmentLayoutInflaterFactory.java"}
    37:38:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    45:45:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    52:175:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
# {"id":"sourceFile","fileName":"FragmentLayoutInflaterFactory.java"}
    160:160:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    163:168:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
# {"id":"sourceFile","fileName":"FragmentLifecycleCallbacksDispatcher.java"}
    46:54:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:163:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:115:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:146:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:280:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:294:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:222:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:100:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:130:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:208:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:251:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:194:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:236:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:179:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:266:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    0:0:void $r8$lambda$OSbytOFWiBhg-JuC-68xxqeOPrI(androidx.fragment.app.FragmentManager,java.lang.Integer) -> $r8$lambda$OSbytOFWiBhg-JuC-68xxqeOPrI
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$RBeuZ6iM1FSdhmZNBJJQnbWnePM(androidx.fragment.app.FragmentManager,androidx.core.app.PictureInPictureModeChangedInfo) -> $r8$lambda$RBeuZ6iM1FSdhmZNBJJQnbWnePM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$VJusB-xtSf6gkO7njmGWkIPixRc(androidx.fragment.app.FragmentManager,androidx.core.app.MultiWindowModeChangedInfo) -> $r8$lambda$VJusB-xtSf6gkO7njmGWkIPixRc
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$fsqPmeLyp8R2NG2vLmIMKnwX3q4(androidx.fragment.app.FragmentManager,android.content.res.Configuration) -> $r8$lambda$fsqPmeLyp8R2NG2vLmIMKnwX3q4
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle $r8$lambda$sido8p6zuWx0PQxIkv4qM-BRiGM(androidx.fragment.app.FragmentManager) -> $r8$lambda$sido8p6zuWx0PQxIkv4qM-BRiGM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void <clinit>() -> <clinit>
    106:544:void <init>() -> <init>
    106:106:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    106:106:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    106:106:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2095:2098:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    1473:1487:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3302:3302:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    1684:1684:int allocBackStackIndex() -> allocBackStackIndex
    2607:2793:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1556:1563:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    598:598:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    3341:3343:boolean checkForMenus() -> checkForMenus
    1609:1610:void checkStateLoss() -> checkStateLoss
    1745:1747:void cleanupExec() -> cleanupExec
    1240:1251:void clearBackStackStateViewModels() -> clearBackStackStateViewModels
    2034:2040:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    1930:1938:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    1459:1468:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1540:1550:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    2892:2895:void dispatchActivityCreated() -> dispatchActivityCreated
    2874:2877:void dispatchAttach() -> dispatchAttach
    3026:3035:void dispatchConfigurationChanged(android.content.res.Configuration,boolean) -> dispatchConfigurationChanged
    3120:3125:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    2881:2884:void dispatchCreate() -> dispatchCreate
    3059:3085:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    2927:2969:void dispatchDestroy() -> dispatchDestroy
    2923:2923:void dispatchDestroyView() -> dispatchDestroyView
    3042:3051:void dispatchLowMemory(boolean) -> dispatchLowMemory
    2989:2998:void dispatchMultiWindowModeChanged(boolean,boolean) -> dispatchMultiWindowModeChanged
    3312:3313:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3329:3332:void dispatchOnHiddenChanged() -> dispatchOnHiddenChanged
    3106:3111:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3134:3139:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3157:3158:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    2913:2913:void dispatchPause() -> dispatchPause
    3007:3017:void dispatchPictureInPictureModeChanged(boolean,boolean) -> dispatchPictureInPictureModeChanged
    3091:3097:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3163:3165:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    2906:2909:void dispatchResume() -> dispatchResume
    2899:2902:void dispatchStart() -> dispatchStart
    2975:2985:void dispatchStateChange(int) -> dispatchStateChange
    2917:2919:void dispatchStop() -> dispatchStop
    2888:2888:void dispatchViewCreated() -> dispatchViewCreated
    2080:2082:void doPendingDeferredStart() -> doPendingDeferredStart
    1301:1380:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2027:2029:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1642:1662:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> enqueueAction
    1694:1716:void ensureExecReady(boolean) -> ensureExecReady
    1754:1769:boolean execPendingActions(boolean) -> execPendingActions
    1721:1737:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    1958:1965:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    1837:1924:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    623:624:boolean executePendingTransactions() -> executePendingTransactions
    1605:1605:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    2295:2332:int findBackStackIndex(java.lang.String,int,boolean) -> findBackStackIndex
    1579:1579:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1596:1596:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1600:1600:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    1118:1142:androidx.fragment.app.FragmentManager findFragmentManager(android.view.View) -> findFragmentManager
    1070:1075:androidx.fragment.app.Fragment findViewFragment(android.view.View) -> findViewFragment
    2016:2018:void forcePostponedTransactions() -> forcePostponedTransactions
    2059:2075:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    2075:2075:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    1193:1193:java.util.List getActiveFragments() -> getActiveFragments
    887:887:int getBackStackEntryCount() -> getBackStackEntryCount
    1174:1174:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2595:2595:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    1991:2006:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3219:3229:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    2600:2600:androidx.fragment.app.FragmentStore getFragmentStore() -> getFragmentStore
    1164:1164:java.util.List getFragments() -> getFragments
    2585:2585:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3395:3395:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3267:3267:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2590:2590:androidx.fragment.app.Fragment getParent() -> getParent
    3182:3182:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3252:3262:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    3401:3401:androidx.fragment.app.strictmode.FragmentStrictMode$Policy getStrictModePolicy() -> getStrictModePolicy
    1087:1089:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1169:1169:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    696:707:void handleOnBackPressed() -> handleOnBackPressed
    1514:1520:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3357:3358:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1262:1262:boolean isDestroyed() -> isDestroyed
    134:134:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3353:3353:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    3364:3367:boolean isParentAdded() -> isParentAdded
    687:687:boolean isParentHidden(androidx.fragment.app.Fragment) -> isParentHidden
    675:675:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    656:663:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1398:1398:boolean isStateAtLeast(int) -> isStateAtLeast
    1630:1630:boolean isStateSaved() -> isStateSaved
    2658:2658:android.os.Bundle lambda$attachController$4() -> lambda$attachController$4
    450:451:void lambda$new$0(android.content.res.Configuration) -> lambda$new$0
    455:456:void lambda$new$1(java.lang.Integer) -> lambda$new$1
    461:462:void lambda$new$2(androidx.core.app.MultiWindowModeChangedInfo) -> lambda$new$2
    467:468:void lambda$new$3(androidx.core.app.PictureInPictureModeChangedInfo) -> lambda$new$3
    2817:2825:void launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> launchStartActivityForResult
    1424:1438:void moveToState(int,boolean) -> moveToState
    2801:2809:void noteStateNotSaved() -> noteStateNotSaved
    1096:1102:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    1385:1393:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    795:795:void popBackStack(java.lang.String,int) -> popBackStack
    828:830:void popBackStack(int,int,boolean) -> popBackStack
    778:778:boolean popBackStackImmediate() -> popBackStackImmediate
    841:843:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    854:879:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2267:2273:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    1494:1504:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    1790:1823:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2087:2089:void reportBackStackChanged() -> reportBackStackChanged
    725:725:void restoreBackStack(java.lang.String) -> restoreBackStack
    2103:2122:boolean restoreBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String) -> restoreBackStackState
    2457:2578:void restoreSaveStateInternal(android.os.Parcelable) -> restoreSaveStateInternal
    0:0:int reverseTransit(int) -> reverseTransit
    2369:2428:android.os.Bundle saveAllStateInternal() -> saveAllStateInternal
    742:742:void saveBackStack(java.lang.String) -> saveBackStack
    2129:2234:boolean saveBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String) -> saveBackStackState
    1673:1680:void scheduleCommit() -> scheduleCommit
    1406:1409:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3186:3191:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3145:3153:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    1977:1985:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1530:1535:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1444:1445:void startPendingDeferredFragments() -> startPendingDeferredFragments
    552:569:void throwException(java.lang.RuntimeException) -> throwException
    1268:1288:java.lang.String toString() -> toString
    632:642:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$0.f$0 -> f$0
    0:0:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$0.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$0.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda1 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$1.f$0 -> f$0
    0:0:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$1.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$1.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda2 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$2.f$0 -> f$0
    0:0:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$2.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$2.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda3 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$3.f$0 -> f$0
    0:0:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$3.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$3.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda4 -> androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$d0f15b151fd8285999239b51f9d7d45664f03a7517f419daa8c3ed762e5e67ec$0.f$0 -> f$0
    0:0:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$d0f15b151fd8285999239b51f9d7d45664f03a7517f419daa8c3ed762e5e67ec$0.<init>(androidx.fragment.app.FragmentManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$1$d0f15b151fd8285999239b51f9d7d45664f03a7517f419daa8c3ed762e5e67ec$0.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    426:426:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    429:429:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    2732:2732:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2732:2732:void onActivityResult(java.lang.Object) -> onActivityResult
    2736:2760:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    472:472:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    480:480:void onCreateMenu(android.view.Menu,android.view.MenuInflater) -> onCreateMenu
    490:490:void onMenuClosed(android.view.Menu) -> onMenuClosed
    485:485:boolean onMenuItemSelected(android.view.MenuItem) -> onMenuItemSelected
    475:475:void onPrepareMenu(android.view.Menu) -> onPrepareMenu
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    502:502:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    507:507:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    512:512:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    516:516:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    544:544:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    547:547:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    958:971:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    2615:2615:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2620:2620:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    2678:2678:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2678:2678:void onActivityResult(java.lang.Object) -> onActivityResult
    2681:2699:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    2706:2706:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2706:2706:void onActivityResult(java.lang.Object) -> onActivityResult
    2709:2726:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3553:3553:void <init>() -> <init>
    3553:3553:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    3559:3576:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest) -> createIntent
    3553:3553:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3584:3584:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3539:3539:void <clinit>() -> <clinit>
    3518:3520:void <init>(java.lang.String,int) -> <init>
    3523:3525:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    3535:3536:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3540:3540:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3543:3543:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3540:3540:java.lang.Object[] newArray(int) -> newArray
    3548:3548:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$OpGenerator -> androidx.fragment.app.FragmentManager$OpGenerator:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
androidx.fragment.app.FragmentManager$PopBackStackState -> androidx.fragment.app.FragmentManager$PopBackStackState:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3445:3448:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int) -> <init>
    3454:3464:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManager$RestoreBackStackState -> androidx.fragment.app.FragmentManager$RestoreBackStackState:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3472:3473:void <init>(androidx.fragment.app.FragmentManager,java.lang.String) -> <init>
    3479:3479:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManager$SaveBackStackState -> androidx.fragment.app.FragmentManager$SaveBackStackState:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3487:3488:void <init>(androidx.fragment.app.FragmentManager,java.lang.String) -> <init>
    3494:3494:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
# {"id":"sourceFile","fileName":"FragmentManagerImpl.java"}
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
# {"id":"sourceFile","fileName":"FragmentManagerState.java"}
    67:67:void <clinit>() -> <clinit>
    31:36:void <init>() -> <init>
    31:47:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    57:64:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
# {"id":"sourceFile","fileName":"FragmentManagerState.java"}
    68:68:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    68:68:java.lang.Object[] newArray(int) -> newArray
    76:76:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
# {"id":"sourceFile","fileName":"FragmentManagerViewModel.java"}
    40:40:void <clinit>() -> <clinit>
    57:87:void <init>(boolean) -> <init>
    112:123:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:190:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    194:197:void clearNonConfigState(java.lang.String) -> clearNonConfigState
    202:211:void clearNonConfigStateInternal(java.lang.String) -> clearNonConfigStateInternal
    286:292:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:171:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    178:181:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    297:299:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:104:void onCleared() -> onCleared
    154:162:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    96:96:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    306:333:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
# {"id":"sourceFile","fileName":"FragmentManagerViewModel.java"}
    0:0:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    45:45:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentOnAttachListener -> androidx.fragment.app.FragmentOnAttachListener:
# {"id":"sourceFile","fileName":"FragmentOnAttachListener.java"}
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.FragmentPagerAdapter:
# {"id":"sourceFile","fileName":"FragmentPagerAdapter.java"}
    122:122:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    104:140:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    195:204:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    240:254:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    0:0:long getItemId(int) -> getItemId
    161:184:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    260:260:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    287:287:java.lang.String makeFragmentName(int,long) -> makeFragmentName
    0:0:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    0:0:android.os.Parcelable saveState() -> saveState
    211:234:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    151:152:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
# {"id":"sourceFile","fileName":"FragmentState.java"}
    165:165:void <clinit>() -> <clinit>
    44:56:void <init>(androidx.fragment.app.Fragment) -> <init>
    59:72:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    81:103:androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> instantiate
    111:140:java.lang.String toString() -> toString
    150:162:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
# {"id":"sourceFile","fileName":"FragmentState.java"}
    166:166:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    169:169:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    166:166:java.lang.Object[] newArray(int) -> newArray
    174:174:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
# {"id":"sourceFile","fileName":"FragmentStateManager.java"}
    51:65:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    51:87:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    51:120:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    576:580:void activityCreated() -> activityCreated
    839:840:void addViewToContainer() -> addViewToContainer
    431:465:void attach() -> attach
    147:228:int computeExpectedState() -> computeExpectedState
    469:480:void create() -> create
    485:572:void createView() -> createView
    757:811:void destroy() -> destroy
    736:753:void destroyFragmentView() -> destroyFragmentView
    816:831:void detach() -> detach
    384:397:void ensureInflatedView() -> ensureInflatedView
    126:126:androidx.fragment.app.Fragment getFragment() -> getFragment
    614:622:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    235:380:void moveToExpectedState() -> moveToExpectedState
    628:632:void pause() -> pause
    404:426:void restoreState(java.lang.ClassLoader) -> restoreState
    593:610:void resume() -> resume
    679:708:android.os.Bundle saveBasicState() -> saveBasicState
    644:666:void saveState() -> saveState
    715:731:void saveViewState() -> saveViewState
    136:136:void setFragmentManagerState(int) -> setFragmentManagerState
    585:589:void start() -> start
    636:640:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
# {"id":"sourceFile","fileName":"FragmentStateManager.java"}
    540:540:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    543:544:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
# {"id":"sourceFile","fileName":"FragmentStateManager.java"}
    154:154:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
# {"id":"sourceFile","fileName":"FragmentStore.java"}
    34:39:void <init>() -> <init>
    91:97:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    172:175:void burpActive() -> burpActive
    329:329:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    101:103:void dispatchStateChange(int) -> dispatchStateChange
    409:435:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    352:354:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    285:295:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    307:319:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    339:342:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    377:399:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    245:248:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    267:272:java.util.List getActiveFragments() -> getActiveFragments
    204:204:java.util.ArrayList getAllSavedState() -> getAllSavedState
    334:334:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    257:262:java.util.List getFragments() -> getFragments
    48:48:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    180:180:androidx.fragment.app.FragmentState getSavedState(java.lang.String) -> getSavedState
    72:86:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    147:162:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    110:133:void moveToExpectedState() -> moveToExpectedState
    140:143:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    52:52:void resetActiveFragments() -> resetActiveFragments
    56:66:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    196:198:void restoreSaveState(java.util.ArrayList) -> restoreSaveState
    209:218:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    227:240:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    44:44:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
    189:191:androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState) -> setSavedState
androidx.fragment.app.FragmentTabHost -> androidx.fragment.app.FragmentTabHost:
# {"id":"sourceFile","fileName":"FragmentTabHost.java"}
    49:138:void <init>(android.content.Context) -> <init>
    49:149:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    402:402:androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction) -> doTabChanged
    242:245:void ensureContent() -> ensureContent
    164:184:void ensureHierarchy(android.content.Context) -> ensureHierarchy
    433:435:androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> getTabInfoForTag
    153:158:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    299:332:void onAttachedToWindow() -> onAttachedToWindow
    344:345:void onDetachedFromWindow() -> onDetachedFromWindow
    371:377:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    357:359:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    388:395:void onTabChanged(java.lang.String) -> onTabChanged
    259:259:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    196:196:void setup() -> setup
    209:213:void setup(android.content.Context,androidx.fragment.app.FragmentManager) -> setup
    226:237:void setup(android.content.Context,androidx.fragment.app.FragmentManager,int) -> setup
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
# {"id":"sourceFile","fileName":"FragmentTabHost.java"}
    114:114:void <clinit>() -> <clinit>
    92:92:void <init>(android.os.Parcelable) -> <init>
    96:97:void <init>(android.os.Parcel) -> <init>
    109:110:java.lang.String toString() -> toString
    102:103:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
# {"id":"sourceFile","fileName":"FragmentTabHost.java"}
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTabHost$TabInfo -> androidx.fragment.app.FragmentTabHost$TabInfo:
# {"id":"sourceFile","fileName":"FragmentTabHost.java"}
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
# {"id":"sourceFile","fileName":"FragmentTransaction.java"}
    118:152:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    157:181:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader,androidx.fragment.app.FragmentTransaction) -> <init>
    224:224:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    287:287:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    293:294:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    185:189:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    728:733:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    480:480:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> attach
    463:463:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    755:759:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    298:332:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    413:413:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    349:349:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    397:399:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    648:651:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    528:528:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    503:503:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    855:855:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
# {"id":"sourceFile","fileName":"FragmentTransaction.java"}
    75:75:void <init>() -> <init>
    78:83:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    86:91:void <init>(int,androidx.fragment.app.Fragment,boolean) -> <init>
    94:99:void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> <init>
    102:111:void <init>(androidx.fragment.app.FragmentTransaction$Op) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
# {"id":"sourceFile","fileName":"FragmentTransition.java"}
    34:37:void <clinit>() -> <clinit>
    94:95:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    42:44:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    71:74:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    119:121:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    34:34:void <init>() -> <init>
    332:333:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:111:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:216:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    45:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    189:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    305:323:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:146:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:225:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    79:83:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    348:349:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:271:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:73:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:298:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    55:56:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    0:0:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    161:165:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    155:156:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    0:0:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    241:241:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    228:235:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    0:0:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    277:277:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    0:0:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$Api19Impl -> androidx.fragment.app.FragmentTransitionCompat21$Api19Impl:
# {"id":"sourceFile","fileName":"FragmentTransitionCompat21.java"}
    367:367:void addListener(android.transition.Transition,android.transition.Transition$TransitionListener) -> addListener
    372:372:void removeListener(android.transition.Transition,android.transition.Transition$TransitionListener) -> removeListener
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    272:288:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    301:301:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    81:106:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    312:312:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    159:164:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    178:198:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
# {"id":"sourceFile","fileName":"FragmentTransitionImpl.java"}
    198:198:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    201:203:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
# {"id":"sourceFile","fileName":"FragmentViewLifecycleOwner.java"}
    50:55:void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore) -> <init>
    142:157:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
    109:134:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    87:88:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    165:166:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    61:62:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    96:96:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    69:73:void initialize() -> initialize
    81:81:boolean isInitialized() -> isInitialized
    170:170:void performRestore(android.os.Bundle) -> performRestore
    174:174:void performSave(android.os.Bundle) -> performSave
    92:92:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.FragmentViewModelLazyKt -> androidx.fragment.app.FragmentViewModelLazyKt:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    1:1:androidx.lifecycle.ViewModelStoreOwner access$viewModels$lambda-0(kotlin.Lazy) -> access$viewModels$lambda-0
    1:1:androidx.lifecycle.ViewModelStoreOwner access$viewModels$lambda-1(kotlin.Lazy) -> access$viewModels$lambda-1
    65:65:androidx.lifecycle.ViewModelStoreOwner viewModels$lambda-0(kotlin.Lazy) -> viewModels$lambda-0
    111:111:androidx.lifecycle.ViewModelStoreOwner viewModels$lambda-1(kotlin.Lazy) -> viewModels$lambda-1
androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$1 -> androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$1:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment) -> <init>
    149:149:java.lang.Object invoke() -> invoke
    150:150:androidx.lifecycle.ViewModelStore invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$2 -> androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$2:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment) -> <init>
    149:149:java.lang.Object invoke() -> invoke
    151:151:androidx.lifecycle.viewmodel.CreationExtras invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$3 -> androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$3:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment) -> <init>
    149:149:java.lang.Object invoke() -> invoke
    152:152:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$4 -> androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$4:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment) -> <init>
    175:175:java.lang.Object invoke() -> invoke
    176:176:androidx.lifecycle.ViewModelStore invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$5 -> androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$5:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0,androidx.fragment.app.Fragment) -> <init>
    175:175:java.lang.Object invoke() -> invoke
    177:177:androidx.lifecycle.viewmodel.CreationExtras invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$6 -> androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$6:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment) -> <init>
    175:175:java.lang.Object invoke() -> invoke
    178:178:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$1 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$1:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment) -> <init>
    62:62:java.lang.Object invoke() -> invoke
    62:62:androidx.fragment.app.Fragment invoke():62 -> invoke
    62:62:java.lang.Object invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$2 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$2:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    66:66:java.lang.Object invoke() -> invoke
    68:68:androidx.lifecycle.ViewModelStore invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$3 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$3:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    66:66:java.lang.Object invoke() -> invoke
    70:71:androidx.lifecycle.viewmodel.CreationExtras invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$4 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$4:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment,kotlin.Lazy) -> <init>
    66:66:java.lang.Object invoke() -> invoke
    74:75:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$5 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$5:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment) -> <init>
    107:107:java.lang.Object invoke() -> invoke
    107:107:androidx.fragment.app.Fragment invoke():107 -> invoke
    107:107:java.lang.Object invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$6 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$6:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    112:112:java.lang.Object invoke() -> invoke
    114:114:androidx.lifecycle.ViewModelStore invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$7 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$7:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0,kotlin.Lazy) -> <init>
    112:112:java.lang.Object invoke() -> invoke
    116:118:androidx.lifecycle.viewmodel.CreationExtras invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$8 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$8:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment,kotlin.Lazy) -> <init>
    112:112:java.lang.Object invoke() -> invoke
    121:122:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$owner$2 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$owner$2:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0) -> <init>
    65:65:java.lang.Object invoke() -> invoke
    65:65:androidx.lifecycle.ViewModelStoreOwner invoke():65 -> invoke
    65:65:java.lang.Object invoke() -> invoke
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$owner$4 -> androidx.fragment.app.FragmentViewModelLazyKt$viewModels$owner$4:
# {"id":"sourceFile","fileName":"FragmentViewModelLazy.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0) -> <init>
    111:111:java.lang.Object invoke() -> invoke
    111:111:androidx.lifecycle.ViewModelStoreOwner invoke():111 -> invoke
    111:111:java.lang.Object invoke() -> invoke
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
# {"id":"sourceFile","fileName":"LogWriter.java"}
    25:31:void <init>(java.lang.String) -> <init>
    35:35:void close() -> close
    39:39:void flush() -> flush
    55:57:void flushBuilder() -> flushBuilder
    44:49:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    84:93:void <init>(android.view.ViewGroup) -> <init>
    193:224:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    155:160:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    173:178:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    182:187:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    164:169:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    265:313:void executePendingOperations() -> executePendingOperations
    135:136:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    145:146:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    317:352:void forceCompleteAllOperations() -> forceCompleteAllOperations
    253:260:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    119:128:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    55:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:78:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    232:249:void markPostponedState() -> markPostponedState
    356:362:void updateFinalState() -> updateFinalState
    228:228:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    207:207:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    210:211:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    217:217:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    220:221:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    462:625:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    726:728:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    770:771:void complete() -> complete
    733:764:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    523:545:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    663:663:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    610:619:void cancel() -> cancel
    704:713:void complete() -> complete
    689:690:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    560:560:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    579:579:androidx.fragment.app.Fragment getFragment() -> getFragment
    570:570:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    583:583:boolean isCanceled() -> isCanceled
    695:695:boolean isComplete() -> isComplete
    677:678:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    625:657:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    589:606:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    545:545:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    548:548:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    502:514:void <clinit>() -> <clinit>
    502:502:void <init>(java.lang.String,int) -> <init>
    502:502:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    502:502:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    403:419:void <clinit>() -> <clinit>
    403:403:void <init>(java.lang.String,int) -> <init>
    462:493:void applyState(android.view.View) -> applyState
    430:433:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    446:452:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    403:403:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    403:403:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SpecialEffectsControllerFactory -> androidx.fragment.app.SpecialEffectsControllerFactory:
# {"id":"sourceFile","fileName":"SpecialEffectsControllerFactory.java"}
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
# {"id":"sourceFile","fileName":"SuperNotCalledException.java"}
    23:23:void <init>(java.lang.String) -> <init>
androidx.fragment.app.strictmode.FragmentReuseViolation -> androidx.fragment.app.strictmode.FragmentReuseViolation:
# {"id":"sourceFile","fileName":"FragmentReuseViolation.kt"}
    28:31:void <init>(androidx.fragment.app.Fragment,java.lang.String) -> <init>
    28:28:java.lang.String getPreviousFragmentId() -> getPreviousFragmentId
androidx.fragment.app.strictmode.FragmentStrictMode -> androidx.fragment.app.strictmode.FragmentStrictMode:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
    0:0:void $r8$lambda$ujbeN2H_kHMJp2XfgBvtZfltiz0(java.lang.String,androidx.fragment.app.strictmode.Violation) -> $r8$lambda$ujbeN2H_kHMJp2XfgBvtZfltiz0
      # {"id":"com.android.tools.r8.synthesized"}
    43:43:void <clinit>() -> <clinit>
    47:55:androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment) -> getNearestPolicy
    253:262:void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation) -> handlePolicyViolation
    263:264:void handlePolicyViolation$lambda-1(java.lang.String,androidx.fragment.app.strictmode.Violation) -> handlePolicyViolation$lambda-1
    225:228:void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation) -> logIfDebuggingEnabled
    64:70:void onFragmentReuse(androidx.fragment.app.Fragment,java.lang.String) -> onFragmentReuse
    83:89:void onFragmentTagUsage(androidx.fragment.app.Fragment,android.view.ViewGroup) -> onFragmentTagUsage
    169:175:void onGetTargetFragmentUsage(androidx.fragment.app.Fragment) -> onGetTargetFragmentUsage
    131:137:void onSetUserVisibleHint(androidx.fragment.app.Fragment,boolean) -> onSetUserVisibleHint
    204:210:void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup) -> onWrongFragmentContainer
    270:278:void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable) -> runOnHostThread
    239:246:boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class) -> shouldHandlePolicyViolation
androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0 -> androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$1$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.f$0 -> f$0
    androidx.fragment.app.strictmode.Violation androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$1$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.f$1 -> f$1
    0:0:void androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$1$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.<init>(java.lang.String,androidx.fragment.app.strictmode.Violation) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$1$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.strictmode.FragmentStrictMode$Flag -> androidx.fragment.app.strictmode.FragmentStrictMode$Flag:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
    0:0:androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $values() -> $values
    283:290:void <clinit>() -> <clinit>
    282:282:void <init>(java.lang.String,int) -> <init>
    0:0:androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String) -> valueOf
    0:0:androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values() -> values
androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener -> androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
androidx.fragment.app.strictmode.FragmentStrictMode$Policy -> androidx.fragment.app.strictmode.FragmentStrictMode$Policy:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
    473:473:void <clinit>() -> <clinit>
    314:483:void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map) -> <init>
    315:315:java.util.Set getFlags$fragment_release() -> getFlags$fragment_release
    0:0:androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener getListener$fragment_release() -> getListener$fragment_release
    320:320:java.util.Map getMAllowedViolations$fragment_release() -> getMAllowedViolations$fragment_release
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion -> androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion:
# {"id":"sourceFile","fileName":"FragmentStrictMode.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.fragment.app.strictmode.FragmentTagUsageViolation -> androidx.fragment.app.strictmode.FragmentTagUsageViolation:
# {"id":"sourceFile","fileName":"FragmentTagUsageViolation.kt"}
    30:33:void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup) -> <init>
    30:30:android.view.ViewGroup getParentContainer() -> getParentContainer
androidx.fragment.app.strictmode.GetRetainInstanceUsageViolation -> androidx.fragment.app.strictmode.GetRetainInstanceUsageViolation:
# {"id":"sourceFile","fileName":"GetRetainInstanceUsageViolation.kt"}
    24:26:void <init>(androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.strictmode.GetTargetFragmentRequestCodeUsageViolation -> androidx.fragment.app.strictmode.GetTargetFragmentRequestCodeUsageViolation:
# {"id":"sourceFile","fileName":"GetTargetFragmentRequestCodeUsageViolation.kt"}
    24:26:void <init>(androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.strictmode.GetTargetFragmentUsageViolation -> androidx.fragment.app.strictmode.GetTargetFragmentUsageViolation:
# {"id":"sourceFile","fileName":"GetTargetFragmentUsageViolation.kt"}
    24:26:void <init>(androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.strictmode.RetainInstanceUsageViolation -> androidx.fragment.app.strictmode.RetainInstanceUsageViolation:
# {"id":"sourceFile","fileName":"RetainInstanceUsageViolation.kt"}
    23:23:void <init>(androidx.fragment.app.Fragment,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    26:26:void <init>(androidx.fragment.app.Fragment,java.lang.String) -> <init>
androidx.fragment.app.strictmode.SetRetainInstanceUsageViolation -> androidx.fragment.app.strictmode.SetRetainInstanceUsageViolation:
# {"id":"sourceFile","fileName":"SetRetainInstanceUsageViolation.kt"}
    24:26:void <init>(androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation -> androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation:
# {"id":"sourceFile","fileName":"SetTargetFragmentUsageViolation.kt"}
    28:35:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,int) -> <init>
    32:32:int getRequestCode() -> getRequestCode
    28:28:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
androidx.fragment.app.strictmode.SetUserVisibleHintViolation -> androidx.fragment.app.strictmode.SetUserVisibleHintViolation:
# {"id":"sourceFile","fileName":"SetUserVisibleHintViolation.kt"}
    29:32:void <init>(androidx.fragment.app.Fragment,boolean) -> <init>
    29:29:boolean isVisibleToUser() -> isVisibleToUser
androidx.fragment.app.strictmode.TargetFragmentUsageViolation -> androidx.fragment.app.strictmode.TargetFragmentUsageViolation:
# {"id":"sourceFile","fileName":"TargetFragmentUsageViolation.kt"}
    23:23:void <init>(androidx.fragment.app.Fragment,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    26:26:void <init>(androidx.fragment.app.Fragment,java.lang.String) -> <init>
androidx.fragment.app.strictmode.Violation -> androidx.fragment.app.strictmode.Violation:
# {"id":"sourceFile","fileName":"Violation.kt"}
    22:22:void <init>(androidx.fragment.app.Fragment,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    26:28:void <init>(androidx.fragment.app.Fragment,java.lang.String) -> <init>
    26:26:androidx.fragment.app.Fragment getFragment() -> getFragment
androidx.fragment.app.strictmode.WrongFragmentContainerViolation -> androidx.fragment.app.strictmode.WrongFragmentContainerViolation:
# {"id":"sourceFile","fileName":"WrongFragmentContainerViolation.kt"}
    30:33:void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup) -> <init>
    30:30:android.view.ViewGroup getContainer() -> getContainer
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
# {"id":"sourceFile","fileName":"FastOutLinearInInterpolator.java"}
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
# {"id":"sourceFile","fileName":"FastOutSlowInInterpolator.java"}
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
# {"id":"sourceFile","fileName":"LinearOutSlowInInterpolator.java"}
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
# {"id":"sourceFile","fileName":"LookupTableInterpolator.java"}
    30:32:void <init>(float[]) -> <init>
    46:54:float getInterpolation(float) -> getInterpolation
androidx.legacy.content.WakefulBroadcastReceiver -> androidx.legacy.content.WakefulBroadcastReceiver:
# {"id":"sourceFile","fileName":"WakefulBroadcastReceiver.java"}
    76:77:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
androidx.lifecycle.AbstractSavedStateViewModelFactory -> androidx.lifecycle.AbstractSavedStateViewModelFactory:
# {"id":"sourceFile","fileName":"AbstractSavedStateViewModelFactory.java"}
    70:73:void <init>(androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    80:89:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    95:98:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    108:119:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    143:144:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.AndroidViewModel -> androidx.lifecycle.AndroidViewModel:
# {"id":"sourceFile","fileName":"AndroidViewModel.java"}
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
# {"id":"sourceFile","fileName":"ClassesInfoCache.java"}
    39:39:void <clinit>() -> <clinit>
    37:46:void <init>() -> <init>
    109:164:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    74:76:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    85:89:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    49:68:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    95:104:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
# {"id":"sourceFile","fileName":"ClassesInfoCache.java"}
    174:184:void <init>(java.util.Map) -> <init>
    190:191:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    198:199:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
# {"id":"sourceFile","fileName":"ClassesInfoCache.java"}
    211:214:void <init>(int,java.lang.reflect.Method) -> <init>
    243:248:boolean equals(java.lang.Object) -> equals
    253:253:int hashCode() -> hashCode
    220:234:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
# {"id":"sourceFile","fileName":"CompositeGeneratedAdaptersObserver.java"}
    26:27:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    32:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.DefaultLifecycleObserver -> androidx.lifecycle.DefaultLifecycleObserver:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserver.java"}
androidx.lifecycle.DefaultLifecycleObserver$-CC -> androidx.lifecycle.DefaultLifecycleObserver$-CC:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserver.java"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void $default$onCreate(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onCreate
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onDestroy
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $default$onPause(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onPause
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $default$onStart(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onStart
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $default$onStop(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner) -> $default$onStop
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.EmptyActivityLifecycleCallbacks:
# {"id":"sourceFile","fileName":"EmptyActivityLifecycleCallbacks.java"}
    0:0:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    0:0:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    0:0:void onActivityPaused(android.app.Activity) -> onActivityPaused
    0:0:void onActivityResumed(android.app.Activity) -> onActivityResumed
    0:0:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    0:0:void onActivityStarted(android.app.Activity) -> onActivityStarted
    0:0:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.FullLifecycleObserver -> androidx.lifecycle.FullLifecycleObserver:
# {"id":"sourceFile","fileName":"FullLifecycleObserver.java"}
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
# {"id":"sourceFile","fileName":"FullLifecycleObserverAdapter.java"}
    27:29:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    34:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
# {"id":"sourceFile","fileName":"FullLifecycleObserverAdapter.java"}
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.GeneratedAdapter:
# {"id":"sourceFile","fileName":"GeneratedAdapter.java"}
androidx.lifecycle.HasDefaultViewModelProviderFactory -> androidx.lifecycle.HasDefaultViewModelProviderFactory:
# {"id":"sourceFile","fileName":"HasDefaultViewModelProviderFactory.java"}
androidx.lifecycle.LegacySavedStateHandleController -> androidx.lifecycle.LegacySavedStateHandleController:
# {"id":"sourceFile","fileName":"LegacySavedStateHandleController.java"}
    67:71:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    36:40:androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle) -> create
    76:80:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.LegacySavedStateHandleController$1 -> androidx.lifecycle.LegacySavedStateHandleController$1:
# {"id":"sourceFile","fileName":"LegacySavedStateHandleController.java"}
    80:80:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    84:86:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation -> androidx.lifecycle.LegacySavedStateHandleController$OnRecreation:
# {"id":"sourceFile","fileName":"LegacySavedStateHandleController.java"}
    48:60:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
# {"id":"sourceFile","fileName":"Lifecycle.java"}
    45:52:void <init>() -> <init>
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.Lifecycle$1:
# {"id":"sourceFile","fileName":"Lifecycle.java"}
    135:224:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
# {"id":"sourceFile","fileName":"Lifecycle.java"}
    94:123:void <clinit>() -> <clinit>
    95:95:void <init>(java.lang.String,int) -> <init>
    135:141:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    157:163:androidx.lifecycle.Lifecycle$Event downTo(androidx.lifecycle.Lifecycle$State) -> downTo
    224:238:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
    179:185:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    201:207:androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State) -> upTo
    94:94:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    94:94:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
# {"id":"sourceFile","fileName":"Lifecycle.java"}
    246:286:void <clinit>() -> <clinit>
    247:247:void <init>(java.lang.String,int) -> <init>
    295:295:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    246:246:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    246:246:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleCoroutineScope -> androidx.lifecycle.LifecycleCoroutineScope:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
androidx.lifecycle.LifecycleCoroutineScopeImpl -> androidx.lifecycle.LifecycleCoroutineScopeImpl:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    120:120:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    119:119:androidx.lifecycle.Lifecycle getLifecycle$lifecycle_runtime_ktx_release() -> getLifecycle$lifecycle_runtime_ktx_release
    142:144:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LifecycleDestroyedException -> androidx.lifecycle.LifecycleDestroyedException:
# {"id":"sourceFile","fileName":"WithLifecycleState.kt"}
    31:31:void <init>() -> <init>
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.LifecycleDispatcher:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.java"}
    37:37:void <clinit>() -> <clinit>
    40:44:void init(android.content.Context) -> init
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.java"}
    49:49:void <init>() -> <init>
    53:53:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    0:0:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    0:0:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.LifecycleEventObserver:
# {"id":"sourceFile","fileName":"LifecycleEventObserver.java"}
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.LifecycleObserver:
# {"id":"sourceFile","fileName":"LifecycleObserver.java"}
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.LifecycleOwner:
# {"id":"sourceFile","fileName":"LifecycleOwner.java"}
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
# {"id":"sourceFile","fileName":"LifecycleRegistry.java"}
    91:91:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    51:97:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    178:212:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    278:291:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    168:173:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    321:323:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    259:272:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    255:255:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    133:134:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    159:164:boolean isSynced() -> isSynced
    109:110:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    345:345:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    138:154:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    216:216:void popParentState() -> popParentState
    220:220:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    225:238:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    120:121:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    299:316:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
# {"id":"sourceFile","fileName":"LifecycleRegistry.java"}
    352:354:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    358:361:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
# {"id":"sourceFile","fileName":"Lifecycling.java"}
    42:43:void <clinit>() -> <clinit>
    106:112:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    120:139:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    209:209:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    144:149:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    202:202:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    69:99:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    155:194:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
# {"id":"sourceFile","fileName":"Lifecycling.java"}
    61:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
# {"id":"sourceFile","fileName":"LiveData.java"}
    64:64:void <clinit>() -> <clinit>
    60:112:void <init>() -> <init>
    486:487:void assertMainThread(java.lang.String) -> assertMainThread
    378:397:void changeActiveCounter(int) -> changeActiveCounter
    117:133:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:158:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    191:205:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    224:234:void observeForever(androidx.lifecycle.Observer) -> observeForever
    0:0:void onActive() -> onActive
    0:0:void onInactive() -> onInactive
    244:250:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    306:309:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
# {"id":"sourceFile","fileName":"LiveData.java"}
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:93:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
# {"id":"sourceFile","fileName":"LiveData.java"}
    475:476:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    0:0:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
# {"id":"sourceFile","fileName":"LiveData.java"}
    404:406:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    437:437:void detachObserver() -> detachObserver
    432:432:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    417:426:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    411:411:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
# {"id":"sourceFile","fileName":"LiveData.java"}
    444:447:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    460:468:void activeStateChanged(boolean) -> activeStateChanged
    0:0:void detachObserver() -> detachObserver
    0:0:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
# {"id":"sourceFile","fileName":"MethodCallsLogger.java"}
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
# {"id":"sourceFile","fileName":"MutableLiveData.java"}
    40:40:void <init>() -> <init>
    50:50:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.Observer -> androidx.lifecycle.Observer:
# {"id":"sourceFile","fileName":"Observer.java"}
androidx.lifecycle.OnLifecycleEvent -> androidx.lifecycle.OnLifecycleEvent:
# {"id":"sourceFile","fileName":"OnLifecycleEvent.java"}
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
# {"id":"sourceFile","fileName":"ProcessLifecycleInitializer.java"}
    31:31:java.lang.Object create(android.content.Context) -> create
    36:48:androidx.lifecycle.LifecycleOwner create(android.content.Context) -> create
    54:54:java.util.List dependencies() -> dependencies
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.ProcessLifecycleOwner:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    92:92:void <clinit>() -> <clinit>
    58:155:void <init>() -> <init>
    130:132:void activityPaused() -> activityPaused
    118:124:void activityResumed() -> activityResumed
    110:113:void activityStarted() -> activityStarted
    137:138:void activityStopped() -> activityStopped
    160:163:void attach(android.content.Context) -> attach
    142:144:void dispatchPauseIfNeeded() -> dispatchPauseIfNeeded
    149:151:void dispatchStopIfNeeded() -> dispatchStopIfNeeded
    102:102:androidx.lifecycle.LifecycleOwner get() -> get
    212:212:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    106:106:void init(android.content.Context) -> init
androidx.lifecycle.ProcessLifecycleOwner$1 -> androidx.lifecycle.ProcessLifecycleOwner$1:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    67:67:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    70:71:void run() -> run
androidx.lifecycle.ProcessLifecycleOwner$2 -> androidx.lifecycle.ProcessLifecycleOwner$2:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    76:76:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    0:0:void onCreate() -> onCreate
    88:88:void onResume() -> onResume
    83:83:void onStart() -> onStart
androidx.lifecycle.ProcessLifecycleOwner$3 -> androidx.lifecycle.ProcessLifecycleOwner$3:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    163:163:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    192:193:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    199:199:void onActivityPaused(android.app.Activity) -> onActivityPaused
    174:174:void onActivityPreCreated(android.app.Activity,android.os.Bundle) -> onActivityPreCreated
    204:204:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwner$3$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.ProcessLifecycleOwner$3$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.lifecycle.ProcessLifecycleOwner$3$$InternalSyntheticApiModelOutline$1$8d18c21420180336a6d05a4f657a75a58a106a052da33b955c8e40621b6ff555$0.m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ProcessLifecycleOwner$3$1 -> androidx.lifecycle.ProcessLifecycleOwner$3$1:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.java"}
    174:174:void <init>(androidx.lifecycle.ProcessLifecycleOwner$3) -> <init>
    182:182:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    177:177:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
# {"id":"sourceFile","fileName":"ReflectiveGenericLifecycleObserver.java"}
    33:35:void <init>(java.lang.Object) -> <init>
    40:40:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1 -> androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1:
# {"id":"sourceFile","fileName":"RepeatOnLifecycle.kt"}
    104:122:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1 -> androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1:
# {"id":"sourceFile","fileName":"RepeatOnLifecycle.kt"}
    0:0:void <init>(kotlinx.coroutines.sync.Mutex,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    106:114:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    116:116:java.lang.Object invokeSuspend(java.lang.Object):109 -> invokeSuspend
    106:109:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    112:112:java.lang.Object kotlinx.coroutines.sync.MutexKt.withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object) -> invokeSuspend
    112:112:java.lang.Object invokeSuspend(java.lang.Object):109 -> invokeSuspend
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1$1$1 -> androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1$1$1$1:
# {"id":"sourceFile","fileName":"RepeatOnLifecycle.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    110:112:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    112:112:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
# {"id":"sourceFile","fileName":"ReportFragment.java"}
    37:37:void <init>() -> <init>
    65:68:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch
    140:144:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    82:82:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    94:94:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    88:88:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    74:74:androidx.lifecycle.ReportFragment get(android.app.Activity) -> get
    42:54:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    100:102:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    133:136:void onDestroy() -> onDestroy
    121:122:void onPause() -> onPause
    114:116:void onResume() -> onResume
    107:109:void onStart() -> onStart
    127:128:void onStop() -> onStop
    149:149:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> setProcessListener
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> androidx.lifecycle.ReportFragment$ActivityInitializationListener:
# {"id":"sourceFile","fileName":"ReportFragment.java"}
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
# {"id":"sourceFile","fileName":"ReportFragment.java"}
    0:0:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    0:0:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    0:0:void onActivityPaused(android.app.Activity) -> onActivityPaused
    178:178:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    196:196:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    187:187:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    224:224:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    201:201:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    210:210:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    0:0:void onActivityResumed(android.app.Activity) -> onActivityResumed
    0:0:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    0:0:void onActivityStarted(android.app.Activity) -> onActivityStarted
    0:0:void onActivityStopped(android.app.Activity) -> onActivityStopped
    167:167:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.SavedStateHandle -> androidx.lifecycle.SavedStateHandle:
# {"id":"sourceFile","fileName":"SavedStateHandle.kt"}
    0:0:android.os.Bundle $r8$lambda$85q68529u9GpNelrug3JBSyWf4c(androidx.lifecycle.SavedStateHandle) -> $r8$lambda$85q68529u9GpNelrug3JBSyWf4c
      # {"id":"com.android.tools.r8.synthesized"}
    402:435:void <clinit>() -> <clinit>
    79:79:void <init>(java.util.Map) -> <init>
    50:50:void <init>() -> <init>
    50:50:void <init>(java.util.Map):50 -> <init>
    51:51:void <init>() -> <init>
    51:51:void <init>(java.util.Map):51 -> <init>
    52:52:void <init>() -> <init>
    52:52:void <init>(java.util.Map):52 -> <init>
    53:53:void <init>() -> <init>
    53:53:void <init>(java.util.Map):53 -> <init>
    55:55:void <init>() -> <init>
    55:55:void <init>(java.util.Map):55 -> <init>
    80:80:void <init>(java.util.Map) -> <init>
    50:86:void <init>() -> <init>
    49:49:java.lang.Class[] access$getACCEPTABLE_CLASSES$cp() -> access$getACCEPTABLE_CLASSES$cp
    0:0:androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle) -> createHandle
    90:90:androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider() -> savedStateProvider
    58:71:android.os.Bundle savedStateProvider$lambda-0(androidx.lifecycle.SavedStateHandle) -> savedStateProvider$lambda-0
    240:253:void set(java.lang.String,java.lang.Object) -> set
androidx.lifecycle.SavedStateHandle$$ExternalSyntheticLambda0 -> androidx.lifecycle.SavedStateHandle$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.SavedStateHandle androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$1$a8b529ef495d505773bb6e25f48ff9fab5d276dd0a453ddf87dfec867ba402d2$0.f$0 -> f$0
    0:0:void androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$1$a8b529ef495d505773bb6e25f48ff9fab5d276dd0a453ddf87dfec867ba402d2$0.<init>(androidx.lifecycle.SavedStateHandle) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.os.Bundle androidx.lifecycle.SavedStateHandle$$InternalSyntheticLambda$1$a8b529ef495d505773bb6e25f48ff9fab5d276dd0a453ddf87dfec867ba402d2$0.saveState() -> saveState
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.SavedStateHandle$Companion -> androidx.lifecycle.SavedStateHandle$Companion:
# {"id":"sourceFile","fileName":"SavedStateHandle.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    360:382:androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle) -> createHandle
    393:394:boolean validateValue(java.lang.Object) -> validateValue
androidx.lifecycle.SavedStateHandleAttacher -> androidx.lifecycle.SavedStateHandleAttacher:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    187:188:void <init>(androidx.lifecycle.SavedStateHandlesProvider) -> <init>
    192:199:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
# {"id":"sourceFile","fileName":"SavedStateHandleController.java"}
    24:29:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle) -> <init>
    37:42:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    54:54:androidx.lifecycle.SavedStateHandle getHandle() -> getHandle
    33:33:boolean isAttached() -> isAttached
    47:49:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleSupport -> androidx.lifecycle.SavedStateHandleSupport:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    208:220:void <clinit>() -> <clinit>
    65:72:androidx.lifecycle.SavedStateHandle createSavedStateHandle(androidx.savedstate.SavedStateRegistryOwner,androidx.lifecycle.ViewModelStoreOwner,java.lang.String,android.os.Bundle) -> createSavedStateHandle
    90:103:androidx.lifecycle.SavedStateHandle createSavedStateHandle(androidx.lifecycle.viewmodel.CreationExtras) -> createSavedStateHandle
    45:55:void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner) -> enableSavedStateHandles
    114:115:androidx.lifecycle.SavedStateHandlesProvider getSavedStateHandlesProvider(androidx.savedstate.SavedStateRegistryOwner) -> getSavedStateHandlesProvider
    31:31:androidx.lifecycle.ViewModelProvider$Factory androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.viewModelFactory(kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):109 -> getSavedStateHandlesVM
    110:110:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
    63:63:void androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.initializer(androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder,kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    63:63:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):110 -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.ViewModelProvider$Factory androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt.viewModelFactory(kotlin.jvm.functions.Function1) -> getSavedStateHandlesVM
    31:31:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):109 -> getSavedStateHandlesVM
    109:109:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner) -> getSavedStateHandlesVM
androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1 -> androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1 -> androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    110:110:androidx.lifecycle.SavedStateHandlesVM invoke(androidx.lifecycle.viewmodel.CreationExtras) -> invoke
    110:110:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.lifecycle.SavedStateHandlesProvider -> androidx.lifecycle.SavedStateHandlesProvider:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    126:127:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner) -> <init>
    133:133:androidx.lifecycle.SavedStateHandlesVM getViewModel() -> <init>
    133:133:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner):133 -> <init>
    176:180:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    133:133:androidx.lifecycle.SavedStateHandlesVM getViewModel() -> getViewModel
    162:168:void performRestore() -> performRestore
    138:146:android.os.Bundle saveState() -> saveState
    211:211:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> saveState
    211:211:android.os.Bundle saveState():146 -> saveState
    146:154:android.os.Bundle saveState() -> saveState
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2 -> androidx.lifecycle.SavedStateHandlesProvider$viewModel$2:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    0:0:void <init>(androidx.lifecycle.ViewModelStoreOwner) -> <init>
    133:133:java.lang.Object invoke() -> invoke
    134:134:androidx.lifecycle.SavedStateHandlesVM invoke() -> invoke
androidx.lifecycle.SavedStateHandlesVM -> androidx.lifecycle.SavedStateHandlesVM:
# {"id":"sourceFile","fileName":"SavedStateHandleSupport.kt"}
    118:119:void <init>() -> <init>
    119:119:java.util.Map getHandles() -> getHandles
androidx.lifecycle.SavedStateViewModelFactory -> androidx.lifecycle.SavedStateViewModelFactory:
# {"id":"sourceFile","fileName":"SavedStateViewModelFactory.kt"}
    96:102:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    112:140:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    159:186:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    201:203:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    212:215:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.SavedStateViewModelFactoryKt -> androidx.lifecycle.SavedStateViewModelFactoryKt:
# {"id":"sourceFile","fileName":"SavedStateViewModelFactory.kt"}
    240:244:void <clinit>() -> <clinit>
    1:1:java.util.List access$getANDROID_VIEWMODEL_SIGNATURE$p() -> access$getANDROID_VIEWMODEL_SIGNATURE$p
    1:1:java.util.List access$getVIEWMODEL_SIGNATURE$p() -> access$getVIEWMODEL_SIGNATURE$p
    252:260:java.lang.reflect.Constructor findMatchingConstructor(java.lang.Class,java.util.List) -> findMatchingConstructor
    228:235:androidx.lifecycle.ViewModel newInstance(java.lang.Class,java.lang.reflect.Constructor,java.lang.Object[]) -> newInstance
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
# {"id":"sourceFile","fileName":"SingleGeneratedAdapterObserver.java"}
    25:25:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    31:31:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
# {"id":"sourceFile","fileName":"ViewModel.java"}
    113:125:void <init>() -> <init>
    169:190:void clear() -> clear
    238:242:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    229:234:java.lang.Object getTag(java.lang.String) -> getTag
    0:0:void onCleared() -> onCleared
    208:219:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object) -> setTagIfAbsent
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    0:0:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    42:53:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras) -> <init>
    54:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    54:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras):54 -> <init>
    51:54:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    118:118:void <init>(androidx.lifecycle.ViewModelStoreOwner) -> <init>
    129:132:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    151:153:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    172:190:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    354:354:void <clinit>() -> <clinit>
    252:256:void <init>(android.app.Application,int) -> <init>
    265:265:void <init>() -> <init>
    273:273:void <init>(android.app.Application) -> <init>
    250:250:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory access$getSInstance$cp() -> access$getSInstance$cp
    250:250:void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory) -> access$setSInstance$cp
    277:290:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    297:304:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    310:322:androidx.lifecycle.ViewModel create(java.lang.Class,android.app.Application) -> create
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    327:328:androidx.lifecycle.ViewModelProvider$Factory defaultFactory$lifecycle_viewmodel_release(androidx.lifecycle.ViewModelStoreOwner) -> defaultFactory$lifecycle_viewmodel_release
    342:345:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> getInstance
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    0:0:void <clinit>() -> <clinit>
androidx.lifecycle.ViewModelProvider$Factory -> androidx.lifecycle.ViewModelProvider$Factory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
androidx.lifecycle.ViewModelProvider$Factory$-CC -> androidx.lifecycle.ViewModelProvider$Factory$-CC:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
# {"id":"com.android.tools.r8.synthesized"}
    0:69:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider$Factory.create(java.lang.Class) -> $default$create
    0:69:androidx.lifecycle.ViewModel $default$create(androidx.lifecycle.ViewModelProvider$Factory,java.lang.Class):0 -> $default$create
      # {"id":"com.android.tools.r8.synthesized"}
    0:83:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider$Factory.create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> $default$create
    0:83:androidx.lifecycle.ViewModel $default$create(androidx.lifecycle.ViewModelProvider$Factory,java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):0 -> $default$create
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    240:240:void <clinit>() -> <clinit>
    197:197:void <init>() -> <init>
    197:197:androidx.lifecycle.ViewModelProvider$NewInstanceFactory access$getSInstance$cp() -> access$getSInstance$cp
    197:197:void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$NewInstanceFactory) -> access$setSInstance$cp
    0:0:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    201:206:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    223:226:androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance() -> getInstance
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    0:0:void <clinit>() -> <clinit>
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    101:101:void <init>() -> <init>
androidx.lifecycle.ViewModelProviderGetKt -> androidx.lifecycle.ViewModelProviderGetKt:
# {"id":"sourceFile","fileName":"ViewModelProvider.kt"}
    360:362:androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner) -> defaultCreationExtras
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
# {"id":"sourceFile","fileName":"ViewModelStore.java"}
    38:40:void <init>() -> <init>
    61:64:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:45:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewModelStoreOwner -> androidx.lifecycle.ViewModelStoreOwner:
# {"id":"sourceFile","fileName":"ViewModelStoreOwner.java"}
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
# {"id":"sourceFile","fileName":"ViewTreeLifecycleOwner.java"}
    49:49:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
# {"id":"sourceFile","fileName":"ViewTreeViewModelStoreOwner.java"}
    50:50:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1 -> androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1:
# {"id":"sourceFile","fileName":"WithLifecycleState.kt"}
    180:185:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2 -> androidx.lifecycle.WithLifecycleStateKt$withStateAtLeastUnchecked$2:
# {"id":"sourceFile","fileName":"WithLifecycleState.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0) -> <init>
    162:162:java.lang.Object invoke() -> invoke
androidx.lifecycle.viewmodel.CreationExtras -> androidx.lifecycle.viewmodel.CreationExtras:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    26:27:void <init>() -> <init>
    27:27:java.util.Map getMap$lifecycle_viewmodel_release() -> getMap$lifecycle_viewmodel_release
androidx.lifecycle.viewmodel.CreationExtras$Empty -> androidx.lifecycle.viewmodel.CreationExtras$Empty:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    0:0:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    0:0:java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key) -> get
androidx.lifecycle.viewmodel.CreationExtras$Key -> androidx.lifecycle.viewmodel.CreationExtras$Key:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
androidx.lifecycle.viewmodel.InitializerViewModelFactory -> androidx.lifecycle.viewmodel.InitializerViewModelFactory:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    86:87:void <init>(androidx.lifecycle.viewmodel.ViewModelInitializer[]) -> <init>
    0:0:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    105:105:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
    13536:13536:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> create
    13536:13536:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):105 -> create
    106:111:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder -> androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    36:38:void <init>() -> <init>
    47:47:void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1) -> addInitializer
    54:54:androidx.lifecycle.ViewModelProvider$Factory build() -> build
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> build
    38:38:androidx.lifecycle.ViewModelProvider$Factory build():54 -> build
    54:54:androidx.lifecycle.ViewModelProvider$Factory build() -> build
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> build
    38:38:androidx.lifecycle.ViewModelProvider$Factory build():54 -> build
androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt -> R8$$REMOVED$$CLASS$$3:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
androidx.lifecycle.viewmodel.MutableCreationExtras -> androidx.lifecycle.viewmodel.MutableCreationExtras:
# {"id":"sourceFile","fileName":"CreationExtras.kt"}
    0:0:void <init>() -> <init>
    52:55:void <init>(androidx.lifecycle.viewmodel.CreationExtras) -> <init>
    52:52:void <init>(androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    66:66:java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key) -> get
    61:61:void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object) -> set
androidx.lifecycle.viewmodel.ViewModelInitializer -> androidx.lifecycle.viewmodel.ViewModelInitializer:
# {"id":"sourceFile","fileName":"InitializerViewModelFactory.kt"}
    69:71:void <init>(java.lang.Class,kotlin.jvm.functions.Function1) -> <init>
    70:70:java.lang.Class getClazz$lifecycle_viewmodel_release() -> getClazz$lifecycle_viewmodel_release
    71:71:kotlin.jvm.functions.Function1 getInitializer$lifecycle_viewmodel_release() -> getInitializer$lifecycle_viewmodel_release
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
# {"id":"sourceFile","fileName":"LoaderManager.java"}
    40:40:void <init>() -> <init>
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    0:0:void <clinit>() -> <clinit>
    371:373:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    498:498:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:481:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:360:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    335:338:void markForRedelivery() -> markForRedelivery
    344:350:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    0:0:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.loader.content.ModernAsyncTask$Status -> androidx.loader.content.ModernAsyncTask$Status:
# {"id":"sourceFile","fileName":"ModernAsyncTask.java"}
    99:111:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    99:99:androidx.loader.content.ModernAsyncTask$Status[] values() -> values
androidx.navigation.ActivityNavArgsLazyKt$navArgs$1 -> androidx.navigation.ActivityNavArgsLazyKt$navArgs$1:
# {"id":"sourceFile","fileName":"ActivityNavArgsLazy.kt"}
    0:0:void <init>(android.app.Activity) -> <init>
    41:41:java.lang.Object invoke() -> invoke
    42:45:android.os.Bundle invoke() -> invoke
androidx.navigation.ActivityNavigator -> androidx.navigation.ActivityNavigator:
# {"id":"sourceFile","fileName":"ActivityNavigator.kt"}
    0:0:void <clinit>() -> <clinit>
    40:512:void <init>(android.content.Context) -> <init>
    179:179:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    179:179:void <init>(android.content.Context):48 -> <init>
    43:43:void <init>(android.content.Context) -> <init>
    37:37:androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> createDestination
    37:37:androidx.navigation.NavDestination createDestination():37 -> createDestination
    53:53:androidx.navigation.ActivityNavigator$Destination createDestination() -> createDestination
    37:37:androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    88:184:androidx.navigation.NavDestination navigate(androidx.navigation.ActivityNavigator$Destination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    57:58:boolean popBackStack() -> popBackStack
androidx.navigation.ActivityNavigator$Companion -> androidx.navigation.ActivityNavigator$Companion:
# {"id":"sourceFile","fileName":"ActivityNavigator.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.navigation.ActivityNavigator$Destination -> androidx.navigation.ActivityNavigator$Destination:
# {"id":"sourceFile","fileName":"ActivityNavigator.kt"}
    207:207:void <init>(androidx.navigation.Navigator) -> <init>
    409:412:boolean equals(java.lang.Object) -> equals
    343:343:java.lang.String getAction() -> getAction
    322:322:android.content.ComponentName getComponent() -> getComponent
    217:217:java.lang.String getDataPattern() -> getDataPattern
    211:211:android.content.Intent getIntent() -> getIntent
    416:418:int hashCode() -> hashCode
    262:287:void onInflate(android.content.Context,android.util.AttributeSet) -> onInflate
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> onInflate
    233:233:void onInflate(android.content.Context,android.util.AttributeSet):266 -> onInflate
    351:354:androidx.navigation.ActivityNavigator$Destination setAction(java.lang.String) -> setAction
    331:334:androidx.navigation.ActivityNavigator$Destination setComponentName(android.content.ComponentName) -> setComponentName
    378:381:androidx.navigation.ActivityNavigator$Destination setData(android.net.Uri) -> setData
    244:244:androidx.navigation.ActivityNavigator$Destination setDataPattern(java.lang.String) -> setDataPattern
    310:313:androidx.navigation.ActivityNavigator$Destination setTargetPackage(java.lang.String) -> setTargetPackage
    0:0:boolean supportsActions() -> supportsActions
    392:405:java.lang.String toString() -> toString
androidx.navigation.ActivityNavigator$hostActivity$1 -> androidx.navigation.ActivityNavigator$hostActivity$1:
# {"id":"sourceFile","fileName":"ActivityNavigator.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    43:43:java.lang.Object invoke(java.lang.Object) -> invoke
    44:45:android.content.Context invoke(android.content.Context) -> invoke
androidx.navigation.AnimBuilder -> androidx.navigation.AnimBuilder:
# {"id":"sourceFile","fileName":"NavOptionsBuilder.kt"}
    171:209:void <init>() -> <init>
    180:180:int getEnter() -> getEnter
    189:189:int getExit() -> getExit
    199:199:int getPopEnter() -> getPopEnter
    209:209:int getPopExit() -> getPopExit
    180:180:void setEnter(int) -> setEnter
    189:189:void setExit(int) -> setExit
androidx.navigation.FloatingWindow -> androidx.navigation.FloatingWindow:
# {"id":"sourceFile","fileName":"FloatingWindow.kt"}
androidx.navigation.NavAction -> androidx.navigation.NavAction:
# {"id":"sourceFile","fileName":"NavAction.kt"}
    38:54:void <init>(int,androidx.navigation.NavOptions,android.os.Bundle) -> <init>
    38:38:void <init>(int,androidx.navigation.NavOptions,android.os.Bundle,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    54:54:android.os.Bundle getDefaultArguments() -> getDefaultArguments
    44:44:int getDestinationId() -> getDestinationId
    48:48:androidx.navigation.NavOptions getNavOptions() -> getNavOptions
    54:54:void setDefaultArguments(android.os.Bundle) -> setDefaultArguments
    48:48:void setNavOptions(androidx.navigation.NavOptions) -> setNavOptions
androidx.navigation.NavArgument -> androidx.navigation.NavArgument:
# {"id":"sourceFile","fileName":"NavArgument.kt"}
    27:183:void <init>(androidx.navigation.NavType,boolean,java.lang.Object,boolean) -> <init>
    96:104:boolean equals(java.lang.Object) -> equals
    37:37:androidx.navigation.NavType getType() -> getType
    109:112:int hashCode() -> hashCode
    51:51:boolean isDefaultValuePresent() -> isDefaultValuePresent
    43:43:boolean isNullable() -> isNullable
    63:64:void putDefaultValue(java.lang.String,android.os.Bundle) -> putDefaultValue
    84:91:java.lang.String toString() -> toString
    72:76:boolean verify(java.lang.String,android.os.Bundle) -> verify
androidx.navigation.NavArgument$Builder -> androidx.navigation.NavArgument$Builder:
# {"id":"sourceFile","fileName":"NavArgument.kt"}
    119:119:void <init>() -> <init>
    168:169:androidx.navigation.NavArgument build() -> build
    156:157:androidx.navigation.NavArgument$Builder setDefaultValue(java.lang.Object) -> setDefaultValue
    144:144:androidx.navigation.NavArgument$Builder setIsNullable(boolean) -> setIsNullable
    132:132:androidx.navigation.NavArgument$Builder setType(androidx.navigation.NavType) -> setType
androidx.navigation.NavBackStackEntry -> androidx.navigation.NavBackStackEntry:
# {"id":"sourceFile","fileName":"NavBackStackEntry.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    51:51:androidx.lifecycle.LifecycleRegistry access$getLifecycle$p(androidx.navigation.NavBackStackEntry) -> <init>
    51:51:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle):51 -> <init>
    52:57:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle) -> <init>
    63:63:android.os.Bundle getArguments() -> <init>
    63:63:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle):63 -> <init>
    64:64:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    64:64:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle):64 -> <init>
    65:65:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    65:65:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle):65 -> <init>
    70:70:java.lang.String getId() -> <init>
    70:70:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle):70 -> <init>
    71:71:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    71:71:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle):71 -> <init>
    114:115:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle) -> <init>
    117:117:androidx.lifecycle.SavedStateViewModelFactory getDefaultFactory() -> <init>
    117:117:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle):117 -> <init>
    124:124:androidx.lifecycle.SavedStateHandle getSavedStateHandle() -> <init>
    124:124:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle):124 -> <init>
    153:153:androidx.lifecycle.Lifecycle$State getMaxLifecycle() -> <init>
    153:153:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle):153 -> <init>
    79:85:void <init>(androidx.navigation.NavBackStackEntry,android.os.Bundle) -> <init>
    78:78:void <init>(androidx.navigation.NavBackStackEntry,android.os.Bundle,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    78:78:void <init>(androidx.navigation.NavBackStackEntry,android.os.Bundle):78 -> <init>
    87:88:void <init>(androidx.navigation.NavBackStackEntry,android.os.Bundle) -> <init>
    51:51:androidx.lifecycle.LifecycleRegistry access$getLifecycle$p(androidx.navigation.NavBackStackEntry) -> access$getContext$p
    51:51:android.content.Context access$getContext$p(androidx.navigation.NavBackStackEntry):51 -> access$getContext$p
    51:51:androidx.lifecycle.LifecycleRegistry access$getLifecycle$p(androidx.navigation.NavBackStackEntry) -> access$getLifecycle$p
    51:51:androidx.lifecycle.LifecycleRegistry access$getLifecycle$p(androidx.navigation.NavBackStackEntry) -> access$getSavedStateRegistryAttached$p
    51:51:boolean access$getSavedStateRegistryAttached$p(androidx.navigation.NavBackStackEntry):51 -> access$getSavedStateRegistryAttached$p
    241:283:boolean equals(java.lang.Object) -> equals
    63:63:android.os.Bundle getArguments() -> getArguments
    117:117:androidx.lifecycle.SavedStateViewModelFactory getDefaultFactory() -> getDefaultFactory
    218:225:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> getDefaultViewModelCreationExtras
    214:214:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    58:58:void setDestination(androidx.navigation.NavDestination) -> getDestination
    58:58:androidx.navigation.NavDestination getDestination():58 -> getDestination
    70:70:java.lang.String getId() -> getId
    147:147:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    153:153:androidx.lifecycle.Lifecycle$State getMaxLifecycle() -> getMaxLifecycle
    231:231:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    197:210:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    162:163:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    253:285:int hashCode() -> hashCode
    236:236:void saveState(android.os.Bundle) -> saveState
    58:58:void setDestination(androidx.navigation.NavDestination) -> setDestination
    155:156:void setMaxLifecycle(androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    172:185:void updateState() -> updateState
androidx.navigation.NavBackStackEntry$Companion -> androidx.navigation.NavBackStackEntry$Companion:
# {"id":"sourceFile","fileName":"NavBackStackEntry.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    108:108:androidx.navigation.NavBackStackEntry create(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle) -> create
    100:106:androidx.navigation.NavBackStackEntry create$default(androidx.navigation.NavBackStackEntry$Companion,android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavViewModelStoreProvider,java.lang.String,android.os.Bundle,int,java.lang.Object) -> create$default
androidx.navigation.NavBackStackEntry$NavResultSavedStateFactory -> androidx.navigation.NavBackStackEntry$NavResultSavedStateFactory:
# {"id":"sourceFile","fileName":"NavBackStackEntry.kt"}
    268:268:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    275:275:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class,androidx.lifecycle.SavedStateHandle) -> create
androidx.navigation.NavBackStackEntry$SavedStateViewModel -> androidx.navigation.NavBackStackEntry$SavedStateViewModel:
# {"id":"sourceFile","fileName":"NavBackStackEntry.kt"}
    279:279:void <init>(androidx.lifecycle.SavedStateHandle) -> <init>
    279:279:androidx.lifecycle.SavedStateHandle getHandle() -> getHandle
androidx.navigation.NavBackStackEntry$defaultFactory$2 -> androidx.navigation.NavBackStackEntry$defaultFactory$2:
# {"id":"sourceFile","fileName":"NavBackStackEntry.kt"}
    0:0:void <init>(androidx.navigation.NavBackStackEntry) -> <init>
    117:117:java.lang.Object invoke() -> invoke
    118:118:androidx.lifecycle.SavedStateViewModelFactory invoke() -> invoke
androidx.navigation.NavBackStackEntry$savedStateHandle$2 -> androidx.navigation.NavBackStackEntry$savedStateHandle$2:
# {"id":"sourceFile","fileName":"NavBackStackEntry.kt"}
    0:0:void <init>(androidx.navigation.NavBackStackEntry) -> <init>
    124:124:java.lang.Object invoke() -> invoke
    125:136:androidx.lifecycle.SavedStateHandle invoke() -> invoke
androidx.navigation.NavBackStackEntryState -> androidx.navigation.NavBackStackEntryState:
# {"id":"sourceFile","fileName":"NavBackStackEntryState.kt"}
    77:77:void <clinit>() -> <clinit>
    32:37:void <init>(androidx.navigation.NavBackStackEntry) -> <init>
    40:44:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    28:28:int getDestinationId() -> getDestinationId
    27:27:java.lang.String getId() -> getId
    53:59:androidx.navigation.NavBackStackEntry instantiate(android.content.Context,androidx.navigation.NavDestination,androidx.lifecycle.Lifecycle$State,androidx.navigation.NavControllerViewModel) -> instantiate
    68:71:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.navigation.NavBackStackEntryState$Companion -> androidx.navigation.NavBackStackEntryState$Companion:
# {"id":"sourceFile","fileName":"NavBackStackEntryState.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.navigation.NavBackStackEntryState$Companion$CREATOR$1 -> androidx.navigation.NavBackStackEntryState$Companion$CREATOR$1:
# {"id":"sourceFile","fileName":"NavBackStackEntryState.kt"}
    77:77:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    79:79:androidx.navigation.NavBackStackEntryState createFromParcel(android.os.Parcel) -> createFromParcel
    77:77:java.lang.Object[] newArray(int) -> newArray
    83:83:androidx.navigation.NavBackStackEntryState[] newArray(int) -> newArray
androidx.navigation.NavController -> androidx.navigation.NavController:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void $r8$lambda$QcvT-AhOyhL9f0B2nrlZ1aMydmQ(androidx.navigation.NavController,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> $r8$lambda$QcvT-AhOyhL9f0B2nrlZ1aMydmQ
      # {"id":"com.android.tools.r8.synthesized"}
    2311:2311:void <clinit>() -> <clinit>
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> <init>
    68:68:void <init>(android.content.Context):68 -> <init>
    70:2363:void <init>(android.content.Context) -> <init>
    179:179:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    179:179:void <init>(android.content.Context):77 -> <init>
    73:73:void <init>(android.content.Context) -> <init>
    114:114:kotlin.collections.ArrayDeque getBackQueue() -> <init>
    114:114:void <init>(android.content.Context):114 -> <init>
    117:167:void <init>(android.content.Context) -> <init>
    168:168:void setHostLifecycleState$navigation_runtime_release(androidx.lifecycle.Lifecycle$State) -> <init>
    168:168:void <init>(android.content.Context):168 -> <init>
    179:870:void <init>(android.content.Context) -> <init>
    1020:1020:androidx.navigation.NavInflater getNavInflater() -> <init>
    1020:1020:void <init>(android.content.Context):1020 -> <init>
    2246:2253:void <init>(android.content.Context) -> <init>
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$addEntryToBackStack
    68:68:void access$addEntryToBackStack(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavBackStackEntry,java.util.List):68 -> access$addEntryToBackStack
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$getAddToBackStackHandler$p
    68:68:kotlin.jvm.functions.Function1 access$getAddToBackStackHandler$p(androidx.navigation.NavController):68 -> access$getAddToBackStackHandler$p
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$getBackStackMap$p
    68:68:java.util.Map access$getBackStackMap$p(androidx.navigation.NavController):68 -> access$getBackStackMap$p
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$getDeepLinkSaveState$cp
    68:68:boolean access$getDeepLinkSaveState$cp():68 -> access$getDeepLinkSaveState$cp
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$getEntrySavedState$p
    68:68:java.util.Map access$getEntrySavedState$p(androidx.navigation.NavController):68 -> access$getEntrySavedState$p
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$getInflater$p
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$getNavigatorState$p
    68:68:java.util.Map access$getNavigatorState$p(androidx.navigation.NavController):68 -> access$getNavigatorState$p
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$getPopFromBackStackHandler$p
    68:68:kotlin.jvm.functions.Function1 access$getPopFromBackStackHandler$p(androidx.navigation.NavController):68 -> access$getPopFromBackStackHandler$p
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$getViewModel$p
    68:68:androidx.navigation.NavControllerViewModel access$getViewModel$p(androidx.navigation.NavController):68 -> access$getViewModel$p
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$get_navigatorProvider$p
    68:68:androidx.navigation.NavigatorProvider access$get_navigatorProvider$p(androidx.navigation.NavController):68 -> access$get_navigatorProvider$p
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$get_visibleEntries$p
    68:68:kotlinx.coroutines.flow.MutableStateFlow access$get_visibleEntries$p(androidx.navigation.NavController):68 -> access$get_visibleEntries$p
    68:68:androidx.navigation.NavInflater access$getInflater$p(androidx.navigation.NavController) -> access$popEntryFromBackStack
    68:68:void access$popEntryFromBackStack(androidx.navigation.NavController,androidx.navigation.NavBackStackEntry,boolean,kotlin.collections.ArrayDeque):68 -> access$popEntryFromBackStack
    1819:2431:void addEntryToBackStack(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavBackStackEntry,java.util.List) -> addEntryToBackStack
    533:534:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.lastOrNull(java.util.List,kotlin.jvm.functions.Function1) -> addEntryToBackStack
    533:534:void addEntryToBackStack(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavBackStackEntry,java.util.List):1840 -> addEntryToBackStack
    1840:2437:void addEntryToBackStack(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavBackStackEntry,java.util.List) -> addEntryToBackStack
    533:534:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.lastOrNull(java.util.List,kotlin.jvm.functions.Function1) -> addEntryToBackStack
    533:534:void addEntryToBackStack(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavBackStackEntry,java.util.List):1862 -> addEntryToBackStack
    1862:2443:void addEntryToBackStack(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavBackStackEntry,java.util.List) -> addEntryToBackStack
    533:534:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.lastOrNull(java.util.List,kotlin.jvm.functions.Function1) -> addEntryToBackStack
    533:534:void addEntryToBackStack(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavBackStackEntry,java.util.List):1889 -> addEntryToBackStack
    1889:2450:void addEntryToBackStack(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavBackStackEntry,java.util.List) -> addEntryToBackStack
    1813:1817:void addEntryToBackStack$default(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavBackStackEntry,java.util.List,int,java.lang.Object) -> addEntryToBackStack$default
    397:405:void addOnDestinationChangedListener(androidx.navigation.NavController$OnDestinationChangedListener) -> addOnDestinationChangedListener
    719:2373:boolean clearBackStackInternal(int) -> clearBackStackInternal
    1996:1996:androidx.navigation.NavDeepLinkBuilder createDeepLink() -> createDeepLink
    881:910:boolean dispatchOnDestinationChanged() -> dispatchOnDestinationChanged
    2153:2154:void enableOnBackPressed(boolean) -> enableOnBackPressed
    1392:1399:androidx.navigation.NavDestination findDestination(int) -> findDestination
    1403:1407:androidx.navigation.NavDestination findDestination(androidx.navigation.NavDestination,int) -> findDestination
    1354:1372:java.lang.String findInvalidDestinationDisplayNameInDeepLink(int[]) -> findInvalidDestinationDisplayNameInDeepLink
    114:114:kotlin.collections.ArrayDeque getBackQueue() -> getBackQueue
    2206:2462:androidx.navigation.NavBackStackEntry getBackStackEntry(int) -> getBackStackEntry
    533:534:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.lastOrNull(java.util.List,kotlin.jvm.functions.Function1) -> getBackStackEntry
    533:534:androidx.navigation.NavBackStackEntry getBackStackEntry(int):2206 -> getBackStackEntry
    2206:2211:androidx.navigation.NavBackStackEntry getBackStackEntry(int) -> getBackStackEntry
    2227:2468:androidx.navigation.NavBackStackEntry getBackStackEntry(java.lang.String) -> getBackStackEntry
    533:534:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.lastOrNull(java.util.List,kotlin.jvm.functions.Function1) -> getBackStackEntry
    533:534:androidx.navigation.NavBackStackEntry getBackStackEntry(java.lang.String):2227 -> getBackStackEntry
    2227:2232:androidx.navigation.NavBackStackEntry getBackStackEntry(java.lang.String) -> getBackStackEntry
    71:71:android.content.Context getContext() -> getContext
    2243:2243:androidx.navigation.NavBackStackEntry getCurrentBackStackEntry() -> getCurrentBackStackEntry
    1386:1386:androidx.navigation.NavDestination getCurrentDestination() -> getCurrentDestination
    865:2378:int getDestinationCountOnBackStack() -> getDestinationCountOnBackStack
    1770:1770:int kotlin.collections.CollectionsKt___CollectionsKt.count(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getDestinationCountOnBackStack
    1770:1770:int getDestinationCountOnBackStack():865 -> getDestinationCountOnBackStack
    866:866:int getDestinationCountOnBackStack() -> getDestinationCountOnBackStack
    94:95:androidx.navigation.NavGraph getGraph() -> getGraph
    172:175:androidx.lifecycle.Lifecycle$State getHostLifecycleState$navigation_runtime_release() -> getHostLifecycleState$navigation_runtime_release
    1020:1020:androidx.navigation.NavInflater getNavInflater() -> getNavInflater
    234:234:androidx.navigation.NavigatorProvider getNavigatorProvider() -> getNavigatorProvider
    1196:1341:boolean handleDeepLink(android.content.Intent) -> handleDeepLink
    1796:2428:java.util.List instantiateBackStack(kotlin.collections.ArrayDeque) -> instantiateBackStack
    180:183:void lifecycleObserver$lambda-2(androidx.navigation.NavController,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> lifecycleObserver$lambda-2
    143:147:void linkChildToParent(androidx.navigation.NavBackStackEntry,androidx.navigation.NavBackStackEntry) -> linkChildToParent
    1472:1472:void navigate(int,android.os.Bundle,androidx.navigation.NavOptions) -> navigate
    1498:1545:void navigate(int,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    1678:2421:void navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    259:261:void navigateInternal(androidx.navigation.Navigator,java.util.List,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras,kotlin.jvm.functions.Function1) -> navigateInternal
    747:755:boolean navigateUp() -> navigateUp
    1105:1135:void onGraphCreated(android.os.Bundle) -> onGraphCreated
    357:357:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> onGraphCreated
    357:357:void onGraphCreated(android.os.Bundle):1135 -> onGraphCreated
    1136:1136:void onGraphCreated(android.os.Bundle) -> onGraphCreated
    360:360:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> onGraphCreated
    360:360:void onGraphCreated(android.os.Bundle):1135 -> onGraphCreated
    1124:2410:void onGraphCreated(android.os.Bundle) -> onGraphCreated
    357:357:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> onGraphCreated
    357:357:void onGraphCreated(android.os.Bundle):1150 -> onGraphCreated
    1151:1151:void onGraphCreated(android.os.Bundle) -> onGraphCreated
    360:360:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> onGraphCreated
    360:360:void onGraphCreated(android.os.Bundle):1150 -> onGraphCreated
    1150:1164:void onGraphCreated(android.os.Bundle) -> onGraphCreated
    430:434:boolean popBackStack() -> popBackStack
    449:449:boolean popBackStack(int,boolean) -> popBackStack
    472:475:boolean popBackStack(int,boolean,boolean) -> popBackStack
    623:645:void popBackStackFromNavigator$navigation_runtime_release(androidx.navigation.NavBackStackEntry,kotlin.jvm.functions.Function0) -> popBackStackFromNavigator$navigation_runtime_release
    273:275:void popBackStackInternal(androidx.navigation.Navigator,androidx.navigation.NavBackStackEntry,boolean,kotlin.jvm.functions.Function1) -> popBackStackInternal
    520:2369:boolean popBackStackInternal(int,boolean,boolean) -> popBackStackInternal
    515:515:boolean popBackStackInternal$default(androidx.navigation.NavController,int,boolean,boolean,int,java.lang.Object) -> popBackStackInternal$default
    653:682:void popEntryFromBackStack(androidx.navigation.NavBackStackEntry,boolean,kotlin.collections.ArrayDeque) -> popEntryFromBackStack
    648:651:void popEntryFromBackStack$default(androidx.navigation.NavController,androidx.navigation.NavBackStackEntry,boolean,kotlin.collections.ArrayDeque,int,java.lang.Object) -> popEntryFromBackStack$default
    996:2391:java.util.List populateVisibleEntries$navigation_runtime_release() -> populateVisibleEntries$navigation_runtime_release
    417:417:void removeOnDestinationChangedListener(androidx.navigation.NavController$OnDestinationChangedListener) -> removeOnDestinationChangedListener
    2089:2459:void restoreState(android.os.Bundle) -> restoreState
    1742:2426:boolean restoreStateInternal(int,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> restoreStateInternal
    2011:2454:android.os.Bundle saveState() -> saveState
    1039:1039:void setGraph(int) -> setGraph
    1058:1058:void setGraph(int,android.os.Bundle) -> setGraph
    1074:2398:void setGraph(androidx.navigation.NavGraph,android.os.Bundle) -> setGraph
    2119:2124:void setLifecycleOwner(androidx.lifecycle.LifecycleOwner) -> setLifecycleOwner
    2130:2146:void setOnBackPressedDispatcher(androidx.activity.OnBackPressedDispatcher) -> setOnBackPressedDispatcher
    2166:2170:void setViewModelStore(androidx.lifecycle.ViewModelStore) -> setViewModelStore
    765:2376:boolean tryRelaunchUpToExplicitStack() -> tryRelaunchUpToExplicitStack
    819:856:boolean tryRelaunchUpToGeneratedStack() -> tryRelaunchUpToGeneratedStack
    151:155:androidx.navigation.NavBackStackEntry unlinkChildFromParent$navigation_runtime_release(androidx.navigation.NavBackStackEntry) -> unlinkChildFromParent$navigation_runtime_release
    150:150:androidx.navigation.Navigator androidx.navigation.NavigatorProviderKt.get(androidx.navigation.NavigatorProvider,java.lang.String) -> unlinkChildFromParent$navigation_runtime_release
    150:150:androidx.navigation.NavBackStackEntry unlinkChildFromParent$navigation_runtime_release(androidx.navigation.NavBackStackEntry):155 -> unlinkChildFromParent$navigation_runtime_release
    156:157:androidx.navigation.NavBackStackEntry unlinkChildFromParent$navigation_runtime_release(androidx.navigation.NavBackStackEntry) -> unlinkChildFromParent$navigation_runtime_release
    918:990:void updateBackStackLifecycle$navigation_runtime_release() -> updateBackStackLifecycle$navigation_runtime_release
    2158:2159:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.navigation.NavController$$ExternalSyntheticLambda0 -> androidx.navigation.NavController$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.navigation.NavController androidx.navigation.NavController$$InternalSyntheticLambda$1$0345503c5dfbce2cc4976e628ec0cbf53f2068cbd79b2ce4870ce7ef01f43169$0.f$0 -> f$0
    0:0:void androidx.navigation.NavController$$InternalSyntheticLambda$1$0345503c5dfbce2cc4976e628ec0cbf53f2068cbd79b2ce4870ce7ef01f43169$0.<init>(androidx.navigation.NavController) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.navigation.NavController$$InternalSyntheticLambda$1$0345503c5dfbce2cc4976e628ec0cbf53f2068cbd79b2ce4870ce7ef01f43169$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.navigation.NavController$Companion -> androidx.navigation.NavController$Companion:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.navigation.NavController$NavControllerNavigatorState -> androidx.navigation.NavController$NavControllerNavigatorState:
# {"id":"sourceFile","fileName":"NavController.kt"}
    278:278:void access$pop$s261051546(androidx.navigation.NavController$NavControllerNavigatorState,androidx.navigation.NavBackStackEntry,boolean) -> <init>
    278:278:void <init>(androidx.navigation.NavController,androidx.navigation.Navigator):278 -> <init>
    280:280:void <init>(androidx.navigation.NavController,androidx.navigation.Navigator) -> <init>
    279:279:androidx.navigation.Navigator getNavigator() -> <init>
    279:279:void <init>(androidx.navigation.NavController,androidx.navigation.Navigator):279 -> <init>
    278:278:void access$pop$s261051546(androidx.navigation.NavController$NavControllerNavigatorState,androidx.navigation.NavBackStackEntry,boolean) -> access$pop$s261051546
    307:307:void addInternal(androidx.navigation.NavBackStackEntry) -> addInternal
    313:315:androidx.navigation.NavBackStackEntry createBackStackEntry(androidx.navigation.NavDestination,android.os.Bundle) -> createBackStackEntry
    342:352:void markTransitionComplete(androidx.navigation.NavBackStackEntry) -> markTransitionComplete
    2468:2469:java.lang.Comparable kotlin.collections.CollectionsKt___CollectionsKt.minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> markTransitionComplete
    2468:2469:void markTransitionComplete(androidx.navigation.NavBackStackEntry):352 -> markTransitionComplete
    352:359:void markTransitionComplete(androidx.navigation.NavBackStackEntry) -> markTransitionComplete
    320:320:void pop(androidx.navigation.NavBackStackEntry,boolean) -> pop
    150:150:androidx.navigation.Navigator androidx.navigation.NavigatorProviderKt.get(androidx.navigation.NavigatorProvider,java.lang.String) -> pop
    150:150:void pop(androidx.navigation.NavBackStackEntry,boolean):320 -> pop
    321:332:void pop(androidx.navigation.NavBackStackEntry,boolean) -> pop
    283:283:void push(androidx.navigation.NavBackStackEntry) -> push
    150:150:androidx.navigation.Navigator androidx.navigation.NavigatorProviderKt.get(androidx.navigation.NavigatorProvider,java.lang.String) -> push
    150:150:void push(androidx.navigation.NavBackStackEntry):283 -> push
    284:302:void push(androidx.navigation.NavBackStackEntry) -> push
androidx.navigation.NavController$NavControllerNavigatorState$pop$1 -> androidx.navigation.NavController$NavControllerNavigatorState$pop$1:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(androidx.navigation.NavController$NavControllerNavigatorState,androidx.navigation.NavBackStackEntry,boolean) -> <init>
    327:327:java.lang.Object invoke() -> invoke
    328:328:void invoke() -> invoke
androidx.navigation.NavController$OnDestinationChangedListener -> androidx.navigation.NavController$OnDestinationChangedListener:
# {"id":"sourceFile","fileName":"NavController.kt"}
androidx.navigation.NavController$activity$1 -> androidx.navigation.NavController$activity$1:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    73:73:java.lang.Object invoke(java.lang.Object) -> invoke
    74:75:android.content.Context invoke(android.content.Context) -> invoke
androidx.navigation.NavController$handleDeepLink$2 -> androidx.navigation.NavController$handleDeepLink$2:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(androidx.navigation.NavDestination,androidx.navigation.NavController) -> <init>
    1281:1281:java.lang.Object invoke(java.lang.Object) -> invoke
    1282:1287:void invoke(androidx.navigation.NavOptionsBuilder) -> invoke
    1966:1966:java.lang.Comparable kotlin.sequences.SequencesKt___SequencesKt.minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> invoke
    1966:1966:void invoke(androidx.navigation.NavOptionsBuilder):1287 -> invoke
    1287:1293:void invoke(androidx.navigation.NavOptionsBuilder) -> invoke
androidx.navigation.NavController$handleDeepLink$2$1 -> androidx.navigation.NavController$handleDeepLink$2$1:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    1282:1282:java.lang.Object invoke(java.lang.Object) -> invoke
    1283:1284:void invoke(androidx.navigation.AnimBuilder) -> invoke
androidx.navigation.NavController$handleDeepLink$2$2 -> androidx.navigation.NavController$handleDeepLink$2$2:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    1293:1293:java.lang.Object invoke(java.lang.Object) -> invoke
    1294:1294:void invoke(androidx.navigation.PopUpToBuilder) -> invoke
androidx.navigation.NavController$navInflater$2 -> androidx.navigation.NavController$navInflater$2:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(androidx.navigation.NavController) -> <init>
    1020:1020:java.lang.Object invoke() -> invoke
    1021:1021:androidx.navigation.NavInflater invoke() -> invoke
androidx.navigation.NavController$navigate$4 -> androidx.navigation.NavController$navigate$4:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(kotlin.jvm.internal.Ref$BooleanRef,androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle) -> <init>
    1719:1719:java.lang.Object invoke(java.lang.Object) -> invoke
    1720:1721:void invoke(androidx.navigation.NavBackStackEntry) -> invoke
androidx.navigation.NavController$onBackPressedCallback$1 -> androidx.navigation.NavController$onBackPressedCallback$1:
# {"id":"sourceFile","fileName":"NavController.kt"}
    189:189:void <init>(androidx.navigation.NavController) -> <init>
    191:191:void handleOnBackPressed() -> handleOnBackPressed
androidx.navigation.NavController$popBackStackInternal$2 -> androidx.navigation.NavController$popBackStackInternal$2:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(kotlin.jvm.internal.Ref$BooleanRef,kotlin.jvm.internal.Ref$BooleanRef,androidx.navigation.NavController,boolean,kotlin.collections.ArrayDeque) -> <init>
    557:557:java.lang.Object invoke(java.lang.Object) -> invoke
    558:560:void invoke(androidx.navigation.NavBackStackEntry) -> invoke
androidx.navigation.NavController$popBackStackInternal$3 -> androidx.navigation.NavController$popBackStackInternal$3:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    572:572:java.lang.Object invoke(java.lang.Object) -> invoke
    573:574:androidx.navigation.NavDestination invoke(androidx.navigation.NavDestination) -> invoke
androidx.navigation.NavController$popBackStackInternal$4 -> androidx.navigation.NavController$popBackStackInternal$4:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(androidx.navigation.NavController) -> <init>
    578:578:java.lang.Object invoke(java.lang.Object) -> invoke
    580:580:java.lang.Boolean invoke(androidx.navigation.NavDestination) -> invoke
androidx.navigation.NavController$popBackStackInternal$6 -> androidx.navigation.NavController$popBackStackInternal$6:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    591:591:java.lang.Object invoke(java.lang.Object) -> invoke
    592:593:androidx.navigation.NavDestination invoke(androidx.navigation.NavDestination) -> invoke
androidx.navigation.NavController$popBackStackInternal$7 -> androidx.navigation.NavController$popBackStackInternal$7:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(androidx.navigation.NavController) -> <init>
    597:597:java.lang.Object invoke(java.lang.Object) -> invoke
    599:599:java.lang.Boolean invoke(androidx.navigation.NavDestination) -> invoke
androidx.navigation.NavController$restoreStateInternal$1 -> androidx.navigation.NavController$restoreStateInternal$1:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(java.lang.String) -> <init>
    1747:1747:java.lang.Boolean invoke(java.lang.String) -> invoke
    1747:1747:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.navigation.NavController$restoreStateInternal$4 -> androidx.navigation.NavController$restoreStateInternal$4:
# {"id":"sourceFile","fileName":"NavController.kt"}
    0:0:void <init>(kotlin.jvm.internal.Ref$BooleanRef,java.util.List,kotlin.jvm.internal.Ref$IntRef,androidx.navigation.NavController,android.os.Bundle) -> <init>
    1774:1774:java.lang.Object invoke(java.lang.Object) -> invoke
    1775:1787:void invoke(androidx.navigation.NavBackStackEntry) -> invoke
androidx.navigation.NavControllerViewModel -> androidx.navigation.NavControllerViewModel:
# {"id":"sourceFile","fileName":"NavControllerViewModel.kt"}
    68:68:void <clinit>() -> <clinit>
    27:28:void <init>() -> <init>
    27:27:androidx.lifecycle.ViewModelProvider$Factory access$getFACTORY$cp() -> access$getFACTORY$cp
    32:33:void clear(java.lang.String) -> clear
    44:47:androidx.lifecycle.ViewModelStore getViewModelStore(java.lang.String) -> getViewModelStore
    37:40:void onCleared() -> onCleared
    53:64:java.lang.String toString() -> toString
androidx.navigation.NavControllerViewModel$Companion -> androidx.navigation.NavControllerViewModel$Companion:
# {"id":"sourceFile","fileName":"NavControllerViewModel.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    77:77:androidx.navigation.NavControllerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    372:372:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProviderGetKt.get(androidx.lifecycle.ViewModelProvider) -> getInstance
    372:372:androidx.navigation.NavControllerViewModel getInstance(androidx.lifecycle.ViewModelStore):78 -> getInstance
androidx.navigation.NavControllerViewModel$Companion$FACTORY$1 -> androidx.navigation.NavControllerViewModel$Companion$FACTORY$1:
# {"id":"sourceFile","fileName":"NavControllerViewModel.kt"}
    0:0:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    71:71:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.navigation.NavDeepLink -> androidx.navigation.NavDeepLink:
# {"id":"sourceFile","fileName":"NavDeepLink.kt"}
    430:430:void <clinit>() -> <clinit>
    30:30:java.lang.String access$getMimeTypeFinalRegex$p(androidx.navigation.NavDeepLink) -> <init>
    30:30:void <init>(java.lang.String,java.lang.String,java.lang.String):30 -> <init>
    36:36:java.lang.String getUriPattern() -> <init>
    36:36:void <init>(java.lang.String,java.lang.String,java.lang.String):36 -> <init>
    42:42:java.lang.String getAction() -> <init>
    42:42:void <init>(java.lang.String,java.lang.String,java.lang.String):42 -> <init>
    48:48:java.lang.String getMimeType() -> <init>
    48:48:void <init>(java.lang.String,java.lang.String,java.lang.String):48 -> <init>
    50:51:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    53:53:java.util.regex.Pattern getPattern() -> <init>
    53:53:void <init>(java.lang.String,java.lang.String,java.lang.String):53 -> <init>
    60:60:java.util.regex.Pattern getMimeTypePattern() -> <init>
    60:60:void <init>(java.lang.String,java.lang.String,java.lang.String):60 -> <init>
    435:505:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    30:30:java.lang.String access$getMimeTypeFinalRegex$p(androidx.navigation.NavDeepLink) -> access$getMimeTypeFinalRegex$p
    30:30:java.lang.String access$getMimeTypeFinalRegex$p(androidx.navigation.NavDeepLink) -> access$getPatternFinalRegex$p
    30:30:java.lang.String access$getPatternFinalRegex$p(androidx.navigation.NavDeepLink):30 -> access$getPatternFinalRegex$p
    83:104:boolean buildPathRegex(java.lang.String,java.lang.StringBuilder,java.util.regex.Pattern) -> buildPathRegex
    307:310:boolean equals(java.lang.Object) -> equals
    42:42:java.lang.String getAction() -> getAction
    66:513:java.util.List getArgumentsNames$navigation_common_release() -> getArgumentsNames$navigation_common_release
    1446:1446:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getArgumentsNames$navigation_common_release
    1446:1446:java.util.List getArgumentsNames$navigation_common_release():66 -> getArgumentsNames$navigation_common_release
    66:66:java.util.List getArgumentsNames$navigation_common_release() -> getArgumentsNames$navigation_common_release
    164:240:android.os.Bundle getMatchingArguments(android.net.Uri,java.util.Map) -> getMatchingArguments
    48:48:java.lang.String getMimeType() -> getMimeType
    149:152:int getMimeTypeMatchRating(java.lang.String) -> getMimeTypeMatchRating
    60:60:java.util.regex.Pattern getMimeTypePattern() -> getMimeTypePattern
    53:53:java.util.regex.Pattern getPattern() -> getPattern
    36:36:java.lang.String getUriPattern() -> getUriPattern
    315:317:int hashCode() -> hashCode
    71:71:boolean isExactDeepLink() -> isExactDeepLink
    253:256:boolean parseArgument(android.os.Bundle,java.lang.String,java.lang.String,androidx.navigation.NavArgument) -> parseArgument
androidx.navigation.NavDeepLink$Builder -> androidx.navigation.NavDeepLink$Builder:
# {"id":"sourceFile","fileName":"NavDeepLink.kt"}
    0:0:void <clinit>() -> <clinit>
    380:380:androidx.navigation.NavDeepLink build() -> build
    357:358:androidx.navigation.NavDeepLink$Builder setAction(java.lang.String) -> setAction
    370:370:androidx.navigation.NavDeepLink$Builder setMimeType(java.lang.String) -> setMimeType
    342:342:androidx.navigation.NavDeepLink$Builder setUriPattern(java.lang.String) -> setUriPattern
androidx.navigation.NavDeepLink$Builder$Companion -> androidx.navigation.NavDeepLink$Builder$Companion:
# {"id":"sourceFile","fileName":"NavDeepLink.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.navigation.NavDeepLink$Companion -> androidx.navigation.NavDeepLink$Companion:
# {"id":"sourceFile","fileName":"NavDeepLink.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.navigation.NavDeepLink$MimeType -> androidx.navigation.NavDeepLink$MimeType:
# {"id":"sourceFile","fileName":"NavDeepLink.kt"}
    281:281:int compareTo(java.lang.Object) -> <init>
    281:281:void <init>(java.lang.String):281 -> <init>
    300:511:void <init>(java.lang.String) -> <init>
    731:732:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.dropLastWhile(java.util.List,kotlin.jvm.functions.Function1) -> <init>
    731:732:void <init>(java.lang.String):300 -> <init>
    300:300:void <init>(java.lang.String) -> <init>
    733:733:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.dropLastWhile(java.util.List,kotlin.jvm.functions.Function1) -> <init>
    733:733:void <init>(java.lang.String):300 -> <init>
    301:518:void <init>(java.lang.String) -> <init>
    281:281:int compareTo(java.lang.Object) -> compareTo
    289:292:int compareTo(androidx.navigation.NavDeepLink$MimeType) -> compareTo
    283:283:void setSubType(java.lang.String) -> getSubType
    283:283:java.lang.String getSubType():283 -> getSubType
    282:282:void setType(java.lang.String) -> getType
    282:282:java.lang.String getType():282 -> getType
androidx.navigation.NavDeepLink$ParamQuery -> androidx.navigation.NavDeepLink$ParamQuery:
# {"id":"sourceFile","fileName":"NavDeepLink.kt"}
    264:266:void <init>() -> <init>
    269:269:void addArgumentName(java.lang.String) -> addArgumentName
    273:273:java.lang.String getArgumentName(int) -> getArgumentName
    266:266:java.util.List getArguments() -> getArguments
    265:265:java.lang.String getParamRegex() -> getParamRegex
    265:265:void setParamRegex(java.lang.String) -> setParamRegex
    277:277:int size() -> size
androidx.navigation.NavDeepLink$mimeTypePattern$2 -> androidx.navigation.NavDeepLink$mimeTypePattern$2:
# {"id":"sourceFile","fileName":"NavDeepLink.kt"}
    0:0:void <init>(androidx.navigation.NavDeepLink) -> <init>
    60:60:java.lang.Object invoke() -> invoke
    61:61:java.util.regex.Pattern invoke() -> invoke
androidx.navigation.NavDeepLink$pattern$2 -> androidx.navigation.NavDeepLink$pattern$2:
# {"id":"sourceFile","fileName":"NavDeepLink.kt"}
    0:0:void <init>(androidx.navigation.NavDeepLink) -> <init>
    53:53:java.lang.Object invoke() -> invoke
    54:54:java.util.regex.Pattern invoke() -> invoke
androidx.navigation.NavDeepLinkBuilder -> androidx.navigation.NavDeepLinkBuilder:
# {"id":"sourceFile","fileName":"NavDeepLinkBuilder.kt"}
    54:69:void <init>(android.content.Context) -> <init>
    75:76:void <init>(androidx.navigation.NavController) -> <init>
    200:202:androidx.navigation.NavDeepLinkBuilder addDestination(int,android.os.Bundle) -> addDestination
    305:321:androidx.core.app.TaskStackBuilder createTaskStackBuilder() -> createTaskStackBuilder
    257:278:void fillInIntent() -> fillInIntent
    228:236:androidx.navigation.NavDestination findDestination(int) -> findDestination
    287:288:androidx.navigation.NavDeepLinkBuilder setArguments(android.os.Bundle) -> setArguments
    142:145:androidx.navigation.NavDeepLinkBuilder setDestination(int,android.os.Bundle) -> setDestination
    141:141:androidx.navigation.NavDeepLinkBuilder setDestination$default(androidx.navigation.NavDeepLinkBuilder,int,android.os.Bundle,int,java.lang.Object) -> setDestination$default
    244:250:void verifyAllDestinations() -> verifyAllDestinations
androidx.navigation.NavDeepLinkBuilder$DeepLinkDestination -> androidx.navigation.NavDeepLinkBuilder$DeepLinkDestination:
# {"id":"sourceFile","fileName":"NavDeepLinkBuilder.kt"}
    55:57:void <init>(int,android.os.Bundle) -> <init>
    57:57:android.os.Bundle getArguments() -> getArguments
    56:56:int getDestinationId() -> getDestinationId
androidx.navigation.NavDeepLinkRequest -> androidx.navigation.NavDeepLinkRequest:
# {"id":"sourceFile","fileName":"NavDeepLinkRequest.kt"}
    55:55:void <init>(android.net.Uri,java.lang.String,java.lang.String) -> <init>
    59:59:void <init>(android.content.Intent) -> <init>
    32:32:java.lang.String getAction() -> getAction
    33:33:java.lang.String getMimeType() -> getMimeType
    31:31:android.net.Uri getUri() -> getUri
    62:78:java.lang.String toString() -> toString
androidx.navigation.NavDestination -> androidx.navigation.NavDestination:
# {"id":"sourceFile","fileName":"NavDestination.kt"}
    583:583:void <clinit>() -> <clinit>
    50:50:java.util.Map access$getClasses$cp() -> <init>
    50:50:void <init>(java.lang.String):50 -> <init>
    54:54:java.lang.String getNavigatorName() -> <init>
    54:54:void <init>(java.lang.String):54 -> <init>
    119:122:void <init>(java.lang.String) -> <init>
    141:143:void <init>(androidx.navigation.Navigator) -> <init>
    471:471:void addArgument(java.lang.String,androidx.navigation.NavArgument) -> addArgument
    273:273:void addDeepLink(java.lang.String) -> addDeepLink
    319:319:void addDeepLink(androidx.navigation.NavDeepLink) -> addDeepLink
    479:481:java.util.Map kotlin.collections.MapsKt__MapsKt.filterValues(java.util.Map,kotlin.jvm.functions.Function1) -> addDeepLink
    479:481:void addDeepLink(androidx.navigation.NavDeepLink):319 -> addDeepLink
    319:319:void addDeepLink(androidx.navigation.NavDeepLink) -> addDeepLink
    482:482:java.util.Map kotlin.collections.MapsKt__MapsKt.filterValues(java.util.Map,kotlin.jvm.functions.Function1) -> addDeepLink
    482:482:void addDeepLink(androidx.navigation.NavDeepLink):319 -> addDeepLink
    320:697:void addDeepLink(androidx.navigation.NavDeepLink) -> addDeepLink
    492:503:android.os.Bundle addInDefaultArgs(android.os.Bundle) -> addInDefaultArgs
    378:701:int[] buildDeepLinkIds(androidx.navigation.NavDestination) -> buildDeepLinkIds
    377:377:int[] buildDeepLinkIds$default(androidx.navigation.NavDestination,androidx.navigation.NavDestination,int,java.lang.Object) -> buildDeepLinkIds$default
    534:709:boolean equals(java.lang.Object) -> equals
    420:422:androidx.navigation.NavAction getAction(int) -> getAction
    134:134:java.util.Map getArguments() -> getArguments
    204:204:java.lang.String getDisplayName() -> getDisplayName
    171:171:int getId() -> getId
    118:118:void setLabel(java.lang.CharSequence) -> getLabel
    118:118:java.lang.CharSequence getLabel():118 -> getLabel
    54:54:java.lang.String getNavigatorName() -> getNavigatorName
    109:109:androidx.navigation.NavGraph getParent() -> getParent
    185:185:java.lang.String getRoute() -> getRoute
    561:711:int hashCode() -> hashCode
    32:32:void kotlin.collections.CollectionsKt__IteratorsKt.forEach(java.util.Iterator,kotlin.jvm.functions.Function1) -> hashCode
    32:32:int hashCode():568 -> hashCode
    569:717:int hashCode() -> hashCode
    340:359:androidx.navigation.NavDestination$DeepLinkMatch matchDeepLink(androidx.navigation.NavDeepLinkRequest) -> matchDeepLink
    155:163:void onInflate(android.content.Context,android.util.AttributeSet) -> onInflate
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> onInflate
    233:233:void onInflate(android.content.Context,android.util.AttributeSet):155 -> onInflate
    444:452:void putAction(int,androidx.navigation.NavAction) -> putAction
    173:174:void setId(int) -> setId
    112:112:void setParent(androidx.navigation.NavGraph) -> setParent
    188:687:void setRoute(java.lang.String) -> setRoute
    0:0:boolean supportsActions() -> supportsActions
    512:530:java.lang.String toString() -> toString
androidx.navigation.NavDestination$Companion -> androidx.navigation.NavDestination$Companion:
# {"id":"sourceFile","fileName":"NavDestination.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    670:670:java.lang.String createRoute(java.lang.String) -> createRoute
    657:661:java.lang.String getDisplayName(android.content.Context,int) -> getDisplayName
    679:679:kotlin.sequences.Sequence getHierarchy(androidx.navigation.NavDestination) -> getHierarchy
androidx.navigation.NavDestination$Companion$hierarchy$1 -> androidx.navigation.NavDestination$Companion$hierarchy$1:
# {"id":"sourceFile","fileName":"NavDestination.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    679:679:androidx.navigation.NavDestination invoke(androidx.navigation.NavDestination) -> invoke
    679:679:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.navigation.NavDestination$DeepLinkMatch -> androidx.navigation.NavDestination$DeepLinkMatch:
# {"id":"sourceFile","fileName":"NavDestination.kt"}
    67:74:void <init>(androidx.navigation.NavDestination,android.os.Bundle,boolean,boolean,int) -> <init>
    67:67:int compareTo(java.lang.Object) -> compareTo
    78:101:int compareTo(androidx.navigation.NavDestination$DeepLinkMatch) -> compareTo
    69:69:androidx.navigation.NavDestination getDestination() -> getDestination
    71:71:android.os.Bundle getMatchingArgs() -> getMatchingArgs
androidx.navigation.NavGraph -> androidx.navigation.NavGraph:
# {"id":"sourceFile","fileName":"NavGraph.kt"}
    0:0:void <clinit>() -> <clinit>
    45:47:void <init>(androidx.navigation.Navigator) -> <init>
    91:115:void addDestination(androidx.navigation.NavDestination) -> addDestination
    381:383:boolean equals(java.lang.Object) -> equals
    32:32:void kotlin.collections.CollectionsKt__IteratorsKt.forEach(java.util.Iterator,kotlin.jvm.functions.Function1) -> equals
    32:32:boolean equals(java.lang.Object):383 -> equals
    383:385:boolean equals(java.lang.Object) -> equals
    22:22:int androidx.collection.SparseArrayKt.getSize(androidx.collection.SparseArrayCompat) -> equals
    22:22:boolean equals(java.lang.Object):385 -> equals
    385:385:boolean equals(java.lang.Object) -> equals
    22:22:int androidx.collection.SparseArrayKt.getSize(androidx.collection.SparseArrayCompat) -> equals
    22:22:boolean equals(java.lang.Object):385 -> equals
    386:387:boolean equals(java.lang.Object) -> equals
    161:161:androidx.navigation.NavDestination findNode(int) -> findNode
    172:172:androidx.navigation.NavDestination findNode(java.lang.String) -> findNode
    180:184:androidx.navigation.NavDestination findNode(int,boolean) -> findNode
    192:197:androidx.navigation.NavDestination findNode(java.lang.String,boolean) -> findNode
    276:276:java.lang.String getDisplayName() -> getDisplayName
    50:50:androidx.collection.SparseArrayCompat getNodes() -> getNodes
    355:358:java.lang.String getStartDestDisplayName() -> getStartDestDisplayName
    294:294:int getStartDestinationId() -> getStartDestinationId
    334:334:java.lang.String getStartDestinationRoute() -> getStartDestinationRoute
    391:392:int hashCode() -> hashCode
    56:57:void androidx.collection.SparseArrayKt.forEach(androidx.collection.SparseArrayCompat,kotlin.jvm.functions.Function2) -> hashCode
    56:57:int hashCode():392 -> hashCode
    394:394:int hashCode() -> hashCode
    204:204:java.util.Iterator iterator() -> iterator
    69:488:androidx.navigation.NavDestination$DeepLinkMatch matchDeepLink(androidx.navigation.NavDeepLinkRequest) -> matchDeepLink
    55:62:void onInflate(android.content.Context,android.util.AttributeSet) -> onInflate
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> onInflate
    233:233:void onInflate(android.content.Context,android.util.AttributeSet):59 -> onInflate
    296:303:void setStartDestinationId(int) -> setStartDestinationId
    336:348:void setStartDestinationRoute(java.lang.String) -> setStartDestinationRoute
    362:377:java.lang.String toString() -> toString
androidx.navigation.NavGraph$Companion -> androidx.navigation.NavGraph$Companion:
# {"id":"sourceFile","fileName":"NavGraph.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    408:414:androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph) -> findStartDestination
androidx.navigation.NavGraph$Companion$findStartDestination$1 -> androidx.navigation.NavGraph$Companion$findStartDestination$1:
# {"id":"sourceFile","fileName":"NavGraph.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    408:408:java.lang.Object invoke(java.lang.Object) -> invoke
    409:410:androidx.navigation.NavDestination invoke(androidx.navigation.NavDestination) -> invoke
androidx.navigation.NavGraph$iterator$1 -> androidx.navigation.NavGraph$iterator$1:
# {"id":"sourceFile","fileName":"NavGraph.kt"}
    204:204:java.lang.Object next() -> <init>
    204:204:void <init>(androidx.navigation.NavGraph):204 -> <init>
    205:205:void <init>(androidx.navigation.NavGraph) -> <init>
    208:208:boolean hasNext() -> hasNext
    204:204:java.lang.Object next() -> next
    212:216:androidx.navigation.NavDestination next() -> next
    220:226:void remove() -> remove
androidx.navigation.NavGraphNavigator -> androidx.navigation.NavGraphNavigator:
# {"id":"sourceFile","fileName":"NavGraphNavigator.kt"}
    30:31:void <init>(androidx.navigation.NavigatorProvider) -> <init>
    28:28:androidx.navigation.NavDestination createDestination() -> createDestination
    37:37:androidx.navigation.NavGraph createDestination() -> createDestination
    48:49:void navigate(java.util.List,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    58:83:void navigate(androidx.navigation.NavBackStackEntry,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
androidx.navigation.NavGraphViewModelLazyKt -> androidx.navigation.NavGraphViewModelLazyKt:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    1:1:androidx.navigation.NavBackStackEntry access$navGraphViewModels$lambda-0(kotlin.Lazy) -> access$navGraphViewModels$lambda-0
    1:1:androidx.navigation.NavBackStackEntry access$navGraphViewModels$lambda-1(kotlin.Lazy) -> access$navGraphViewModels$lambda-1
    1:1:androidx.navigation.NavBackStackEntry access$navGraphViewModels$lambda-2(kotlin.Lazy) -> access$navGraphViewModels$lambda-2
    1:1:androidx.navigation.NavBackStackEntry access$navGraphViewModels$lambda-3(kotlin.Lazy) -> access$navGraphViewModels$lambda-3
    63:63:androidx.navigation.NavBackStackEntry navGraphViewModels$lambda-0(kotlin.Lazy) -> navGraphViewModels$lambda-0
    110:110:androidx.navigation.NavBackStackEntry navGraphViewModels$lambda-1(kotlin.Lazy) -> navGraphViewModels$lambda-1
    159:159:androidx.navigation.NavBackStackEntry navGraphViewModels$lambda-2(kotlin.Lazy) -> navGraphViewModels$lambda-2
    208:208:androidx.navigation.NavBackStackEntry navGraphViewModels$lambda-3(kotlin.Lazy) -> navGraphViewModels$lambda-3
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$1 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$1:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    69:69:java.lang.Object invoke() -> invoke
    71:71:androidx.lifecycle.viewmodel.CreationExtras invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$2 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$2:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    69:69:java.lang.Object invoke() -> invoke
    72:72:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$3 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$3:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0,kotlin.Lazy) -> <init>
    116:116:java.lang.Object invoke() -> invoke
    118:118:androidx.lifecycle.viewmodel.CreationExtras invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$4 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$4:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    116:116:java.lang.Object invoke() -> invoke
    119:119:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$5 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$5:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    165:165:java.lang.Object invoke() -> invoke
    167:167:androidx.lifecycle.viewmodel.CreationExtras invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$6 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$6:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    165:165:java.lang.Object invoke() -> invoke
    168:168:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$7 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$7:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0,kotlin.Lazy) -> <init>
    214:214:java.lang.Object invoke() -> invoke
    216:216:androidx.lifecycle.viewmodel.CreationExtras invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$8 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$8:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    214:214:java.lang.Object invoke() -> invoke
    217:217:androidx.lifecycle.ViewModelProvider$Factory invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$2 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$2:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment,int) -> <init>
    63:63:java.lang.Object invoke() -> invoke
    64:64:androidx.navigation.NavBackStackEntry invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$4 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$4:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment,int) -> <init>
    110:110:java.lang.Object invoke() -> invoke
    111:111:androidx.navigation.NavBackStackEntry invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$6 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$6:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment,java.lang.String) -> <init>
    159:159:java.lang.Object invoke() -> invoke
    160:160:androidx.navigation.NavBackStackEntry invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$8 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$8:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment,java.lang.String) -> <init>
    208:208:java.lang.Object invoke() -> invoke
    209:209:androidx.navigation.NavBackStackEntry invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$storeProducer$1 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$storeProducer$1:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    66:66:java.lang.Object invoke() -> invoke
    67:67:androidx.lifecycle.ViewModelStore invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$storeProducer$2 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$storeProducer$2:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    113:113:java.lang.Object invoke() -> invoke
    114:114:androidx.lifecycle.ViewModelStore invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$storeProducer$3 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$storeProducer$3:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    162:162:java.lang.Object invoke() -> invoke
    163:163:androidx.lifecycle.ViewModelStore invoke() -> invoke
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$storeProducer$4 -> androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$storeProducer$4:
# {"id":"sourceFile","fileName":"NavGraphViewModelLazy.kt"}
    0:0:void <init>(kotlin.Lazy) -> <init>
    211:211:java.lang.Object invoke() -> invoke
    212:212:androidx.lifecycle.ViewModelStore invoke() -> invoke
androidx.navigation.NavHostController -> androidx.navigation.NavHostController:
# {"id":"sourceFile","fileName":"NavHostController.kt"}
    46:46:void <init>(android.content.Context) -> <init>
    85:85:void enableOnBackPressed(boolean) -> enableOnBackPressed
    54:54:void setLifecycleOwner(androidx.lifecycle.LifecycleOwner) -> setLifecycleOwner
    75:75:void setOnBackPressedDispatcher(androidx.activity.OnBackPressedDispatcher) -> setOnBackPressedDispatcher
    101:101:void setViewModelStore(androidx.lifecycle.ViewModelStore) -> setViewModelStore
androidx.navigation.NavInflater -> androidx.navigation.NavInflater:
# {"id":"sourceFile","fileName":"NavInflater.kt"}
    337:337:void <clinit>() -> <clinit>
    39:41:void <init>(android.content.Context,androidx.navigation.NavigatorProvider) -> <init>
    51:75:androidx.navigation.NavGraph inflate(int) -> inflate
    75:75:androidx.navigation.NavGraph inflate(int) -> inflate
    86:112:androidx.navigation.NavDestination inflate(android.content.res.Resources,android.content.res.XmlResourceParser,android.util.AttributeSet,int) -> inflate
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> inflate
    233:233:androidx.navigation.NavDestination inflate(android.content.res.Resources,android.content.res.XmlResourceParser,android.util.AttributeSet,int):109 -> inflate
    113:114:androidx.navigation.NavDestination inflate(android.content.res.Resources,android.content.res.XmlResourceParser,android.util.AttributeSet,int) -> inflate
    284:284:void inflateAction(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,android.content.res.XmlResourceParser,int) -> inflateAction
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> inflateAction
    59:59:void inflateAction(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,android.content.res.XmlResourceParser,int):284 -> inflateAction
    285:322:void inflateAction(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,android.content.res.XmlResourceParser,int) -> inflateAction
    59:59:void androidx.core.content.ContextKt.withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> inflateAction
    59:59:void inflateAction(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,android.content.res.XmlResourceParser,int):284 -> inflateAction
    154:242:androidx.navigation.NavArgument inflateArgument(android.content.res.TypedArray,android.content.res.Resources,int) -> inflateArgument
    142:149:void inflateArgumentForBundle(android.content.res.Resources,android.os.Bundle,android.util.AttributeSet,int) -> inflateArgumentForBundle
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> inflateArgumentForBundle
    233:233:void inflateArgumentForBundle(android.content.res.Resources,android.os.Bundle,android.util.AttributeSet,int):142 -> inflateArgumentForBundle
    144:144:void inflateArgumentForBundle(android.content.res.Resources,android.os.Bundle,android.util.AttributeSet,int) -> inflateArgumentForBundle
    127:132:void inflateArgumentForDestination(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,int) -> inflateArgumentForDestination
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> inflateArgumentForDestination
    233:233:void inflateArgumentForDestination(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,int):127 -> inflateArgumentForDestination
    129:129:void inflateArgumentForDestination(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,int) -> inflateArgumentForDestination
    247:273:void inflateDeepLink(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet) -> inflateDeepLink
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> inflateDeepLink
    233:233:void inflateDeepLink(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet):247 -> inflateDeepLink
androidx.navigation.NavInflater$Companion -> androidx.navigation.NavInflater$Companion:
# {"id":"sourceFile","fileName":"NavInflater.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    347:347:androidx.navigation.NavType checkNavType$navigation_runtime_release(android.util.TypedValue,androidx.navigation.NavType,androidx.navigation.NavType,java.lang.String,java.lang.String) -> checkNavType$navigation_runtime_release
androidx.navigation.NavOptions -> androidx.navigation.NavOptions:
# {"id":"sourceFile","fileName":"NavOptions.kt"}
    26:66:void <init>(boolean,boolean,int,boolean,boolean,int,int,int,int) -> <init>
    107:118:void <init>(boolean,boolean,java.lang.String,boolean,boolean,int,int,int,int) -> <init>
    164:175:boolean equals(java.lang.Object) -> equals
    47:47:int getEnterAnim() -> getEnterAnim
    53:53:int getExitAnim() -> getExitAnim
    60:60:int getPopEnterAnim() -> getPopEnterAnim
    67:67:int getPopExitAnim() -> getPopExitAnim
    39:39:int getPopUpToId() -> getPopUpToId
    179:188:int hashCode() -> hashCode
    148:148:boolean isPopUpToInclusive() -> isPopUpToInclusive
    130:130:boolean shouldLaunchSingleTop() -> shouldLaunchSingleTop
    159:159:boolean shouldPopUpToSaveState() -> shouldPopUpToSaveState
    138:138:boolean shouldRestoreState() -> shouldRestoreState
androidx.navigation.NavOptions$Builder -> androidx.navigation.NavOptions$Builder:
# {"id":"sourceFile","fileName":"NavOptions.kt"}
    195:219:void <init>() -> <init>
    364:374:androidx.navigation.NavOptions build() -> build
    312:312:androidx.navigation.NavOptions$Builder setEnterAnim(int) -> setEnterAnim
    326:326:androidx.navigation.NavOptions$Builder setExitAnim(int) -> setExitAnim
    229:229:androidx.navigation.NavOptions$Builder setLaunchSingleTop(boolean) -> setLaunchSingleTop
    341:341:androidx.navigation.NavOptions$Builder setPopEnterAnim(int) -> setPopEnterAnim
    356:356:androidx.navigation.NavOptions$Builder setPopExitAnim(int) -> setPopExitAnim
    266:269:androidx.navigation.NavOptions$Builder setPopUpTo(int,boolean,boolean) -> setPopUpTo
    295:298:androidx.navigation.NavOptions$Builder setPopUpTo(java.lang.String,boolean,boolean) -> setPopUpTo
    261:261:androidx.navigation.NavOptions$Builder setPopUpTo$default(androidx.navigation.NavOptions$Builder,int,boolean,boolean,int,java.lang.Object) -> setPopUpTo$default
    240:240:androidx.navigation.NavOptions$Builder setRestoreState(boolean) -> setRestoreState
androidx.navigation.NavOptionsBuilder -> androidx.navigation.NavOptionsBuilder:
# {"id":"sourceFile","fileName":"NavOptionsBuilder.kt"}
    35:37:void <init>() -> <init>
    61:61:int getPopUpToId() -> <init>
    61:61:void <init>():61 -> <init>
    127:131:void anim(kotlin.jvm.functions.Function1) -> anim
    135:143:androidx.navigation.NavOptions build$navigation_common_release() -> build$navigation_common_release
    99:103:void popUpTo(int,kotlin.jvm.functions.Function1) -> popUpTo
    46:46:void setLaunchSingleTop(boolean) -> setLaunchSingleTop
    63:64:void setPopUpToId$navigation_common_release(int) -> setPopUpToId$navigation_common_release
    86:88:void setPopUpToRoute(java.lang.String) -> setPopUpToRoute
androidx.navigation.NavOptionsBuilderKt -> androidx.navigation.NavOptionsBuilderKt:
# {"id":"sourceFile","fileName":"NavOptionsBuilder.kt"}
    30:30:androidx.navigation.NavOptions navOptions(kotlin.jvm.functions.Function1) -> navOptions
androidx.navigation.NavType -> androidx.navigation.NavType:
# {"id":"sourceFile","fileName":"NavType.kt"}
    255:540:void <clinit>() -> <clinit>
    34:92:void <init>(boolean) -> <init>
    39:39:boolean isNullableAllowed() -> isNullableAllowed
    80:81:java.lang.Object parseAndPut(android.os.Bundle,java.lang.String,java.lang.String) -> parseAndPut
    95:95:java.lang.String toString() -> toString
androidx.navigation.NavType$Companion -> androidx.navigation.NavType$Companion:
# {"id":"sourceFile","fileName":"NavType.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    115:163:androidx.navigation.NavType fromArgType(java.lang.String,java.lang.String) -> fromArgType
    178:201:androidx.navigation.NavType inferFromValue(java.lang.String) -> inferFromValue
    214:227:androidx.navigation.NavType inferFromValueType(java.lang.Object) -> inferFromValueType
    227:233:androidx.navigation.NavType inferFromValueType(java.lang.Object) -> inferFromValueType
    222:241:androidx.navigation.NavType inferFromValueType(java.lang.Object) -> inferFromValueType
androidx.navigation.NavType$Companion$BoolArrayType$1 -> androidx.navigation.NavType$Companion$BoolArrayType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    489:489:void <init>() -> <init>
    489:489:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    499:499:boolean[] get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    489:489:java.lang.Object parseValue(java.lang.String) -> parseValue
    503:503:boolean[] parseValue(java.lang.String) -> parseValue
    489:489:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    494:494:void put(android.os.Bundle,java.lang.String,boolean[]) -> put
androidx.navigation.NavType$Companion$BoolType$1 -> androidx.navigation.NavType$Companion$BoolType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    455:455:void <init>() -> <init>
    455:455:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    465:465:java.lang.Boolean get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    455:455:java.lang.Object parseValue(java.lang.String) -> parseValue
    470:473:java.lang.Boolean parseValue(java.lang.String) -> parseValue
    455:455:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    460:460:void put(android.os.Bundle,java.lang.String,boolean) -> put
androidx.navigation.NavType$Companion$FloatArrayType$1 -> androidx.navigation.NavType$Companion$FloatArrayType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    430:430:void <init>() -> <init>
    430:430:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    440:440:float[] get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    430:430:java.lang.Object parseValue(java.lang.String) -> parseValue
    444:444:float[] parseValue(java.lang.String) -> parseValue
    430:430:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    435:435:void put(android.os.Bundle,java.lang.String,float[]) -> put
androidx.navigation.NavType$Companion$FloatType$1 -> androidx.navigation.NavType$Companion$FloatType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    404:404:void <init>() -> <init>
    404:404:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    414:414:java.lang.Float get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    404:404:java.lang.Object parseValue(java.lang.String) -> parseValue
    418:418:java.lang.Float parseValue(java.lang.String) -> parseValue
    404:404:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    409:409:void put(android.os.Bundle,java.lang.String,float) -> put
androidx.navigation.NavType$Companion$IntArrayType$1 -> androidx.navigation.NavType$Companion$IntArrayType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    315:315:void <init>() -> <init>
    315:315:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    325:325:int[] get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    315:315:java.lang.Object parseValue(java.lang.String) -> parseValue
    329:329:int[] parseValue(java.lang.String) -> parseValue
    315:315:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    320:320:void put(android.os.Bundle,java.lang.String,int[]) -> put
androidx.navigation.NavType$Companion$IntType$1 -> androidx.navigation.NavType$Companion$IntType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    255:255:void <init>() -> <init>
    255:255:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    265:265:java.lang.Integer get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    255:255:java.lang.Object parseValue(java.lang.String) -> parseValue
    269:272:java.lang.Integer parseValue(java.lang.String) -> parseValue
    255:255:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    260:260:void put(android.os.Bundle,java.lang.String,int) -> put
androidx.navigation.NavType$Companion$LongArrayType$1 -> androidx.navigation.NavType$Companion$LongArrayType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    379:379:void <init>() -> <init>
    379:379:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    389:389:long[] get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    379:379:java.lang.Object parseValue(java.lang.String) -> parseValue
    393:393:long[] parseValue(java.lang.String) -> parseValue
    379:379:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    384:384:void put(android.os.Bundle,java.lang.String,long[]) -> put
androidx.navigation.NavType$Companion$LongType$1 -> androidx.navigation.NavType$Companion$LongType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    342:342:void <init>() -> <init>
    342:342:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    352:352:java.lang.Long get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    342:342:java.lang.Object parseValue(java.lang.String) -> parseValue
    360:366:java.lang.Long parseValue(java.lang.String) -> parseValue
    342:342:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    347:347:void put(android.os.Bundle,java.lang.String,long) -> put
androidx.navigation.NavType$Companion$ReferenceType$1 -> androidx.navigation.NavType$Companion$ReferenceType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    284:284:void <init>() -> <init>
    284:284:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    295:295:java.lang.Integer get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    284:284:java.lang.Object parseValue(java.lang.String) -> parseValue
    299:302:java.lang.Integer parseValue(java.lang.String) -> parseValue
    284:284:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    289:289:void put(android.os.Bundle,java.lang.String,int) -> put
androidx.navigation.NavType$Companion$StringArrayType$1 -> androidx.navigation.NavType$Companion$StringArrayType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    540:540:void <init>() -> <init>
    540:540:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    552:552:java.lang.String[] get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    540:540:java.lang.Object parseValue(java.lang.String) -> parseValue
    556:556:java.lang.String[] parseValue(java.lang.String) -> parseValue
    540:540:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    547:547:void put(android.os.Bundle,java.lang.String,java.lang.String[]) -> put
androidx.navigation.NavType$Companion$StringType$1 -> androidx.navigation.NavType$Companion$StringType$1:
# {"id":"sourceFile","fileName":"NavType.kt"}
    514:514:void <init>() -> <init>
    514:514:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    524:524:java.lang.String get(android.os.Bundle,java.lang.String) -> get
    0:0:java.lang.String getName() -> getName
    0:0:java.lang.String parseValue(java.lang.String) -> parseValue
    514:514:java.lang.Object parseValue(java.lang.String) -> parseValue
    514:514:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    519:519:void put(android.os.Bundle,java.lang.String,java.lang.String) -> put
androidx.navigation.NavType$EnumType -> androidx.navigation.NavType$EnumType:
# {"id":"sourceFile","fileName":"NavType.kt"}
    752:779:void <init>(java.lang.Class) -> <init>
    756:756:java.lang.String getName() -> getName
    750:750:java.lang.Object parseValue(java.lang.String) -> parseValue
    750:750:java.io.Serializable parseValue(java.lang.String):750 -> parseValue
    750:750:java.lang.Object parseValue(java.lang.String) -> parseValue
    767:767:java.lang.Enum parseValue(java.lang.String) -> parseValue
    1275:1275:java.lang.Character kotlin.collections.ArraysKt___ArraysKt.firstOrNull(char[]) -> parseValue
    1275:1275:java.lang.Enum parseValue(java.lang.String):767 -> parseValue
    767:770:java.lang.Enum parseValue(java.lang.String) -> parseValue
androidx.navigation.NavType$ParcelableArrayType -> androidx.navigation.NavType$ParcelableArrayType:
# {"id":"sourceFile","fileName":"NavType.kt"}
    627:675:void <init>(java.lang.Class) -> <init>
    653:655:boolean equals(java.lang.Object) -> equals
    627:627:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    640:640:android.os.Parcelable[] get(android.os.Bundle,java.lang.String) -> get
    631:631:java.lang.String getName() -> getName
    659:659:int hashCode() -> hashCode
    627:627:java.lang.Object parseValue(java.lang.String) -> parseValue
    647:647:android.os.Parcelable[] parseValue(java.lang.String) -> parseValue
    627:627:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    634:635:void put(android.os.Bundle,java.lang.String,android.os.Parcelable[]) -> put
androidx.navigation.NavType$ParcelableType -> androidx.navigation.NavType$ParcelableType:
# {"id":"sourceFile","fileName":"NavType.kt"}
    569:615:void <init>(java.lang.Class) -> <init>
    598:600:boolean equals(java.lang.Object) -> equals
    586:586:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    573:573:java.lang.String getName() -> getName
    604:604:int hashCode() -> hashCode
    593:593:java.lang.Object parseValue(java.lang.String) -> parseValue
    576:580:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
androidx.navigation.NavType$SerializableArrayType -> androidx.navigation.NavType$SerializableArrayType:
# {"id":"sourceFile","fileName":"NavType.kt"}
    793:840:void <init>(java.lang.Class) -> <init>
    818:820:boolean equals(java.lang.Object) -> equals
    792:792:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    806:806:java.io.Serializable[] get(android.os.Bundle,java.lang.String) -> get
    797:797:java.lang.String getName() -> getName
    824:824:int hashCode() -> hashCode
    792:792:java.lang.Object parseValue(java.lang.String) -> parseValue
    813:813:java.io.Serializable[] parseValue(java.lang.String) -> parseValue
    792:792:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    800:801:void put(android.os.Bundle,java.lang.String,java.io.Serializable[]) -> put
androidx.navigation.NavType$SerializableType -> androidx.navigation.NavType$SerializableType:
# {"id":"sourceFile","fileName":"NavType.kt"}
    698:703:void <init>(java.lang.Class) -> <init>
    706:710:void <init>(boolean,java.lang.Class) -> <init>
    732:733:boolean equals(java.lang.Object) -> equals
    688:688:java.lang.Object parseValue(java.lang.String) -> get
    688:688:java.lang.Object get(android.os.Bundle,java.lang.String):688 -> get
    720:720:java.io.Serializable get(android.os.Bundle,java.lang.String) -> get
    692:692:java.lang.String getName() -> getName
    737:737:int hashCode() -> hashCode
    688:688:java.lang.Object parseValue(java.lang.String) -> parseValue
    727:727:java.io.Serializable parseValue(java.lang.String) -> parseValue
    688:688:java.lang.Object parseValue(java.lang.String) -> put
    688:688:void put(android.os.Bundle,java.lang.String,java.lang.Object):688 -> put
    714:715:void put(android.os.Bundle,java.lang.String,java.io.Serializable) -> put
androidx.navigation.NavViewModelStoreProvider -> androidx.navigation.NavViewModelStoreProvider:
# {"id":"sourceFile","fileName":"NavViewModelStoreProvider.kt"}
androidx.navigation.Navigation -> androidx.navigation.Navigation:
# {"id":"sourceFile","fileName":"Navigation.kt"}
    0:0:void <clinit>() -> <clinit>
    32:32:androidx.navigation.NavController access$getViewNavController(androidx.navigation.Navigation,android.view.View) -> access$getViewNavController
    48:51:androidx.navigation.NavController findNavController(android.app.Activity,int) -> findNavController
    70:71:androidx.navigation.NavController findNavController(android.view.View) -> findNavController
    126:130:androidx.navigation.NavController findViewNavController(android.view.View) -> findViewNavController
    134:139:androidx.navigation.NavController getViewNavController(android.view.View) -> getViewNavController
    117:117:void setViewNavController(android.view.View,androidx.navigation.NavController) -> setViewNavController
androidx.navigation.Navigation$findViewNavController$1 -> androidx.navigation.Navigation$findViewNavController$1:
# {"id":"sourceFile","fileName":"Navigation.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    126:126:java.lang.Object invoke(java.lang.Object) -> invoke
    127:127:android.view.View invoke(android.view.View) -> invoke
androidx.navigation.Navigation$findViewNavController$2 -> androidx.navigation.Navigation$findViewNavController$2:
# {"id":"sourceFile","fileName":"Navigation.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    128:128:java.lang.Object invoke(java.lang.Object) -> invoke
    129:129:androidx.navigation.NavController invoke(android.view.View) -> invoke
androidx.navigation.Navigator -> androidx.navigation.Navigator:
# {"id":"sourceFile","fileName":"Navigator.kt"}
    68:68:androidx.navigation.NavigatorState getState() -> getState
    77:77:boolean isAttached() -> isAttached
    0:0:androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    116:242:void navigate(java.util.List,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    86:87:void onAttach(androidx.navigation.NavigatorState) -> onAttach
    144:146:void onLaunchSingleTop(androidx.navigation.NavBackStackEntry) -> onLaunchSingleTop
    0:0:void onRestoreState(android.os.Bundle) -> onRestoreState
    0:0:android.os.Bundle onSaveState() -> onSaveState
    0:0:boolean popBackStack() -> popBackStack
    185:199:void popBackStack(androidx.navigation.NavBackStackEntry,boolean) -> popBackStack
androidx.navigation.Navigator$Extras -> androidx.navigation.Navigator$Extras:
# {"id":"sourceFile","fileName":"Navigator.kt"}
androidx.navigation.Navigator$Name -> androidx.navigation.Navigator$Name:
# {"id":"sourceFile","fileName":"Navigator.kt"}
androidx.navigation.Navigator$navigate$1 -> androidx.navigation.Navigator$navigate$1:
# {"id":"sourceFile","fileName":"Navigator.kt"}
    0:0:void <init>(androidx.navigation.Navigator,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> <init>
    116:116:java.lang.Object invoke(java.lang.Object) -> invoke
    117:127:androidx.navigation.NavBackStackEntry invoke(androidx.navigation.NavBackStackEntry) -> invoke
androidx.navigation.Navigator$onLaunchSingleTop$1 -> androidx.navigation.Navigator$onLaunchSingleTop$1:
# {"id":"sourceFile","fileName":"Navigator.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    145:145:java.lang.Object invoke(java.lang.Object) -> invoke
    145:145:void invoke(androidx.navigation.NavOptionsBuilder) -> invoke
androidx.navigation.NavigatorProvider -> androidx.navigation.NavigatorProvider:
# {"id":"sourceFile","fileName":"NavigatorProvider.kt"}
    119:119:void <clinit>() -> <clinit>
    27:27:java.util.Map access$getAnnotationNames$cp() -> <init>
    27:27:void <init>():27 -> <init>
    29:29:void <init>() -> <init>
    27:27:java.util.Map access$getAnnotationNames$cp() -> access$getAnnotationNames$cp
    87:87:androidx.navigation.Navigator addNavigator(androidx.navigation.Navigator) -> addNavigator
    104:115:androidx.navigation.Navigator addNavigator(java.lang.String,androidx.navigation.Navigator) -> addNavigator
    65:68:androidx.navigation.Navigator getNavigator(java.lang.String) -> getNavigator
    32:32:java.util.Map getNavigators() -> getNavigators
androidx.navigation.NavigatorProvider$Companion -> androidx.navigation.NavigatorProvider$Companion:
# {"id":"sourceFile","fileName":"NavigatorProvider.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    126:137:java.lang.String getNameForNavigator$navigation_common_release(java.lang.Class) -> getNameForNavigator$navigation_common_release
    121:121:boolean validateName$navigation_common_release(java.lang.String) -> validateName$navigation_common_release
androidx.navigation.NavigatorProviderKt -> R8$$REMOVED$$CLASS$$4:
# {"id":"sourceFile","fileName":"NavigatorProvider.kt"}
androidx.navigation.NavigatorState -> androidx.navigation.NavigatorState:
# {"id":"sourceFile","fileName":"NavigatorState.kt"}
    32:36:void <init>() -> <init>
    51:51:kotlinx.coroutines.flow.StateFlow getBackStack() -> <init>
    51:51:void <init>():51 -> <init>
    58:58:void <init>() -> <init>
    51:51:kotlinx.coroutines.flow.StateFlow getBackStack() -> getBackStack
    57:57:kotlinx.coroutines.flow.StateFlow getTransitionsInProgress() -> getTransitionsInProgress
    42:42:void setNavigating(boolean) -> isNavigating
    42:42:boolean isNavigating():42 -> isNavigating
    161:161:void markTransitionComplete(androidx.navigation.NavBackStackEntry) -> markTransitionComplete
    145:145:void onLaunchSingleTop(androidx.navigation.NavBackStackEntry) -> onLaunchSingleTop
    104:166:void pop(androidx.navigation.NavBackStackEntry,boolean) -> pop
    959:959:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.takeWhile(java.lang.Iterable,kotlin.jvm.functions.Function1) -> pop
    959:959:void pop(androidx.navigation.NavBackStackEntry,boolean):105 -> pop
    105:105:void pop(androidx.navigation.NavBackStackEntry,boolean) -> pop
    961:961:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.takeWhile(java.lang.Iterable,kotlin.jvm.functions.Function1) -> pop
    961:961:void pop(androidx.navigation.NavBackStackEntry,boolean):105 -> pop
    104:106:void pop(androidx.navigation.NavBackStackEntry,boolean) -> pop
    64:66:void push(androidx.navigation.NavBackStackEntry) -> push
    42:42:void setNavigating(boolean) -> setNavigating
androidx.navigation.PopUpToBuilder -> androidx.navigation.PopUpToBuilder:
# {"id":"sourceFile","fileName":"NavOptionsBuilder.kt"}
    149:149:void <init>() -> <init>
    154:154:boolean getInclusive() -> getInclusive
    165:165:boolean getSaveState() -> getSaveState
    165:165:void setSaveState(boolean) -> setSaveState
androidx.navigation.R$styleable -> androidx.navigation.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.navigation.common.R$styleable -> androidx.navigation.common.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.navigation.fragment.DialogFragmentNavigator -> androidx.navigation.fragment.DialogFragmentNavigator:
# {"id":"sourceFile","fileName":"DialogFragmentNavigator.kt"}
    0:0:void $r8$lambda$UoUP6_BOnHWRGRlTBxsXxu8ON4s(androidx.navigation.fragment.DialogFragmentNavigator,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> $r8$lambda$UoUP6_BOnHWRGRlTBxsXxu8ON4s
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$oMmavBGksxGVbVySEgZVEWY7_ug(androidx.navigation.fragment.DialogFragmentNavigator,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> $r8$lambda$oMmavBGksxGVbVySEgZVEWY7_ug
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void <clinit>() -> <clinit>
    43:47:void <init>(android.content.Context,androidx.fragment.app.FragmentManager) -> <init>
    41:41:androidx.navigation.NavDestination createDestination() -> createDestination
    105:105:androidx.navigation.fragment.DialogFragmentNavigator$Destination createDestination() -> createDestination
    113:118:void navigate(java.util.List,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    125:140:void navigate(androidx.navigation.NavBackStackEntry) -> navigate
    48:240:void observer$lambda-3(androidx.navigation.fragment.DialogFragmentNavigator,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> observer$lambda-3
    533:534:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.lastOrNull(java.util.List,kotlin.jvm.functions.Function1) -> observer$lambda-3
    533:534:void observer$lambda-3(androidx.navigation.fragment.DialogFragmentNavigator,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):62 -> observer$lambda-3
    62:74:void observer$lambda-3(androidx.navigation.fragment.DialogFragmentNavigator,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> observer$lambda-3
    144:151:void onAttach(androidx.navigation.NavigatorState) -> onAttach
    152:154:void onAttach$lambda-5(androidx.navigation.fragment.DialogFragmentNavigator,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttach$lambda-5
    80:101:void popBackStack(androidx.navigation.NavBackStackEntry,boolean) -> popBackStack
androidx.navigation.fragment.DialogFragmentNavigator$$ExternalSyntheticLambda0 -> androidx.navigation.fragment.DialogFragmentNavigator$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.navigation.fragment.DialogFragmentNavigator androidx.navigation.fragment.DialogFragmentNavigator$$InternalSyntheticLambda$1$45733d0edbce8667e142826158c694b3908f08b65c4b97f92f60479662ffff87$0.f$0 -> f$0
    0:0:void androidx.navigation.fragment.DialogFragmentNavigator$$InternalSyntheticLambda$1$45733d0edbce8667e142826158c694b3908f08b65c4b97f92f60479662ffff87$0.<init>(androidx.navigation.fragment.DialogFragmentNavigator) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.navigation.fragment.DialogFragmentNavigator$$InternalSyntheticLambda$1$45733d0edbce8667e142826158c694b3908f08b65c4b97f92f60479662ffff87$0.onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
      # {"id":"com.android.tools.r8.synthesized"}
androidx.navigation.fragment.DialogFragmentNavigator$$ExternalSyntheticLambda1 -> androidx.navigation.fragment.DialogFragmentNavigator$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.navigation.fragment.DialogFragmentNavigator androidx.navigation.fragment.DialogFragmentNavigator$$InternalSyntheticLambda$1$5c21381762f7e72567078970cd73efa62e98576cd05142c4bdf354c65c18dcea$0.f$0 -> f$0
    0:0:void androidx.navigation.fragment.DialogFragmentNavigator$$InternalSyntheticLambda$1$5c21381762f7e72567078970cd73efa62e98576cd05142c4bdf354c65c18dcea$0.<init>(androidx.navigation.fragment.DialogFragmentNavigator) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.navigation.fragment.DialogFragmentNavigator$$InternalSyntheticLambda$1$5c21381762f7e72567078970cd73efa62e98576cd05142c4bdf354c65c18dcea$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.navigation.fragment.DialogFragmentNavigator$Companion -> androidx.navigation.fragment.DialogFragmentNavigator$Companion:
# {"id":"sourceFile","fileName":"DialogFragmentNavigator.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.navigation.fragment.DialogFragmentNavigator$Destination -> androidx.navigation.fragment.DialogFragmentNavigator$Destination:
# {"id":"sourceFile","fileName":"DialogFragmentNavigator.kt"}
    172:172:void <init>(androidx.navigation.Navigator) -> <init>
    220:221:boolean equals(java.lang.Object) -> equals
    181:182:java.lang.String getClassName() -> getClassName
    225:226:int hashCode() -> hashCode
    198:204:void onInflate(android.content.Context,android.util.AttributeSet) -> onInflate
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> onInflate
    233:233:void onInflate(android.content.Context,android.util.AttributeSet):202 -> onInflate
    215:215:androidx.navigation.fragment.DialogFragmentNavigator$Destination setClassName(java.lang.String) -> setClassName
androidx.navigation.fragment.FragmentKt -> androidx.navigation.fragment.FragmentKt:
# {"id":"sourceFile","fileName":"Fragment.kt"}
    29:29:androidx.navigation.NavController findNavController(androidx.fragment.app.Fragment) -> findNavController
androidx.navigation.fragment.FragmentNavArgsLazyKt$navArgs$1 -> androidx.navigation.fragment.FragmentNavArgsLazyKt$navArgs$1:
# {"id":"sourceFile","fileName":"FragmentNavArgsLazy.kt"}
    0:0:void <init>(androidx.fragment.app.Fragment) -> <init>
    42:42:java.lang.Object invoke() -> invoke
    43:43:android.os.Bundle invoke() -> invoke
androidx.navigation.fragment.FragmentNavigator -> androidx.navigation.fragment.FragmentNavigator:
# {"id":"sourceFile","fileName":"FragmentNavigator.kt"}
    0:0:void <clinit>() -> <clinit>
    51:55:void <init>(android.content.Context,androidx.fragment.app.FragmentManager,int) -> <init>
    49:49:androidx.navigation.NavDestination createDestination() -> createDestination
    107:107:androidx.navigation.fragment.FragmentNavigator$Destination createDestination() -> createDestination
    244:266:androidx.fragment.app.FragmentTransaction createFragmentTransaction(androidx.navigation.NavBackStackEntry,androidx.navigation.NavOptions) -> createFragmentTransaction
    157:164:void navigate(java.util.List,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    173:198:void navigate(androidx.navigation.NavBackStackEntry,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    216:237:void onLaunchSingleTop(androidx.navigation.NavBackStackEntry) -> onLaunchSingleTop
    278:281:void onRestoreState(android.os.Bundle) -> onRestoreState
    271:274:android.os.Bundle onSaveState() -> onSaveState
    70:103:void popBackStack(androidx.navigation.NavBackStackEntry,boolean) -> popBackStack
androidx.navigation.fragment.FragmentNavigator$Companion -> androidx.navigation.fragment.FragmentNavigator$Companion:
# {"id":"sourceFile","fileName":"FragmentNavigator.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.navigation.fragment.FragmentNavigator$Destination -> androidx.navigation.fragment.FragmentNavigator$Destination:
# {"id":"sourceFile","fileName":"FragmentNavigator.kt"}
    297:297:void <init>(androidx.navigation.Navigator) -> <init>
    354:355:boolean equals(java.lang.Object) -> equals
    337:338:java.lang.String getClassName() -> getClassName
    359:360:int hashCode() -> hashCode
    311:315:void onInflate(android.content.Context,android.util.AttributeSet) -> onInflate
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> onInflate
    233:233:void onInflate(android.content.Context,android.util.AttributeSet):312 -> onInflate
    325:325:androidx.navigation.fragment.FragmentNavigator$Destination setClassName(java.lang.String) -> setClassName
    342:350:java.lang.String toString() -> toString
androidx.navigation.fragment.NavHostFragment -> androidx.navigation.fragment.NavHostFragment:
# {"id":"sourceFile","fileName":"NavHostFragment.kt"}
    0:0:void <clinit>() -> <clinit>
    78:78:androidx.navigation.NavHostController access$getNavHostController$p(androidx.navigation.fragment.NavHostFragment) -> <init>
    78:78:void <init>():78 -> <init>
    78:78:androidx.navigation.NavHostController access$getNavHostController$p(androidx.navigation.fragment.NavHostFragment) -> access$getNavHostController$p
    238:238:androidx.navigation.Navigator createFragmentNavigator() -> createFragmentNavigator
    264:267:int getContainerId() -> getContainerId
    103:110:void onAttach(android.content.Context) -> onAttach
    116:169:void onCreate(android.os.Bundle) -> onCreate
    214:215:void onCreateNavController(androidx.navigation.NavController) -> onCreateNavController
    181:181:void androidx.navigation.NavigatorProviderKt.plusAssign(androidx.navigation.NavigatorProvider,androidx.navigation.Navigator) -> onCreateNavController
    181:181:void onCreateNavController(androidx.navigation.NavController):214 -> onCreateNavController
    216:216:void onCreateNavController(androidx.navigation.NavController) -> onCreateNavController
    192:192:void onCreateNavHostController(androidx.navigation.NavHostController) -> onCreateNavHostController
    246:251:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    328:334:void onDestroyView() -> onDestroyView
    292:303:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> onInflate
    233:233:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):296 -> onInflate
    304:307:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    233:233:java.lang.Object androidx.core.content.res.TypedArrayKt.use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> onInflate
    233:233:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):304 -> onInflate
    221:224:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    314:323:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    273:281:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
androidx.navigation.fragment.NavHostFragment$Companion -> androidx.navigation.fragment.NavHostFragment$Companion:
# {"id":"sourceFile","fileName":"NavHostFragment.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    372:394:androidx.navigation.NavController findNavController(androidx.fragment.app.Fragment) -> findNavController
androidx.navigation.fragment.R$styleable -> androidx.navigation.fragment.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener -> androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener:
# {"id":"sourceFile","fileName":"AbstractAppBarOnDestinationChangedListener.kt"}
    38:44:void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration) -> <init>
    59:91:void onDestinationChanged(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle) -> onDestinationChanged
    97:114:void setActionBarUpIndicator(boolean) -> setActionBarUpIndicator
androidx.navigation.ui.ActionBarOnDestinationChangedListener -> androidx.navigation.ui.ActionBarOnDestinationChangedListener:
# {"id":"sourceFile","fileName":"ActionBarOnDestinationChangedListener.kt"}
    28:33:void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration) -> <init>
    44:51:void setNavigationIcon(android.graphics.drawable.Drawable,int) -> setNavigationIcon
    37:40:void setTitle(java.lang.CharSequence) -> setTitle
androidx.navigation.ui.AppBarConfiguration -> androidx.navigation.ui.AppBarConfiguration:
# {"id":"sourceFile","fileName":"AppBarConfiguration.kt"}
    0:0:void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    33:46:void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener) -> <init>
    0:0:androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener getFallbackOnNavigateUpListener() -> getFallbackOnNavigateUpListener
    46:46:androidx.customview.widget.Openable getOpenableLayout() -> getOpenableLayout
    40:40:java.util.Set getTopLevelDestinations() -> getTopLevelDestinations
androidx.navigation.ui.AppBarConfiguration$Builder -> androidx.navigation.ui.AppBarConfiguration$Builder:
# {"id":"sourceFile","fileName":"AppBarConfiguration.kt"}
    86:131:void <init>(int[]) -> <init>
    196:198:androidx.navigation.ui.AppBarConfiguration build() -> build
    167:167:androidx.navigation.ui.AppBarConfiguration$Builder setOpenableLayout(androidx.customview.widget.Openable) -> setOpenableLayout
androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener -> androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener:
# {"id":"sourceFile","fileName":"AppBarConfiguration.kt"}
androidx.navigation.ui.AppBarConfigurationKt$AppBarConfiguration$1 -> androidx.navigation.ui.AppBarConfigurationKt$AppBarConfiguration$1:
# {"id":"sourceFile","fileName":"AppBarConfiguration.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    224:224:java.lang.Object invoke() -> invoke
    224:224:java.lang.Boolean invoke():224 -> invoke
    224:224:java.lang.Object invoke() -> invoke
androidx.navigation.ui.AppBarConfigurationKt$AppBarConfiguration$2 -> androidx.navigation.ui.AppBarConfigurationKt$AppBarConfiguration$2:
# {"id":"sourceFile","fileName":"AppBarConfiguration.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    249:249:java.lang.Object invoke() -> invoke
    249:249:java.lang.Boolean invoke():249 -> invoke
    249:249:java.lang.Object invoke() -> invoke
androidx.navigation.ui.AppBarConfigurationKt$AppBarConfiguration$3 -> androidx.navigation.ui.AppBarConfigurationKt$AppBarConfiguration$3:
# {"id":"sourceFile","fileName":"AppBarConfiguration.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    274:274:java.lang.Object invoke() -> invoke
    274:274:java.lang.Boolean invoke():274 -> invoke
    274:274:java.lang.Object invoke() -> invoke
androidx.navigation.ui.NavigationUI -> androidx.navigation.ui.NavigationUI:
# {"id":"sourceFile","fileName":"NavigationUI.kt"}
    0:0:boolean $r8$lambda$4tiLoJoQlw6q926pecJ2kWQEPeA(androidx.navigation.NavController,com.google.android.material.navigation.NavigationView,android.view.MenuItem) -> $r8$lambda$4tiLoJoQlw6q926pecJ2kWQEPeA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void <clinit>() -> <clinit>
    568:580:com.google.android.material.bottomsheet.BottomSheetBehavior findBottomSheetBehavior(android.view.View) -> findBottomSheetBehavior
    689:701:boolean matchDestination$navigation_ui_release(androidx.navigation.NavDestination,int) -> matchDestination$navigation_ui_release
    698:703:boolean matchDestinations$navigation_ui_release(androidx.navigation.NavDestination,java.util.Set) -> matchDestinations$navigation_ui_release
    205:216:boolean navigateUp(androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration) -> navigateUp
    67:94:boolean onNavDestinationSelected(android.view.MenuItem,androidx.navigation.NavController) -> onNavDestinationSelected
    284:285:void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration) -> setupActionBarWithNavController
    456:473:void setupWithNavController(com.google.android.material.navigation.NavigationView,androidx.navigation.NavController) -> setupWithNavController
    457:465:boolean setupWithNavController$lambda-3(androidx.navigation.NavController,com.google.android.material.navigation.NavigationView,android.view.MenuItem) -> setupWithNavController$lambda-3
androidx.navigation.ui.NavigationUI$$ExternalSyntheticLambda0 -> androidx.navigation.ui.NavigationUI$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.navigation.NavController androidx.navigation.ui.NavigationUI$$InternalSyntheticLambda$1$a6d4a9e0c4397569a0ad7996e2d3d2e3019448ff31f9207ad93fd34b1144c376$0.f$0 -> f$0
    com.google.android.material.navigation.NavigationView androidx.navigation.ui.NavigationUI$$InternalSyntheticLambda$1$a6d4a9e0c4397569a0ad7996e2d3d2e3019448ff31f9207ad93fd34b1144c376$0.f$1 -> f$1
    0:0:void androidx.navigation.ui.NavigationUI$$InternalSyntheticLambda$1$a6d4a9e0c4397569a0ad7996e2d3d2e3019448ff31f9207ad93fd34b1144c376$0.<init>(androidx.navigation.NavController,com.google.android.material.navigation.NavigationView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.navigation.ui.NavigationUI$$InternalSyntheticLambda$1$a6d4a9e0c4397569a0ad7996e2d3d2e3019448ff31f9207ad93fd34b1144c376$0.onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
      # {"id":"com.android.tools.r8.synthesized"}
androidx.navigation.ui.NavigationUI$setupWithNavController$4 -> androidx.navigation.ui.NavigationUI$setupWithNavController$4:
# {"id":"sourceFile","fileName":"NavigationUI.kt"}
    473:473:void <init>(java.lang.ref.WeakReference,androidx.navigation.NavController) -> <init>
    479:484:void onDestinationChanged(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle) -> onDestinationChanged
    56:57:void androidx.core.view.MenuKt.forEach(android.view.Menu,kotlin.jvm.functions.Function1) -> onDestinationChanged
    56:57:void onDestinationChanged(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle):484 -> onDestinationChanged
    485:485:void onDestinationChanged(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle) -> onDestinationChanged
androidx.recyclerview.R$styleable -> androidx.recyclerview.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
# {"id":"sourceFile","fileName":"AdapterHelper.java"}
    72:72:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:78:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:432:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:130:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:613:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:183:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:223:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:422:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:124:void consumePostponedUpdates() -> consumePostponedUpdates
    557:584:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:302:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:324:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:493:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:734:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    519:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    439:455:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:115:void preProcess() -> preProcess
    741:743:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:752:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:89:void reset() -> reset
    330:404:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$Callback -> androidx.recyclerview.widget.AdapterHelper$Callback:
# {"id":"sourceFile","fileName":"AdapterHelper.java"}
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
# {"id":"sourceFile","fileName":"AdapterHelper.java"}
    651:655:void <init>(int,int,int,java.lang.Object) -> <init>
    659:659:java.lang.String cmdToString() -> cmdToString
    684:709:boolean equals(java.lang.Object) -> equals
    718:720:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
# {"id":"sourceFile","fileName":"ChildHelper.java"}
    48:51:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:85:void addView(android.view.View,boolean) -> addView
    99:107:void addView(android.view.View,int,boolean) -> addView
    231:239:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:284:void detachViewFromParent(int) -> detachViewFromParent
    206:212:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    117:123:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:336:void hide(android.view.View) -> hide
    60:61:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:193:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:147:void removeView(android.view.View) -> removeView
    160:168:void removeViewAt(int) -> removeViewAt
    373:386:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:358:void unhide(android.view.View) -> unhide
    70:71:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
# {"id":"sourceFile","fileName":"ChildHelper.java"}
    395:401:void <init>() -> <init>
    422:426:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:416:void ensureNext() -> ensureNext
    433:436:boolean get(int) -> get
    449:464:void insert(int,boolean) -> insert
    471:486:boolean remove(int) -> remove
    441:443:void reset() -> reset
    407:410:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper$Callback -> androidx.recyclerview.widget.ChildHelper$Callback:
# {"id":"sourceFile","fileName":"ChildHelper.java"}
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    38:55:void <init>() -> <init>
    222:224:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:251:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    324:343:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:395:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:273:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:315:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:194:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:217:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:642:void cancelAll(java.util.List) -> cancelAll
    550:551:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:518:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:637:void endAnimations() -> endAnimations
    400:404:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:415:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    420:431:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:526:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:186:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:129:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:152:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:175:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:215:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:206:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:241:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:249:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:236:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:304:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:313:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:295:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:372:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:361:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:393:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:383:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    73:75:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:84:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
# {"id":"sourceFile","fileName":"DefaultItemAnimator.java"}
    61:66:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    74:75:void <clinit>() -> <clinit>
    104:160:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:172:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:258:void cancelHide() -> cancelHide
    183:186:void destroyCallbacks() -> destroyCallbacks
    316:328:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:311:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:543:int[] getHorizontalRange() -> getHorizontalRange
    533:534:int[] getVerticalRange() -> getVerticalRange
    244:252:void hide(int) -> hide
    461:474:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    268:285:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:394:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    0:0:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    409:437:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:191:void requestRedraw() -> requestRedraw
    262:263:void resetHideDelay(int) -> resetHideDelay
    479:479:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:212:void setState(int) -> setState
    177:179:void setupCallbacks() -> setupCallbacks
    228:237:void show() -> show
    339:373:void updateScrollPosition(int,int) -> updateScrollPosition
    446:457:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:126:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:134:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    549:551:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:572:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:566:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
# {"id":"sourceFile","fileName":"FastScroller.java"}
    577:577:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:585:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:163:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:261:void buildTaskList() -> buildTaskList
    344:351:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:362:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:270:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:187:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:368:void prefetch(long) -> prefetch
    316:339:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:306:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:167:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:404:void run() -> run
    403:404:void run() -> run
    404:405:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:208:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    113:135:void addPosition(int,int) -> addPosition
    152:155:void clearPrefetchPositions() -> clearPrefetchPositions
    79:105:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:142:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:75:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
# {"id":"sourceFile","fileName":"GapWorker.java"}
    46:50:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    44:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    44:99:void <init>(android.content.Context,int,int,boolean) -> <init>
    786:789:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    189:194:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    314:314:void calculateItemBorders(int) -> calculateItemBorders
    325:342:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    184:185:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    515:522:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1213:1216:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1195:1198:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1304:1342:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1271:1295:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1222:1225:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1204:1207:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    393:414:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    368:369:void ensureViewSet() -> ensureViewSet
    421:441:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    348:352:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    801:801:int getSpanCount() -> getSpanCount
    455:467:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    471:488:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    492:509:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    275:275:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    750:752:void guessMeasurement(float,int) -> guessMeasurement
    530:703:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    716:736:void measureChild(android.view.View,int,boolean) -> measureChild
    757:765:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    359:364:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1068:1181:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    147:161:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:201:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:207:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:226:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:213:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:220:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    167:174:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    179:180:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    290:307:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    814:824:void setSpanCount(int) -> setSpanCount
    266:266:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    109:113:void setStackFromEnd(boolean) -> setStackFromEnd
    1190:1190:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    280:285:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    1348:1348:void <init>() -> <init>
    1357:1357:int getSpanIndex(int,int) -> getSpanIndex
    0:0:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    1375:1380:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1375:1384:void <init>(int,int) -> <init>
    1375:1388:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1375:1392:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1414:1414:int getSpanIndex() -> getSpanIndex
    1424:1424:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
# {"id":"sourceFile","fileName":"GridLayoutManager.java"}
    834:840:void <init>() -> <init>
    998:1013:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    930:938:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    917:925:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1032:1047:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    966:981:int getSpanIndex(int,int) -> getSpanIndex
    895:895:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    887:887:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
# {"id":"sourceFile","fileName":"LayoutState.java"}
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:99:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    159:159:void <init>(android.content.Context) -> <init>
    67:171:void <init>(android.content.Context,int,boolean) -> <init>
    67:187:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1409:1410:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    488:496:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    295:295:boolean canScrollHorizontally() -> canScrollHorizontally
    303:303:boolean canScrollVertically() -> canScrollVertically
    1368:1378:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1288:1308:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1277:1279:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1143:1143:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1133:1133:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1153:1153:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1173:1179:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1162:1168:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1184:1190:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    510:518:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1148:1148:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1138:1138:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1158:1158:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1718:1743:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1051:1051:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1040:1041:void ensureLayoutState() -> ensureLayoutState
    1572:1622:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1897:1897:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1845:1845:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    1801:1805:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1783:1787:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1923:1924:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1901:1901:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    1849:1849:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    1963:1964:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2012:2034:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1990:2007:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1885:1886:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1892:1893:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1855:1870:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1823:1824:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1840:1841:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    407:420:android.view.View findViewByPosition(int) -> findViewByPosition
    961:974:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    986:999:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1771:1771:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1761:1761:android.view.View getChildClosestToStart() -> getChildClosestToStart
    447:448:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    330:330:int getOrientation() -> getOrientation
    0:0:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    1036:1036:boolean isLayoutRTL() -> isLayoutRTL
    1223:1223:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1627:1695:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    755:801:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    0:0:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    234:237:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2041:2075:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    243:246:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    537:717:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    725:729:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    279:281:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    252:272:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1546:1554:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1429:1433:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1502:1527:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1462:1479:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1271:1272:boolean resolveIsInfinite() -> resolveIsInfinite
    362:365:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1382:1403:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1113:1116:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1070:1075:void scrollToPosition(int) -> scrollToPosition
    1125:1128:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    341:351:void setOrientation(int) -> setOrientation
    394:399:void setReverseLayout(boolean) -> setReverseLayout
    310:315:void setStackFromEnd(boolean) -> setStackFromEnd
    1700:1702:boolean shouldMeasureTwice() -> shouldMeasureTwice
    502:505:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2150:2150:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    834:862:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    875:950:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    806:823:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1229:1267:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1007:1007:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1011:1017:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1021:1021:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1025:1031:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2453:2454:void <init>() -> <init>
    2469:2471:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2538:2545:void assignFromView(android.view.View,int) -> assignFromView
    2491:2531:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2485:2487:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2458:2461:void reset() -> reset
    2476:2476:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2556:2559:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2193:2279:void <init>() -> <init>
    2332:2332:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2336:2341:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2290:2290:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2300:2304:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2316:2324:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2346:2358:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2429:2429:void <clinit>() -> <clinit>
    2393:2393:void <init>() -> <init>
    2397:2400:void <init>(android.os.Parcel) -> <init>
    2403:2406:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    0:0:int describeContents() -> describeContents
    2410:2410:boolean hasValidAnchor() -> hasValidAnchor
    2414:2414:void invalidateAnchor() -> invalidateAnchor
    2424:2426:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2430:2430:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2433:2433:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2430:2430:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
# {"id":"sourceFile","fileName":"LinearSmoothScroller.java"}
    79:94:void <init>(android.content.Context) -> <init>
    296:296:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    339:349:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    314:324:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    191:191:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    205:205:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    0:0:int clampApplyScroll(int,int) -> clampApplyScroll
    218:218:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    170:174:float getSpeedPerPixel() -> getSpeedPerPixel
    232:232:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:141:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    0:0:void onStart() -> onStart
    151:152:void onStop() -> onStop
    110:115:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    244:260:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
# {"id":"sourceFile","fileName":"OpReorderer.java"}
    25:26:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    214:216:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:34:void reorderOps(java.util.List) -> reorderOps
    157:171:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:49:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    61:149:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    179:208:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OpReorderer$Callback -> androidx.recyclerview.widget.OpReorderer$Callback:
# {"id":"sourceFile","fileName":"OpReorderer.java"}
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
# {"id":"sourceFile","fileName":"OrientationHelper.java"}
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:47:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    243:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:64:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
# {"id":"sourceFile","fileName":"OrientationHelper.java"}
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    298:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    282:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    290:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    305:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:271:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
# {"id":"sourceFile","fileName":"OrientationHelper.java"}
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    396:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    380:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    388:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    403:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:369:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
# {"id":"sourceFile","fileName":"PagerSnapHelper.java"}
    38:38:void <init>() -> <init>
    52:61:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    169:172:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    199:201:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    217:230:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    71:74:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    82:137:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    263:266:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    243:246:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getOrientationHelper
    254:257:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    147:147:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> isForwardFling
    155:161:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> isReverseLayout
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
# {"id":"sourceFile","fileName":"PagerSnapHelper.java"}
    172:172:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    187:187:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    192:192:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    175:181:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    219:598:void <clinit>() -> <clinit>
    646:646:void <init>(android.content.Context) -> <init>
    650:650:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    365:725:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2604:2628:void absorbGlows(int,int) -> absorbGlows
    210:210:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    210:210:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    210:210:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    210:210:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1431:1440:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2943:2944:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1568:1581:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1597:1597:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1273:1276:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    3079:3079:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1706:1709:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4363:4365:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4381:4397:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4371:4374:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3048:3061:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4674:4675:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3443:3444:void cancelScroll() -> cancelScroll
    4500:4500:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5851:5865:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4554:4561:void clearOldPositions() -> clearOldPositions
    2024:2027:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1999:2002:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2047:2050:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2096:2099:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2072:2075:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2119:2122:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2581:2598:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1865:1898:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    783:827:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3606:3613:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4327:4328:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7553:7561:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7538:7546:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3675:3681:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3837:3862:void dispatchLayout() -> dispatchLayout
    4033:4117:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4125:4143:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4151:4234:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11601:11601:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11606:11606:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11589:11589:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11595:11595:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11569:11569:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11583:11583:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5196:5210:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5154:5176:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11480:11493:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    3741:3741:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1419:1419:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1411:1411:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3118:3127:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4429:4484:void draw(android.graphics.Canvas) -> draw
    5030:5030:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2673:2681:void ensureBottomGlow() -> ensureBottomGlow
    2633:2641:void ensureLeftGlow() -> ensureLeftGlow
    2646:2654:void ensureRightGlow() -> ensureRightGlow
    2659:2667:void ensureTopGlow() -> ensureTopGlow
    733:736:java.lang.String exceptionLabel() -> exceptionLabel
    4015:4021:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    4792:4795:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4810:4811:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3147:3152:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4301:4323:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5829:5839:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3902:3922:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4924:4934:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4986:4994:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4946:4958:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2438:2481:boolean fling(int,int) -> fling
    2748:2822:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4505:4508:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4513:4516:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4521:4524:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    0:0:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1226:1226:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11497:11502:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1253:1256:int getBaseline() -> getBaseline
    4358:4358:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    13465:13468:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4853:4854:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4769:4774:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4819:4819:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1099:1099:boolean getClipToPadding() -> getClipToPadding
    759:759:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5096:5101:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4003:4008:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2713:2713:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    835:841:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3756:3756:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5105:5125:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1623:1623:int getItemDecorationCount() -> getItemDecorationCount
    1474:1474:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2523:2523:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2513:2513:int getMinFlingVelocity() -> getMinFlingVelocity
    5876:5877:long getNanoTime() -> getNanoTime
    1375:1375:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4741:4741:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1487:1487:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1535:1535:int getScrollState() -> getScrollState
    13495:13498:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4255:4281:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    11558:11558:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    5229:5230:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1906:1912:boolean hasUpdatedView() -> hasUpdatedView
    968:968:void initAdapterManager() -> initAdapterManager
    747:748:void initAutofill() -> initAutofill
    845:845:void initChildrenHelper() -> initChildrenHelper
    11511:11521:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2686:2686:void invalidateGlows() -> invalidateGlows
    3671:3671:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    3019:3019:boolean isAttachedToWindow() -> isAttachedToWindow
    3705:3705:boolean isComputingLayout() -> isComputingLayout
    2242:2242:boolean isLayoutSuppressed() -> isLayoutSuppressed
    11533:11533:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2838:2888:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1755:1763:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4419:4424:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4702:4710:void markKnownViewsInvalid() -> markKnownViewsInvalid
    5078:5080:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5040:5042:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4599:4612:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4565:4595:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4618:4642:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2960:2988:void onAttachedToWindow() -> onAttachedToWindow
    0:0:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    0:0:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    2994:3010:void onDetachedFromWindow() -> onDetachedFromWindow
    4490:4494:void onDraw(android.graphics.Canvas) -> onDraw
    3648:3648:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3652:3652:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3656:3665:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3460:3501:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3161:3265:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4403:4406:void onLayout(boolean,int,int,int,int) -> onLayout
    3510:3595:void onMeasure(int,int) -> onMeasure
    3448:3454:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2950:2955:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1394:1402:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1380:1386:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    0:0:void onScrollStateChanged(int) -> onScrollStateChanged
    0:0:void onScrolled(int,int) -> onScrolled
    3618:3620:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3280:3429:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3764:3766:void postAnimationRunner() -> postAnimationRunner
    3771:3771:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3781:3808:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4692:4694:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2532:2552:void pullGlows(float,float,float,float) -> pullGlows
    4291:4297:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3929:3998:void recoverFocusFromState() -> recoverFocusFromState
    2558:2575:void releaseGlows() -> releaseGlows
    1171:1183:void removeAndRecycleViews() -> removeAndRecycleViews
    1451:1462:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4334:4350:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1650:1659:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    3088:3090:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1718:1719:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5513:5524:void repositionShadowingViews() -> repositionShadowingViews
    2893:2896:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2910:2932:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2938:2938:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3270:3275:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4411:4414:void requestLayout() -> requestLayout
    3887:3889:void resetFocusInfo() -> resetFocusInfo
    3435:3439:void resetScroll() -> resetScroll
    3867:3882:void saveFocusInfo() -> saveFocusInfo
    4540:4548:void saveOldPositions() -> saveOldPositions
    1801:1812:void scrollBy(int,int) -> scrollBy
    1936:1974:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1829:1852:void scrollStep(int,int,int[]) -> scrollStep
    0:0:void scrollTo(int,int) -> scrollTo
    1741:1751:void scrollToPosition(int) -> scrollToPosition
    3733:3736:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    768:769:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1160:1163:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1197:1215:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1676:1680:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11470:11475:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1075:1081:void setClipToPadding(boolean) -> setClipToPadding
    2699:2701:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1062:1062:void setHasFixedSize(boolean) -> setHasFixedSize
    3637:3643:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1525:1525:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2271:2271:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1315:1353:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2311:2313:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    11528:11528:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1365:1365:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1693:1693:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4759:4759:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1499:1499:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    0:0:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1539:1550:void setScrollState(int) -> setScrollState
    1112:1123:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1510:1510:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3717:3725:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2326:2326:void smoothScrollBy(int,int) -> smoothScrollBy
    2338:2338:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2356:2356:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2390:2419:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1782:1790:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2137:2139:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11538:11538:boolean startNestedScroll(int) -> startNestedScroll
    11543:11543:boolean startNestedScroll(int,int) -> startNestedScroll
    2154:2184:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11548:11548:void stopNestedScroll() -> stopNestedScroll
    11553:11553:void stopNestedScroll(int) -> stopNestedScroll
    2493:2494:void stopScroll() -> stopScroll
    2501:2503:void stopScrollersInternal() -> stopScrollersInternal
    2214:2229:void suppressLayout(boolean) -> suppressLayout
    4652:4670:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$$ExternalSyntheticApiModelOutline0 -> androidx.recyclerview.widget.RecyclerView$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.recyclerview.widget.RecyclerView$$InternalSyntheticApiModelOutline$1$ffd3dfe80ecf4ffd6be64ce40e82c97b3611b461238933d3f8e1ab3f86ddfb87$0.m(androidx.recyclerview.widget.RecyclerView,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    398:398:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    401:414:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    588:588:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    591:594:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    0:0:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    610:610:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    620:620:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    614:615:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    626:636:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    641:641:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    845:845:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    856:860:void addView(android.view.View,int) -> addView
    916:927:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    932:946:void detachViewFromParent(int) -> detachViewFromParent
    890:890:android.view.View getChildAt(int) -> getChildAt
    848:848:int getChildCount() -> getChildCount
    910:910:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    865:865:int indexOfChild(android.view.View) -> indexOfChild
    951:953:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    959:961:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    895:905:void removeAllViews() -> removeAllViews
    870:882:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    968:968:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1013:1025:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    971:977:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1003:1004:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1037:1038:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1043:1045:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    988:990:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    996:997:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1009:1009:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1032:1032:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    6984:6986:void <init>() -> <init>
    7099:7113:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    7077:7087:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7087:7088:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    0:0:long getItemId(int) -> getItemId
    0:0:int getItemViewType(int) -> getItemViewType
    7267:7267:boolean hasObservers() -> hasObservers
    7175:7175:boolean hasStableIds() -> hasStableIds
    7354:7354:void notifyDataSetChanged() -> notifyDataSetChanged
    7464:7464:void notifyItemInserted(int) -> notifyItemInserted
    0:0:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    7065:7065:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    0:0:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    0:0:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    0:0:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    0:0:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7287:7287:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7141:7145:void setHasStableIds(boolean) -> setHasStableIds
    7301:7301:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12242:12242:void <init>() -> <init>
    12244:12244:boolean hasObservers() -> hasObservers
    12252:12253:void notifyChanged() -> notifyChanged
    12277:12278:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback -> androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    5623:5623:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12728:12791:void <init>() -> <init>
    13113:13119:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13332:13332:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    13197:13199:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13340:13344:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12817:12817:long getAddDuration() -> getAddDuration
    12853:12853:long getChangeDuration() -> getChangeDuration
    12799:12799:long getMoveDuration() -> getMoveDuration
    12835:12835:long getRemoveDuration() -> getRemoveDuration
    13358:13358:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    0:0:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    12942:12942:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12913:12913:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12874:12874:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    13425:13425:void <init>() -> <init>
    13437:13437:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13453:13457:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12686:12686:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12691:12700:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    10757:10757:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10782:10782:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    0:0:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    10716:10716:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    0:0:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
    10738:10738:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    7582:7688:void <init>() -> <init>
    8518:8518:void addDisappearingView(android.view.View) -> addDisappearingView
    8536:8536:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8547:8547:void addView(android.view.View) -> addView
    8559:8559:void addView(android.view.View,int) -> addView
    8563:8612:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7897:7898:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8804:8810:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8825:8825:void attachView(android.view.View,int) -> attachView
    9707:9712:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    0:0:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    7876:7885:int chooseSize(int,int,int) -> chooseSize
    0:0:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    9192:9195:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8784:8784:void detachViewAt(int) -> detachViewAt
    8791:8791:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8113:8114:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8118:8119:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8703:8710:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8731:8739:android.view.View findViewByPosition(int) -> findViewByPosition
    8347:8352:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8371:8371:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    0:0:int getBaseline() -> getBaseline
    9742:9742:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8933:8933:android.view.View getChildAt(int) -> getChildAt
    8923:8923:int getChildCount() -> getChildCount
    9446:9487:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9835:9864:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8230:8230:boolean getClipToPadding() -> getClipToPadding
    10528:10531:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9686:9686:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9638:9638:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9650:9650:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9514:9515:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9500:9501:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9674:9674:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9662:9662:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9089:9093:android.view.View getFocusedChild() -> getFocusedChild
    8999:8999:int getHeight() -> getHeight
    8967:8967:int getHeightMode() -> getHeightMode
    9112:9113:int getItemCount() -> getItemCount
    8489:8489:int getLayoutDirection() -> getLayoutDirection
    9757:9757:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10283:10283:int getMinimumHeight() -> getMinimumHeight
    10275:10275:int getMinimumWidth() -> getMinimumWidth
    9039:9039:int getPaddingBottom() -> getPaddingBottom
    9009:9009:int getPaddingLeft() -> getPaddingLeft
    9029:9029:int getPaddingRight() -> getPaddingRight
    9019:9019:int getPaddingTop() -> getPaddingTop
    8673:8673:int getPosition(android.view.View) -> getPosition
    10635:10643:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9772:9772:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10508:10511:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    0:0:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    9727:9727:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9606:9627:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8983:8983:int getWidth() -> getWidth
    8950:8950:int getWidthMode() -> getWidthMode
    10669:10673:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    8130:8130:boolean isAttachedToWindow() -> isAttachedToWindow
    9966:9977:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8058:8058:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    0:0:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9340:9341:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8477:8477:boolean isSmoothScrolling() -> isSmoothScrolling
    9946:9948:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9585:9587:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9369:9384:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8856:8862:void moveView(int,int) -> moveView
    9123:9124:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9135:9136:void offsetChildrenVertical(int) -> offsetChildrenVertical
    0:0:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    0:0:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    0:0:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    0:0:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    8221:8221:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    10397:10397:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10413:10422:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10348:10348:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10378:10392:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10428:10431:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10453:10458:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    0:0:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    0:0:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    0:0:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    0:0:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    0:0:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    0:0:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    10120:10120:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    0:0:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    10256:10256:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9991:9991:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10013:10013:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    0:0:void onScrollStateChanged(int) -> onScrollStateChanged
    10312:10313:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10550:10550:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10566:10591:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    0:0:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10598:10598:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10338:10341:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9228:9253:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8900:8901:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8911:8913:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8164:8165:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8625:8625:void removeView(android.view.View) -> removeView
    8637:8639:void removeViewAt(int) -> removeViewAt
    9886:9886:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9906:9915:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7847:7848:void requestLayout() -> requestLayout
    10472:10472:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9200:9214:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    10648:10650:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    7757:7766:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7836:7840:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10267:10267:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7784:7812:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    7742:7753:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9307:9310:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    0:0:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9293:9295:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8465:8470:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    10306:10307:void stopSmoothScroller() -> stopSmoothScroller
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    7591:7591:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7594:7594:android.view.View getChildAt(int) -> getChildAt
    7617:7618:int getChildEnd(android.view.View) -> getChildEnd
    7610:7611:int getChildStart(android.view.View) -> getChildStart
    7604:7604:int getParentEnd() -> getParentEnd
    7599:7599:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    7627:7627:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7630:7630:android.view.View getChildAt(int) -> getChildAt
    7654:7655:int getChildEnd(android.view.View) -> getChildEnd
    7647:7648:int getChildStart(android.view.View) -> getChildStart
    7640:7641:int getParentEnd() -> getParentEnd
    7635:7635:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    11617:11625:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11617:11629:void <init>(int,int) -> <init>
    11617:11633:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11617:11637:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11617:11641:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11701:11701:int getViewLayoutPosition() -> getViewLayoutPosition
    11683:11683:boolean isItemChanged() -> isItemChanged
    11672:11672:boolean isItemRemoved() -> isItemRemoved
    11661:11661:boolean isViewInvalid() -> isViewInvalid
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener -> androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$OnItemTouchListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    0:0:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    5635:5660:void <init>() -> <init>
    5782:5782:void attach() -> attach
    5666:5668:void clear() -> clear
    5786:5786:void detach() -> detach
    5766:5767:void factorInBindTime(int,long) -> factorInBindTime
    5760:5761:void factorInCreateTime(int,long) -> factorInCreateTime
    5704:5709:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5815:5818:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5804:5810:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5740:5749:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5756:5756:long runningAverage(long,long) -> runningAverage
    5777:5777:boolean willBindInTime(int,long,long) -> willBindInTime
    5772:5772:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    5652:5656:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    5896:5906:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6524:6541:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6299:6316:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    5919:5920:void clear() -> clear
    6911:6923:void clearOldPositions() -> clearOldPositions
    6612:6614:void clearScrap() -> clearScrap
    6088:6095:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6765:6772:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6621:6640:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    6869:6872:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6604:6604:int getScrapCount() -> getScrapCount
    5951:5951:java.util.List getScrapList() -> getScrapList
    6712:6755:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6657:6698:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6608:6608:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6114:6114:android.view.View getViewForPosition(int) -> getViewForPosition
    6118:6118:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6321:6322:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6327:6343:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    6929:6934:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    6895:6906:void markKnownViewsInvalid() -> markKnownViewsInvalid
    6813:6821:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6794:6803:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    6834:6848:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6779:6780:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6550:6554:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6390:6396:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6415:6420:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6360:6385:void recycleView(android.view.View) -> recycleView
    6429:6511:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6567:6582:void scrapView(android.view.View) -> scrapView
    6859:6864:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    0:0:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    5929:5930:void setViewCacheSize(int) -> setViewCacheSize
    6004:6017:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6142:6294:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6593:6600:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    5934:5940:void updateViewCacheSize() -> updateViewCacheSize
    5965:5984:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    6877:6887:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerListener -> androidx.recyclerview.widget.RecyclerView$RecyclerListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    5531:5531:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5536:5541:void onChanged() -> onChanged
    5555:5557:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5578:5582:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12334:12334:void <clinit>() -> <clinit>
    12312:12314:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12321:12321:void <init>(android.os.Parcelable) -> <init>
    12331:12331:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12326:12327:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12337:12337:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12342:12342:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object[] newArray(int) -> newArray
    12347:12347:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    11760:11777:void <init>() -> <init>
    11835:11841:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    11972:11972:android.view.View findViewByPosition(int) -> findViewByPosition
    11965:11965:int getChildCount() -> getChildCount
    11958:11958:int getChildPosition(android.view.View) -> getChildPosition
    11851:11851:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    11903:11903:int getTargetPosition() -> getTargetPosition
    11885:11885:boolean isPendingInitialRun() -> isPendingInitialRun
    11893:11893:boolean isRunning() -> isRunning
    11998:12001:void normalize(android.graphics.PointF) -> normalize
    11907:11948:void onAnimation(int,int) -> onAnimation
    11985:11986:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    11820:11820:void setTargetPosition(int) -> setTargetPosition
    11795:11816:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    11861:11874:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12070:12070:void <init>(int,int) -> <init>
    12055:12094:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12117:12117:boolean hasJumpTarget() -> hasJumpTarget
    12113:12113:void jumpTo(int) -> jumpTo
    12121:12140:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    12208:12212:void update(int,int,int,android.view.animation.Interpolator) -> update
    12145:12149:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12362:12433:void <init>() -> <init>
    12368:12371:void assertLayoutStep(int) -> assertLayoutStep
    12611:12611:int getItemCount() -> getItemCount
    12566:12566:int getTargetScrollPosition() -> getTargetScrollPosition
    12575:12575:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12490:12490:boolean isPreLayout() -> isPreLayout
    12459:12463:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12640:12640:java.lang.String toString() -> toString
    12501:12501:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    5238:5247:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5483:5501:int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    5479:5479:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    5416:5427:void fling(int,int) -> fling
    5411:5412:void internalPostOnAnimation() -> internalPostOnAnimation
    5403:5406:void postOnAnimation() -> postOnAnimation
    5252:5398:void run() -> run
    5446:5473:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5505:5506:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    11059:11059:void <clinit>() -> <clinit>
    10953:11090:void <init>(android.view.View) -> <init>
    11301:11304:void addChangePayload(java.lang.Object) -> addChangePayload
    11296:11296:void addFlags(int) -> addFlags
    11116:11117:void clearOldPosition() -> clearOldPosition
    11316:11319:void clearPayload() -> clearPayload
    11243:11243:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    11247:11247:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11309:11311:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11456:11456:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11094:11096:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11192:11195:int getAdapterPosition() -> getAdapterPosition
    11220:11220:long getItemId() -> getItemId
    11227:11227:int getItemViewType() -> getItemViewType
    11166:11166:int getLayoutPosition() -> getLayoutPosition
    11210:11210:int getOldPosition() -> getOldPosition
    11140:11140:int getPosition() -> getPosition
    11323:11332:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11276:11276:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11288:11288:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11284:11284:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    11268:11268:boolean isBound() -> isBound
    11260:11260:boolean isInvalid() -> isInvalid
    11439:11440:boolean isRecyclable() -> isRecyclable
    11272:11272:boolean isRemoved() -> isRemoved
    11231:11231:boolean isScrap() -> isScrap
    11280:11280:boolean isTmpDetached() -> isTmpDetached
    11460:11460:boolean isUpdated() -> isUpdated
    11264:11264:boolean needsUpdate() -> needsUpdate
    11100:11111:void offsetPosition(int,boolean) -> offsetPosition
    11356:11362:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11370:11372:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11337:11348:void resetInternal() -> resetInternal
    11121:11122:void saveOldPosition() -> saveOldPosition
    11292:11292:void setFlags(int,int) -> setFlags
    11414:11426:void setIsRecyclable(boolean) -> setIsRecyclable
    11255:11256:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11448:11448:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11127:11127:boolean shouldIgnore() -> shouldIgnore
    11251:11251:void stopIgnoring() -> stopIgnoring
    11378:11397:java.lang.String toString() -> toString
    11235:11235:void unScrap() -> unScrap
    11239:11239:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
# {"id":"sourceFile","fileName":"RecyclerViewAccessibilityDelegate.java"}
    44:50:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:84:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:74:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:64:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
# {"id":"sourceFile","fileName":"RecyclerViewAccessibilityDelegate.java"}
    112:120:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    223:227:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:154:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:216:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    128:130:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    179:183:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:194:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
# {"id":"sourceFile","fileName":"ScrollbarHelper.java"}
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
# {"id":"sourceFile","fileName":"SimpleItemAnimator.java"}
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:141:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:302:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:344:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:317:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:357:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:292:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:335:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:277:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:326:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    0:0:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    0:0:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    0:0:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    0:0:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    0:0:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    0:0:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    0:0:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    0:0:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
# {"id":"sourceFile","fileName":"SnapHelper.java"}
    34:42:void <init>() -> <init>
    93:104:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    209:209:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    123:124:void destroyCallbacks() -> destroyCallbacks
    65:75:boolean onFling(int,int) -> onFling
    112:116:void setupCallbacks() -> setupCallbacks
    157:172:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    182:195:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
# {"id":"sourceFile","fileName":"SnapHelper.java"}
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:51:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    58:58:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    107:235:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1806:1807:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    786:817:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1865:1867:boolean areAllEndsEqual() -> areAllEndsEqual
    1875:1877:boolean areAllStartsEqual() -> areAllStartsEqual
    528:529:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1750:1760:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2043:2047:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2027:2027:boolean canScrollHorizontally() -> canScrollHorizontally
    2022:2022:boolean canScrollVertically() -> canScrollVertically
    270:310:boolean checkForGaps() -> checkForGaps
    2273:2273:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    403:414:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2123:2153:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1097:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1072:1077:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1112:1117:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2052:2062:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2394:2419:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1732:1735:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1741:1744:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    258:260:void createOrientationHelpers() -> createOrientationHelpers
    1575:1728:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2218:2221:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1387:1393:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1357:1364:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1327:1329:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2235:2237:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1411:1424:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1430:1443:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2248:2252:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2259:2259:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2264:2267:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1344:1347:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2208:2209:int getFirstChildPosition() -> getFirstChildPosition
    2203:2204:int getLastChildPosition() -> getLastChildPosition
    1885:1887:int getMaxEnd(int) -> getMaxEnd
    1843:1845:int getMaxStart(int) -> getMaxStart
    1896:1898:int getMinEnd(int) -> getMinEnd
    1854:1856:int getMinStart(int) -> getMinStart
    1980:2010:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1335:1338:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    1531:1569:void handleUpdate(int,int,int) -> handleUpdate
    340:392:android.view.View hasGapsToFix() -> hasGapsToFix
    549:550:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1128:1182:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1193:1203:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1486:1488:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1494:1496:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:330:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2284:2372:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1302:1316:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1296:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1507:1507:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1512:1513:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1518:1518:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1502:1502:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1524:1524:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:605:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    611:720:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    726:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1224:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1272:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    317:317:void onScrollStateChanged(int) -> onScrollStateChanged
    1970:1973:boolean preferLastSpan(int) -> preferLastSpan
    2162:2171:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1813:1814:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1766:1798:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1936:1959:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1907:1928:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    734:776:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    560:563:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2175:2198:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2033:2033:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2077:2082:void scrollToPosition(int) -> scrollToPosition
    2039:2039:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1479:1480:void setLayoutStateDirection(int) -> setLayoutStateDirection
    587:600:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    450:460:void setOrientation(int) -> setOrientation
    477:482:void setReverseLayout(boolean) -> setReverseLayout
    429:438:void setSpanCount(int) -> setSpanCount
    2070:2072:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1819:1823:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    840:843:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    849:921:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    822:832:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1448:1475:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    927:930:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1828:1837:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1212:1215:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:219:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3267:3268:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3294:3295:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3299:3302:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3272:3278:void reset() -> reset
    3283:3289:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    2450:2450:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2454:2454:void <init>(int,int) -> <init>
    2458:2458:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2462:2462:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2498:2501:int getSpanIndex() -> getSpanIndex
    2488:2488:boolean isFullSpan() -> isFullSpan
    2478:2478:void setFullSpan(boolean) -> setFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3007:3026:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2915:2918:void clear() -> clear
    2903:2910:void ensureSize(int) -> ensureSize
    2849:2857:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3051:3060:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3030:3035:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2882:2885:int getSpan(int) -> getSpan
    2864:2876:int invalidateAfter(int) -> invalidateAfter
    2981:3001:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2952:2960:void offsetForAddition(int,int) -> offsetForAddition
    2922:2930:void offsetForRemoval(int,int) -> offsetForRemoval
    2964:2972:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2934:2946:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2890:2891:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2895:2895:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3129:3129:void <clinit>() -> <clinit>
    3083:3090:void <init>(android.os.Parcel) -> <init>
    3094:3094:void <init>() -> <init>
    0:0:int describeContents() -> describeContents
    3098:3098:int getGapForSpan(int) -> getGapForSpan
    3121:3125:java.lang.String toString() -> toString
    3108:3115:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3130:3130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3133:3133:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3130:3130:java.lang.Object[] newArray(int) -> newArray
    3138:3138:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3239:3239:void <clinit>() -> <clinit>
    3162:3162:void <init>() -> <init>
    3165:3185:void <init>(android.os.Parcel) -> <init>
    3188:3198:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    0:0:int describeContents() -> describeContents
    3210:3213:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3202:3206:void invalidateSpanInfo() -> invalidateSpanInfo
    3223:3236:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3240:3240:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3243:3243:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3240:3240:java.lang.Object[] newArray(int) -> newArray
    3248:3248:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    2509:2516:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2600:2608:void appendToSpan(android.view.View) -> appendToSpan
    2616:2631:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2565:2572:void calculateCachedEnd() -> calculateCachedEnd
    2531:2538:void calculateCachedStart() -> calculateCachedStart
    2635:2637:void clear() -> clear
    2700:2702:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2718:2720:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2756:2779:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2793:2793:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2677:2677:int getDeletedSize() -> getDeletedSize
    2553:2561:int getEndLine(int) -> getEndLine
    2579:2583:int getEndLine() -> getEndLine
    2803:2823:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2681:2681:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2520:2527:int getStartLine(int) -> getStartLine
    2545:2549:int getStartLine() -> getStartLine
    2641:2642:void invalidateCache() -> invalidateCache
    2685:2689:void onOffset(int) -> onOffset
    2650:2660:void popEnd() -> popEnd
    2664:2673:void popStart() -> popStart
    2587:2595:void prependToSpan(android.view.View) -> prependToSpan
    2646:2646:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
# {"id":"sourceFile","fileName":"ViewBoundsCheck.java"}
    131:133:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:233:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:253:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
# {"id":"sourceFile","fileName":"ViewBoundsCheck.java"}
    136:137:void <init>() -> <init>
    148:148:void addFlags(int) -> addFlags
    166:185:boolean boundsMatch() -> boundsMatch
    0:0:int compare(int,int) -> compare
    152:152:void resetFlags() -> resetFlags
    141:144:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewBoundsCheck$Callback -> androidx.recyclerview.widget.ViewBoundsCheck$Callback:
# {"id":"sourceFile","fileName":"ViewBoundsCheck.java"}
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
# {"id":"sourceFile","fileName":"ViewInfoStore.java"}
    36:47:void <init>() -> <init>
    145:151:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:203:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:132:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:188:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:70:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:55:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:273:void onDetach() -> onDetach
    277:277:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:119:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:251:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:215:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:268:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
# {"id":"sourceFile","fileName":"ViewInfoStore.java"}
    307:307:void <clinit>() -> <clinit>
    309:309:void <init>() -> <init>
    326:326:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:321:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback -> androidx.recyclerview.widget.ViewInfoStore$ProcessCallback:
# {"id":"sourceFile","fileName":"ViewInfoStore.java"}
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    0:0:void <clinit>() -> <clinit>
    24:25:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    29:42:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    48:70:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$Companion -> androidx.savedstate.Recreator$Companion:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
# {"id":"sourceFile","fileName":"Recreator.kt"}
    73:79:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    89:89:void add(java.lang.String) -> add
    83:84:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
    0:0:void $r8$lambda$fqOml4yVknvVr08QjHEXC_isf3A(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> $r8$lambda$fqOml4yVknvVr08QjHEXC_isf3A
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    48:48:void setAllowingSavingState$savedstate_release(boolean) -> <init>
    48:48:void <init>():48 -> <init>
    72:80:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    128:129:androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String) -> getSavedStateProvider
    202:205:void performAttach$lambda-4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> performAttach$lambda-4
    199:208:void performAttach$savedstate_release(androidx.lifecycle.Lifecycle) -> performAttach$savedstate_release
    217:224:void performRestore$savedstate_release(android.os.Bundle) -> performRestore$savedstate_release
    239:250:void performSave(android.os.Bundle) -> performSave
    109:110:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    180:190:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0 -> androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$1$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.f$0 -> f$0
    0:0:void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$1$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.<init>(androidx.savedstate.SavedStateRegistry) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$1$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.savedstate.SavedStateRegistry$AutoRecreated -> androidx.savedstate.SavedStateRegistry$AutoRecreated:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
androidx.savedstate.SavedStateRegistry$Companion -> androidx.savedstate.SavedStateRegistry$Companion:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> androidx.savedstate.SavedStateRegistry$SavedStateProvider:
# {"id":"sourceFile","fileName":"SavedStateRegistry.kt"}
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
# {"id":"sourceFile","fileName":"SavedStateRegistryController.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(androidx.savedstate.SavedStateRegistryOwner,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    28:33:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    0:0:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    33:33:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    44:50:void performAttach() -> performAttach
    62:69:void performRestore(android.os.Bundle) -> performRestore
    81:81:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.SavedStateRegistryController$Companion -> androidx.savedstate.SavedStateRegistryController$Companion:
# {"id":"sourceFile","fileName":"SavedStateRegistryController.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    92:92:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
androidx.savedstate.SavedStateRegistryOwner -> androidx.savedstate.SavedStateRegistryOwner:
# {"id":"sourceFile","fileName":"SavedStateRegistryOwner.kt"}
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
# {"id":"sourceFile","fileName":"ViewTreeSavedStateRegistryOwner.kt"}
    41:41:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.slidingpanelayout.widget.FoldingFeatureObserver -> androidx.slidingpanelayout.widget.FoldingFeatureObserver:
# {"id":"sourceFile","fileName":"FoldingFeatureObserver.kt"}
    36:36:androidx.slidingpanelayout.widget.FoldingFeatureObserver$OnFoldingFeatureChangeListener access$getOnFoldingFeatureChangeListener$p(androidx.slidingpanelayout.widget.FoldingFeatureObserver) -> <init>
    36:36:void <init>(androidx.window.layout.WindowInfoTracker,java.util.concurrent.Executor):36 -> <init>
    37:38:void <init>(androidx.window.layout.WindowInfoTracker,java.util.concurrent.Executor) -> <init>
    36:36:androidx.slidingpanelayout.widget.FoldingFeatureObserver$OnFoldingFeatureChangeListener access$getOnFoldingFeatureChangeListener$p(androidx.slidingpanelayout.widget.FoldingFeatureObserver) -> access$getFoldingFeature
    36:36:androidx.window.layout.FoldingFeature access$getFoldingFeature(androidx.slidingpanelayout.widget.FoldingFeatureObserver,androidx.window.layout.WindowLayoutInfo):36 -> access$getFoldingFeature
    36:36:androidx.slidingpanelayout.widget.FoldingFeatureObserver$OnFoldingFeatureChangeListener access$getOnFoldingFeatureChangeListener$p(androidx.slidingpanelayout.widget.FoldingFeatureObserver) -> access$getOnFoldingFeatureChangeListener$p
    36:36:androidx.slidingpanelayout.widget.FoldingFeatureObserver$OnFoldingFeatureChangeListener access$getOnFoldingFeatureChangeListener$p(androidx.slidingpanelayout.widget.FoldingFeatureObserver) -> access$getWindowInfoTracker$p
    36:36:androidx.window.layout.WindowInfoTracker access$getWindowInfoTracker$p(androidx.slidingpanelayout.widget.FoldingFeatureObserver):36 -> access$getWindowInfoTracker$p
    88:92:androidx.window.layout.FoldingFeature getFoldingFeature(androidx.window.layout.WindowLayoutInfo) -> getFoldingFeature
    69:70:void registerLayoutStateChangeCallback(android.app.Activity) -> registerLayoutStateChangeCallback
    61:61:void setOnFoldingFeatureChangeListener(androidx.slidingpanelayout.widget.FoldingFeatureObserver$OnFoldingFeatureChangeListener) -> setOnFoldingFeatureChangeListener
    84:84:void unregisterLayoutStateChangeCallback() -> unregisterLayoutStateChangeCallback
androidx.slidingpanelayout.widget.FoldingFeatureObserver$OnFoldingFeatureChangeListener -> androidx.slidingpanelayout.widget.FoldingFeatureObserver$OnFoldingFeatureChangeListener:
# {"id":"sourceFile","fileName":"FoldingFeatureObserver.kt"}
androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1 -> androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1:
# {"id":"sourceFile","fileName":"FoldingFeatureObserver.kt"}
    0:0:void <init>(androidx.slidingpanelayout.widget.FoldingFeatureObserver,android.app.Activity,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    70:77:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    106:106:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.internal.SafeCollector_commonKt.unsafeFlow(kotlin.jvm.functions.Function2) -> invokeSuspend
    106:106:java.lang.Object invokeSuspend(java.lang.Object):72 -> invokeSuspend
    73:97:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$collect$1 -> androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$collect$1:
# {"id":"sourceFile","fileName":"Collect.kt"}
    72:72:void <init>(androidx.slidingpanelayout.widget.FoldingFeatureObserver) -> <init>
    73:136:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$mapNotNull$1 -> androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$mapNotNull$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    106:106:void kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1.<init>(kotlin.jvm.functions.Function2) -> <init>
    106:106:void <init>(kotlinx.coroutines.flow.Flow,androidx.slidingpanelayout.widget.FoldingFeatureObserver):106 -> <init>
    113:114:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
    55:55:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__EmittersKt.unsafeTransform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3) -> collect
    55:55:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):117 -> collect
androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$mapNotNull$1$2 -> androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$mapNotNull$1$2:
# {"id":"sourceFile","fileName":"Collect.kt"}
    72:72:void <init>(kotlinx.coroutines.flow.FlowCollector,androidx.slidingpanelayout.widget.FoldingFeatureObserver) -> <init>
    0:138:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    72:72:java.lang.Object androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1.invokeSuspend(java.lang.Object) -> emit
    72:72:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):137 -> emit
    138:138:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$mapNotNull$1$2$1 -> androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$mapNotNull$1$2$1:
    0:0:void <init>(androidx.slidingpanelayout.widget.FoldingFeatureObserver$registerLayoutStateChangeCallback$1$invokeSuspend$$inlined$mapNotNull$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.slidingpanelayout.widget.SlidingPaneLayout -> androidx.slidingpanelayout.widget.SlidingPaneLayout:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
    232:232:void <clinit>() -> <clinit>
    315:315:void <init>(android.content.Context) -> <init>
    319:319:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    122:340:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    448:448:void addPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener) -> addPanelSlideListener
    560:566:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1474:1474:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1079:1079:void close() -> close
    1017:1021:boolean closePane(int) -> closePane
    1089:1089:boolean closePane() -> closePane
    1292:1298:void computeScroll() -> computeScroll
    476:479:void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    469:472:void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    463:464:void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    1369:1399:void draw(android.graphics.Canvas) -> draw
    1152:1188:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1462:1462:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1467:1469:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1479:1479:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1905:1909:android.app.Activity getActivityOrNull(android.content.Context) -> getActivityOrNull
    411:411:int getCoveredFadeColor() -> getCoveredFadeColor
    1885:1898:android.graphics.Rect getFoldBoundsInView(androidx.window.layout.FoldingFeature,android.view.View) -> getFoldBoundsInView
    250:250:int getLockMode() -> getLockMode
    796:799:int getMinimumWidth(android.view.View) -> getMinimumWidth
    368:368:int getParallaxDistance() -> getParallaxDistance
    389:389:int getSliderFadeColor() -> getSliderFadeColor
    1196:1199:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1456:1457:boolean isDimmed(android.view.View) -> isDimmed
    1851:1851:boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    1100:1100:boolean isOpen() -> isOpen
    1122:1122:boolean isSlideable() -> isSlideable
    804:813:int measureChildHeight(android.view.View,int,int) -> measureChildHeight
    580:585:void onAttachedToWindow() -> onAttachedToWindow
    592:601:void onDetachedFromWindow() -> onDetachedFromWindow
    918:971:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    820:896:void onLayout(boolean,int,int,int,int) -> onLayout
    606:791:void onMeasure(int,int) -> onMeasure
    1126:1147:void onPanelDragged(int) -> onPanelDragged
    1495:1510:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1484:1488:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    901:904:void onSizeChanged(int,int,int,int) -> onSizeChanged
    978:1005:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1052:1052:void open() -> open
    1028:1032:boolean openPane(int) -> openPane
    1062:1062:boolean openPane() -> openPane
    1403:1414:void parallaxOtherViews(float) -> parallaxOtherViews
    571:575:void removeView(android.view.View) -> removeView
    910:912:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    529:532:void setAllChildrenVisible() -> setAllChildrenVisible
    401:401:void setCoveredFadeColor(int) -> setCoveredFadeColor
    345:346:void setFoldingFeatureObserver(androidx.slidingpanelayout.widget.FoldingFeatureObserver) -> setFoldingFeatureObserver
    240:240:void setLockMode(int) -> setLockMode
    433:433:void setPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    358:359:void setParallaxDistance(int) -> setParallaxDistance
    1310:1310:void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    1320:1320:void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    1330:1330:void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    1344:1344:void setShadowResource(int) -> setShadowResource
    1354:1354:void setShadowResourceLeft(int) -> setShadowResourceLeft
    1364:1364:void setShadowResourceRight(int) -> setShadowResourceRight
    379:379:void setSliderFadeColor(int) -> setSliderFadeColor
    1264:1284:boolean smoothSlideTo(float,int) -> smoothSlideTo
    1858:1878:java.util.ArrayList splitViewPositions() -> splitViewPositions
    483:524:void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    540:540:boolean viewIsOpaque(android.view.View) -> viewIsOpaque
androidx.slidingpanelayout.widget.SlidingPaneLayout$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$1:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
    299:299:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    302:308:void onFoldingFeatureChange(androidx.window.layout.FoldingFeature) -> onFoldingFeatureChange
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate -> androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
    1733:1734:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1792:1812:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    1782:1782:boolean filter(android.view.View) -> filter
    1767:1769:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1738:1760:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1775:1776:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback -> androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
    1515:1515:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1583:1593:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1602:1602:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1577:1577:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    1622:1631:boolean isDraggable() -> isDraggable
    1615:1618:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    1607:1610:void onEdgeTouched(int,int) -> onEdgeTouched
    1544:1544:void onViewCaptured(android.view.View,int) -> onViewCaptured
    1529:1536:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1549:1550:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1555:1572:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1520:1524:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams -> androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
    1639:1639:void <clinit>() -> <clinit>
    1647:1663:void <init>() -> <init>
    1647:1671:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1647:1675:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1647:1688:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener -> androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
    1715:1715:void <clinit>() -> <clinit>
    1699:1699:void <init>(android.os.Parcelable) -> <init>
    1703:1705:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1710:1712:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
    1715:1715:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1715:1715:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1718:1718:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1723:1723:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1715:1715:java.lang.Object[] newArray(int) -> newArray
    1728:1728:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
androidx.slidingpanelayout.widget.SlidingPaneLayout$TouchBlocker -> androidx.slidingpanelayout.widget.SlidingPaneLayout$TouchBlocker:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
    1818:1819:void <init>(android.view.View) -> <init>
    0:0:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    0:0:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.startup.AppInitializer -> androidx.startup.AppInitializer:
# {"id":"sourceFile","fileName":"AppInitializer.java"}
    57:57:void <clinit>() -> <clinit>
    73:76:void <init>(android.content.Context) -> <init>
    200:210:void discoverAndInitialize() -> discoverAndInitialize
    210:211:void discoverAndInitialize() -> discoverAndInitialize
    216:242:void discoverAndInitialize(android.os.Bundle) -> discoverAndInitialize
    135:140:java.lang.Object doInitialize(java.lang.Class) -> doInitialize
    149:194:java.lang.Object doInitialize(java.lang.Class,java.util.Set) -> doInitialize
    194:195:java.lang.Object doInitialize(java.lang.Class,java.util.Set) -> doInitialize
    86:93:androidx.startup.AppInitializer getInstance(android.content.Context) -> getInstance
    117:117:java.lang.Object initializeComponent(java.lang.Class) -> initializeComponent
    128:128:boolean isEagerlyInitialized(java.lang.Class) -> isEagerlyInitialized
androidx.startup.InitializationProvider -> androidx.startup.InitializationProvider:
# {"id":"sourceFile","fileName":"InitializationProvider.java"}
    33:33:void <init>() -> <init>
    83:83:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    69:69:java.lang.String getType(android.net.Uri) -> getType
    75:75:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    37:50:boolean onCreate() -> onCreate
    63:63:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    92:92:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.startup.Initializer -> androidx.startup.Initializer:
# {"id":"sourceFile","fileName":"Initializer.java"}
androidx.startup.StartupException -> androidx.startup.StartupException:
# {"id":"sourceFile","fileName":"StartupException.java"}
    31:31:void <init>(java.lang.String) -> <init>
    35:35:void <init>(java.lang.Throwable) -> <init>
    39:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
androidx.swiperefreshlayout.R$styleable -> androidx.swiperefreshlayout.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.swiperefreshlayout.widget.CircleImageView -> androidx.swiperefreshlayout.widget.CircleImageView:
# {"id":"sourceFile","fileName":"CircleImageView.java"}
    58:89:void <init>(android.content.Context) -> <init>
    0:0:boolean elevationSupported() -> elevationSupported
    119:121:void onAnimationEnd() -> onAnimationEnd
    111:113:void onAnimationStart() -> onAnimationStart
    98:100:void onMeasure(int,int) -> onMeasure
    106:106:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    127:129:void setBackgroundColor(int) -> setBackgroundColor
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow -> androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow:
# {"id":"sourceFile","fileName":"CircleImageView.java"}
    143:147:void <init>(androidx.swiperefreshlayout.widget.CircleImageView,int) -> <init>
    158:161:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    152:153:void onResize(float,float) -> onResize
    165:165:void updateRadialGradient(int) -> updateRadialGradient
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.CircularProgressDrawable:
# {"id":"sourceFile","fileName":"CircularProgressDrawable.java"}
    67:97:void <clinit>() -> <clinit>
    138:145:void <init>(android.content.Context) -> <init>
    519:529:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    537:564:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    399:403:void draw(android.graphics.Canvas) -> draw
    0:0:int evaluateColorChange(float,int,int) -> evaluateColorChange
    414:414:int getAlpha() -> getAlpha
    0:0:int getOpacity() -> getOpacity
    441:441:boolean isRunning() -> isRunning
    408:409:void setAlpha(int) -> setAlpha
    280:281:void setArrowEnabled(boolean) -> setArrowEnabled
    299:300:void setArrowScale(float) -> setArrowScale
    419:420:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:394:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:351:void setProgressRotation(float) -> setProgressRotation
    424:424:void setRotation(float) -> setRotation
    151:158:void setSizeParameters(float,float,float,float) -> setSizeParameters
    330:332:void setStartEndTrim(float,float) -> setStartEndTrim
    192:193:void setStrokeWidth(float) -> setStrokeWidth
    169:174:void setStyle(int) -> setStyle
    569:618:void setupAnimators() -> setupAnimators
    449:460:void start() -> start
    469:474:void stop() -> stop
    503:507:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> updateRingColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$1:
# {"id":"sourceFile","fileName":"CircularProgressDrawable.java"}
    571:571:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    574:577:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$2:
# {"id":"sourceFile","fileName":"CircularProgressDrawable.java"}
    583:583:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    0:0:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    0:0:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    602:614:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    587:587:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring:
# {"id":"sourceFile","fileName":"CircularProgressDrawable.java"}
    626:661:void <init>() -> <init>
    695:723:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    727:754:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    838:838:int getAlpha() -> getAlpha
    878:878:float getEndTrim() -> getEndTrim
    808:808:int getNextColor() -> getNextColor
    812:812:int getNextColorIndex() -> getNextColorIndex
    858:858:float getStartTrim() -> getStartTrim
    870:870:int getStartingColor() -> getStartingColor
    866:866:float getStartingEndTrim() -> getStartingEndTrim
    930:930:float getStartingRotation() -> getStartingRotation
    862:862:float getStartingStartTrim() -> getStartingStartTrim
    820:820:void goToNextColor() -> goToNextColor
    947:952:void resetOriginals() -> resetOriginals
    831:831:void setAlpha(int) -> setAlpha
    671:672:void setArrowDimensions(float,float) -> setArrowDimensions
    917:918:void setArrowScale(float) -> setArrowScale
    893:893:void setCenterRadius(float) -> setCenterRadius
    781:781:void setColor(int) -> setColor
    824:824:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    800:801:void setColorIndex(int) -> setColorIndex
    764:766:void setColors(int[]) -> setColors
    874:874:void setEndTrim(float) -> setEndTrim
    882:882:void setRotation(float) -> setRotation
    904:905:void setShowArrow(boolean) -> setShowArrow
    854:854:void setStartTrim(float) -> setStartTrim
    845:846:void setStrokeWidth(float) -> setStrokeWidth
    938:940:void storeOriginals() -> storeOriginals
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    150:150:void <clinit>() -> <clinit>
    404:404:void <init>(android.content.Context) -> <init>
    118:1367:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1317:1325:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1329:1341:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    739:742:boolean canChildScrollUp() -> canChildScrollUp
    462:467:void createProgressView() -> createProgressView
    1128:1128:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    1133:1133:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    1122:1122:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    1048:1048:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    1116:1116:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    651:655:void ensureTarget() -> ensureTarget
    1193:1221:void finishSpinner(float) -> finishSpinner
    447:447:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    1005:1005:int getNestedScrollAxes() -> getNestedScrollAxes
    728:728:int getProgressCircleDiameter() -> getProgressCircleDiameter
    344:344:int getProgressViewEndOffset() -> getProgressViewEndOffset
    336:336:int getProgressViewStartOffset() -> getProgressViewStartOffset
    1110:1110:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    1137:1137:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    1095:1095:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1141:1189:void moveSpinner(float) -> moveSpinner
    1362:1364:void moveToStart(float) -> moveToStart
    294:295:void onDetachedFromWindow() -> onDetachedFromWindow
    756:809:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    673:692:void onLayout(boolean,int,int,int,int) -> onLayout
    698:715:void onMeasure(int,int) -> onMeasure
    1038:1038:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1032:1032:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    949:949:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    975:999:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    873:904:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    940:940:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1025:1025:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    924:924:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    964:968:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    287:289:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    281:282:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1401:1407:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    913:913:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    957:957:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    933:933:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    1010:1019:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1227:1297:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    843:855:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    219:229:void reset() -> reset
    524:525:void setAnimationProgress(float) -> setAnimationProgress
    609:609:void setColorScheme(int[]) -> setColorScheme
    636:637:void setColorSchemeColors(int[]) -> setColorSchemeColors
    620:625:void setColorSchemeResources(int[]) -> setColorSchemeResources
    299:300:void setColorViewAlpha(int) -> setColorViewAlpha
    668:668:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    234:236:void setEnabled(boolean) -> setEnabled
    835:835:void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean) -> setLegacyRequestDisallowInterceptTouchEventEnabled
    1090:1090:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    0:0:void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    475:475:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    583:583:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    601:601:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    592:592:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    361:363:void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    323:328:void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    485:498:void setRefreshing(boolean) -> setRefreshing
    529:536:void setRefreshing(boolean,boolean) -> setRefreshing
    384:395:void setSize(int) -> setSize
    374:374:void setSlingshotDistance(int) -> setSlingshotDistance
    1395:1397:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    563:574:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1308:1312:void startDragging(float) -> startDragging
    1100:1100:boolean startNestedScroll(int) -> startNestedScroll
    559:559:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    555:555:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    542:551:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1376:1391:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    503:516:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    1105:1105:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    191:191:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    202:213:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    0:0:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    0:0:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    505:505:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    508:508:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    542:542:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    545:545:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    563:563:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    566:566:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    1201:1201:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1209:1210:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    0:0:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    0:0:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    1345:1345:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1349:1357:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    1367:1367:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1370:1370:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    1378:1378:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1381:1383:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    265:265:void <clinit>() -> <clinit>
    247:248:void <init>(android.os.Parcelable,boolean) -> <init>
    255:256:void <init>(android.os.Parcel) -> <init>
    261:262:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    266:266:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    269:269:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    266:266:java.lang.Object[] newArray(int) -> newArray
    274:274:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState[] newArray(int) -> newArray
androidx.tracing.Trace -> androidx.tracing.Trace:
# {"id":"sourceFile","fileName":"Trace.java"}
    81:81:void beginSection(java.lang.String) -> beginSection
    94:94:void endSection() -> endSection
    229:237:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    159:169:boolean isEnabledFallback() -> isEnabledFallback
androidx.tracing.Trace$$ExternalSyntheticApiModelOutline0 -> androidx.tracing.Trace$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.tracing.Trace$$InternalSyntheticApiModelOutline$1$9fd8ec1313d24621ee44530f6533361e5a5e5f72cd46afcc9711b1d3eb4c656e$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
# {"id":"sourceFile","fileName":"TraceApi18Impl.java"}
    49:49:void beginSection(java.lang.String) -> beginSection
    60:60:void endSection() -> endSection
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
# {"id":"sourceFile","fileName":"AnimatorUtils.java"}
    32:32:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    38:38:void pause(android.animation.Animator) -> pause
    54:54:void resume(android.animation.Animator) -> resume
androidx.transition.ArcMotion -> androidx.transition.ArcMotion:
# {"id":"sourceFile","fileName":"ArcMotion.java"}
    57:57:void <clinit>() -> <clinit>
    59:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    203:278:android.graphics.Path getPath(float,float,float,float) -> getPath
    160:161:void setMaximumAngle(float) -> setMaximumAngle
    101:102:void setMinimumHorizontalAngle(float) -> setMinimumHorizontalAngle
    131:132:void setMinimumVerticalAngle(float) -> setMinimumVerticalAngle
    179:181:float toTangent(float) -> toTangent
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
# {"id":"sourceFile","fileName":"AutoTransition.java"}
    39:40:void <init>() -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:52:void init() -> init
androidx.transition.CanvasUtils -> androidx.transition.CanvasUtils:
# {"id":"sourceFile","fileName":"CanvasUtils.java"}
    41:76:void enableZ(android.graphics.Canvas,boolean) -> enableZ
androidx.transition.CanvasUtils$$ExternalSyntheticApiModelOutline0 -> androidx.transition.CanvasUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.CanvasUtils$$InternalSyntheticApiModelOutline$1$4becd9ff9c494f2d21359ee13575dbbfb1b56bd40f5cb72da9f9d236ae12db96$0.m(android.graphics.Canvas) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.CanvasUtils$$ExternalSyntheticApiModelOutline1 -> androidx.transition.CanvasUtils$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.CanvasUtils$$InternalSyntheticApiModelOutline$1$4becd9ff9c494f2d21359ee13575dbbfb1b56bd40f5cb72da9f9d236ae12db96$1.m(android.graphics.Canvas) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    61:168:void <clinit>() -> <clinit>
    164:170:void <init>() -> <init>
    164:182:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    244:244:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    239:239:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    220:232:void captureValues(androidx.transition.TransitionValues) -> captureValues
    267:448:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    188:188:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    249:254:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
    205:205:void setResizeClip(boolean) -> setResizeClip
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    70:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    70:70:java.lang.Object get(java.lang.Object) -> get
    82:83:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
    75:77:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    448:448:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    451:452:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    88:88:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    88:88:java.lang.Object get(java.lang.Object) -> get
    88:88:void set(java.lang.Object,java.lang.Object) -> set
    91:91:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    101:101:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    101:101:java.lang.Object get(java.lang.Object) -> get
    101:101:void set(java.lang.Object,java.lang.Object) -> set
    104:104:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    114:114:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(android.view.View) -> get
    114:114:java.lang.Object get(java.lang.Object) -> get
    114:114:void set(java.lang.Object,java.lang.Object) -> set
    117:121:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    131:131:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(android.view.View) -> get
    131:131:java.lang.Object get(java.lang.Object) -> get
    131:131:void set(java.lang.Object,java.lang.Object) -> set
    134:138:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    148:148:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(android.view.View) -> get
    148:148:java.lang.Object get(java.lang.Object) -> get
    148:148:void set(java.lang.Object,java.lang.Object) -> set
    151:155:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    326:329:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    370:370:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    375:375:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    380:382:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    394:395:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    399:400:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    405:408:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    413:413:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    418:418:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
# {"id":"sourceFile","fileName":"ChangeBounds.java"}
    471:472:void <init>(android.view.View) -> <init>
    485:489:void setBottomRight(android.graphics.PointF) -> setBottomRight
    494:496:void setLeftTopRightBottom() -> setLeftTopRightBottom
    476:480:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.ChangeClipBounds -> androidx.transition.ChangeClipBounds:
# {"id":"sourceFile","fileName":"ChangeClipBounds.java"}
    43:43:void <clinit>() -> <clinit>
    57:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:81:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    76:76:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    61:70:void captureValues(androidx.transition.TransitionValues) -> captureValues
    89:116:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    50:50:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeClipBounds$1 -> androidx.transition.ChangeClipBounds$1:
# {"id":"sourceFile","fileName":"ChangeClipBounds.java"}
    116:116:void <init>(androidx.transition.ChangeClipBounds,android.view.View) -> <init>
    119:119:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeImageTransform -> androidx.transition.ChangeImageTransform:
# {"id":"sourceFile","fileName":"ChangeImageTransform.java"}
    50:62:void <clinit>() -> <clinit>
    79:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    111:111:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    106:106:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    83:101:void captureValues(androidx.transition.TransitionValues) -> captureValues
    222:240:android.graphics.Matrix centerCropMatrix(android.widget.ImageView) -> centerCropMatrix
    190:201:android.graphics.Matrix copyImageMatrix(android.widget.ImageView) -> copyImageMatrix
    138:170:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    184:184:android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView,android.graphics.Matrix,android.graphics.Matrix) -> createMatrixAnimator
    178:178:android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView) -> createNullAnimator
    209:213:android.graphics.Matrix fitXYMatrix(android.widget.ImageView) -> fitXYMatrix
    117:117:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeImageTransform$1 -> androidx.transition.ChangeImageTransform$1:
# {"id":"sourceFile","fileName":"ChangeImageTransform.java"}
    0:0:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
    55:55:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.transition.ChangeImageTransform$2 -> androidx.transition.ChangeImageTransform$2:
# {"id":"sourceFile","fileName":"ChangeImageTransform.java"}
    63:63:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.Matrix get(android.widget.ImageView) -> get
    63:63:java.lang.Object get(java.lang.Object) -> get
    63:63:void set(java.lang.Object,java.lang.Object) -> set
    66:66:void set(android.widget.ImageView,android.graphics.Matrix) -> set
androidx.transition.ChangeImageTransform$3 -> androidx.transition.ChangeImageTransform$3:
# {"id":"sourceFile","fileName":"ChangeImageTransform.java"}
    192:192:void <clinit>() -> <clinit>
androidx.transition.ChangeScroll -> androidx.transition.ChangeScroll:
# {"id":"sourceFile","fileName":"ChangeScroll.java"}
    39:39:void <clinit>() -> <clinit>
    47:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:57:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    52:52:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    67:68:void captureValues(androidx.transition.TransitionValues) -> captureValues
    78:93:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    63:63:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeTransform -> androidx.transition.ChangeTransform:
# {"id":"sourceFile","fileName":"ChangeTransform.java"}
    61:102:void <clinit>() -> <clinit>
    104:121:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    240:240:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    228:233:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    199:222:void captureValues(androidx.transition.TransitionValues) -> captureValues
    248:282:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    392:420:void createGhostView(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createGhostView
    290:373:android.animation.ObjectAnimator createTransformAnimator(androidx.transition.TransitionValues,androidx.transition.TransitionValues,boolean) -> createTransformAnimator
    195:195:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    379:384:boolean parentsMatch(android.view.ViewGroup,android.view.ViewGroup) -> parentsMatch
    445:445:void setIdentityTransforms(android.view.View) -> setIdentityTransforms
    425:440:void setMatricesForParent(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> setMatricesForParent
    452:459:void setTransforms(android.view.View,float,float,float,float,float,float,float,float) -> setTransforms
androidx.transition.ChangeTransform$1 -> androidx.transition.ChangeTransform$1:
# {"id":"sourceFile","fileName":"ChangeTransform.java"}
    71:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:float[] get(androidx.transition.ChangeTransform$PathAnimatorMatrix) -> get
    71:71:java.lang.Object get(java.lang.Object) -> get
    71:71:void set(java.lang.Object,java.lang.Object) -> set
    79:79:void set(androidx.transition.ChangeTransform$PathAnimatorMatrix,float[]) -> set
androidx.transition.ChangeTransform$2 -> androidx.transition.ChangeTransform$2:
# {"id":"sourceFile","fileName":"ChangeTransform.java"}
    87:87:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(androidx.transition.ChangeTransform$PathAnimatorMatrix) -> get
    87:87:java.lang.Object get(java.lang.Object) -> get
    87:87:void set(java.lang.Object,java.lang.Object) -> set
    95:95:void set(androidx.transition.ChangeTransform$PathAnimatorMatrix,android.graphics.PointF) -> set
androidx.transition.ChangeTransform$3 -> androidx.transition.ChangeTransform$3:
# {"id":"sourceFile","fileName":"ChangeTransform.java"}
    331:333:void <init>(androidx.transition.ChangeTransform,boolean,android.graphics.Matrix,android.view.View,androidx.transition.ChangeTransform$Transforms,androidx.transition.ChangeTransform$PathAnimatorMatrix) -> <init>
    337:337:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    342:351:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    356:357:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    362:362:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    366:368:void setCurrentMatrix(android.graphics.Matrix) -> setCurrentMatrix
androidx.transition.ChangeTransform$GhostListener -> androidx.transition.ChangeTransform$GhostListener:
# {"id":"sourceFile","fileName":"ChangeTransform.java"}
    525:527:void <init>(android.view.View,androidx.transition.GhostView) -> <init>
    532:535:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    540:540:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    545:545:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeTransform$PathAnimatorMatrix -> androidx.transition.ChangeTransform$PathAnimatorMatrix:
# {"id":"sourceFile","fileName":"ChangeTransform.java"}
    557:568:void <init>(android.view.View,float[]) -> <init>
    590:590:android.graphics.Matrix getMatrix() -> getMatrix
    583:586:void setAnimationMatrix() -> setAnimationMatrix
    577:579:void setTranslation(android.graphics.PointF) -> setTranslation
    572:573:void setValues(float[]) -> setValues
androidx.transition.ChangeTransform$Transforms -> androidx.transition.ChangeTransform$Transforms:
# {"id":"sourceFile","fileName":"ChangeTransform.java"}
    473:481:void <init>(android.view.View) -> <init>
    491:495:boolean equals(java.lang.Object) -> equals
    507:514:int hashCode() -> hashCode
    485:485:void restore(android.view.View) -> restore
androidx.transition.CircularPropagation -> androidx.transition.CircularPropagation:
# {"id":"sourceFile","fileName":"CircularPropagation.java"}
    33:35:void <init>() -> <init>
    103:103:float distance(float,float,float,float) -> distance
    64:97:long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getStartDelay
androidx.transition.Explode -> androidx.transition.Explode:
# {"id":"sourceFile","fileName":"Explode.java"}
    45:46:void <clinit>() -> <clinit>
    49:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    176:176:float calculateDistance(float,float) -> calculateDistance
    170:172:float calculateMaxDistance(android.view.View,int,int) -> calculateMaxDistance
    131:166:void calculateOut(android.view.View,android.graphics.Rect,int[]) -> calculateOut
    78:79:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    72:73:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    61:67:void captureValues(androidx.transition.TransitionValues) -> captureValues
    89:96:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    107:126:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade -> androidx.transition.Fade:
# {"id":"sourceFile","fileName":"Fade.java"}
    92:93:void <init>(int) -> <init>
    99:99:void <init>() -> <init>
    105:111:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    116:118:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    128:136:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    176:178:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    157:161:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    168:170:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
# {"id":"sourceFile","fileName":"Fade.java"}
    136:136:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    139:141:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
# {"id":"sourceFile","fileName":"Fade.java"}
    187:190:void <init>(android.view.View) -> <init>
    204:206:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    195:198:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FloatArrayEvaluator -> androidx.transition.FloatArrayEvaluator:
# {"id":"sourceFile","fileName":"FloatArrayEvaluator.java"}
    39:40:void <init>(float[]) -> <init>
    27:27:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    57:65:float[] evaluate(float,float[],float[]) -> evaluate
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    44:44:void <init>() -> <init>
    335:336:void addTarget(java.lang.Object,android.view.View) -> addTarget
    104:121:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    223:223:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    48:48:boolean canHandle(java.lang.Object) -> canHandle
    55:55:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    128:130:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    196:214:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    136:144:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    308:326:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    152:153:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    231:232:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    89:93:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    351:352:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    267:274:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    73:83:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    297:301:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    65:66:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    93:93:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
    96:96:android.graphics.Rect onGetEpicenter(androidx.transition.Transition) -> onGetEpicenter
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    153:153:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    0:0:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    168:172:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    162:163:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    232:232:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    248:248:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    235:242:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    268:268:void <init>(androidx.transition.FragmentTransitionSupport,androidx.transition.Transition) -> <init>
    271:271:void onCancel() -> onCancel
androidx.transition.FragmentTransitionSupport$5 -> androidx.transition.FragmentTransitionSupport$5:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    274:274:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Runnable) -> <init>
    0:0:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    280:280:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    0:0:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$6 -> androidx.transition.FragmentTransitionSupport$6:
# {"id":"sourceFile","fileName":"FragmentTransitionSupport.java"}
    352:352:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
    355:358:android.graphics.Rect onGetEpicenter(androidx.transition.Transition) -> onGetEpicenter
androidx.transition.GhostView -> androidx.transition.GhostView:
# {"id":"sourceFile","fileName":"GhostView.java"}
androidx.transition.GhostViewHolder -> androidx.transition.GhostViewHolder:
# {"id":"sourceFile","fileName":"GhostViewHolder.java"}
    38:43:void <init>(android.view.ViewGroup) -> <init>
    88:95:void addGhostView(androidx.transition.GhostViewPort) -> addGhostView
    69:69:androidx.transition.GhostViewHolder getHolder(android.view.ViewGroup) -> getHolder
    105:118:int getInsertIndex(java.util.ArrayList) -> getInsertIndex
    156:160:void getParents(android.view.View,java.util.ArrayList) -> getParents
    132:149:boolean isOnTop(java.util.ArrayList,java.util.ArrayList) -> isOnTop
    169:187:boolean isOnTop(android.view.View,android.view.View) -> isOnTop
    48:51:void onViewAdded(android.view.View) -> onViewAdded
    56:64:void onViewRemoved(android.view.View) -> onViewRemoved
    73:79:void popToOverlayTop() -> popToOverlayTop
androidx.transition.GhostViewPlatform -> androidx.transition.GhostViewPlatform:
# {"id":"sourceFile","fileName":"GhostViewPlatform.java"}
    73:74:void <init>(android.view.View) -> <init>
    43:51:androidx.transition.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    99:108:void fetchAddGhostMethod() -> fetchAddGhostMethod
    88:94:void fetchGhostViewClass() -> fetchGhostViewClass
    113:121:void fetchRemoveGhostMethod() -> fetchRemoveGhostMethod
    58:65:void removeGhost(android.view.View) -> removeGhost
    0:0:void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> reserveEndViewTransition
    79:79:void setVisibility(int) -> setVisibility
androidx.transition.GhostViewPort -> androidx.transition.GhostViewPort:
# {"id":"sourceFile","fileName":"GhostViewPort.java"}
    51:72:void <init>(android.view.View) -> <init>
    164:197:androidx.transition.GhostViewPort addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    156:160:void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> calculateMatrix
    140:144:void copySize(android.view.View,android.view.View) -> copySize
    148:148:androidx.transition.GhostViewPort getGhostView(android.view.View) -> getGhostView
    101:108:void onAttachedToWindow() -> onAttachedToWindow
    114:120:void onDetachedFromWindow() -> onDetachedFromWindow
    125:136:void onDraw(android.graphics.Canvas) -> onDraw
    0:0:void onLayout(boolean,int,int,int,int) -> onLayout
    202:207:void removeGhost(android.view.View) -> removeGhost
    95:96:void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> reserveEndViewTransition
    152:152:void setGhostView(android.view.View,androidx.transition.GhostViewPort) -> setGhostView
    90:90:void setMatrix(android.graphics.Matrix) -> setMatrix
    77:80:void setVisibility(int) -> setVisibility
androidx.transition.GhostViewPort$1 -> androidx.transition.GhostViewPort$1:
# {"id":"sourceFile","fileName":"GhostViewPort.java"}
    52:52:void <init>(androidx.transition.GhostViewPort) -> <init>
    56:61:boolean onPreDraw() -> onPreDraw
androidx.transition.GhostViewUtils -> androidx.transition.GhostViewUtils:
# {"id":"sourceFile","fileName":"GhostViewUtils.java"}
    32:36:androidx.transition.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    41:45:void removeGhost(android.view.View) -> removeGhost
androidx.transition.ImageViewUtils -> androidx.transition.ImageViewUtils:
# {"id":"sourceFile","fileName":"ImageViewUtils.java"}
    0:0:void <clinit>() -> <clinit>
    45:58:void animateTransform(android.widget.ImageView,android.graphics.Matrix) -> animateTransform
    88:94:void hiddenAnimateTransform(android.widget.ImageView,android.graphics.Matrix) -> hiddenAnimateTransform
androidx.transition.ImageViewUtils$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ImageViewUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ImageViewUtils$$InternalSyntheticApiModelOutline$1$8a0b552a68f610ab514fe7285a69e09ceff03855fac7d5878b1c0588f96593e3$0.m(android.widget.ImageView,android.graphics.Matrix) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.MatrixUtils -> androidx.transition.MatrixUtils:
# {"id":"sourceFile","fileName":"MatrixUtils.java"}
    24:24:void <clinit>() -> <clinit>
androidx.transition.MatrixUtils$1 -> androidx.transition.MatrixUtils$1:
# {"id":"sourceFile","fileName":"MatrixUtils.java"}
    24:24:void <init>() -> <init>
    27:27:void oops() -> oops
    183:183:boolean postConcat(android.graphics.Matrix) -> postConcat
    159:159:boolean postRotate(float,float,float) -> postRotate
    165:165:boolean postRotate(float) -> postRotate
    147:147:boolean postScale(float,float,float,float) -> postScale
    153:153:boolean postScale(float,float) -> postScale
    171:171:boolean postSkew(float,float,float,float) -> postSkew
    177:177:boolean postSkew(float,float) -> postSkew
    141:141:boolean postTranslate(float,float) -> postTranslate
    135:135:boolean preConcat(android.graphics.Matrix) -> preConcat
    111:111:boolean preRotate(float,float,float) -> preRotate
    117:117:boolean preRotate(float) -> preRotate
    99:99:boolean preScale(float,float,float,float) -> preScale
    105:105:boolean preScale(float,float) -> preScale
    123:123:boolean preSkew(float,float,float,float) -> preSkew
    129:129:boolean preSkew(float,float) -> preSkew
    93:93:boolean preTranslate(float,float) -> preTranslate
    37:37:void reset() -> reset
    32:32:void set(android.graphics.Matrix) -> set
    87:87:boolean setConcat(android.graphics.Matrix,android.graphics.Matrix) -> setConcat
    196:196:boolean setPolyToPoly(float[],int,float[],int,int) -> setPolyToPoly
    189:189:boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit) -> setRectToRect
    57:57:void setRotate(float,float,float) -> setRotate
    62:62:void setRotate(float) -> setRotate
    47:47:void setScale(float,float,float,float) -> setScale
    52:52:void setScale(float,float) -> setScale
    67:67:void setSinCos(float,float,float,float) -> setSinCos
    72:72:void setSinCos(float,float) -> setSinCos
    77:77:void setSkew(float,float,float,float) -> setSkew
    82:82:void setSkew(float,float) -> setSkew
    42:42:void setTranslate(float,float) -> setTranslate
    202:202:void setValues(float[]) -> setValues
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
# {"id":"sourceFile","fileName":"ObjectAnimatorUtils.java"}
    29:29:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
# {"id":"sourceFile","fileName":"PathMotion.java"}
    45:45:void <init>() -> <init>
    48:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.transition.PatternPathMotion -> androidx.transition.PatternPathMotion:
# {"id":"sourceFile","fileName":"PatternPathMotion.java"}
    48:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    151:151:float distance(float,float) -> distance
    139:146:android.graphics.Path getPath(float,float,float,float) -> getPath
    108:131:void setPatternPath(android.graphics.Path) -> setPatternPath
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
# {"id":"sourceFile","fileName":"PropertyValuesHolderUtils.java"}
    39:39:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
# {"id":"sourceFile","fileName":"RectEvaluator.java"}
    39:39:void <init>() -> <init>
    52:53:void <init>(android.graphics.Rect) -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
# {"id":"sourceFile","fileName":"Scene.java"}
    209:209:androidx.transition.Scene getCurrentScene(android.view.ViewGroup) -> getCurrentScene
    196:196:void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene) -> setCurrentScene
androidx.transition.SidePropagation -> androidx.transition.SidePropagation:
# {"id":"sourceFile","fileName":"SidePropagation.java"}
    34:37:void <init>() -> <init>
    125:148:int distance(android.view.View,int,int,int,int,int,int,int,int) -> distance
    155:162:int getMaxDistance(android.view.ViewGroup) -> getMaxDistance
    80:119:long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getStartDelay
    51:51:void setSide(int) -> setSide
androidx.transition.Slide -> androidx.transition.Slide:
# {"id":"sourceFile","fileName":"Slide.java"}
    56:145:void <clinit>() -> <clinit>
    59:176:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    194:195:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    188:189:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    180:183:void captureValues(androidx.transition.TransitionValues) -> captureValues
    255:261:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    272:278:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
    209:232:void setSlideEdge(int) -> setSlideEdge
androidx.transition.Slide$1 -> androidx.transition.Slide$1:
# {"id":"sourceFile","fileName":"Slide.java"}
    94:94:void <init>() -> <init>
    97:97:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Slide$2 -> androidx.transition.Slide$2:
# {"id":"sourceFile","fileName":"Slide.java"}
    101:101:void <init>() -> <init>
    104:110:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Slide$3 -> androidx.transition.Slide$3:
# {"id":"sourceFile","fileName":"Slide.java"}
    116:116:void <init>() -> <init>
    119:119:float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
androidx.transition.Slide$4 -> androidx.transition.Slide$4:
# {"id":"sourceFile","fileName":"Slide.java"}
    123:123:void <init>() -> <init>
    126:126:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Slide$5 -> androidx.transition.Slide$5:
# {"id":"sourceFile","fileName":"Slide.java"}
    130:130:void <init>() -> <init>
    133:139:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Slide$6 -> androidx.transition.Slide$6:
# {"id":"sourceFile","fileName":"Slide.java"}
    145:145:void <init>() -> <init>
    148:148:float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
androidx.transition.Slide$CalculateSlide -> androidx.transition.Slide$CalculateSlide:
# {"id":"sourceFile","fileName":"Slide.java"}
androidx.transition.Slide$CalculateSlideHorizontal -> androidx.transition.Slide$CalculateSlideHorizontal:
# {"id":"sourceFile","fileName":"Slide.java"}
    78:78:void <init>(androidx.transition.Slide$1) -> <init>
    82:82:float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
androidx.transition.Slide$CalculateSlideVertical -> androidx.transition.Slide$CalculateSlideVertical:
# {"id":"sourceFile","fileName":"Slide.java"}
    86:86:void <init>(androidx.transition.Slide$1) -> <init>
    90:90:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Styleable -> androidx.transition.Styleable:
# {"id":"sourceFile","fileName":"Styleable.java"}
    30:169:void <clinit>() -> <clinit>
androidx.transition.Transition -> androidx.transition.Transition:
# {"id":"sourceFile","fileName":"Transition.java"}
    164:205:void <clinit>() -> <clinit>
    181:260:void <init>() -> <init>
    181:297:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2029:2032:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    997:997:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    644:657:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1529:1562:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    528:530:boolean alreadyContains(int[],int) -> alreadyContains
    1887:1905:void animate(android.animation.Animator) -> animate
    2004:2014:void cancel() -> cancel
    1599:1647:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2176:2189:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    1468:1521:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1575:1581:void clearValues(boolean) -> clearValues
    120:120:java.lang.Object clone() -> clone
    2206:2211:androidx.transition.Transition clone() -> clone
    0:0:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    707:797:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1945:1967:void end() -> end
    354:354:long getDuration() -> getDuration
    2133:2136:android.graphics.Rect getEpicenter() -> getEpicenter
    2120:2120:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    409:409:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1679:1702:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2232:2232:java.lang.String getName() -> getName
    2090:2090:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    2168:2168:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    856:859:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    381:381:long getStartDelay() -> getStartDelay
    1412:1412:java.util.List getTargetIds() -> getTargetIds
    1441:1441:java.util.List getTargetNames() -> getTargetNames
    1456:1456:java.util.List getTargetTypes() -> getTargetTypes
    1426:1426:java.util.List getTargets() -> getTargets
    0:0:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    1660:1664:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1831:1841:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    0:0:boolean isValidMatch(int) -> isValidMatch
    813:847:boolean isValidTarget(android.view.View) -> isValidTarget
    1853:1864:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    591:603:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    543:550:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    564:576:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    618:630:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    664:686:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    302:323:int[] parseMatchOrder(java.lang.String) -> parseMatchOrder
    1716:1730:void pause(android.view.View) -> pause
    1769:1809:void playTransition(android.view.ViewGroup) -> playTransition
    2045:2050:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1095:1095:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1743:1759:void resume(android.view.View) -> resume
    895:907:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    875:888:void runAnimators() -> runAnimators
    341:341:androidx.transition.Transition setDuration(long) -> setDuration
    2105:2105:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    395:395:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    507:519:void setMatchOrder(int[]) -> setMatchOrder
    2073:2075:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    2151:2151:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    368:368:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1918:1929:void start() -> start
    2200:2200:java.lang.String toString() -> toString
    2236:2265:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
# {"id":"sourceFile","fileName":"Transition.java"}
    171:171:void <init>() -> <init>
    174:176:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
# {"id":"sourceFile","fileName":"Transition.java"}
    895:895:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    903:904:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    898:898:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
# {"id":"sourceFile","fileName":"Transition.java"}
    1898:1898:void <init>(androidx.transition.Transition) -> <init>
    1901:1902:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
# {"id":"sourceFile","fileName":"Transition.java"}
    2350:2355:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
# {"id":"sourceFile","fileName":"Transition.java"}
androidx.transition.Transition$TransitionListener -> androidx.transition.Transition$TransitionListener:
# {"id":"sourceFile","fileName":"Transition.java"}
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
# {"id":"sourceFile","fileName":"TransitionListenerAdapter.java"}
    0:0:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    0:0:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    0:0:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
# {"id":"sourceFile","fileName":"TransitionManager.java"}
    83:90:void <clinit>() -> <clinit>
    407:419:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    199:209:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    216:218:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    308:321:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
# {"id":"sourceFile","fileName":"TransitionManager.java"}
    237:239:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    267:300:boolean onPreDraw() -> onPreDraw
    0:0:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    253:262:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    243:244:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
# {"id":"sourceFile","fileName":"TransitionManager.java"}
    286:286:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    289:291:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionPropagation -> androidx.transition.TransitionPropagation:
# {"id":"sourceFile","fileName":"TransitionPropagation.java"}
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
# {"id":"sourceFile","fileName":"TransitionSet.java"}
    80:110:void <init>() -> <init>
    80:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    62:62:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    307:307:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    62:62:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    271:274:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    179:193:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    199:200:void addTransitionInternal(androidx.transition.Transition) -> addTransitionInternal
    581:584:void cancel() -> cancel
    536:540:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    548:551:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    524:528:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    62:62:java.lang.Object clone() -> clone
    639:643:androidx.transition.Transition clone() -> clone
    466:480:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    223:226:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    211:211:int getTransitionCount() -> getTransitionCount
    559:562:void pause(android.view.View) -> pause
    62:62:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    385:385:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    62:62:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    322:325:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    570:573:void resume(android.view.View) -> resume
    491:517:void runAnimators() -> runAnimators
    62:62:androidx.transition.Transition setDuration(long) -> setDuration
    239:243:androidx.transition.TransitionSet setDuration(long) -> setDuration
    620:624:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    62:62:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    258:265:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    137:143:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    390:394:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    610:614:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    62:62:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    252:252:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    418:422:void setupStartEndListeners() -> setupStartEndListeners
    630:632:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
# {"id":"sourceFile","fileName":"TransitionSet.java"}
    503:503:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    506:507:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
# {"id":"sourceFile","fileName":"TransitionSet.java"}
    433:434:void <init>(androidx.transition.TransitionSet) -> <init>
    447:453:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    439:441:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
# {"id":"sourceFile","fileName":"TransitionUtils.java"}
    35:39:void <clinit>() -> <clinit>
    51:71:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:138:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    149:150:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionUtils$$ExternalSyntheticApiModelOutline0 -> androidx.transition.TransitionUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Bitmap androidx.transition.TransitionUtils$$InternalSyntheticApiModelOutline$1$9416c06dc39a009fed7ca9c0ead9daf511aa61a11d1961633bbdb6fafacab622$0.m(android.graphics.Picture) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.TransitionUtils$MatrixEvaluator -> androidx.transition.TransitionUtils$MatrixEvaluator:
# {"id":"sourceFile","fileName":"TransitionUtils.java"}
    155:161:void <init>() -> <init>
    155:155:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    165:172:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
# {"id":"sourceFile","fileName":"TransitionValues.java"}
    52:70:void <init>(android.view.View) -> <init>
    74:76:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    91:95:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
# {"id":"sourceFile","fileName":"TransitionValuesMaps.java"}
    25:33:void <init>() -> <init>
androidx.transition.TranslationAnimationCreator -> androidx.transition.TranslationAnimationCreator:
# {"id":"sourceFile","fileName":"TranslationAnimationCreator.java"}
    56:81:android.animation.Animator createAnimation(android.view.View,androidx.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,androidx.transition.Transition) -> createAnimation
androidx.transition.TranslationAnimationCreator$TransitionPositionListener -> androidx.transition.TranslationAnimationCreator$TransitionPositionListener:
# {"id":"sourceFile","fileName":"TranslationAnimationCreator.java"}
    99:108:void <init>(android.view.View,android.view.View,int,int,float,float) -> <init>
    114:119:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    124:127:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    132:133:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    0:0:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    142:144:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    0:0:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
# {"id":"sourceFile","fileName":"ViewGroupOverlayApi18.java"}
    32:33:void <init>(android.view.ViewGroup) -> <init>
    38:38:void add(android.graphics.drawable.Drawable) -> add
    48:48:void add(android.view.View) -> add
    43:43:void remove(android.graphics.drawable.Drawable) -> remove
    53:53:void remove(android.view.View) -> remove
androidx.transition.ViewGroupOverlayImpl -> androidx.transition.ViewGroupOverlayImpl:
# {"id":"sourceFile","fileName":"ViewGroupOverlayImpl.java"}
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
# {"id":"sourceFile","fileName":"ViewGroupUtils.java"}
    0:0:void <clinit>() -> <clinit>
    83:99:int getChildDrawingOrder(android.view.ViewGroup,int) -> getChildDrawingOrder
    47:47:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    68:74:void hiddenSuppressLayout(android.view.ViewGroup,boolean) -> hiddenSuppressLayout
    56:59:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtils$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewGroupUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.transition.ViewGroupUtils$$InternalSyntheticApiModelOutline$1$2537192a30e78c14a5fd5d2b59ef99ac35421239a471546a7f19f2dad0ba576e$0.m(android.view.ViewGroup,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewGroupUtils$$ExternalSyntheticApiModelOutline1 -> androidx.transition.ViewGroupUtils$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewGroupUtils$$InternalSyntheticApiModelOutline$1$2ab1cc39db7549dd3b28eb6099cdb18bc8cc034ae623df1348498e4679a218c9$0.m(android.view.ViewGroup,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
# {"id":"sourceFile","fileName":"ViewOverlayApi18.java"}
    31:32:void <init>(android.view.View) -> <init>
    37:37:void add(android.graphics.drawable.Drawable) -> add
    42:42:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewOverlayImpl -> androidx.transition.ViewOverlayImpl:
# {"id":"sourceFile","fileName":"ViewOverlayImpl.java"}
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    38:71:void <clinit>() -> <clinit>
    128:128:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    91:91:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    111:111:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    101:101:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    119:119:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    187:187:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    199:199:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    107:107:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    145:145:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    161:161:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    177:177:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    57:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    57:57:java.lang.Object get(java.lang.Object) -> get
    61:61:java.lang.Float get(android.view.View) -> get
    57:57:void set(java.lang.Object,java.lang.Object) -> set
    66:66:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    72:72:void <init>(java.lang.Class,java.lang.String) -> <init>
    72:72:java.lang.Object get(java.lang.Object) -> get
    76:76:android.graphics.Rect get(android.view.View) -> get
    72:72:void set(java.lang.Object,java.lang.Object) -> set
    81:81:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
# {"id":"sourceFile","fileName":"ViewUtilsApi19.java"}
    0:0:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    0:0:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    52:61:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    0:0:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    36:46:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi19$$InternalSyntheticApiModelOutline$1$16bfbe38408d9150895ea4817f7da1d805cf1d879cd5fd76a40ef36206b1c548$0.m(android.view.View,float) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline1 -> androidx.transition.ViewUtilsApi19$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:float androidx.transition.ViewUtilsApi19$$InternalSyntheticApiModelOutline$1$e6a5fb68daad6de4e6979e9114ed51fd3b504908f3799d4c175931795a16d324$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
# {"id":"sourceFile","fileName":"ViewUtilsApi21.java"}
    0:0:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    74:80:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    46:52:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    60:66:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi21$$InternalSyntheticApiModelOutline$1$2e23ac2c1706116cff95bac42e048cb9b42f1f90691b8c014c6cc1bd3fa35fe5$0.m(android.view.View,android.graphics.Matrix) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline1 -> androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi21$$InternalSyntheticApiModelOutline$1$44de3dc28985816055ba9e5d9db3fa449c1d4e90eb342a9dca4b1b21d3dac1dd$0.m(android.view.View,android.graphics.Matrix) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline2 -> androidx.transition.ViewUtilsApi21$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi21$$InternalSyntheticApiModelOutline$1$ed0869bb598a5d125288394564fb83af37f3bd674256bf3261dd965caf50814f$0.m(android.view.View,android.graphics.Matrix) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
# {"id":"sourceFile","fileName":"ViewUtilsApi22.java"}
    0:0:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    36:42:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsApi22$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi22$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi22$$InternalSyntheticApiModelOutline$1$ed8ee0c16186165fba021a58a05307f9b0cf07af9834a444742c9fd671009be2$0.m(android.view.View,int,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi23 -> androidx.transition.ViewUtilsApi23:
# {"id":"sourceFile","fileName":"ViewUtilsApi23.java"}
    0:0:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    38:47:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.ViewUtilsApi23$$ExternalSyntheticApiModelOutline0 -> androidx.transition.ViewUtilsApi23$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.transition.ViewUtilsApi23$$InternalSyntheticApiModelOutline$1$ddcfad1908d065ad511569cc2ccd156ca5bc7dd85a867708e34a0441950cee7e$0.m(android.view.View,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.transition.ViewUtilsApi29 -> androidx.transition.ViewUtilsApi29:
# {"id":"sourceFile","fileName":"ViewUtilsApi29.java"}
    27:27:void <init>() -> <init>
    36:36:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    61:61:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    46:46:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    31:31:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    41:41:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    51:51:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    56:56:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
# {"id":"sourceFile","fileName":"ViewUtilsBase.java"}
    155:167:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.Visibility -> androidx.transition.Visibility:
# {"id":"sourceFile","fileName":"Visibility.java"}
    81:81:void <clinit>() -> <clinit>
    98:100:void <init>() -> <init>
    98:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    165:165:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    160:160:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    150:155:void captureValues(androidx.transition.TransitionValues) -> captureValues
    250:257:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    140:140:int getMode() -> getMode
    146:146:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    195:241:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    515:523:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    0:0:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    284:298:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    0:0:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
    343:480:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    127:129:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
# {"id":"sourceFile","fileName":"Visibility.java"}
    441:441:void <init>(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View) -> <init>
    459:461:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    445:445:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    450:453:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
# {"id":"sourceFile","fileName":"Visibility.java"}
    536:544:void <init>(android.view.View,int,boolean) -> <init>
    609:617:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    567:567:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    580:580:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    551:552:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    0:0:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    560:561:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    0:0:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    0:0:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    590:591:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    600:600:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    605:605:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    0:0:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
    621:623:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
# {"id":"sourceFile","fileName":"Visibility.java"}
    87:87:void <init>() -> <init>
androidx.transition.VisibilityPropagation -> androidx.transition.VisibilityPropagation:
# {"id":"sourceFile","fileName":"VisibilityPropagation.java"}
    38:38:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    45:57:void captureValues(androidx.transition.TransitionValues) -> captureValues
    62:62:java.lang.String[] getPropagationProperties() -> getPropagationProperties
    110:115:int getViewCoordinate(androidx.transition.TransitionValues,int) -> getViewCoordinate
    76:80:int getViewVisibility(androidx.transition.TransitionValues) -> getViewVisibility
    91:91:int getViewX(androidx.transition.TransitionValues) -> getViewX
    102:102:int getViewY(androidx.transition.TransitionValues) -> getViewY
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
# {"id":"sourceFile","fileName":"WindowIdApi18.java"}
    29:30:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.transition.WindowIdImpl -> androidx.transition.WindowIdImpl:
# {"id":"sourceFile","fileName":"WindowIdImpl.java"}
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
# {"id":"sourceFile","fileName":"AndroidResources.java"}
    22:134:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
# {"id":"sourceFile","fileName":"Animatable2Compat.java"}
    77:90:android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> getPlatformCallback
    0:0:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    0:0:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1:
# {"id":"sourceFile","fileName":"Animatable2Compat.java"}
    78:78:void <init>(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    86:86:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:81:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    168:168:void <init>() -> <init>
    172:172:void <init>(android.content.Context) -> <init>
    156:733:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    522:523:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    532:533:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    212:235:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> create
    253:254:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:290:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:266:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:511:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:517:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:194:android.graphics.drawable.Drawable mutate() -> mutate
    296:300:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    763:810:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    820:820:void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerPlatformCallback
    827:829:void removeAnimatorSetListener() -> removeAnimatorSetListener
    329:333:void setAlpha(int) -> setAlpha
    436:440:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:342:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:360:void setTint(int) -> setTint
    365:370:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:380:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    682:692:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    709:720:void start() -> start
    725:730:void stop() -> stop
    836:849:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    757:757:boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterPlatformCallback
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$ExternalSyntheticApiModelOutline0 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$InternalSyntheticApiModelOutline$1$67ad98d408e535cd7175ec12849e126f4acf83f7ba16f3f7985a043b7d2a0059$0.m(android.graphics.drawable.AnimatedVectorDrawable,android.graphics.drawable.Animatable2$AnimationCallback) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$ExternalSyntheticApiModelOutline1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$$InternalSyntheticApiModelOutline$1$dcc78f55e6b41efcd9a585fa14f046982c67e621439dbd9e042fe29e3487bfce$0.m(android.graphics.drawable.AnimatedVectorDrawable,android.graphics.drawable.Animatable2$AnimationCallback) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:736:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:741:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:746:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    788:788:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    801:805:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    791:795:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    599:627:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    648:651:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
# {"id":"sourceFile","fileName":"AnimatedVectorDrawableCompat.java"}
    548:549:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:557:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:566:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:575:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
# {"id":"sourceFile","fileName":"AnimationUtilsCompat.java"}
    68:68:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
# {"id":"sourceFile","fileName":"AnimatorInflaterCompat.java"}
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    514:568:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:783:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    809:809:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    207:327:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:664:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:649:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    0:0:boolean isColorType(int) -> isColorType
    100:103:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    131:147:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    147:148:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:911:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:864:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:874:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    696:771:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    579:624:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:376:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:425:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:493:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
# {"id":"sourceFile","fileName":"AnimatorInflaterCompat.java"}
    166:166:void <init>() -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:199:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
# {"id":"sourceFile","fileName":"ArgbEvaluator.java"}
    33:33:void <clinit>() -> <clinit>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
# {"id":"sourceFile","fileName":"VectorDrawableCommon.java"}
    29:29:void <init>() -> <init>
    95:96:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:107:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:87:void jumpToCurrentState() -> jumpToCurrentState
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:165:void setChangingConfigurations(int) -> setChangingConfigurations
    36:40:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:79:void setFilterBitmap(boolean) -> setFilterBitmap
    62:63:void setHotspot(float,float) -> setHotspot
    70:71:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    280:280:void <clinit>() -> <clinit>
    311:322:void <init>() -> <init>
    311:327:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    687:687:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:588:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:664:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    681:682:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:427:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:560:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:701:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:725:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    816:877:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    933:937:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:534:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:339:android.graphics.drawable.Drawable mutate() -> mutate
    908:909:boolean needMirroring() -> needMirroring
    918:919:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:551:boolean onStateChange(int[]) -> onStateChange
    736:746:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    942:946:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    902:902:void setAllowCaching(boolean) -> setAllowCaching
    441:448:void setAlpha(int) -> setAlpha
    604:608:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:460:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:493:void setTint(int) -> setTint
    498:507:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:522:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:963:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    754:810:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    482:483:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1768:1768:void <init>() -> <init>
    1773:1773:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1785:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    0:0:boolean isClipPath() -> isClipPath
    1793:1803:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1822:1835:void <init>() -> <init>
    1822:1855:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1861:1865:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1874:1878:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    1890:1893:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1960:1960:boolean isStateful() -> isStateful
    1965:1966:boolean onStateChanged(int[]) -> onStateChanged
    2033:2033:void setFillAlpha(float) -> setFillAlpha
    2023:2023:void setFillColor(int) -> setFillColor
    2012:2012:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1992:void setStrokeColor(int) -> setStrokeColor
    2002:2002:void setStrokeWidth(float) -> setStrokeWidth
    2053:2053:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2063:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2043:void setTrimPathStart(float) -> setTrimPathStart
    1901:1953:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1445:1500:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1445:1506:void <init>() -> <init>
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1518:1521:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1664:1665:boolean isStateful() -> isStateful
    1675:1676:boolean onStateChanged(int[]) -> onStateChanged
    1591:1593:void setPivotX(float) -> setPivotX
    1604:1606:void setPivotY(float) -> setPivotY
    1578:1580:void setRotation(float) -> setRotation
    1617:1619:void setScaleX(float) -> setScaleX
    1630:1632:void setScaleY(float) -> setScaleY
    1643:1645:void setTranslateX(float) -> setTranslateX
    1656:1658:void setTranslateY(float) -> setTranslateY
    1563:1567:void updateLocalMatrix() -> updateLocalMatrix
    1529:1557:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    0:0:boolean isStateful() -> isStateful
    0:0:boolean onStateChanged(int[]) -> onStateChanged
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1687:1693:void <init>() -> <init>
    1687:1722:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    0:0:boolean isClipPath() -> isClipPath
    1755:1759:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1726:1728:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1170:1170:void <clinit>() -> <clinit>
    1171:1194:void <init>() -> <init>
    1171:1230:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    0:0:float cross(float,float,float,float) -> cross
    1264:1264:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1239:1259:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1269:1373:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1213:1213:float getAlpha() -> getAlpha
    1393:1403:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1202:1202:int getRootAlpha() -> getRootAlpha
    1412:1415:boolean isStateful() -> isStateful
    1419:1419:boolean onStateChanged(int[]) -> onStateChanged
    1208:1208:void setAlpha(float) -> setAlpha
    1198:1198:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    1015:1045:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1015:1122:void <init>() -> <init>
    1093:1094:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1101:1105:boolean canReuseCache() -> canReuseCache
    1084:1087:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1052:1053:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1057:1057:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1143:1143:boolean isStateful() -> isStateful
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1147:1148:boolean onStateChanged(int[]) -> onStateChanged
    1114:1118:void updateCacheStates() -> updateCacheStates
    1078:1080:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
# {"id":"sourceFile","fileName":"VectorDrawableCompat.java"}
    975:976:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:982:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:989:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:997:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
# {"id":"sourceFile","fileName":"CustomVersionedParcelable.java"}
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
    60:60:void <clinit>() -> <clinit>
    38:39:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    56:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
# {"id":"sourceFile","fileName":"VersionedParcel.java"}
    86:89:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1628:1633:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1609:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1616:1621:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    0:0:boolean isStream() -> isStream
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1565:1577:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    0:0:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    294:295:void writeBoolean(boolean,int) -> writeBoolean
    304:305:void writeByteArray(byte[],int) -> writeByteArray
    325:326:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    334:335:void writeInt(int,int) -> writeInt
    391:392:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    370:371:void writeString(java.lang.String,int) -> writeString
    1586:1598:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1022:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1029:1036:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1042:1047:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcel$ParcelException -> androidx.versionedparcelable.VersionedParcel$ParcelException:
# {"id":"sourceFile","fileName":"VersionedParcel.java"}
    1642:1642:void <init>(java.lang.Throwable) -> <init>
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
# {"id":"sourceFile","fileName":"VersionedParcelParcel.java"}
    51:51:void <init>(android.os.Parcel) -> <init>
    41:65:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:109:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:241:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:94:void setOutputField(int) -> setOutputField
    181:181:void writeBoolean(boolean) -> writeBoolean
    127:130:void writeByteArray(byte[]) -> writeByteArray
    196:196:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:146:void writeInt(int) -> writeInt
    176:176:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:166:void writeString(java.lang.String) -> writeString
androidx.versionedparcelable.VersionedParcelable -> androidx.versionedparcelable.VersionedParcelable:
# {"id":"sourceFile","fileName":"VersionedParcelable.java"}
androidx.viewbinding.ViewBinding -> androidx.viewbinding.ViewBinding:
# {"id":"sourceFile","fileName":"ViewBinding.java"}
androidx.viewbinding.ViewBindings -> androidx.viewbinding.ViewBindings:
# {"id":"sourceFile","fileName":"ViewBindings.java"}
    40:46:android.view.View findChildViewById(android.view.View,int) -> findChildViewById
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
# {"id":"sourceFile","fileName":"PagerAdapter.java"}
    81:82:void <init>() -> <init>
    0:0:int getItemPosition(java.lang.Object) -> getItemPosition
    0:0:float getPageWidth(int) -> getPageWidth
    303:303:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    312:312:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.viewpager.widget.PagerTabStrip -> androidx.viewpager.widget.PagerTabStrip:
# {"id":"sourceFile","fileName":"PagerTabStrip.java"}
    83:83:void <init>(android.content.Context) -> <init>
    68:126:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:218:boolean getDrawFullUnderline() -> getDrawFullUnderline
    223:223:int getMinHeight() -> getMinHeight
    155:155:int getTabIndicatorColor() -> getTabIndicatorColor
    265:279:void onDraw(android.graphics.Canvas) -> onDraw
    228:255:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:186:void setBackgroundColor(int) -> setBackgroundColor
    176:178:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    192:194:void setBackgroundResource(int) -> setBackgroundResource
    205:207:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    160:163:void setPadding(int,int,int,int) -> setPadding
    136:138:void setTabIndicatorColor(int) -> setTabIndicatorColor
    147:147:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    168:171:void setTextSpacing(int) -> setTextSpacing
    285:300:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTabStrip$1 -> androidx.viewpager.widget.PagerTabStrip$1:
# {"id":"sourceFile","fileName":"PagerTabStrip.java"}
    110:110:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    113:113:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTabStrip$2 -> androidx.viewpager.widget.PagerTabStrip$2:
# {"id":"sourceFile","fileName":"PagerTabStrip.java"}
    118:118:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    121:121:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTitleStrip -> androidx.viewpager.widget.PagerTitleStrip:
# {"id":"sourceFile","fileName":"PagerTitleStrip.java"}
    73:80:void <clinit>() -> <clinit>
    109:109:void <init>(android.content.Context) -> <init>
    61:164:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    464:466:int getMinHeight() -> getMinHeight
    181:181:int getTextSpacing() -> getTextSpacing
    239:253:void onAttachedToWindow() -> onAttachedToWindow
    258:263:void onDetachedFromWindow() -> onDetachedFromWindow
    456:458:void onLayout(boolean,int,int,int,int) -> onLayout
    420:451:void onMeasure(int,int) -> onMeasure
    308:309:void requestLayout() -> requestLayout
    233:234:void setGravity(int) -> setGravity
    190:193:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    105:105:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    203:207:void setTextColor(int) -> setTextColor
    221:223:void setTextSize(int,float) -> setTextSize
    173:174:void setTextSpacing(int) -> setTextSpacing
    315:326:void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> updateAdapter
    268:303:void updateText(int,androidx.viewpager.widget.PagerAdapter) -> updateText
    331:415:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTitleStrip$PageListener -> androidx.viewpager.widget.PagerTitleStrip$PageListener:
# {"id":"sourceFile","fileName":"PagerTitleStrip.java"}
    475:475:void <init>(androidx.viewpager.widget.PagerTitleStrip) -> <init>
    506:506:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    511:514:void onChanged() -> onChanged
    500:500:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    484:484:void onPageScrolled(int,float,int) -> onPageScrolled
    489:494:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform -> androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform:
# {"id":"sourceFile","fileName":"PagerTitleStrip.java"}
    93:94:void <init>(android.content.Context) -> <init>
    99:100:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    122:251:void <clinit>() -> <clinit>
    155:392:void <init>(android.content.Context) -> <init>
    155:397:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2937:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1015:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    581:584:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:726:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2955:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1485:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2853:boolean arrowScroll(int) -> arrowScroll
    1298:1380:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2701:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1974:2005:void completeScroll(boolean) -> completeScroll
    1793:1814:void computeScroll() -> computeScroll
    1023:1087:void dataSetChanged() -> dataSetChanged
    2406:2418:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1935:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1952:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1969:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3008:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    929:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2462:void draw(android.graphics.Canvas) -> draw
    915:918:void drawableStateChanged() -> drawableStateChanged
    2659:2664:void endDrag() -> endDrag
    2757:2777:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:804:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2860:2879:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1514:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2397:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1535:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:427:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1545:void onAttachedToWindow() -> onAttachedToWindow
    479:484:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2500:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2161:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1788:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1638:void onMeasure(int,int) -> onMeasure
    1865:1919:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2985:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1466:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1445:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2653:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1650:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2287:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2886:boolean pageLeft() -> pageLeft
    2893:2894:boolean pageRight() -> pageRight
    1818:1844:boolean pageScrolled(int) -> pageScrolled
    2312:2353:boolean performDrag(float) -> performDrag
    1092:1092:void populate() -> populate
    1097:1272:void populate(int) -> populate
    1655:1675:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:559:void removeNonDecorViews() -> removeNonDecorViews
    594:595:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:737:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1507:void removeView(android.view.View) -> removeView
    2303:2305:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2298:boolean resetTouch() -> resetTouch
    676:694:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:549:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:612:void setCurrentItem(int) -> setCurrentItem
    622:623:void setCurrentItem(int,boolean) -> setCurrentItem
    631:631:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:670:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    815:816:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    850:856:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:709:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:875:void setPageMargin(int) -> setPageMargin
    893:896:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:905:void setPageMarginDrawable(int) -> setPageMarginDrawable
    769:769:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer) -> setPageTransformer
    790:797:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int) -> setPageTransformer
    488:497:void setScrollState(int) -> setScrollState
    2669:2670:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    950:1004:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1293:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    0:0:float getInterpolation(float) -> getInterpolation
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:273:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    436:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$DecorView -> androidx.viewpager.widget.ViewPager$DecorView:
# {"id":"sourceFile","fileName":"ViewPager.java"}
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
# {"id":"sourceFile","fileName":"ViewPager.java"}
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    3126:3145:void <init>() -> <init>
    3126:3153:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3047:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3060:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3078:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener -> androidx.viewpager.widget.ViewPager$OnAdapterChangeListener:
# {"id":"sourceFile","fileName":"ViewPager.java"}
androidx.viewpager.widget.ViewPager$OnPageChangeListener -> androidx.viewpager.widget.ViewPager$OnPageChangeListener:
# {"id":"sourceFile","fileName":"ViewPager.java"}
androidx.viewpager.widget.ViewPager$PageTransformer -> androidx.viewpager.widget.ViewPager$PageTransformer:
# {"id":"sourceFile","fileName":"ViewPager.java"}
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    3092:3092:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3097:void onChanged() -> onChanged
    3101:3101:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    1412:1412:void <clinit>() -> <clinit>
    1395:1395:void <init>(android.os.Parcelable) -> <init>
    1429:1435:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1402:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
androidx.viewpager2.R$styleable -> androidx.viewpager2.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.viewpager2.adapter.FragmentStateAdapter$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$2:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
    351:351:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$5 -> androidx.viewpager2.adapter.FragmentStateAdapter$5:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
    588:590:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
    657:657:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.widget.AnimateLayoutChangeDetector -> androidx.viewpager2.widget.AnimateLayoutChangeDetector:
# {"id":"sourceFile","fileName":"AnimateLayoutChangeDetector.java"}
    46:47:void <clinit>() -> <clinit>
    52:53:void <init>(androidx.recyclerview.widget.LinearLayoutManager) -> <init>
    66:110:boolean arePagesLaidOutContiguously() -> arePagesLaidOutContiguously
    117:119:boolean hasRunningChangingLayoutTransition() -> hasRunningChangingLayoutTransition
    127:135:boolean hasRunningChangingLayoutTransition(android.view.View) -> hasRunningChangingLayoutTransition
    60:61:boolean mayHaveInterferingAnimations() -> mayHaveInterferingAnimations
androidx.viewpager2.widget.AnimateLayoutChangeDetector$1 -> androidx.viewpager2.widget.AnimateLayoutChangeDetector$1:
# {"id":"sourceFile","fileName":"AnimateLayoutChangeDetector.java"}
    94:94:void <init>(androidx.viewpager2.widget.AnimateLayoutChangeDetector) -> <init>
    94:94:int compare(java.lang.Object,java.lang.Object) -> compare
    97:97:int compare(int[],int[]) -> compare
androidx.viewpager2.widget.CompositeOnPageChangeCallback -> androidx.viewpager2.widget.CompositeOnPageChangeCallback:
# {"id":"sourceFile","fileName":"CompositeOnPageChangeCallback.java"}
    34:35:void <init>(int) -> <init>
    42:42:void addOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> addOnPageChangeCallback
    86:90:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    58:62:void onPageScrolled(int,float,int) -> onPageScrolled
    72:76:void onPageSelected(int) -> onPageSelected
    95:95:void throwCallbackListModifiedWhileInUse(java.util.ConcurrentModificationException) -> throwCallbackListModifiedWhileInUse
androidx.viewpager2.widget.FakeDrag -> androidx.viewpager2.widget.FakeDrag:
# {"id":"sourceFile","fileName":"FakeDrag.java"}
    44:47:void <init>(androidx.viewpager2.widget.ViewPager2,androidx.viewpager2.widget.ScrollEventAdapter,androidx.recyclerview.widget.RecyclerView) -> <init>
    51:51:boolean isFakeDragging() -> isFakeDragging
androidx.viewpager2.widget.PageTransformerAdapter -> androidx.viewpager2.widget.PageTransformerAdapter:
# {"id":"sourceFile","fileName":"PageTransformerAdapter.java"}
    36:37:void <init>(androidx.recyclerview.widget.LinearLayoutManager) -> <init>
    0:0:androidx.viewpager2.widget.ViewPager2$PageTransformer getPageTransformer() -> getPageTransformer
    0:0:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    0:0:void onPageScrolled(int,float,int) -> onPageScrolled
    0:0:void onPageSelected(int) -> onPageSelected
    0:0:void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> setPageTransformer
androidx.viewpager2.widget.ScrollEventAdapter -> androidx.viewpager2.widget.ScrollEventAdapter:
# {"id":"sourceFile","fileName":"ScrollEventAdapter.java"}
    77:83:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    437:438:void dispatchScrolled(int,float,int) -> dispatchScrolled
    431:432:void dispatchSelected(int) -> dispatchSelected
    416:426:void dispatchStateChanged(int) -> dispatchStateChanged
    443:443:int getPosition() -> getPosition
    407:408:double getRelativeScrollPosition() -> getRelativeScrollPosition
    360:360:int getScrollState() -> getScrollState
    383:383:boolean isFakeDragging() -> isFakeDragging
    367:367:boolean isIdle() -> isIdle
    392:392:boolean isInAnyDraggingState() -> isInAnyDraggingState
    303:303:void notifyDataSetChangeHappened() -> notifyDataSetChangeHappened
    310:320:void notifyProgrammaticScroll(int,boolean) -> notifyProgrammaticScroll
    105:166:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    177:215:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
    87:95:void resetState() -> resetState
    356:356:void setOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> setOnPageChangeCallback
    287:299:void startDrag(boolean) -> startDrag
    224:283:void updateScrollEventValues() -> updateScrollEventValues
androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues -> androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues:
# {"id":"sourceFile","fileName":"ScrollEventAdapter.java"}
    452:452:void <init>() -> <init>
    456:458:void reset() -> reset
androidx.viewpager2.widget.ViewPager2 -> androidx.viewpager2.widget.ViewPager2:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    0:0:void <clinit>() -> <clinit>
    124:158:void <init>(android.content.Context) -> <init>
    124:163:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    124:168:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    855:855:boolean canScrollHorizontally(int) -> canScrollHorizontally
    860:860:boolean canScrollVertically(int) -> canScrollVertically
    364:375:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    263:263:androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener enforceChildFillListener() -> enforceChildFillListener
    285:288:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    482:482:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    675:675:int getCurrentItem() -> getCurrentItem
    1184:1184:int getItemDecorationCount() -> getItemDecorationCount
    850:850:int getOffscreenPageLimit() -> getOffscreenPageLimit
    573:573:int getOrientation() -> getOrientation
    556:559:int getPageSize() -> getPageSize
    687:687:int getScrollState() -> getScrollState
    179:254:void initialize(android.content.Context,android.util.AttributeSet) -> initialize
    761:761:boolean isFakeDragging() -> isFakeDragging
    577:577:boolean isRtl() -> isRtl
    803:803:boolean isUserInputEnabled() -> isUserInputEnabled
    949:950:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    516:531:void onLayout(boolean,int,int,int,int) -> onLayout
    498:510:void onMeasure(int,int) -> onMeasure
    328:336:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    308:317:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    488:489:void onViewAdded(android.view.View) -> onViewAdded
    956:959:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    470:470:void registerCurrentItemDataSetTracker(androidx.recyclerview.widget.RecyclerView$Adapter) -> registerCurrentItemDataSetTracker
    930:930:void requestTransform() -> requestTransform
    340:358:void restorePendingState() -> restorePendingState
    458:465:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    591:591:void setCurrentItem(int) -> setCurrentItem
    603:607:void setCurrentItem(int,boolean) -> setCurrentItem
    614:664:void setCurrentItemInternal(int,boolean) -> setCurrentItemInternal
    943:944:void setLayoutDirection(int) -> setLayoutDirection
    833:838:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    292:301:void setOrientation(android.content.Context,android.util.AttributeSet) -> setOrientation
    568:569:void setOrientation(int) -> setOrientation
    901:920:void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> setPageTransformer
    792:793:void setUserInputEnabled(boolean) -> setUserInputEnabled
    476:476:void unregisterCurrentItemDataSetTracker(androidx.recyclerview.widget.RecyclerView$Adapter) -> unregisterCurrentItemDataSetTracker
    537:552:void updateCurrentItem() -> updateCurrentItem
androidx.viewpager2.widget.ViewPager2$$ExternalSyntheticApiModelOutline0 -> androidx.viewpager2.widget.ViewPager2$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.viewpager2.widget.ViewPager2$$InternalSyntheticApiModelOutline$1$c5781bf7cf96823156066cfb24f6a9e3cf4c5bbe5790e5c46c481516e19b7390$0.m(androidx.viewpager2.widget.ViewPager2,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.viewpager2.widget.ViewPager2$1 -> androidx.viewpager2.widget.ViewPager2$1:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    133:133:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    136:137:void onChanged() -> onChanged
androidx.viewpager2.widget.ViewPager2$2 -> androidx.viewpager2.widget.ViewPager2$2:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    212:212:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    224:224:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    215:217:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.ViewPager2$3 -> androidx.viewpager2.widget.ViewPager2$3:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    230:230:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    233:235:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.ViewPager2$4 -> androidx.viewpager2.widget.ViewPager2$4:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    263:263:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    267:270:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    0:0:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
androidx.viewpager2.widget.ViewPager2$AccessibilityProvider -> androidx.viewpager2.widget.ViewPager2$AccessibilityProvider:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1220:1220:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1220:1220:void <init>(androidx.viewpager2.widget.ViewPager2,androidx.viewpager2.widget.ViewPager2$1) -> <init>
    0:0:boolean handlesGetAccessibilityClassName() -> handlesGetAccessibilityClassName
    0:0:boolean handlesLmPerformAccessibilityAction(int) -> handlesLmPerformAccessibilityAction
    0:0:boolean handlesPerformAccessibilityAction(int,android.os.Bundle) -> handlesPerformAccessibilityAction
    0:0:boolean handlesRvGetAccessibilityClassName() -> handlesRvGetAccessibilityClassName
    0:0:void onAttachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> onAttachAdapter
    0:0:void onDetachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> onDetachAdapter
    1230:1230:java.lang.String onGetAccessibilityClassName() -> onGetAccessibilityClassName
    0:0:void onInitialize(androidx.viewpager2.widget.CompositeOnPageChangeCallback,androidx.recyclerview.widget.RecyclerView) -> onInitialize
    0:0:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    0:0:void onLmInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onLmInitializeAccessibilityNodeInfo
    1273:1273:boolean onLmPerformAccessibilityAction(int) -> onLmPerformAccessibilityAction
    1262:1262:boolean onPerformAccessibilityAction(int,android.os.Bundle) -> onPerformAccessibilityAction
    0:0:void onRestorePendingState() -> onRestorePendingState
    1284:1284:java.lang.CharSequence onRvGetAccessibilityClassName() -> onRvGetAccessibilityClassName
    0:0:void onRvInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onRvInitializeAccessibilityEvent
    0:0:void onSetLayoutDirection() -> onSetLayoutDirection
    0:0:void onSetNewCurrentItem() -> onSetNewCurrentItem
    0:0:void onSetOrientation() -> onSetOrientation
    0:0:void onSetUserInputEnabled() -> onSetUserInputEnabled
androidx.viewpager2.widget.ViewPager2$BasicAccessibilityProvider -> androidx.viewpager2.widget.ViewPager2$BasicAccessibilityProvider:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1288:1288:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1291:1293:boolean handlesLmPerformAccessibilityAction(int) -> handlesLmPerformAccessibilityAction
    0:0:boolean handlesRvGetAccessibilityClassName() -> handlesRvGetAccessibilityClassName
    1307:1310:void onLmInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onLmInitializeAccessibilityNodeInfo
    1298:1299:boolean onLmPerformAccessibilityAction(int) -> onLmPerformAccessibilityAction
    1321:1322:java.lang.CharSequence onRvGetAccessibilityClassName() -> onRvGetAccessibilityClassName
androidx.viewpager2.widget.ViewPager2$DataSetChangeObserver -> androidx.viewpager2.widget.ViewPager2$DataSetChangeObserver:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1577:1577:void <init>() -> <init>
    1577:1577:void <init>(androidx.viewpager2.widget.ViewPager2$1) -> <init>
    1594:1594:void onItemRangeInserted(int,int) -> onItemRangeInserted
androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl -> androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1001:1002:void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context) -> <init>
    1024:1032:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    1017:1018:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1008:1011:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    0:0:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback -> androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    0:0:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    0:0:void onPageScrolled(int,float,int) -> onPageScrolled
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider -> androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1328:1340:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1539:1551:void addCollectionInfo(android.view.accessibility.AccessibilityNodeInfo) -> addCollectionInfo
    1555:1569:void addScrollActions(android.view.accessibility.AccessibilityNodeInfo) -> addScrollActions
    0:0:boolean handlesGetAccessibilityClassName() -> handlesGetAccessibilityClassName
    0:0:boolean handlesPerformAccessibilityAction(int,android.os.Bundle) -> handlesPerformAccessibilityAction
    1393:1395:void onAttachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> onAttachAdapter
    1402:1402:void onDetachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> onDetachAdapter
    1380:1381:java.lang.String onGetAccessibilityClassName() -> onGetAccessibilityClassName
    1356:1368:void onInitialize(androidx.viewpager2.widget.CompositeOnPageChangeCallback,androidx.recyclerview.widget.RecyclerView) -> onInitialize
    1431:1433:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1445:1452:boolean onPerformAccessibilityAction(int,android.os.Bundle) -> onPerformAccessibilityAction
    1388:1388:void onRestorePendingState() -> onRestorePendingState
    1458:1459:void onRvInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onRvInitializeAccessibilityEvent
    1426:1426:void onSetLayoutDirection() -> onSetLayoutDirection
    1413:1413:void onSetNewCurrentItem() -> onSetNewCurrentItem
    1408:1408:void onSetOrientation() -> onSetOrientation
    1418:1418:void onSetUserInputEnabled() -> onSetUserInputEnabled
    1468:1469:void setCurrentItemFromAccessibilityCommand(int) -> setCurrentItemFromAccessibilityCommand
    1478:1529:void updatePageAccessibilityActions() -> updatePageAccessibilityActions
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$1 -> androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$1:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1330:1330:void <init>(androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider) -> <init>
    1334:1335:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$2 -> androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$2:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1341:1341:void <init>(androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider) -> <init>
    1345:1346:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$3 -> androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$3:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1359:1359:void <init>(androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider) -> <init>
    1362:1362:void onChanged() -> onChanged
androidx.viewpager2.widget.ViewPager2$PageTransformer -> androidx.viewpager2.widget.ViewPager2$PageTransformer:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl -> androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1044:1044:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1054:1054:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl -> androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    967:968:void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context) -> <init>
    974:977:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    982:985:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    996:996:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    991:991:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.viewpager2.widget.ViewPager2$SavedState -> androidx.viewpager2.widget.ViewPager2$SavedState:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    412:412:void <clinit>() -> <clinit>
    385:386:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    390:391:void <init>(android.os.Parcel) -> <init>
    395:395:void <init>(android.os.Parcelable) -> <init>
    399:401:void readValues(android.os.Parcel,java.lang.ClassLoader) -> readValues
    406:409:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager2.widget.ViewPager2$SavedState$1 -> androidx.viewpager2.widget.ViewPager2$SavedState$1:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    412:412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    412:412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    415:415:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    422:422:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    412:412:java.lang.Object[] newArray(int) -> newArray
    427:427:androidx.viewpager2.widget.ViewPager2$SavedState[] newArray(int) -> newArray
androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition -> androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1062:1064:void <init>(int,androidx.recyclerview.widget.RecyclerView) -> <init>
    1069:1069:void run() -> run
androidx.window.core.AndroidLogger -> androidx.window.core.AndroidLogger:
# {"id":"sourceFile","fileName":"SpecificationComputer.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void debug(java.lang.String,java.lang.String) -> debug
androidx.window.core.Bounds -> androidx.window.core.Bounds:
# {"id":"sourceFile","fileName":"Bounds.kt"}
    30:34:void <init>(int,int,int,int) -> <init>
    36:36:void <init>(android.graphics.Rect) -> <init>
    73:80:boolean equals(java.lang.Object) -> equals
    53:53:int getHeight() -> getHeight
    31:31:int getLeft() -> getLeft
    32:32:int getTop() -> getTop
    47:47:int getWidth() -> getWidth
    86:89:int hashCode() -> hashCode
    65:65:boolean isZero() -> isZero
    41:41:android.graphics.Rect toRect() -> toRect
    68:68:java.lang.String toString() -> toString
androidx.window.core.BuildConfig -> androidx.window.core.BuildConfig:
# {"id":"sourceFile","fileName":"BuildConfig.kt"}
    27:27:void <clinit>() -> <clinit>
    27:27:androidx.window.core.SpecificationComputer$VerificationMode getVerificationMode() -> getVerificationMode
androidx.window.core.FailedSpecification -> androidx.window.core.FailedSpecification:
# {"id":"sourceFile","fileName":"SpecificationComputer.kt"}
    150:150:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode) -> <init>
    145:145:java.lang.Object getValue() -> <init>
    145:145:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode):145 -> <init>
    146:146:java.lang.String getTag() -> <init>
    146:146:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode):146 -> <init>
    147:147:java.lang.String getMessage() -> <init>
    147:147:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode):147 -> <init>
    148:148:androidx.window.core.Logger getLogger() -> <init>
    148:148:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode):148 -> <init>
    149:149:androidx.window.core.SpecificationComputer$VerificationMode getVerificationMode() -> <init>
    149:149:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode):149 -> <init>
    153:154:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode) -> <init>
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> <init>
    38:38:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode):154 -> <init>
    153:154:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode) -> <init>
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> <init>
    38:38:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.SpecificationComputer$VerificationMode):154 -> <init>
    162:168:java.lang.Object compute() -> compute
    0:0:androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1) -> require
androidx.window.core.FailedSpecification$WhenMappings -> androidx.window.core.FailedSpecification$WhenMappings:
# {"id":"sourceFile","fileName":"SpecificationComputer.kt"}
    0:0:void <clinit>() -> <clinit>
androidx.window.core.Logger -> androidx.window.core.Logger:
# {"id":"sourceFile","fileName":"SpecificationComputer.kt"}
androidx.window.core.SpecificationComputer -> androidx.window.core.SpecificationComputer:
# {"id":"sourceFile","fileName":"SpecificationComputer.kt"}
    0:0:void <clinit>() -> <clinit>
    87:87:java.lang.String createMessage(java.lang.Object,java.lang.String) -> createMessage
androidx.window.core.SpecificationComputer$Companion -> androidx.window.core.SpecificationComputer$Companion:
# {"id":"sourceFile","fileName":"SpecificationComputer.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    107:107:androidx.window.core.SpecificationComputer startSpecification(java.lang.Object,java.lang.String,androidx.window.core.SpecificationComputer$VerificationMode,androidx.window.core.Logger) -> startSpecification
    102:105:androidx.window.core.SpecificationComputer startSpecification$default(androidx.window.core.SpecificationComputer$Companion,java.lang.Object,java.lang.String,androidx.window.core.SpecificationComputer$VerificationMode,androidx.window.core.Logger,int,java.lang.Object) -> startSpecification$default
androidx.window.core.SpecificationComputer$VerificationMode -> androidx.window.core.SpecificationComputer$VerificationMode:
# {"id":"sourceFile","fileName":"SpecificationComputer.kt"}
    0:0:androidx.window.core.SpecificationComputer$VerificationMode[] $values() -> $values
    44:46:void <clinit>() -> <clinit>
    43:43:void <init>(java.lang.String,int) -> <init>
    0:0:androidx.window.core.SpecificationComputer$VerificationMode valueOf(java.lang.String) -> valueOf
    0:0:androidx.window.core.SpecificationComputer$VerificationMode[] values() -> values
androidx.window.core.ValidSpecification -> androidx.window.core.ValidSpecification:
# {"id":"sourceFile","fileName":"SpecificationComputer.kt"}
    116:120:void <init>(java.lang.Object,java.lang.String,androidx.window.core.SpecificationComputer$VerificationMode,androidx.window.core.Logger) -> <init>
    137:137:java.lang.Object compute() -> compute
    123:131:androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1) -> require
androidx.window.core.Version -> androidx.window.core.Version:
# {"id":"sourceFile","fileName":"Version.kt"}
    78:81:void <clinit>() -> <clinit>
    0:0:void <init>(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    24:32:void <init>(int,int,int,java.lang.String) -> <init>
    24:24:androidx.window.core.Version access$getVERSION_0_1$cp() -> access$getVERSION_0_1$cp
    24:24:int compareTo(java.lang.Object) -> compareTo
    56:56:int compareTo(androidx.window.core.Version) -> compareTo
    60:65:boolean equals(java.lang.Object) -> equals
    32:32:java.math.BigInteger getBigInteger() -> getBigInteger
    25:25:int getMajor() -> getMajor
    26:26:int getMinor() -> getMinor
    27:27:int getPatch() -> getPatch
    71:73:int hashCode() -> hashCode
    40:45:java.lang.String toString() -> toString
androidx.window.core.Version$Companion -> androidx.window.core.Version$Companion:
# {"id":"sourceFile","fileName":"Version.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    79:79:androidx.window.core.Version getVERSION_0_1() -> getVERSION_0_1
    93:104:androidx.window.core.Version parse(java.lang.String) -> parse
androidx.window.core.Version$bigInteger$2 -> androidx.window.core.Version$bigInteger$2:
# {"id":"sourceFile","fileName":"Version.kt"}
    0:0:void <init>(androidx.window.core.Version) -> <init>
    32:32:java.lang.Object invoke() -> invoke
    33:36:java.math.BigInteger invoke() -> invoke
androidx.window.core.WindowStrictModeException -> androidx.window.core.WindowStrictModeException:
# {"id":"sourceFile","fileName":"SpecificationComputer.kt"}
    28:28:void <init>(java.lang.String) -> <init>
androidx.window.layout.ActivityCompatHelperApi24 -> androidx.window.layout.ActivityCompatHelperApi24:
# {"id":"sourceFile","fileName":"ActivityCompatHelper.kt"}
    0:0:void <clinit>() -> <clinit>
    27:27:boolean isInMultiWindowMode(android.app.Activity) -> isInMultiWindowMode
androidx.window.layout.ActivityCompatHelperApi24$$ExternalSyntheticApiModelOutline0 -> androidx.window.layout.ActivityCompatHelperApi24$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.window.layout.ActivityCompatHelperApi24$$InternalSyntheticApiModelOutline$5$ba0a7e0d1a5801b5a9918ad754afca16624f5c1dfef70541f24437a4621cb6b7$0.m(android.app.Activity) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.ActivityCompatHelperApi30 -> androidx.window.layout.ActivityCompatHelperApi30:
# {"id":"sourceFile","fileName":"ActivityCompatHelper.kt"}
    0:0:void <clinit>() -> <clinit>
    34:34:android.graphics.Rect currentWindowBounds(android.app.Activity) -> currentWindowBounds
androidx.window.layout.ActivityCompatHelperApi30$$ExternalSyntheticApiModelOutline0 -> androidx.window.layout.ActivityCompatHelperApi30$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.WindowMetrics androidx.window.layout.ActivityCompatHelperApi30$$InternalSyntheticApiModelOutline$5$78d6518d06f8240b4446c2702a3e46bf4d0f1560947f37d480d8c0709be64655$0.m(android.view.WindowManager) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.ActivityCompatHelperApi30$$ExternalSyntheticApiModelOutline1 -> androidx.window.layout.ActivityCompatHelperApi30$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Rect androidx.window.layout.ActivityCompatHelperApi30$$InternalSyntheticApiModelOutline$5$78d6518d06f8240b4446c2702a3e46bf4d0f1560947f37d480d8c0709be64655$1.m(android.view.WindowMetrics) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.DisplayCompatHelperApi17 -> androidx.window.layout.DisplayCompatHelperApi17:
# {"id":"sourceFile","fileName":"DisplayCompatHelper.kt"}
    0:0:void <clinit>() -> <clinit>
    30:30:void getRealSize(android.view.Display,android.graphics.Point) -> getRealSize
androidx.window.layout.DisplayCompatHelperApi28 -> androidx.window.layout.DisplayCompatHelperApi28:
# {"id":"sourceFile","fileName":"DisplayCompatHelper.kt"}
    0:0:void <clinit>() -> <clinit>
    50:50:int safeInsetBottom(android.view.DisplayCutout) -> safeInsetBottom
    38:38:int safeInsetLeft(android.view.DisplayCutout) -> safeInsetLeft
    46:46:int safeInsetRight(android.view.DisplayCutout) -> safeInsetRight
    42:42:int safeInsetTop(android.view.DisplayCutout) -> safeInsetTop
androidx.window.layout.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline0 -> androidx.window.layout.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.window.layout.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$5$0d2fb2ea61a3cfb949ce4f396fdd817e2f7d83a2498c991fc396e8ec7af33dae$0.m(android.view.DisplayCutout) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline1 -> androidx.window.layout.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.window.layout.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$5$1c111a75696743a7261a0fac289c239a279054de5c383a2d7ff656970579a958$0.m(android.view.DisplayCutout) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline2 -> androidx.window.layout.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.window.layout.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$5$87078956c0285c5029a9e33748ac045b0a5e79db22006e45ef75e7c707da162a$0.m(android.view.DisplayCutout) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline3 -> androidx.window.layout.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int androidx.window.layout.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$5$d3c9b84e7a035199d0599bdc0c6a007ce77cabed6abbb098060d9c5d83110ffe$0.m(android.view.DisplayCutout) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.DisplayFeature -> androidx.window.layout.DisplayFeature:
# {"id":"sourceFile","fileName":"DisplayFeature.kt"}
androidx.window.layout.EmptyDecorator -> androidx.window.layout.EmptyDecorator:
# {"id":"sourceFile","fileName":"WindowInfoTracker.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker) -> decorate
androidx.window.layout.ExtensionInterfaceCompat -> androidx.window.layout.ExtensionInterfaceCompat:
# {"id":"sourceFile","fileName":"ExtensionInterfaceCompat.kt"}
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface -> androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface:
# {"id":"sourceFile","fileName":"ExtensionInterfaceCompat.kt"}
androidx.window.layout.ExtensionWindowLayoutInfoBackend -> androidx.window.layout.ExtensionWindowLayoutInfoBackend:
# {"id":"sourceFile","fileName":"ExtensionWindowLayoutInfoBackend.kt"}
    36:44:void <init>(androidx.window.extensions.layout.WindowLayoutComponent) -> <init>
    59:70:void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer) -> registerLayoutChangeCallback
    79:86:void unregisterLayoutChangeCallback(androidx.core.util.Consumer) -> unregisterLayoutChangeCallback
androidx.window.layout.ExtensionWindowLayoutInfoBackend$$ExternalSyntheticApiModelOutline0 -> androidx.window.layout.ExtensionWindowLayoutInfoBackend$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.function.Consumer androidx.window.layout.ExtensionWindowLayoutInfoBackend$$InternalSyntheticApiModelOutline$4$24852862f1b6801f6eb80b3a1c231aa6e7c768f1a4b7ea949e0933a9588b18cf$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer -> androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer:
# {"id":"sourceFile","fileName":"ExtensionWindowLayoutInfoBackend.kt"}
    94:94:void accept(java.lang.Object) -> <init>
    94:94:void <init>(android.app.Activity):94 -> <init>
    96:102:void <init>(android.app.Activity) -> <init>
    94:94:void accept(java.lang.Object) -> accept
    105:129:void accept(androidx.window.extensions.layout.WindowLayoutInfo) -> accept
    112:114:void addListener(androidx.core.util.Consumer) -> addListener
    125:125:boolean isEmpty() -> isEmpty
    119:120:void removeListener(androidx.core.util.Consumer) -> removeListener
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter -> androidx.window.layout.ExtensionsWindowLayoutInfoAdapter:
# {"id":"sourceFile","fileName":"ExtensionsWindowLayoutInfoAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    32:44:androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature) -> translate$window_release
    51:99:androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo) -> translate$window_release
    73:83:boolean validBounds(android.app.Activity,androidx.window.core.Bounds) -> validBounds
androidx.window.layout.FoldingFeature -> androidx.window.layout.FoldingFeature:
# {"id":"sourceFile","fileName":"FoldingFeature.kt"}
androidx.window.layout.FoldingFeature$Orientation -> androidx.window.layout.FoldingFeature$Orientation:
# {"id":"sourceFile","fileName":"FoldingFeature.kt"}
    71:77:void <clinit>() -> <clinit>
    59:59:void <init>(java.lang.String) -> <init>
    62:62:java.lang.String toString() -> toString
androidx.window.layout.FoldingFeature$Orientation$Companion -> androidx.window.layout.FoldingFeature$Orientation$Companion:
# {"id":"sourceFile","fileName":"FoldingFeature.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.window.layout.FoldingFeature$State -> androidx.window.layout.FoldingFeature$State:
# {"id":"sourceFile","fileName":"FoldingFeature.kt"}
    98:108:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String) -> <init>
    87:87:java.lang.String toString() -> toString
androidx.window.layout.FoldingFeature$State$Companion -> androidx.window.layout.FoldingFeature$State$Companion:
# {"id":"sourceFile","fileName":"FoldingFeature.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.window.layout.HardwareFoldingFeature -> androidx.window.layout.HardwareFoldingFeature:
# {"id":"sourceFile","fileName":"HardwareFoldingFeature.kt"}
    0:0:void <clinit>() -> <clinit>
    27:38:void <init>(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State) -> <init>
    74:80:boolean equals(java.lang.Object) -> equals
    42:42:android.graphics.Rect getBounds() -> getBounds
    60:63:androidx.window.layout.FoldingFeature$Orientation getOrientation() -> getOrientation
    34:34:androidx.window.layout.FoldingFeature$State getState() -> getState
    86:88:int hashCode() -> hashCode
    46:47:boolean isSeparating() -> isSeparating
    68:69:java.lang.String toString() -> toString
androidx.window.layout.HardwareFoldingFeature$Companion -> androidx.window.layout.HardwareFoldingFeature$Companion:
# {"id":"sourceFile","fileName":"HardwareFoldingFeature.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    97:98:void validateFeatureBounds$window_release(androidx.window.core.Bounds) -> validateFeatureBounds$window_release
androidx.window.layout.HardwareFoldingFeature$Type -> androidx.window.layout.HardwareFoldingFeature$Type:
# {"id":"sourceFile","fileName":"HardwareFoldingFeature.kt"}
    117:122:void <clinit>() -> <clinit>
    107:107:void <init>(java.lang.String) -> <init>
    107:107:androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp() -> access$getFOLD$cp
    107:107:androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp() -> access$getHINGE$cp
    110:110:java.lang.String toString() -> toString
androidx.window.layout.HardwareFoldingFeature$Type$Companion -> androidx.window.layout.HardwareFoldingFeature$Type$Companion:
# {"id":"sourceFile","fileName":"HardwareFoldingFeature.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    117:117:androidx.window.layout.HardwareFoldingFeature$Type getFOLD() -> getFOLD
    122:122:androidx.window.layout.HardwareFoldingFeature$Type getHINGE() -> getHINGE
androidx.window.layout.SafeWindowLayoutComponentProvider -> androidx.window.layout.SafeWindowLayoutComponentProvider:
# {"id":"sourceFile","fileName":"SafeWindowLayoutComponentProvider.kt"}
    32:32:void <clinit>() -> <clinit>
    30:30:boolean access$canUseWindowLayoutComponent(androidx.window.layout.SafeWindowLayoutComponentProvider,java.lang.ClassLoader) -> access$canUseWindowLayoutComponent
    30:30:boolean access$doesReturn(androidx.window.layout.SafeWindowLayoutComponentProvider,java.lang.reflect.Method,java.lang.Class) -> access$doesReturn
    30:30:boolean access$doesReturn(androidx.window.layout.SafeWindowLayoutComponentProvider,java.lang.reflect.Method,kotlin.reflect.KClass) -> access$doesReturn
    30:30:java.lang.Class access$foldingFeatureClass(androidx.window.layout.SafeWindowLayoutComponentProvider,java.lang.ClassLoader) -> access$foldingFeatureClass
    30:30:boolean access$isPublic(androidx.window.layout.SafeWindowLayoutComponentProvider,java.lang.reflect.Method) -> access$isPublic
    30:30:java.lang.Class access$windowExtensionsClass(androidx.window.layout.SafeWindowLayoutComponentProvider,java.lang.ClassLoader) -> access$windowExtensionsClass
    30:30:java.lang.Class access$windowExtensionsProviderClass(androidx.window.layout.SafeWindowLayoutComponentProvider,java.lang.ClassLoader) -> access$windowExtensionsProviderClass
    30:30:java.lang.Class access$windowLayoutComponentClass(androidx.window.layout.SafeWindowLayoutComponentProvider,java.lang.ClassLoader) -> access$windowLayoutComponentClass
    46:50:boolean canUseWindowLayoutComponent(java.lang.ClassLoader) -> canUseWindowLayoutComponent
    124:124:boolean doesReturn(java.lang.reflect.Method,kotlin.reflect.KClass) -> doesReturn
    128:128:boolean doesReturn(java.lang.reflect.Method,java.lang.Class) -> doesReturn
    138:138:java.lang.Class foldingFeatureClass(java.lang.ClassLoader) -> foldingFeatureClass
    32:32:androidx.window.extensions.layout.WindowLayoutComponent getWindowLayoutComponent() -> getWindowLayoutComponent
    78:78:boolean isFoldingFeatureValid(java.lang.ClassLoader) -> isFoldingFeatureValid
    120:120:boolean isPublic(java.lang.reflect.Method) -> isPublic
    67:67:boolean isWindowExtensionsValid(java.lang.ClassLoader) -> isWindowExtensionsValid
    94:94:boolean isWindowLayoutComponentValid(java.lang.ClassLoader) -> isWindowLayoutComponentValid
    57:57:boolean isWindowLayoutProviderValid(java.lang.ClassLoader) -> isWindowLayoutProviderValid
    110:110:boolean validate(kotlin.jvm.functions.Function0) -> validate
    135:135:java.lang.Class windowExtensionsClass(java.lang.ClassLoader) -> windowExtensionsClass
    132:132:java.lang.Class windowExtensionsProviderClass(java.lang.ClassLoader) -> windowExtensionsProviderClass
    141:141:java.lang.Class windowLayoutComponentClass(java.lang.ClassLoader) -> windowLayoutComponentClass
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1 -> androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1:
# {"id":"sourceFile","fileName":"SafeWindowLayoutComponentProvider.kt"}
    0:0:void <init>(java.lang.ClassLoader) -> <init>
    78:78:java.lang.Object invoke() -> invoke
    79:88:java.lang.Boolean invoke() -> invoke
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowExtensionsValid$1 -> androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowExtensionsValid$1:
# {"id":"sourceFile","fileName":"SafeWindowLayoutComponentProvider.kt"}
    0:0:void <init>(java.lang.ClassLoader) -> <init>
    67:67:java.lang.Object invoke() -> invoke
    68:73:java.lang.Boolean invoke() -> invoke
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutComponentValid$1 -> androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutComponentValid$1:
# {"id":"sourceFile","fileName":"SafeWindowLayoutComponentProvider.kt"}
    0:0:void <init>(java.lang.ClassLoader) -> <init>
    94:94:java.lang.Object invoke() -> invoke
    95:104:java.lang.Boolean invoke() -> invoke
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutComponentValid$1$$ExternalSyntheticApiModelOutline0 -> androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutComponentValid$1$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Class androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutComponentValid$1$$InternalSyntheticApiModelOutline$3$280592a82a566970ce7085e450585e2f794fe1d527c7f422ce26b4465802a73b$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1 -> androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1:
# {"id":"sourceFile","fileName":"SafeWindowLayoutComponentProvider.kt"}
    0:0:void <init>(java.lang.ClassLoader) -> <init>
    57:57:java.lang.Object invoke() -> invoke
    58:62:java.lang.Boolean invoke() -> invoke
androidx.window.layout.SafeWindowLayoutComponentProvider$windowLayoutComponent$2 -> androidx.window.layout.SafeWindowLayoutComponentProvider$windowLayoutComponent$2:
# {"id":"sourceFile","fileName":"SafeWindowLayoutComponentProvider.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    32:32:java.lang.Object invoke() -> invoke
    33:41:androidx.window.extensions.layout.WindowLayoutComponent invoke() -> invoke
androidx.window.layout.SidecarAdapter -> androidx.window.layout.SidecarAdapter:
# {"id":"sourceFile","fileName":"SidecarAdapter.kt"}
    194:194:void <clinit>() -> <clinit>
    40:40:void <init>(androidx.window.core.SpecificationComputer$VerificationMode,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    40:40:void <init>(androidx.window.core.SpecificationComputer$VerificationMode):40 -> <init>
    40:40:void <init>(androidx.window.core.SpecificationComputer$VerificationMode,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    70:80:boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState) -> isEqualSidecarDeviceState
    132:144:boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature) -> isEqualSidecarDisplayFeature
    115:121:boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List) -> isEqualSidecarDisplayFeatures
    88:99:boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo) -> isEqualSidecarWindowLayoutInfo
    56:63:androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState) -> translate
    47:334:java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState) -> translate
    159:190:androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState) -> translate$window_release
androidx.window.layout.SidecarAdapter$Companion -> androidx.window.layout.SidecarAdapter$Companion:
# {"id":"sourceFile","fileName":"SidecarAdapter.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    273:277:int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState) -> getRawSidecarDevicePosture
    258:258:int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState) -> getSidecarDevicePosture$window_release
    201:223:java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo) -> getSidecarDisplayFeatures
    300:307:void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int) -> setSidecarDevicePosture
androidx.window.layout.SidecarAdapter$translate$checkedFeature$1 -> androidx.window.layout.SidecarAdapter$translate$checkedFeature$1:
# {"id":"sourceFile","fileName":"SidecarAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    160:160:java.lang.Object invoke(java.lang.Object) -> invoke
    161:161:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature) -> invoke
androidx.window.layout.SidecarAdapter$translate$checkedFeature$2 -> androidx.window.layout.SidecarAdapter$translate$checkedFeature$2:
# {"id":"sourceFile","fileName":"SidecarAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    163:163:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature) -> invoke
    163:163:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.window.layout.SidecarAdapter$translate$checkedFeature$3 -> androidx.window.layout.SidecarAdapter$translate$checkedFeature$3:
# {"id":"sourceFile","fileName":"SidecarAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    164:164:java.lang.Object invoke(java.lang.Object) -> invoke
    165:168:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature) -> invoke
androidx.window.layout.SidecarAdapter$translate$checkedFeature$4 -> androidx.window.layout.SidecarAdapter$translate$checkedFeature$4:
# {"id":"sourceFile","fileName":"SidecarAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    171:171:java.lang.Object invoke(java.lang.Object) -> invoke
    172:172:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature) -> invoke
androidx.window.layout.SidecarCompat -> androidx.window.layout.SidecarCompat:
# {"id":"sourceFile","fileName":"SidecarCompat.kt"}
    0:0:void <clinit>() -> <clinit>
    49:59:void <init>(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter) -> <init>
    62:64:void <init>(android.content.Context) -> <init>
    49:49:androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat) -> access$getExtensionCallback$p
    49:49:androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat) -> access$getSidecarAdapter$p
    49:49:java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat) -> access$getWindowListenerRegisteredContexts$p
    51:51:androidx.window.sidecar.SidecarInterface getSidecar() -> getSidecar
    79:83:androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity) -> getWindowLayoutInfo
    88:93:void onWindowLayoutChangeListenerAdded(android.app.Activity) -> onWindowLayoutChangeListenerAdded
    139:145:void onWindowLayoutChangeListenerRemoved(android.app.Activity) -> onWindowLayoutChangeListenerRemoved
    104:112:void register(android.os.IBinder,android.app.Activity) -> register
    118:134:void registerConfigurationChangeListener(android.app.Activity) -> registerConfigurationChangeListener
    68:72:void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface) -> setExtensionCallback
    150:152:void unregisterComponentCallback(android.app.Activity) -> unregisterComponentCallback
    159:282:boolean validateExtensionInterface() -> validateExtensionInterface
androidx.window.layout.SidecarCompat$Companion -> androidx.window.layout.SidecarCompat$Companion:
# {"id":"sourceFile","fileName":"SidecarCompat.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    475:475:android.os.IBinder getActivityWindowToken$window_release(android.app.Activity) -> getActivityWindowToken$window_release
    467:467:androidx.window.sidecar.SidecarInterface getSidecarCompat$window_release(android.content.Context) -> getSidecarCompat$window_release
    452:453:androidx.window.core.Version getSidecarVersion() -> getSidecarVersion
androidx.window.layout.SidecarCompat$DistinctElementCallback -> androidx.window.layout.SidecarCompat$DistinctElementCallback:
# {"id":"sourceFile","fileName":"SidecarCompat.kt"}
    375:385:void <init>(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface) -> <init>
    390:397:void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo) -> onWindowLayoutChanged
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback -> androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback:
# {"id":"sourceFile","fileName":"SidecarCompat.kt"}
    408:422:void <init>(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback) -> <init>
    424:430:void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState) -> onDeviceStateChanged
    437:444:void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo) -> onWindowLayoutChanged
androidx.window.layout.SidecarCompat$FirstAttachAdapter -> androidx.window.layout.SidecarCompat$FirstAttachAdapter:
# {"id":"sourceFile","fileName":"SidecarCompat.kt"}
    302:306:void <init>(androidx.window.layout.SidecarCompat,android.app.Activity) -> <init>
    308:323:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.window.layout.SidecarCompat$TranslatingCallback -> androidx.window.layout.SidecarCompat$TranslatingCallback:
# {"id":"sourceFile","fileName":"SidecarCompat.kt"}
    334:334:void <init>(androidx.window.layout.SidecarCompat) -> <init>
    337:479:void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState) -> onDeviceStateChanged
    352:365:void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo) -> onWindowLayoutChanged
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1 -> androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1:
# {"id":"sourceFile","fileName":"SidecarCompat.kt"}
    121:121:void <init>(androidx.window.layout.SidecarCompat,android.app.Activity) -> <init>
    123:125:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    0:0:void onLowMemory() -> onLowMemory
androidx.window.layout.SidecarWindowBackend -> androidx.window.layout.SidecarWindowBackend:
# {"id":"sourceFile","fileName":"SidecarWindowBackend.kt"}
    174:174:void <clinit>() -> <clinit>
    36:36:void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend) -> <init>
    36:36:void <init>(androidx.window.layout.ExtensionInterfaceCompat):36 -> <init>
    37:51:void <init>(androidx.window.layout.ExtensionInterfaceCompat) -> <init>
    36:36:void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend) -> access$getGlobalInstance$cp
    36:36:androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp():36 -> access$getGlobalInstance$cp
    36:36:void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend) -> access$getGlobalLock$cp
    36:36:java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp():36 -> access$getGlobalLock$cp
    36:36:void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend) -> access$setGlobalInstance$cp
    127:250:void callbackRemovedForActivity(android.app.Activity) -> callbackRemovedForActivity
    39:39:void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat) -> getWindowExtension
    39:39:androidx.window.layout.ExtensionInterfaceCompat getWindowExtension():39 -> getWindowExtension
    47:47:java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks() -> getWindowLayoutChangeCallbacks
    90:247:boolean isActivityRegistered(android.app.Activity) -> isActivityRegistered
    59:244:void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer) -> registerLayoutChangeCallback
    96:118:void unregisterLayoutChangeCallback(androidx.core.util.Consumer) -> unregisterLayoutChangeCallback
androidx.window.layout.SidecarWindowBackend$Companion -> androidx.window.layout.SidecarWindowBackend$Companion:
# {"id":"sourceFile","fileName":"SidecarWindowBackend.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    181:189:androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context) -> getInstance
    200:202:androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context) -> initAndVerifyExtension
    232:232:boolean isSidecarVersionSupported(androidx.window.core.Version) -> isSidecarVersionSupported
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl -> androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl:
# {"id":"sourceFile","fileName":"SidecarWindowBackend.kt"}
    137:138:void <init>(androidx.window.layout.SidecarWindowBackend) -> <init>
    144:148:void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo) -> onWindowLayoutChanged
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper -> androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper:
# {"id":"sourceFile","fileName":"SidecarWindowBackend.kt"}
    0:0:void $r8$lambda$jkQHaIq6yFprTVBW9h6wk0oO_6g(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo) -> $r8$lambda$jkQHaIq6yFprTVBW9h6wk0oO_6g
      # {"id":"com.android.tools.r8.synthesized"}
    157:160:void <init>(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer) -> <init>
    164:165:void accept(androidx.window.layout.WindowLayoutInfo) -> accept
    165:165:void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo) -> accept$lambda-0
    158:158:android.app.Activity getActivity() -> getActivity
    160:160:androidx.core.util.Consumer getCallback() -> getCallback
    162:162:androidx.window.layout.WindowLayoutInfo getLastInfo() -> getLastInfo
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$ExternalSyntheticLambda0 -> androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$4$5b297a89a87dc75c426200de0eed5984b5587cef241f854e8c1c129f35b724d6$0.f$0 -> f$0
    androidx.window.layout.WindowLayoutInfo androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$4$5b297a89a87dc75c426200de0eed5984b5587cef241f854e8c1c129f35b724d6$0.f$1 -> f$1
    0:0:void androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$4$5b297a89a87dc75c426200de0eed5984b5587cef241f854e8c1c129f35b724d6$0.<init>(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$4$5b297a89a87dc75c426200de0eed5984b5587cef241f854e8c1c129f35b724d6$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowBackend -> androidx.window.layout.WindowBackend:
# {"id":"sourceFile","fileName":"WindowBackend.kt"}
androidx.window.layout.WindowInfoTracker -> androidx.window.layout.WindowInfoTracker:
# {"id":"sourceFile","fileName":"WindowInfoTracker.kt"}
    0:0:void <clinit>() -> <clinit>
androidx.window.layout.WindowInfoTracker$-CC -> androidx.window.layout.WindowInfoTracker$-CC:
# {"id":"sourceFile","fileName":"WindowInfoTracker.kt"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:androidx.window.layout.WindowInfoTracker androidx.window.layout.WindowInfoTracker.getOrCreate(android.content.Context) -> getOrCreate
    0:0:androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context):0 -> getOrCreate
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowInfoTracker$Companion -> androidx.window.layout.WindowInfoTracker$Companion:
# {"id":"sourceFile","fileName":"WindowInfoTracker.kt"}
    53:55:void <clinit>() -> <clinit>
    67:71:androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context) -> getOrCreate
    77:85:androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context) -> windowBackend$window_release
androidx.window.layout.WindowInfoTrackerDecorator -> androidx.window.layout.WindowInfoTrackerDecorator:
# {"id":"sourceFile","fileName":"WindowInfoTracker.kt"}
androidx.window.layout.WindowInfoTrackerImpl -> androidx.window.layout.WindowInfoTrackerImpl:
# {"id":"sourceFile","fileName":"WindowInfoTrackerImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    34:36:void <init>(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend) -> <init>
    34:34:androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl) -> access$getWindowBackend$p
    46:46:kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity) -> windowLayoutInfo
androidx.window.layout.WindowInfoTrackerImpl$Companion -> androidx.window.layout.WindowInfoTrackerImpl$Companion:
# {"id":"sourceFile","fileName":"WindowInfoTrackerImpl.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1 -> androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1:
# {"id":"sourceFile","fileName":"WindowInfoTrackerImpl.kt"}
    0:0:void $r8$lambda$LgDWJbk4b494d79uZZm3iJ0WM6A(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo) -> $r8$lambda$LgDWJbk4b494d79uZZm3iJ0WM6A
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void <init>(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    46:60:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    58:60:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    51:51:void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo) -> invokeSuspend$lambda-0
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$$ExternalSyntheticLambda0 -> androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlinx.coroutines.channels.Channel androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$$InternalSyntheticLambda$3$5eed977099402dd0630f468cdc7dbc00c97a3870a6a03630bb84a9e1c0afeca0$0.f$0 -> f$0
    0:0:void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$$InternalSyntheticLambda$3$5eed977099402dd0630f468cdc7dbc00c97a3870a6a03630bb84a9e1c0afeca0$0.<init>(kotlinx.coroutines.channels.Channel) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$$InternalSyntheticLambda$3$5eed977099402dd0630f468cdc7dbc00c97a3870a6a03630bb84a9e1c0afeca0$0.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$$ExternalSyntheticLambda1 -> androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$$InternalSyntheticLambda$3$5eed977099402dd0630f468cdc7dbc00c97a3870a6a03630bb84a9e1c0afeca0$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$$InternalSyntheticLambda$3$5eed977099402dd0630f468cdc7dbc00c97a3870a6a03630bb84a9e1c0afeca0$1.execute(java.lang.Runnable) -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowLayoutInfo -> androidx.window.layout.WindowLayoutInfo:
# {"id":"sourceFile","fileName":"WindowLayoutInfo.kt"}
    41:42:void <init>(java.util.List) -> <init>
    55:57:boolean equals(java.lang.Object) -> equals
    35:35:java.util.List getDisplayFeatures() -> getDisplayFeatures
    61:61:int hashCode() -> hashCode
    46:46:java.lang.String toString() -> toString
androidx.window.layout.WindowMetrics -> androidx.window.layout.WindowMetrics:
# {"id":"sourceFile","fileName":"WindowMetrics.kt"}
    32:32:void <init>(androidx.window.core.Bounds) -> <init>
    39:39:void <init>(android.graphics.Rect) -> <init>
    61:63:boolean equals(java.lang.Object) -> equals
    53:53:android.graphics.Rect getBounds() -> getBounds
    67:67:int hashCode() -> hashCode
    56:56:java.lang.String toString() -> toString
androidx.window.layout.WindowMetricsCalculator -> androidx.window.layout.WindowMetricsCalculator:
# {"id":"sourceFile","fileName":"WindowMetricsCalculator.kt"}
androidx.window.layout.WindowMetricsCalculatorCompat -> androidx.window.layout.WindowMetricsCalculatorCompat:
# {"id":"sourceFile","fileName":"WindowMetricsCalculatorCompat.kt"}
    46:46:void <clinit>() -> <clinit>
    53:64:androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity) -> computeCurrentWindowMetrics
    274:284:android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity) -> computeWindowBoundsIceCreamSandwich$window_release
    237:255:android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity) -> computeWindowBoundsN$window_release
    128:202:android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity) -> computeWindowBoundsP$window_release
    90:111:android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity) -> computeWindowBoundsQ$window_release
    352:365:android.view.DisplayCutout getCutoutForDisplay(android.view.Display) -> getCutoutForDisplay
    334:337:int getNavigationBarHeight(android.content.Context) -> getNavigationBarHeight
    303:305:android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display) -> getRealSizeForDisplay$window_release
    213:217:void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect) -> getRectSizeFromDisplay
androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline0 -> androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean androidx.window.layout.WindowMetricsCalculatorCompat$$InternalSyntheticApiModelOutline$5$fec12a0d2db9672587b75f0d9357eb68b131cde69fd9f877e73a50b9815945fb$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline1 -> androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.DisplayCutout androidx.window.layout.WindowMetricsCalculatorCompat$$InternalSyntheticApiModelOutline$5$fec12a0d2db9672587b75f0d9357eb68b131cde69fd9f877e73a50b9815945fb$1.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.chad.library.DataBinderMapperImpl -> com.chad.library.DataBinderMapperImpl:
# {"id":"sourceFile","fileName":"DataBinderMapperImpl.java"}
    19:19:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
com.chad.library.adapter.base.BaseQuickAdapter -> com.chad.library.adapter.base.BaseQuickAdapter:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(int) -> <init>
    77:77:void <init>(int,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    78:511:void <init>(int,java.util.List) -> <init>
    75:75:void access$setMEmptyLayout$p(com.chad.library.adapter.base.BaseQuickAdapter,android.widget.FrameLayout) -> access$getMSpanSizeLookup$p
    75:75:com.chad.library.adapter.base.listener.GridSpanSizeLookup access$getMSpanSizeLookup$p(com.chad.library.adapter.base.BaseQuickAdapter):75 -> access$getMSpanSizeLookup$p
    1088:1091:void addAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimation
    13416:13416:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.foldRightIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> addAnimation
    13416:13416:void addAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):1091 -> addAnimation
    1092:1094:void addAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimation
    1231:1233:void addData(java.lang.Object) -> addData
    532:533:void bindViewClickListener(com.chad.library.adapter.base.viewholder.BaseViewHolder,int) -> bindViewClickListener
    0:0:void checkModule() -> checkModule
    1298:1299:void compatibilityDataSizeChanged(int) -> compatibilityDataSizeChanged
    0:0:void convert(com.chad.library.adapter.base.viewholder.BaseViewHolder,java.lang.Object,java.util.List) -> convert
    726:742:com.chad.library.adapter.base.viewholder.BaseViewHolder createBaseGenericKInstance(java.lang.Class,android.view.View) -> createBaseGenericKInstance
    654:654:com.chad.library.adapter.base.viewholder.BaseViewHolder createBaseViewHolder(android.view.ViewGroup,int) -> createBaseViewHolder
    665:677:com.chad.library.adapter.base.viewholder.BaseViewHolder createBaseViewHolder(android.view.View) -> createBaseViewHolder
    195:195:android.content.Context getContext() -> getContext
    92:92:void <init>(int,java.util.List) -> getData
    92:92:java.util.List getData():92 -> getData
    634:634:int getDefItemCount() -> getDefItemCount
    642:642:int getDefItemViewType(int) -> getDefItemViewType
    977:977:int getFooterLayoutCount() -> getFooterLayoutCount
    111:111:void setFooterViewAsFlow(boolean) -> getFooterViewAsFlow
    111:111:boolean getFooterViewAsFlow():111 -> getFooterViewAsFlow
    866:866:int getHeaderLayoutCount() -> getHeaderLayoutCount
    110:110:void setHeaderViewAsFlow(boolean) -> getHeaderViewAsFlow
    110:110:boolean getHeaderViewAsFlow():110 -> getHeaderViewAsFlow
    688:709:java.lang.Class getInstancedGenericKClass(java.lang.Class) -> getInstancedGenericKClass
    473:473:java.lang.Object getItem(int) -> getItem
    293:308:int getItemCount() -> getItemCount
    0:0:long getItemId(int) -> getItemId
    320:352:int getItemViewType(int) -> getItemViewType
    187:190:androidx.recyclerview.widget.RecyclerView getRecyclerView() -> getRecyclerView
    1054:1060:boolean hasEmptyView() -> hasEmptyView
    950:950:boolean hasFooterLayout() -> hasFooterLayout
    821:821:boolean hasHeaderLayout() -> hasHeaderLayout
    0:0:boolean isFixedViewType(int) -> isFixedViewType
    424:433:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    75:75:void access$setMEmptyLayout$p(com.chad.library.adapter.base.BaseQuickAdapter,android.widget.FrameLayout) -> onBindViewHolder
    75:75:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):75 -> onBindViewHolder
    75:75:void access$setMEmptyLayout$p(com.chad.library.adapter.base.BaseQuickAdapter,android.widget.FrameLayout) -> onBindViewHolder
    75:75:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List):75 -> onBindViewHolder
    368:378:void onBindViewHolder(com.chad.library.adapter.base.viewholder.BaseViewHolder,int) -> onBindViewHolder
    383:398:void onBindViewHolder(com.chad.library.adapter.base.viewholder.BaseViewHolder,int,java.util.List) -> onBindViewHolder
    650:650:com.chad.library.adapter.base.viewholder.BaseViewHolder onCreateDefViewHolder(android.view.ViewGroup,int) -> onCreateDefViewHolder
    75:75:void access$setMEmptyLayout$p(com.chad.library.adapter.base.BaseQuickAdapter,android.widget.FrameLayout) -> onCreateViewHolder
    75:75:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):75 -> onCreateViewHolder
    247:279:com.chad.library.adapter.base.viewholder.BaseViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    457:458:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    0:0:void onItemViewHolderCreated(com.chad.library.adapter.base.viewholder.BaseViewHolder,int) -> onItemViewHolderCreated
    75:75:void access$setMEmptyLayout$p(com.chad.library.adapter.base.BaseQuickAdapter,android.widget.FrameLayout) -> onViewAttachedToWindow
    75:75:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):75 -> onViewAttachedToWindow
    414:419:void onViewAttachedToWindow(com.chad.library.adapter.base.viewholder.BaseViewHolder) -> onViewAttachedToWindow
    757:759:void setFullSpan(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFullSpan
    1141:1141:void setNewData(java.util.List) -> setNewData
    1152:1160:void setNewInstance(java.util.List) -> setNewInstance
    597:597:void setOnItemClick(android.view.View,int) -> setOnItemClick
    1378:1378:void setOnItemClickListener(com.chad.library.adapter.base.listener.OnItemClickListener) -> setOnItemClickListener
    1107:1107:void startAnim(android.animation.Animator,int) -> startAnim
com.chad.library.adapter.base.BaseQuickAdapter$AnimationType -> com.chad.library.adapter.base.BaseQuickAdapter$AnimationType:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    1113:1113:void <init>(java.lang.String,int) -> <init>
    0:0:com.chad.library.adapter.base.BaseQuickAdapter$AnimationType valueOf(java.lang.String) -> valueOf
    0:0:com.chad.library.adapter.base.BaseQuickAdapter$AnimationType[] values() -> values
com.chad.library.adapter.base.BaseQuickAdapter$Companion -> com.chad.library.adapter.base.BaseQuickAdapter$Companion:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
    80:80:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.chad.library.adapter.base.BaseQuickAdapter$bindViewClickListener$$inlined$let$lambda$1 -> com.chad.library.adapter.base.BaseQuickAdapter$bindViewClickListener$$inlined$let$lambda$1:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
    0:0:void <init>(com.chad.library.adapter.base.BaseQuickAdapter,com.chad.library.adapter.base.viewholder.BaseViewHolder) -> <init>
    534:539:void onClick(android.view.View) -> onClick
com.chad.library.adapter.base.BaseQuickAdapter$onAttachedToRecyclerView$1 -> com.chad.library.adapter.base.BaseQuickAdapter$onAttachedToRecyclerView$1:
# {"id":"sourceFile","fileName":"BaseQuickAdapter.kt"}
    433:433:void <init>(com.chad.library.adapter.base.BaseQuickAdapter,androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> <init>
    435:443:int getSpanSize(int) -> getSpanSize
com.chad.library.adapter.base.animation.AlphaInAnimation -> com.chad.library.adapter.base.animation.AlphaInAnimation:
# {"id":"sourceFile","fileName":"AlphaInAnimation.kt"}
    0:0:void <clinit>() -> <clinit>
    11:11:void <init>(float) -> <init>
    11:11:void <init>(float,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    13:15:android.animation.Animator[] animators(android.view.View) -> animators
com.chad.library.adapter.base.animation.AlphaInAnimation$Companion -> com.chad.library.adapter.base.animation.AlphaInAnimation$Companion:
# {"id":"sourceFile","fileName":"AlphaInAnimation.kt"}
    19:19:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.chad.library.adapter.base.animation.BaseAnimation -> com.chad.library.adapter.base.animation.BaseAnimation:
# {"id":"sourceFile","fileName":"BaseAnimation.kt"}
com.chad.library.adapter.base.binder.QuickDataBindingItemBinder$BinderDataBindingHolder -> com.chad.library.adapter.base.binder.QuickDataBindingItemBinder$BinderDataBindingHolder:
# {"id":"sourceFile","fileName":"QuickDataBindingItemBinder.kt"}
    18:18:void <init>(androidx.databinding.ViewDataBinding) -> <init>
com.chad.library.adapter.base.binder.QuickViewBindingItemBinder$BinderVBHolder -> com.chad.library.adapter.base.binder.QuickViewBindingItemBinder$BinderVBHolder:
# {"id":"sourceFile","fileName":"QuickViewBindingItemBinder.kt"}
    18:18:void <init>(androidx.viewbinding.ViewBinding) -> <init>
com.chad.library.adapter.base.listener.GridSpanSizeLookup -> com.chad.library.adapter.base.listener.GridSpanSizeLookup:
# {"id":"sourceFile","fileName":"GridSpanSizeLookup.java"}
com.chad.library.adapter.base.listener.OnItemClickListener -> com.chad.library.adapter.base.listener.OnItemClickListener:
# {"id":"sourceFile","fileName":"OnItemClickListener.java"}
com.chad.library.adapter.base.loadmore.BaseLoadMoreView -> com.chad.library.adapter.base.loadmore.BaseLoadMoreView:
# {"id":"sourceFile","fileName":"BaseLoadMoreView.kt"}
com.chad.library.adapter.base.loadmore.LoadMoreStatus -> com.chad.library.adapter.base.loadmore.LoadMoreStatus:
# {"id":"sourceFile","fileName":"BaseLoadMoreView.kt"}
    0:0:void <clinit>() -> <clinit>
    12:12:void <init>(java.lang.String,int) -> <init>
    0:0:com.chad.library.adapter.base.loadmore.LoadMoreStatus valueOf(java.lang.String) -> valueOf
    0:0:com.chad.library.adapter.base.loadmore.LoadMoreStatus[] values() -> values
com.chad.library.adapter.base.module.BaseDraggableModule -> com.chad.library.adapter.base.module.BaseDraggableModule:
# {"id":"sourceFile","fileName":"DraggableModule.kt"}
com.chad.library.adapter.base.module.BaseLoadMoreModule -> com.chad.library.adapter.base.module.BaseLoadMoreModule:
# {"id":"sourceFile","fileName":"LoadMoreModule.kt"}
com.chad.library.adapter.base.module.BaseUpFetchModule -> com.chad.library.adapter.base.module.BaseUpFetchModule:
# {"id":"sourceFile","fileName":"UpFetchModule.kt"}
com.chad.library.adapter.base.util.AdapterUtilsKt -> com.chad.library.adapter.base.util.AdapterUtilsKt:
# {"id":"sourceFile","fileName":"AdapterUtils.kt"}
    15:15:android.view.View getItemView(android.view.ViewGroup,int) -> getItemView
com.chad.library.adapter.base.viewholder.BaseDataBindingHolder -> com.chad.library.adapter.base.viewholder.BaseDataBindingHolder:
# {"id":"sourceFile","fileName":"BaseDataBindingHolder.kt"}
com.chad.library.adapter.base.viewholder.BaseViewHolder -> com.chad.library.adapter.base.viewholder.BaseViewHolder:
# {"id":"sourceFile","fileName":"BaseViewHolder.kt"}
    18:22:void <init>(android.view.View) -> <init>
    54:54:android.view.View findView(int) -> findView
    32:32:androidx.databinding.ViewDataBinding getBinding() -> getBinding
    36:37:android.view.View getView(int) -> getView
    43:50:android.view.View getViewOrNull(int) -> getViewOrNull
    93:93:com.chad.library.adapter.base.viewholder.BaseViewHolder setBackgroundColor(int,int) -> setBackgroundColor
    98:98:com.chad.library.adapter.base.viewholder.BaseViewHolder setBackgroundResource(int,int) -> setBackgroundResource
    115:115:com.chad.library.adapter.base.viewholder.BaseViewHolder setEnabled(int,boolean) -> setEnabled
    109:110:com.chad.library.adapter.base.viewholder.BaseViewHolder setGone(int,boolean) -> setGone
    88:88:com.chad.library.adapter.base.viewholder.BaseViewHolder setImageBitmap(int,android.graphics.Bitmap) -> setImageBitmap
    83:83:com.chad.library.adapter.base.viewholder.BaseViewHolder setImageDrawable(int,android.graphics.drawable.Drawable) -> setImageDrawable
    78:78:com.chad.library.adapter.base.viewholder.BaseViewHolder setImageResource(int,int) -> setImageResource
    58:58:com.chad.library.adapter.base.viewholder.BaseViewHolder setText(int,java.lang.CharSequence) -> setText
    63:63:com.chad.library.adapter.base.viewholder.BaseViewHolder setText(int,int) -> setText
    68:68:com.chad.library.adapter.base.viewholder.BaseViewHolder setTextColor(int,int) -> setTextColor
    73:73:com.chad.library.adapter.base.viewholder.BaseViewHolder setTextColorRes(int,int) -> setTextColorRes
    103:104:com.chad.library.adapter.base.viewholder.BaseViewHolder setVisible(int,boolean) -> setVisible
com.clj.fastble.BleManager -> com.clj.fastble.BleManager:
# {"id":"sourceFile","fileName":"BleManager.java"}
    42:65:void <init>() -> <init>
    343:361:android.bluetooth.BluetoothGatt connect(com.clj.fastble.data.BleDevice,com.clj.fastble.callback.BleGattCallback) -> connect
    930:931:void destroy() -> destroy
    918:919:void disconnect(com.clj.fastble.data.BleDevice) -> disconnect
    924:925:void disconnectAllDevice() -> disconnectAllDevice
    757:758:void enableBluetooth() -> enableBluetooth
    280:280:com.clj.fastble.BleManager enableLog(boolean) -> enableLog
    111:111:android.bluetooth.BluetoothAdapter getBluetoothAdapter() -> getBluetoothAdapter
    256:256:long getConnectOverTime() -> getConnectOverTime
    895:895:int getConnectState(com.clj.fastble.data.BleDevice) -> getConnectState
    93:93:android.content.Context getContext() -> getContext
    68:68:com.clj.fastble.BleManager getInstance() -> getInstance
    147:147:int getMaxConnectCount() -> getMaxConnectCount
    129:129:com.clj.fastble.bluetooth.MultipleBluetoothController getMultipleBluetoothController() -> getMultipleBluetoothController
    169:169:int getOperateTimeout() -> getOperateTimeout
    189:189:int getReConnectCount() -> getReConnectCount
    198:198:long getReConnectInterval() -> getReConnectInterval
    234:234:int getSplitWriteNum() -> getSplitWriteNum
    76:83:void init(android.app.Application) -> init
    778:778:boolean isBlueEnable() -> isBlueEnable
    749:750:boolean isSupportBle() -> isSupportBle
    400:400:void notify(com.clj.fastble.data.BleDevice,java.lang.String,java.lang.String,com.clj.fastble.callback.BleNotifyCallback) -> notify
    418:427:void notify(com.clj.fastble.data.BleDevice,java.lang.String,java.lang.String,boolean,com.clj.fastble.callback.BleNotifyCallback) -> notify
    654:663:void read(com.clj.fastble.data.BleDevice,java.lang.String,java.lang.String,com.clj.fastble.callback.BleReadCallback) -> read
    291:306:void scan(com.clj.fastble.callback.BleScanCallback) -> scan
    698:717:void setMtu(com.clj.fastble.data.BleDevice,int,com.clj.fastble.callback.BleMtuChangedCallback) -> setMtu
    179:179:com.clj.fastble.BleManager setOperateTimeout(int) -> setOperateTimeout
    222:223:com.clj.fastble.BleManager setReConnectCount(int,long) -> setReConnectCount
    485:485:boolean stopNotify(com.clj.fastble.data.BleDevice,java.lang.String,java.lang.String) -> stopNotify
    501:509:boolean stopNotify(com.clj.fastble.data.BleDevice,java.lang.String,java.lang.String,boolean) -> stopNotify
    568:568:void write(com.clj.fastble.data.BleDevice,java.lang.String,java.lang.String,byte[],com.clj.fastble.callback.BleWriteCallback) -> write
    588:588:void write(com.clj.fastble.data.BleDevice,java.lang.String,java.lang.String,byte[],boolean,com.clj.fastble.callback.BleWriteCallback) -> write
    613:636:void write(com.clj.fastble.data.BleDevice,java.lang.String,java.lang.String,byte[],boolean,boolean,long,com.clj.fastble.callback.BleWriteCallback) -> write
com.clj.fastble.BleManager$BleManagerHolder -> com.clj.fastble.BleManager$BleManagerHolder:
# {"id":"sourceFile","fileName":"BleManager.java"}
    72:72:void <clinit>() -> <clinit>
    71:71:com.clj.fastble.BleManager access$000() -> access$000
com.clj.fastble.bluetooth.BleBluetooth -> com.clj.fastble.bluetooth.BleBluetooth:
# {"id":"sourceFile","fileName":"BleBluetooth.java"}
    44:358:void <init>(com.clj.fastble.data.BleDevice) -> <init>
    39:39:void access$000(com.clj.fastble.bluetooth.BleBluetooth) -> access$000
    39:39:void access$100(com.clj.fastble.bluetooth.BleBluetooth) -> access$100
    39:39:java.util.HashMap access$1000(com.clj.fastble.bluetooth.BleBluetooth) -> access$1000
    39:39:java.util.HashMap access$1100(com.clj.fastble.bluetooth.BleBluetooth) -> access$1100
    39:39:java.util.HashMap access$1200(com.clj.fastble.bluetooth.BleBluetooth) -> access$1200
    39:39:java.util.HashMap access$1300(com.clj.fastble.bluetooth.BleBluetooth) -> access$1300
    39:39:com.clj.fastble.callback.BleRssiCallback access$1400(com.clj.fastble.bluetooth.BleBluetooth) -> access$1400
    39:39:com.clj.fastble.callback.BleMtuChangedCallback access$1500(com.clj.fastble.bluetooth.BleBluetooth) -> access$1500
    39:39:void access$200(com.clj.fastble.bluetooth.BleBluetooth) -> access$200
    39:39:int access$300(com.clj.fastble.bluetooth.BleBluetooth) -> access$300
    39:39:int access$304(com.clj.fastble.bluetooth.BleBluetooth) -> access$304
    39:39:com.clj.fastble.bluetooth.BleBluetooth$MainHandler access$400(com.clj.fastble.bluetooth.BleBluetooth) -> access$400
    39:39:com.clj.fastble.bluetooth.BleBluetooth$LastState access$500(com.clj.fastble.bluetooth.BleBluetooth) -> access$500
    39:39:com.clj.fastble.bluetooth.BleBluetooth$LastState access$502(com.clj.fastble.bluetooth.BleBluetooth,com.clj.fastble.bluetooth.BleBluetooth$LastState) -> access$502
    39:39:com.clj.fastble.callback.BleGattCallback access$600(com.clj.fastble.bluetooth.BleBluetooth) -> access$600
    39:39:com.clj.fastble.data.BleDevice access$700(com.clj.fastble.bluetooth.BleBluetooth) -> access$700
    39:39:android.bluetooth.BluetoothGatt access$800(com.clj.fastble.bluetooth.BleBluetooth) -> access$800
    39:39:android.bluetooth.BluetoothGatt access$802(com.clj.fastble.bluetooth.BleBluetooth,android.bluetooth.BluetoothGatt) -> access$802
    39:39:boolean access$900(com.clj.fastble.bluetooth.BleBluetooth) -> access$900
    39:39:boolean access$902(com.clj.fastble.bluetooth.BleBluetooth,boolean) -> access$902
    65:66:void addConnectGattCallback(com.clj.fastble.callback.BleGattCallback) -> addConnectGattCallback
    124:125:void addMtuChangedCallback(com.clj.fastble.callback.BleMtuChangedCallback) -> addMtuChangedCallback
    73:74:void addNotifyCallback(java.lang.String,com.clj.fastble.callback.BleNotifyCallback) -> addNotifyCallback
    85:86:void addReadCallback(java.lang.String,com.clj.fastble.callback.BleReadCallback) -> addReadCallback
    81:82:void addWriteCallback(java.lang.String,com.clj.fastble.callback.BleWriteCallback) -> addWriteCallback
    109:113:void clearCharacterCallback() -> clearCharacterCallback
    232:235:void closeBluetoothGatt() -> closeBluetoothGatt
    147:147:android.bluetooth.BluetoothGatt connect(com.clj.fastble.data.BleDevice,boolean,com.clj.fastble.callback.BleGattCallback) -> connect
    154:192:android.bluetooth.BluetoothGatt connect(com.clj.fastble.data.BleDevice,boolean,com.clj.fastble.callback.BleGattCallback,int) -> connect
    201:210:void destroy() -> destroy
    196:198:void disconnect() -> disconnect
    213:216:void disconnectGatt() -> disconnectGatt
    141:141:android.bluetooth.BluetoothGatt getBluetoothGatt() -> getBluetoothGatt
    133:133:java.lang.String getDeviceKey() -> getDeviceKey
    61:61:com.clj.fastble.bluetooth.BleConnector newBleConnector() -> newBleConnector
    220:229:void refreshDeviceCache() -> refreshDeviceCache
    69:70:void removeConnectGattCallback() -> removeConnectGattCallback
    128:129:void removeMtuChangedCallback() -> removeMtuChangedCallback
    89:91:void removeNotifyCallback(java.lang.String) -> removeNotifyCallback
    121:121:void removeRssiCallback() -> removeRssiCallback
com.clj.fastble.bluetooth.BleBluetooth$$ExternalSyntheticApiModelOutline0 -> com.clj.fastble.bluetooth.BleBluetooth$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.bluetooth.BluetoothGatt com.clj.fastble.bluetooth.BleBluetooth$$InternalSyntheticApiModelOutline$1$4857021a1a6080433157567c9e2f767c021622de722ad447c07821fce06d30b6$0.m(android.bluetooth.BluetoothDevice,android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.clj.fastble.bluetooth.BleBluetooth$1 -> com.clj.fastble.bluetooth.BleBluetooth$1:
# {"id":"sourceFile","fileName":"BleBluetooth.java"}
    358:358:void <init>(com.clj.fastble.bluetooth.BleBluetooth) -> <init>
    419:445:void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic) -> onCharacteristicChanged
    540:558:void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int) -> onCharacteristicRead
    513:531:void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int) -> onCharacteristicWrite
    362:390:void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int) -> onConnectionStateChange
    466:492:void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int) -> onDescriptorWrite
    586:598:void onMtuChanged(android.bluetooth.BluetoothGatt,int,int) -> onMtuChanged
    567:569:void onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int) -> onReadRemoteRssi
    397:413:void onServicesDiscovered(android.bluetooth.BluetoothGatt,int) -> onServicesDiscovered
com.clj.fastble.bluetooth.BleBluetooth$LastState -> com.clj.fastble.bluetooth.BleBluetooth$LastState:
# {"id":"sourceFile","fileName":"BleBluetooth.java"}
    604:609:void <clinit>() -> <clinit>
    604:604:void <init>(java.lang.String,int) -> <init>
    604:604:com.clj.fastble.bluetooth.BleBluetooth$LastState valueOf(java.lang.String) -> valueOf
    604:604:com.clj.fastble.bluetooth.BleBluetooth$LastState[] values() -> values
com.clj.fastble.bluetooth.BleBluetooth$MainHandler -> com.clj.fastble.bluetooth.BleBluetooth$MainHandler:
# {"id":"sourceFile","fileName":"BleBluetooth.java"}
    239:240:void <init>(com.clj.fastble.bluetooth.BleBluetooth,android.os.Looper) -> <init>
    245:352:void handleMessage(android.os.Message) -> handleMessage
com.clj.fastble.bluetooth.BleConnector -> com.clj.fastble.bluetooth.BleConnector:
# {"id":"sourceFile","fileName":"BleConnector.java"}
    42:45:void <init>(com.clj.fastble.bluetooth.BleBluetooth) -> <init>
    261:263:boolean disableCharacteristicNotify(boolean) -> disableCharacteristicNotify
    246:253:void enableCharacteristicNotify(com.clj.fastble.callback.BleNotifyCallback,java.lang.String,boolean) -> enableCharacteristicNotify
    234:234:java.util.UUID formUUID(java.lang.String) -> formUUID
    498:504:void handleCharacteristicNotifyCallback(com.clj.fastble.callback.BleNotifyCallback,java.lang.String) -> handleCharacteristicNotifyCallback
    546:552:void handleCharacteristicReadCallback(com.clj.fastble.callback.BleReadCallback,java.lang.String) -> handleCharacteristicReadCallback
    530:536:void handleCharacteristicWriteCallback(com.clj.fastble.callback.BleWriteCallback,java.lang.String) -> handleCharacteristicWriteCallback
    575:580:void handleSetMtuCallback(com.clj.fastble.callback.BleMtuChangedCallback) -> handleSetMtuCallback
    589:589:void indicateMsgInit() -> indicateMsgInit
    605:605:void mtuChangedMsgInit() -> mtuChangedMsgInit
    585:585:void notifyMsgInit() -> notifyMsgInit
    428:439:void readCharacteristic(com.clj.fastble.callback.BleReadCallback,java.lang.String) -> readCharacteristic
    597:597:void readMsgInit() -> readMsgInit
    601:601:void rssiMsgInit() -> rssiMsgInit
    279:311:boolean setCharacteristicNotification(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,boolean,boolean,com.clj.fastble.callback.BleNotifyCallback) -> setCharacteristicNotification
    460:464:void setMtu(int,com.clj.fastble.callback.BleMtuChangedCallback) -> setMtu
    220:224:com.clj.fastble.bluetooth.BleConnector withUUID(java.util.UUID,java.util.UUID) -> withUUID
    230:230:com.clj.fastble.bluetooth.BleConnector withUUIDString(java.lang.String,java.lang.String) -> withUUIDString
    398:420:void writeCharacteristic(byte[],com.clj.fastble.callback.BleWriteCallback,java.lang.String) -> writeCharacteristic
    593:593:void writeMsgInit() -> writeMsgInit
com.clj.fastble.bluetooth.BleConnector$1 -> com.clj.fastble.bluetooth.BleConnector$1:
# {"id":"sourceFile","fileName":"BleConnector.java"}
    45:45:void <init>(com.clj.fastble.bluetooth.BleConnector,android.os.Looper) -> <init>
    48:208:void handleMessage(android.os.Message) -> handleMessage
com.clj.fastble.bluetooth.MultipleBluetoothController -> com.clj.fastble.bluetooth.MultipleBluetoothController:
# {"id":"sourceFile","fileName":"MultipleBluetoothController.java"}
    23:25:void <init>() -> <init>
    47:52:void addBleBluetooth(com.clj.fastble.bluetooth.BleBluetooth) -> addBleBluetooth
    29:33:com.clj.fastble.bluetooth.BleBluetooth buildConnectingBle(com.clj.fastble.data.BleDevice) -> buildConnectingBle
    94:102:void destroy() -> destroy
    81:84:void disconnect(com.clj.fastble.data.BleDevice) -> disconnect
    87:91:void disconnectAllDevice() -> disconnectAllDevice
    73:77:com.clj.fastble.bluetooth.BleBluetooth getBleBluetooth(com.clj.fastble.data.BleDevice) -> getBleBluetooth
    64:64:boolean isContainDevice(com.clj.fastble.data.BleDevice) -> isContainDevice
    56:61:void removeBleBluetooth(com.clj.fastble.bluetooth.BleBluetooth) -> removeBleBluetooth
    38:43:void removeConnectingBle(com.clj.fastble.bluetooth.BleBluetooth) -> removeConnectingBle
com.clj.fastble.bluetooth.SplitWriter -> com.clj.fastble.bluetooth.SplitWriter:
# {"id":"sourceFile","fileName":"SplitWriter.java"}
    34:38:void <init>() -> <init>
    18:18:void access$000(com.clj.fastble.bluetooth.SplitWriter) -> access$000
    18:18:int access$100(com.clj.fastble.bluetooth.SplitWriter) -> access$100
    18:18:java.util.Queue access$200(com.clj.fastble.bluetooth.SplitWriter) -> access$200
    18:18:com.clj.fastble.callback.BleWriteCallback access$300(com.clj.fastble.bluetooth.SplitWriter) -> access$300
    18:18:boolean access$400(com.clj.fastble.bluetooth.SplitWriter) -> access$400
    18:18:android.os.Handler access$500(com.clj.fastble.bluetooth.SplitWriter) -> access$500
    18:18:long access$600(com.clj.fastble.bluetooth.SplitWriter) -> access$600
    124:125:void release() -> release
    130:150:java.util.Queue splitByte(byte[],int) -> splitByte
    56:65:void splitWrite(com.clj.fastble.bluetooth.BleBluetooth,java.lang.String,java.lang.String,byte[],boolean,long,com.clj.fastble.callback.BleWriteCallback) -> splitWrite
    69:77:void splitWrite() -> splitWrite
    81:119:void write() -> write
com.clj.fastble.bluetooth.SplitWriter$1 -> com.clj.fastble.bluetooth.SplitWriter$1:
# {"id":"sourceFile","fileName":"SplitWriter.java"}
    38:38:void <init>(com.clj.fastble.bluetooth.SplitWriter,android.os.Looper) -> <init>
    41:43:void handleMessage(android.os.Message) -> handleMessage
com.clj.fastble.bluetooth.SplitWriter$2 -> com.clj.fastble.bluetooth.SplitWriter$2:
# {"id":"sourceFile","fileName":"SplitWriter.java"}
    91:91:void <init>(com.clj.fastble.bluetooth.SplitWriter) -> <init>
    106:111:void onWriteFailure(com.clj.fastble.exception.BleException) -> onWriteFailure
    94:100:void onWriteSuccess(int,int,byte[]) -> onWriteSuccess
com.clj.fastble.callback.BleBaseCallback -> com.clj.fastble.callback.BleBaseCallback:
# {"id":"sourceFile","fileName":"BleBaseCallback.java"}
    20:20:android.os.Handler getHandler() -> getHandler
    12:12:java.lang.String getKey() -> getKey
    24:24:void setHandler(android.os.Handler) -> setHandler
    16:16:void setKey(java.lang.String) -> setKey
com.clj.fastble.callback.BleGattCallback -> com.clj.fastble.callback.BleGattCallback:
# {"id":"sourceFile","fileName":"BleGattCallback.java"}
    14:14:void <init>() -> <init>
com.clj.fastble.callback.BleMtuChangedCallback -> com.clj.fastble.callback.BleMtuChangedCallback:
# {"id":"sourceFile","fileName":"BleMtuChangedCallback.java"}
    6:6:void <init>() -> <init>
com.clj.fastble.callback.BleNotifyCallback -> com.clj.fastble.callback.BleNotifyCallback:
# {"id":"sourceFile","fileName":"BleNotifyCallback.java"}
    6:6:void <init>() -> <init>
com.clj.fastble.callback.BleReadCallback -> com.clj.fastble.callback.BleReadCallback:
# {"id":"sourceFile","fileName":"BleReadCallback.java"}
    6:6:void <init>() -> <init>
com.clj.fastble.callback.BleRssiCallback -> com.clj.fastble.callback.BleRssiCallback:
# {"id":"sourceFile","fileName":"BleRssiCallback.java"}
com.clj.fastble.callback.BleScanAndConnectCallback -> com.clj.fastble.callback.BleScanAndConnectCallback:
# {"id":"sourceFile","fileName":"BleScanAndConnectCallback.java"}
com.clj.fastble.callback.BleScanCallback -> com.clj.fastble.callback.BleScanCallback:
# {"id":"sourceFile","fileName":"BleScanCallback.java"}
com.clj.fastble.callback.BleScanPresenterImp -> com.clj.fastble.callback.BleScanPresenterImp:
# {"id":"sourceFile","fileName":"BleScanPresenterImp.java"}
com.clj.fastble.callback.BleWriteCallback -> com.clj.fastble.callback.BleWriteCallback:
# {"id":"sourceFile","fileName":"BleWriteCallback.java"}
    6:6:void <init>() -> <init>
com.clj.fastble.data.BleConnectStateParameter -> com.clj.fastble.data.BleConnectStateParameter:
# {"id":"sourceFile","fileName":"BleConnectStateParameter.java"}
    9:10:void <init>(int) -> <init>
    14:14:int getStatus() -> getStatus
    22:22:boolean isActive() -> isActive
    26:26:void setActive(boolean) -> setActive
com.clj.fastble.data.BleDevice -> com.clj.fastble.data.BleDevice:
# {"id":"sourceFile","fileName":"BleDevice.java"}
    47:47:void <clinit>() -> <clinit>
    20:24:void <init>(android.bluetooth.BluetoothDevice,int,byte[],long) -> <init>
    27:31:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    81:81:android.bluetooth.BluetoothDevice getDevice() -> getDevice
    74:75:java.lang.String getKey() -> getKey
    67:68:java.lang.String getMac() -> getMac
    60:61:java.lang.String getName() -> getName
    97:97:int getRssi() -> getRssi
    89:89:byte[] getScanRecord() -> getScanRecord
    36:39:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.clj.fastble.data.BleDevice$1 -> com.clj.fastble.data.BleDevice$1:
# {"id":"sourceFile","fileName":"BleDevice.java"}
    47:47:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    50:50:com.clj.fastble.data.BleDevice createFromParcel(android.os.Parcel) -> createFromParcel
    47:47:java.lang.Object[] newArray(int) -> newArray
    55:55:com.clj.fastble.data.BleDevice[] newArray(int) -> newArray
com.clj.fastble.data.BleScanState -> com.clj.fastble.data.BleScanState:
# {"id":"sourceFile","fileName":"BleScanState.java"}
    4:7:void <clinit>() -> <clinit>
    11:12:void <init>(java.lang.String,int,int) -> <init>
    16:16:int getCode() -> getCode
    4:4:com.clj.fastble.data.BleScanState valueOf(java.lang.String) -> valueOf
    4:4:com.clj.fastble.data.BleScanState[] values() -> values
com.clj.fastble.exception.BleException -> com.clj.fastble.exception.BleException:
# {"id":"sourceFile","fileName":"BleException.java"}
    17:19:void <init>(int,java.lang.String) -> <init>
    23:23:int getCode() -> getCode
    32:32:java.lang.String getDescription() -> getDescription
    27:27:com.clj.fastble.exception.BleException setCode(int) -> setCode
    36:36:com.clj.fastble.exception.BleException setDescription(java.lang.String) -> setDescription
    42:42:java.lang.String toString() -> toString
com.clj.fastble.exception.ConnectException -> com.clj.fastble.exception.ConnectException:
# {"id":"sourceFile","fileName":"ConnectException.java"}
    12:14:void <init>(android.bluetooth.BluetoothGatt,int) -> <init>
    27:27:android.bluetooth.BluetoothGatt getBluetoothGatt() -> getBluetoothGatt
    18:18:int getGattStatus() -> getGattStatus
    31:31:com.clj.fastble.exception.ConnectException setBluetoothGatt(android.bluetooth.BluetoothGatt) -> setBluetoothGatt
    22:22:com.clj.fastble.exception.ConnectException setGattStatus(int) -> setGattStatus
    37:40:java.lang.String toString() -> toString
com.clj.fastble.exception.GattException -> com.clj.fastble.exception.GattException:
# {"id":"sourceFile","fileName":"GattException.java"}
    9:10:void <init>(int) -> <init>
    14:14:int getGattStatus() -> getGattStatus
    18:18:com.clj.fastble.exception.GattException setGattStatus(int) -> setGattStatus
    24:26:java.lang.String toString() -> toString
com.clj.fastble.exception.OtherException -> com.clj.fastble.exception.OtherException:
# {"id":"sourceFile","fileName":"OtherException.java"}
    7:7:void <init>(java.lang.String) -> <init>
com.clj.fastble.exception.TimeoutException -> com.clj.fastble.exception.TimeoutException:
# {"id":"sourceFile","fileName":"TimeoutException.java"}
    7:7:void <init>() -> <init>
com.clj.fastble.scan.BleScanPresenter -> com.clj.fastble.scan.BleScanPresenter:
# {"id":"sourceFile","fileName":"BleScanPresenter.java"}
    26:37:void <init>() -> <init>
    26:26:void access$000(com.clj.fastble.scan.BleScanPresenter,com.clj.fastble.data.BleDevice) -> access$000
    26:26:java.util.List access$100(com.clj.fastble.scan.BleScanPresenter) -> access$100
    113:138:void checkDevice(com.clj.fastble.data.BleDevice) -> checkDevice
    143:173:void correctDeviceAndNextStep(com.clj.fastble.data.BleDevice) -> correctDeviceAndNextStep
    95:95:com.clj.fastble.callback.BleScanPresenterImp getBleScanPresenterImp() -> getBleScanPresenterImp
    66:72:void handleResult(com.clj.fastble.data.BleDevice) -> handleResult
    91:91:boolean ismNeedConnect() -> ismNeedConnect
    184:197:void notifyScanStarted(boolean) -> notifyScanStarted
    206:209:void notifyScanStopped() -> notifyScanStopped
    103:109:void onLeScan(android.bluetooth.BluetoothDevice,int,byte[]) -> onLeScan
    77:87:void prepare(java.lang.String[],java.lang.String,boolean,boolean,long,com.clj.fastble.callback.BleScanPresenterImp) -> prepare
    218:219:void removeHandlerMsg() -> removeHandlerMsg
com.clj.fastble.scan.BleScanPresenter$1 -> com.clj.fastble.scan.BleScanPresenter$1:
# {"id":"sourceFile","fileName":"BleScanPresenter.java"}
    66:66:void <init>(com.clj.fastble.scan.BleScanPresenter,com.clj.fastble.data.BleDevice) -> <init>
    69:69:void run() -> run
com.clj.fastble.scan.BleScanPresenter$2 -> com.clj.fastble.scan.BleScanPresenter$2:
# {"id":"sourceFile","fileName":"BleScanPresenter.java"}
    151:151:void <init>(com.clj.fastble.scan.BleScanPresenter) -> <init>
    154:154:void run() -> run
com.clj.fastble.scan.BleScanPresenter$3 -> com.clj.fastble.scan.BleScanPresenter$3:
# {"id":"sourceFile","fileName":"BleScanPresenter.java"}
    173:173:void <init>(com.clj.fastble.scan.BleScanPresenter,com.clj.fastble.data.BleDevice) -> <init>
    176:176:void run() -> run
com.clj.fastble.scan.BleScanPresenter$4 -> com.clj.fastble.scan.BleScanPresenter$4:
# {"id":"sourceFile","fileName":"BleScanPresenter.java"}
    189:189:void <init>(com.clj.fastble.scan.BleScanPresenter) -> <init>
    192:192:void run() -> run
com.clj.fastble.scan.BleScanPresenter$5 -> com.clj.fastble.scan.BleScanPresenter$5:
# {"id":"sourceFile","fileName":"BleScanPresenter.java"}
    197:197:void <init>(com.clj.fastble.scan.BleScanPresenter,boolean) -> <init>
    200:200:void run() -> run
com.clj.fastble.scan.BleScanPresenter$6 -> com.clj.fastble.scan.BleScanPresenter$6:
# {"id":"sourceFile","fileName":"BleScanPresenter.java"}
    209:209:void <init>(com.clj.fastble.scan.BleScanPresenter) -> <init>
    212:212:void run() -> run
com.clj.fastble.scan.BleScanPresenter$ScanHandler -> com.clj.fastble.scan.BleScanPresenter$ScanHandler:
# {"id":"sourceFile","fileName":"BleScanPresenter.java"}
    47:48:void <init>(android.os.Looper,com.clj.fastble.scan.BleScanPresenter) -> <init>
    53:58:void handleMessage(android.os.Message) -> handleMessage
com.clj.fastble.scan.BleScanRuleConfig -> com.clj.fastble.scan.BleScanRuleConfig:
# {"id":"sourceFile","fileName":"BleScanRuleConfig.java"}
    8:15:void <init>() -> <init>
    26:26:java.lang.String getDeviceMac() -> getDeviceMac
    22:22:java.lang.String[] getDeviceNames() -> getDeviceNames
    38:38:long getScanTimeOut() -> getScanTimeOut
    18:18:java.util.UUID[] getServiceUuids() -> getServiceUuids
    30:30:boolean isAutoConnect() -> isAutoConnect
    34:34:boolean isFuzzy() -> isFuzzy
com.clj.fastble.scan.BleScanner -> com.clj.fastble.scan.BleScanner:
# {"id":"sourceFile","fileName":"BleScanner.java"}
    21:33:void <init>() -> <init>
    21:21:com.clj.fastble.scan.BleScanPresenter access$100(com.clj.fastble.scan.BleScanner) -> access$100
    24:24:com.clj.fastble.scan.BleScanner getInstance() -> getInstance
    100:100:void scan(java.util.UUID[],java.lang.String[],java.lang.String,boolean,long,com.clj.fastble.callback.BleScanCallback) -> scan
    112:126:void startLeScan(java.util.UUID[],java.lang.String[],java.lang.String,boolean,boolean,long,com.clj.fastble.callback.BleScanPresenterImp) -> startLeScan
    129:132:void stopLeScan() -> stopLeScan
com.clj.fastble.scan.BleScanner$1 -> com.clj.fastble.scan.BleScanner$1:
# {"id":"sourceFile","fileName":"BleScanner.java"}
    33:33:void <init>(com.clj.fastble.scan.BleScanner) -> <init>
    45:54:void onLeScan(com.clj.fastble.data.BleDevice) -> onLeScan
    69:91:void onScanFinished(java.util.List) -> onScanFinished
    37:39:void onScanStarted(boolean) -> onScanStarted
    61:63:void onScanning(com.clj.fastble.data.BleDevice) -> onScanning
com.clj.fastble.scan.BleScanner$1$1 -> com.clj.fastble.scan.BleScanner$1$1:
# {"id":"sourceFile","fileName":"BleScanner.java"}
    81:81:void <init>(com.clj.fastble.scan.BleScanner$1,java.util.List,com.clj.fastble.callback.BleScanAndConnectCallback) -> <init>
    84:84:void run() -> run
com.clj.fastble.scan.BleScanner$BleScannerHolder -> com.clj.fastble.scan.BleScanner$BleScannerHolder:
# {"id":"sourceFile","fileName":"BleScanner.java"}
    28:28:void <clinit>() -> <clinit>
    27:27:com.clj.fastble.scan.BleScanner access$000() -> access$000
com.clj.fastble.utils.BleLog -> com.clj.fastble.utils.BleLog:
# {"id":"sourceFile","fileName":"BleLog.java"}
    0:0:void <clinit>() -> <clinit>
    0:0:void e(java.lang.String) -> e
    0:0:void i(java.lang.String) -> i
    0:0:void w(java.lang.String) -> w
com.clj.fastble.utils.BleLruHashMap -> com.clj.fastble.utils.BleLruHashMap:
# {"id":"sourceFile","fileName":"BleLruHashMap.java"}
    13:14:void <init>(int) -> <init>
    19:22:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    27:31:java.lang.String toString() -> toString
com.clj.fastble.utils.HexUtil -> com.clj.fastble.utils.HexUtil:
# {"id":"sourceFile","fileName":"HexUtil.java"}
    5:8:void <clinit>() -> <clinit>
    46:46:java.lang.String formatHexString(byte[]) -> formatHexString
    50:62:java.lang.String formatHexString(byte[],boolean) -> formatHexString
com.ddonging.debugtools.AboutActivity -> com.ddonging.debugtools.AboutActivity:
# {"id":"sourceFile","fileName":"AboutActivity.java"}
    22:22:void <init>() -> <init>
    27:101:void onCreate(android.os.Bundle) -> onCreate
    111:113:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.ddonging.debugtools.AboutActivity$1 -> com.ddonging.debugtools.AboutActivity$1:
# {"id":"sourceFile","fileName":"AboutActivity.java"}
    34:34:void <init>(com.ddonging.debugtools.AboutActivity) -> <init>
    40:43:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.AboutActivity$2 -> com.ddonging.debugtools.AboutActivity$2:
# {"id":"sourceFile","fileName":"AboutActivity.java"}
    49:49:void <init>(com.ddonging.debugtools.AboutActivity) -> <init>
    54:61:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.AboutActivity$3 -> com.ddonging.debugtools.AboutActivity$3:
# {"id":"sourceFile","fileName":"AboutActivity.java"}
    66:66:void <init>(com.ddonging.debugtools.AboutActivity) -> <init>
    69:74:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.AboutActivity$4 -> com.ddonging.debugtools.AboutActivity$4:
# {"id":"sourceFile","fileName":"AboutActivity.java"}
    78:78:void <init>(com.ddonging.debugtools.AboutActivity) -> <init>
    82:83:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.AboutActivity$5 -> com.ddonging.debugtools.AboutActivity$5:
# {"id":"sourceFile","fileName":"AboutActivity.java"}
    85:85:void <init>(com.ddonging.debugtools.AboutActivity) -> <init>
    88:88:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.AboutActivity$6 -> com.ddonging.debugtools.AboutActivity$6:
# {"id":"sourceFile","fileName":"AboutActivity.java"}
    91:91:void <init>(com.ddonging.debugtools.AboutActivity) -> <init>
    94:98:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.AboutActivity$7 -> com.ddonging.debugtools.AboutActivity$7:
# {"id":"sourceFile","fileName":"AboutActivity.java"}
    101:101:void <init>(com.ddonging.debugtools.AboutActivity) -> <init>
    104:104:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.App -> com.ddonging.debugtools.App:
# {"id":"sourceFile","fileName":"App.java"}
    10:10:void <init>() -> <init>
    22:26:void onCreate() -> onCreate
com.ddonging.debugtools.Database -> com.ddonging.debugtools.Database:
# {"id":"sourceFile","fileName":"Database.java"}
    15:16:void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int) -> <init>
    21:21:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    27:28:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.ddonging.debugtools.DetailActivity -> com.ddonging.debugtools.DetailActivity:
# {"id":"sourceFile","fileName":"DetailActivity.java"}
    19:19:void <init>() -> <init>
    24:31:void onCreate(android.os.Bundle) -> onCreate
    76:78:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.ddonging.debugtools.LogActivity -> com.ddonging.debugtools.LogActivity:
# {"id":"sourceFile","fileName":"LogActivity.java"}
    35:35:void <init>() -> <init>
com.ddonging.debugtools.MainActivity -> com.ddonging.debugtools.MainActivity:
# {"id":"sourceFile","fileName":"MainActivity.java"}
    22:22:void <init>() -> <init>
    29:46:void onCreate(android.os.Bundle) -> onCreate
    62:75:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    87:89:boolean onSupportNavigateUp() -> onSupportNavigateUp
com.ddonging.debugtools.MainActivity$1 -> com.ddonging.debugtools.MainActivity$1:
# {"id":"sourceFile","fileName":"MainActivity.java"}
    68:68:void <init>(com.ddonging.debugtools.MainActivity) -> <init>
    71:71:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.MainActivity$2 -> com.ddonging.debugtools.MainActivity$2:
# {"id":"sourceFile","fileName":"MainActivity.java"}
    75:75:void <init>(com.ddonging.debugtools.MainActivity) -> <init>
    78:78:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.OpenActivity -> com.ddonging.debugtools.OpenActivity:
# {"id":"sourceFile","fileName":"OpenActivity.java"}
    18:18:void <init>() -> <init>
    23:29:void onCreate(android.os.Bundle) -> onCreate
    34:36:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.ddonging.debugtools.adapter.ExpandableListAdapter -> com.ddonging.debugtools.adapter.ExpandableListAdapter:
# {"id":"sourceFile","fileName":"ExpandableListAdapter.java"}
    25:39:void <init>(android.content.Context,java.util.HashMap,java.util.HashMap) -> <init>
    58:58:java.lang.String CharacteristicName(java.lang.String) -> CharacteristicName
    50:50:java.lang.Object getChild(int,int) -> getChild
    0:0:long getChildId(int,int) -> getChildId
    79:164:android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    170:170:int getChildrenCount(int) -> getChildrenCount
    175:175:java.lang.Object getGroup(int) -> getGroup
    183:183:int getGroupCount() -> getGroupCount
    0:0:long getGroupId(int) -> getGroupId
    193:210:android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    67:67:int getProperties(int,int) -> getProperties
    0:0:boolean hasStableIds() -> hasStableIds
    0:0:boolean isChildSelectable(int,int) -> isChildSelectable
    178:178:java.lang.String serviceName(java.lang.String) -> serviceName
    262:262:void setOnItemClickListener(com.ddonging.debugtools.adapter.ExpandableListAdapter$OnItemClickListener) -> setOnItemClickListener
com.ddonging.debugtools.adapter.ExpandableListAdapter$1 -> com.ddonging.debugtools.adapter.ExpandableListAdapter$1:
# {"id":"sourceFile","fileName":"ExpandableListAdapter.java"}
    117:117:void <init>(com.ddonging.debugtools.adapter.ExpandableListAdapter,android.widget.ImageView,java.lang.String,java.lang.String) -> <init>
    120:127:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.adapter.ExpandableListAdapter$2 -> com.ddonging.debugtools.adapter.ExpandableListAdapter$2:
# {"id":"sourceFile","fileName":"ExpandableListAdapter.java"}
    132:132:void <init>(com.ddonging.debugtools.adapter.ExpandableListAdapter,java.lang.String,java.lang.String) -> <init>
    135:135:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.adapter.ExpandableListAdapter$3 -> com.ddonging.debugtools.adapter.ExpandableListAdapter$3:
# {"id":"sourceFile","fileName":"ExpandableListAdapter.java"}
    138:138:void <init>(com.ddonging.debugtools.adapter.ExpandableListAdapter,java.lang.String,java.lang.String) -> <init>
    141:148:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.adapter.ExpandableListAdapter$OnItemClickListener -> com.ddonging.debugtools.adapter.ExpandableListAdapter$OnItemClickListener:
# {"id":"sourceFile","fileName":"ExpandableListAdapter.java"}
com.ddonging.debugtools.adapter.MyPagerAdapter -> com.ddonging.debugtools.adapter.MyPagerAdapter:
# {"id":"sourceFile","fileName":"MyPagerAdapter.java"}
    11:13:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    0:0:int getCount() -> getCount
    19:21:androidx.fragment.app.Fragment getItem(int) -> getItem
    32:32:java.lang.CharSequence getPageTitle(int) -> getPageTitle
com.ddonging.debugtools.adapter.QuickAdapter -> com.ddonging.debugtools.adapter.QuickAdapter:
# {"id":"sourceFile","fileName":"QuickAdapter.java"}
    16:16:void <init>() -> <init>
    14:14:void convert(com.chad.library.adapter.base.viewholder.BaseViewHolder,java.lang.Object) -> convert
    21:49:void convert(com.chad.library.adapter.base.viewholder.BaseViewHolder,com.clj.fastble.data.BleDevice) -> convert
com.ddonging.debugtools.databinding.ActivityAboutBinding -> com.ddonging.debugtools.databinding.ActivityAboutBinding:
# {"id":"sourceFile","fileName":"ActivityAboutBinding.java"}
    44:52:void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout) -> <init>
    82:128:com.ddonging.debugtools.databinding.ActivityAboutBinding bind(android.view.View) -> bind
    17:17:android.view.View getRoot() -> getRoot
    58:58:android.widget.LinearLayout getRoot() -> getRoot
    63:63:com.ddonging.debugtools.databinding.ActivityAboutBinding inflate(android.view.LayoutInflater) -> inflate
    69:73:com.ddonging.debugtools.databinding.ActivityAboutBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.ActivityBleBinding -> com.ddonging.debugtools.databinding.ActivityBleBinding:
# {"id":"sourceFile","fileName":"ActivityBleBinding.java"}
    30:33:void <init>(android.widget.LinearLayout,com.google.android.material.tabs.TabLayout,androidx.viewpager.widget.ViewPager) -> <init>
    63:78:com.ddonging.debugtools.databinding.ActivityBleBinding bind(android.view.View) -> bind
    19:19:android.view.View getRoot() -> getRoot
    39:39:android.widget.LinearLayout getRoot() -> getRoot
    44:44:com.ddonging.debugtools.databinding.ActivityBleBinding inflate(android.view.LayoutInflater) -> inflate
    50:54:com.ddonging.debugtools.databinding.ActivityBleBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.ActivityIntroduceBinding -> com.ddonging.debugtools.databinding.ActivityIntroduceBinding:
# {"id":"sourceFile","fileName":"ActivityIntroduceBinding.java"}
    29:32:void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.TextView) -> <init>
    62:77:com.ddonging.debugtools.databinding.ActivityIntroduceBinding bind(android.view.View) -> bind
    18:18:android.view.View getRoot() -> getRoot
    38:38:android.widget.LinearLayout getRoot() -> getRoot
    43:43:com.ddonging.debugtools.databinding.ActivityIntroduceBinding inflate(android.view.LayoutInflater) -> inflate
    49:53:com.ddonging.debugtools.databinding.ActivityIntroduceBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.ActivityMainBinding -> com.ddonging.debugtools.databinding.ActivityMainBinding:
# {"id":"sourceFile","fileName":"ActivityMainBinding.java"}
    32:36:void <init>(androidx.drawerlayout.widget.DrawerLayout,com.ddonging.debugtools.databinding.AppBarMainBinding,androidx.drawerlayout.widget.DrawerLayout,com.google.android.material.navigation.NavigationView) -> <init>
    66:85:com.ddonging.debugtools.databinding.ActivityMainBinding bind(android.view.View) -> bind
    18:18:android.view.View getRoot() -> getRoot
    42:42:androidx.drawerlayout.widget.DrawerLayout getRoot() -> getRoot
    47:47:com.ddonging.debugtools.databinding.ActivityMainBinding inflate(android.view.LayoutInflater) -> inflate
    53:57:com.ddonging.debugtools.databinding.ActivityMainBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.ActivityMqttLogBinding -> com.ddonging.debugtools.databinding.ActivityMqttLogBinding:
# {"id":"sourceFile","fileName":"ActivityMqttLogBinding.java"}
    70:84:void <init>(android.widget.LinearLayout,android.widget.RadioButton,android.widget.RadioButton,android.widget.RadioButton,android.widget.EditText,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.RadioGroup,android.widget.ScrollView,com.google.android.material.button.MaterialButton,android.widget.TextView,android.widget.EditText) -> <init>
    114:196:com.ddonging.debugtools.databinding.ActivityMqttLogBinding bind(android.view.View) -> bind
    23:23:android.view.View getRoot() -> getRoot
    90:90:android.widget.LinearLayout getRoot() -> getRoot
    95:95:com.ddonging.debugtools.databinding.ActivityMqttLogBinding inflate(android.view.LayoutInflater) -> inflate
    101:105:com.ddonging.debugtools.databinding.ActivityMqttLogBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.ActivityMqttNewBinding -> com.ddonging.debugtools.databinding.ActivityMqttNewBinding:
# {"id":"sourceFile","fileName":"ActivityMqttNewBinding.java"}
    51:60:void <init>(android.widget.LinearLayout,com.google.android.material.textfield.TextInputEditText,com.google.android.material.button.MaterialButton,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText,com.google.android.material.textfield.TextInputEditText) -> <init>
    90:142:com.ddonging.debugtools.databinding.ActivityMqttNewBinding bind(android.view.View) -> bind
    19:19:android.view.View getRoot() -> getRoot
    66:66:android.widget.LinearLayout getRoot() -> getRoot
    71:71:com.ddonging.debugtools.databinding.ActivityMqttNewBinding inflate(android.view.LayoutInflater) -> inflate
    77:81:com.ddonging.debugtools.databinding.ActivityMqttNewBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.ActivityOpenBinding -> com.ddonging.debugtools.databinding.ActivityOpenBinding:
# {"id":"sourceFile","fileName":"ActivityOpenBinding.java"}
    41:48:void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout) -> <init>
    78:118:com.ddonging.debugtools.databinding.ActivityOpenBinding bind(android.view.View) -> bind
    17:17:android.view.View getRoot() -> getRoot
    54:54:android.widget.LinearLayout getRoot() -> getRoot
    59:59:com.ddonging.debugtools.databinding.ActivityOpenBinding inflate(android.view.LayoutInflater) -> inflate
    65:69:com.ddonging.debugtools.databinding.ActivityOpenBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.AppBarMainBinding -> com.ddonging.debugtools.databinding.AppBarMainBinding:
# {"id":"sourceFile","fileName":"AppBarMainBinding.java"}
    25:27:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,androidx.appcompat.widget.Toolbar) -> <init>
    57:66:com.ddonging.debugtools.databinding.AppBarMainBinding bind(android.view.View) -> bind
    18:18:android.view.View getRoot() -> getRoot
    33:33:androidx.coordinatorlayout.widget.CoordinatorLayout getRoot() -> getRoot
com.ddonging.debugtools.databinding.FragmentBleLogBinding -> com.ddonging.debugtools.databinding.FragmentBleLogBinding:
# {"id":"sourceFile","fileName":"FragmentBleLogBinding.java"}
    79:95:void <init>(android.widget.LinearLayout,android.widget.TextView,com.github.mikephil.charting.charts.LineChart,com.google.android.material.materialswitch.MaterialSwitch,android.widget.EditText,android.widget.LinearLayout,android.widget.TextView,android.widget.RadioButton,android.widget.RadioButton,android.widget.RadioGroup,android.widget.TextView,android.widget.ScrollView,com.google.android.material.button.MaterialButton,android.widget.TextView,android.widget.LinearLayout,android.widget.TextView) -> <init>
    125:220:com.ddonging.debugtools.databinding.FragmentBleLogBinding bind(android.view.View) -> bind
    25:25:android.view.View getRoot() -> getRoot
    101:101:android.widget.LinearLayout getRoot() -> getRoot
    112:116:com.ddonging.debugtools.databinding.FragmentBleLogBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.FragmentBleServiceBinding -> com.ddonging.debugtools.databinding.FragmentBleServiceBinding:
# {"id":"sourceFile","fileName":"FragmentBleServiceBinding.java"}
    29:32:void <init>(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.ExpandableListView) -> <init>
    62:77:com.ddonging.debugtools.databinding.FragmentBleServiceBinding bind(android.view.View) -> bind
    18:18:android.view.View getRoot() -> getRoot
    38:38:android.widget.LinearLayout getRoot() -> getRoot
    49:53:com.ddonging.debugtools.databinding.FragmentBleServiceBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.FragmentGalleryBinding -> com.ddonging.debugtools.databinding.FragmentGalleryBinding:
# {"id":"sourceFile","fileName":"FragmentGalleryBinding.java"}
    30:33:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.widget.ListView) -> <init>
    63:78:com.ddonging.debugtools.databinding.FragmentGalleryBinding bind(android.view.View) -> bind
    19:19:android.view.View getRoot() -> getRoot
    39:39:androidx.coordinatorlayout.widget.CoordinatorLayout getRoot() -> getRoot
    50:54:com.ddonging.debugtools.databinding.FragmentGalleryBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.FragmentHomeBinding -> com.ddonging.debugtools.databinding.FragmentHomeBinding:
# {"id":"sourceFile","fileName":"FragmentHomeBinding.java"}
    30:33:void <init>(android.widget.LinearLayout,androidx.swiperefreshlayout.widget.SwipeRefreshLayout,androidx.recyclerview.widget.RecyclerView) -> <init>
    63:78:com.ddonging.debugtools.databinding.FragmentHomeBinding bind(android.view.View) -> bind
    19:19:android.view.View getRoot() -> getRoot
    39:39:android.widget.LinearLayout getRoot() -> getRoot
    50:54:com.ddonging.debugtools.databinding.FragmentHomeBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.databinding.FragmentSlideshowBinding -> com.ddonging.debugtools.databinding.FragmentSlideshowBinding:
# {"id":"sourceFile","fileName":"FragmentSlideshowBinding.java"}
    85:104:void <init>(android.widget.LinearLayout,android.widget.TextView,com.google.android.material.materialswitch.MaterialSwitch,com.google.android.material.materialswitch.MaterialSwitch,com.google.android.material.materialswitch.MaterialSwitch,com.google.android.material.materialswitch.MaterialSwitch,com.google.android.material.materialswitch.MaterialSwitch,com.google.android.material.materialswitch.MaterialSwitch,com.google.android.material.materialswitch.MaterialSwitch,android.widget.TextView,android.widget.TextView,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView) -> <init>
    134:248:com.ddonging.debugtools.databinding.FragmentSlideshowBinding bind(android.view.View) -> bind
    19:19:android.view.View getRoot() -> getRoot
    110:110:android.widget.LinearLayout getRoot() -> getRoot
    121:125:com.ddonging.debugtools.databinding.FragmentSlideshowBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.ddonging.debugtools.entity.BleLog -> com.ddonging.debugtools.entity.BleLog:
# {"id":"sourceFile","fileName":"BleLog.java"}
    7:7:void <clinit>() -> <clinit>
    15:15:java.util.ArrayList getLog() -> getLog
    11:11:void setLog(java.util.HashMap) -> setLog
com.ddonging.debugtools.fragmnet.BleLogFragment -> com.ddonging.debugtools.fragmnet.BleLogFragment:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    0:0:void $r8$lambda$EYifRIZMznfWhd5Qsegr4QgLOTE(com.ddonging.debugtools.fragmnet.BleLogFragment,android.widget.RadioGroup,int) -> $r8$lambda$EYifRIZMznfWhd5Qsegr4QgLOTE
      # {"id":"com.android.tools.r8.synthesized"}
    51:55:void <init>() -> <init>
    51:51:com.ddonging.debugtools.databinding.FragmentBleLogBinding access$000(com.ddonging.debugtools.fragmnet.BleLogFragment) -> access$000
    206:209:void lambda$onCreateView$0(android.widget.RadioGroup,int) -> lambda$onCreateView$0
    59:212:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.ddonging.debugtools.fragmnet.BleLogFragment$$ExternalSyntheticLambda0 -> com.ddonging.debugtools.fragmnet.BleLogFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.ddonging.debugtools.fragmnet.BleLogFragment com.ddonging.debugtools.fragmnet.BleLogFragment$$InternalSyntheticLambda$1$f8837a74af210af383ed30c7083bfb85c99327922c23fa6158578e0508533898$0.f$0 -> f$0
    0:0:void com.ddonging.debugtools.fragmnet.BleLogFragment$$InternalSyntheticLambda$1$f8837a74af210af383ed30c7083bfb85c99327922c23fa6158578e0508533898$0.<init>(com.ddonging.debugtools.fragmnet.BleLogFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.ddonging.debugtools.fragmnet.BleLogFragment$$InternalSyntheticLambda$1$f8837a74af210af383ed30c7083bfb85c99327922c23fa6158578e0508533898$0.onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.ddonging.debugtools.fragmnet.BleLogFragment$1 -> com.ddonging.debugtools.fragmnet.BleLogFragment$1:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    65:65:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment) -> <init>
    68:86:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.fragmnet.BleLogFragment$1$1 -> com.ddonging.debugtools.fragmnet.BleLogFragment$1$1:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    74:74:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment$1,android.widget.TextView) -> <init>
    76:82:void onClick(android.content.DialogInterface,int) -> onClick
com.ddonging.debugtools.fragmnet.BleLogFragment$2 -> com.ddonging.debugtools.fragmnet.BleLogFragment$2:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    89:89:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment) -> <init>
    94:97:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ddonging.debugtools.fragmnet.BleLogFragment$3 -> com.ddonging.debugtools.fragmnet.BleLogFragment$3:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    103:103:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment) -> <init>
    103:103:void onChanged(java.lang.Object) -> onChanged
    106:106:void onChanged(java.lang.Boolean) -> onChanged
com.ddonging.debugtools.fragmnet.BleLogFragment$4 -> com.ddonging.debugtools.fragmnet.BleLogFragment$4:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    109:109:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment) -> <init>
    109:109:void onChanged(java.lang.Object) -> onChanged
    112:112:void onChanged(java.lang.Integer) -> onChanged
com.ddonging.debugtools.fragmnet.BleLogFragment$5 -> com.ddonging.debugtools.fragmnet.BleLogFragment$5:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    115:115:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment) -> <init>
    115:115:void onChanged(java.lang.Object) -> onChanged
    118:118:void onChanged(java.lang.Integer) -> onChanged
com.ddonging.debugtools.fragmnet.BleLogFragment$6 -> com.ddonging.debugtools.fragmnet.BleLogFragment$6:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    121:121:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment,com.ddonging.debugtools.ui.home.BleViewModel) -> <init>
    124:166:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.fragmnet.BleLogFragment$6$1 -> com.ddonging.debugtools.fragmnet.BleLogFragment$6$1:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    139:139:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment$6,android.widget.RadioGroup) -> <init>
    142:161:void onClick(android.content.DialogInterface,int) -> onClick
com.ddonging.debugtools.fragmnet.BleLogFragment$7 -> com.ddonging.debugtools.fragmnet.BleLogFragment$7:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    171:171:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment) -> <init>
    171:171:void onChanged(java.lang.Object) -> onChanged
    176:193:void onChanged(java.lang.String) -> onChanged
com.ddonging.debugtools.fragmnet.BleLogFragment$7$1 -> com.ddonging.debugtools.fragmnet.BleLogFragment$7$1:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    193:193:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment$7) -> <init>
    196:196:void run() -> run
com.ddonging.debugtools.fragmnet.BleLogFragment$8 -> com.ddonging.debugtools.fragmnet.BleLogFragment$8:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    212:212:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment,com.ddonging.debugtools.ui.home.BleViewModel) -> <init>
    215:242:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.fragmnet.BleLogFragment$8$1 -> com.ddonging.debugtools.fragmnet.BleLogFragment$8$1:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    218:218:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment$8) -> <init>
    222:223:void run() -> run
com.ddonging.debugtools.fragmnet.BleLogFragment$8$1$1 -> com.ddonging.debugtools.fragmnet.BleLogFragment$8$1$1:
# {"id":"sourceFile","fileName":"BleLogFragment.java"}
    223:223:void <init>(com.ddonging.debugtools.fragmnet.BleLogFragment$8$1) -> <init>
    226:226:void run() -> run
com.ddonging.debugtools.fragmnet.BleServiceFragment -> com.ddonging.debugtools.fragmnet.BleServiceFragment:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    51:66:void <init>() -> <init>
    51:51:void access$000(com.ddonging.debugtools.fragmnet.BleServiceFragment) -> access$000
    51:51:com.ddonging.debugtools.databinding.FragmentBleServiceBinding access$100(com.ddonging.debugtools.fragmnet.BleServiceFragment) -> access$100
    51:51:android.app.ProgressDialog access$200(com.ddonging.debugtools.fragmnet.BleServiceFragment) -> access$200
    51:51:android.app.ProgressDialog access$202(com.ddonging.debugtools.fragmnet.BleServiceFragment,android.app.ProgressDialog) -> access$202
    416:416:void dismiss() -> dismiss
    312:313:void initBle() -> initBle
    69:151:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    428:430:void onDestroyView() -> onDestroyView
    396:396:void show(java.lang.String) -> show
com.ddonging.debugtools.fragmnet.BleServiceFragment$1 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$1:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    78:78:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment) -> <init>
    78:78:void onChanged(java.lang.Object) -> onChanged
    81:81:void onChanged(java.lang.String) -> onChanged
com.ddonging.debugtools.fragmnet.BleServiceFragment$2 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$2:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    84:84:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment) -> <init>
    84:84:void onChanged(java.lang.Object) -> onChanged
    87:94:void onChanged(java.lang.Boolean) -> onChanged
com.ddonging.debugtools.fragmnet.BleServiceFragment$3 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$3:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    99:99:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment,com.ddonging.debugtools.ui.home.BleViewModel) -> <init>
    99:99:void onChanged(java.lang.Object) -> onChanged
    102:102:void onChanged(java.lang.String) -> onChanged
com.ddonging.debugtools.fragmnet.BleServiceFragment$3$1 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$3$1:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    102:102:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment$3) -> <init>
    110:110:void onMtuChanged(int) -> onMtuChanged
    0:0:void onSetMTUFailure(com.clj.fastble.exception.BleException) -> onSetMTUFailure
com.ddonging.debugtools.fragmnet.BleServiceFragment$4 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$4:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    115:115:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment,com.ddonging.debugtools.ui.home.BleViewModel) -> <init>
    115:115:void onChanged(java.lang.Object) -> onChanged
    118:123:void onChanged(java.lang.String) -> onChanged
com.ddonging.debugtools.fragmnet.BleServiceFragment$4$1 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$4$1:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    124:124:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment$4) -> <init>
    137:139:void onWriteFailure(com.clj.fastble.exception.BleException) -> onWriteFailure
    128:130:void onWriteSuccess(int,int,byte[]) -> onWriteSuccess
com.ddonging.debugtools.fragmnet.BleServiceFragment$5 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$5:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    151:151:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment,com.ddonging.debugtools.ui.home.BleViewModel) -> <init>
    154:302:void onItemClick(android.view.View,java.lang.String,java.lang.String,java.lang.String) -> onItemClick
com.ddonging.debugtools.fragmnet.BleServiceFragment$5$1 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$5$1:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    160:160:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment$5) -> <init>
    207:207:void onReadFailure(com.clj.fastble.exception.BleException) -> onReadFailure
    164:198:void onReadSuccess(byte[]) -> onReadSuccess
com.ddonging.debugtools.fragmnet.BleServiceFragment$5$2 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$5$2:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    222:222:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment$5,java.lang.String,java.lang.String) -> <init>
    245:290:void onCharacteristicChanged(byte[]) -> onCharacteristicChanged
    234:241:void onNotifyFailure(com.clj.fastble.exception.BleException) -> onNotifyFailure
    225:228:void onNotifySuccess() -> onNotifySuccess
com.ddonging.debugtools.fragmnet.BleServiceFragment$6 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$6:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    0:0:void $r8$lambda$DxLO6uTfbNl4SnwSTh4EnROPfgI(com.ddonging.debugtools.fragmnet.BleServiceFragment$6,android.bluetooth.BluetoothGatt) -> $r8$lambda$DxLO6uTfbNl4SnwSTh4EnROPfgI
      # {"id":"com.android.tools.r8.synthesized"}
    313:313:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment,com.ddonging.debugtools.ui.home.BleViewModel) -> <init>
    341:377:void lambda$onConnectSuccess$0(android.bluetooth.BluetoothGatt) -> lambda$onConnectSuccess$0
    322:331:void onConnectFail(com.clj.fastble.data.BleDevice,com.clj.fastble.exception.BleException) -> onConnectFail
    335:340:void onConnectSuccess(com.clj.fastble.data.BleDevice,android.bluetooth.BluetoothGatt,int) -> onConnectSuccess
    387:390:void onDisConnected(boolean,com.clj.fastble.data.BleDevice,android.bluetooth.BluetoothGatt,int) -> onDisConnected
    316:318:void onStartConnect() -> onStartConnect
com.ddonging.debugtools.fragmnet.BleServiceFragment$6$$ExternalSyntheticLambda0 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$6$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.ddonging.debugtools.fragmnet.BleServiceFragment$6 com.ddonging.debugtools.fragmnet.BleServiceFragment$6$$InternalSyntheticLambda$1$e7c848be4ece6f4d8003a9c04d3b3dbccee9e5850f7319ff7898a031d24bfdf5$0.f$0 -> f$0
    android.bluetooth.BluetoothGatt com.ddonging.debugtools.fragmnet.BleServiceFragment$6$$InternalSyntheticLambda$1$e7c848be4ece6f4d8003a9c04d3b3dbccee9e5850f7319ff7898a031d24bfdf5$0.f$1 -> f$1
    0:0:void com.ddonging.debugtools.fragmnet.BleServiceFragment$6$$InternalSyntheticLambda$1$e7c848be4ece6f4d8003a9c04d3b3dbccee9e5850f7319ff7898a031d24bfdf5$0.<init>(com.ddonging.debugtools.fragmnet.BleServiceFragment$6,android.bluetooth.BluetoothGatt) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.ddonging.debugtools.fragmnet.BleServiceFragment$6$$InternalSyntheticLambda$1$e7c848be4ece6f4d8003a9c04d3b3dbccee9e5850f7319ff7898a031d24bfdf5$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.ddonging.debugtools.fragmnet.BleServiceFragment$7 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$7:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    396:396:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment,java.lang.String) -> <init>
    399:408:void run() -> run
com.ddonging.debugtools.fragmnet.BleServiceFragment$8 -> com.ddonging.debugtools.fragmnet.BleServiceFragment$8:
# {"id":"sourceFile","fileName":"BleServiceFragment.java"}
    416:416:void <init>(com.ddonging.debugtools.fragmnet.BleServiceFragment) -> <init>
    419:421:void run() -> run
com.ddonging.debugtools.ui.gallery.GalleryFragment -> com.ddonging.debugtools.ui.gallery.GalleryFragment:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    41:41:void <init>() -> <init>
    41:41:com.ddonging.debugtools.databinding.FragmentGalleryBinding access$000(com.ddonging.debugtools.ui.gallery.GalleryFragment) -> access$000
    217:233:java.util.ArrayList get(android.content.Context) -> get
    195:199:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    46:185:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    241:242:void onDestroyView() -> onDestroyView
com.ddonging.debugtools.ui.gallery.GalleryFragment$1 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$1:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    49:49:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment) -> <init>
    49:49:void onChanged(java.lang.Object) -> onChanged
    52:54:void onChanged(java.lang.String) -> onChanged
com.ddonging.debugtools.ui.gallery.GalleryFragment$1$1 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$1$1:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    54:54:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment$1) -> <init>
    0:0:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ddonging.debugtools.ui.gallery.GalleryFragment$2 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$2:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    63:63:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment) -> <init>
    66:74:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ddonging.debugtools.ui.gallery.GalleryFragment$3 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$3:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    77:77:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment) -> <init>
    80:180:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.ddonging.debugtools.ui.gallery.GalleryFragment$3$1 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$3$1:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    97:97:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment$3,int,android.widget.EditText,android.widget.EditText,android.widget.EditText,android.widget.EditText,android.widget.EditText,android.widget.EditText,androidx.appcompat.app.AlertDialog) -> <init>
    100:141:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.gallery.GalleryFragment$3$1$1 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$3$1$1:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    122:122:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment$3$1) -> <init>
    125:133:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ddonging.debugtools.ui.gallery.GalleryFragment$3$2 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$3$2:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    144:144:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment$3,android.view.View,androidx.appcompat.app.AlertDialog) -> <init>
    147:177:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.gallery.GalleryFragment$3$2$1 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$3$2$1:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    159:159:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment$3$2) -> <init>
    162:170:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ddonging.debugtools.ui.gallery.GalleryFragment$4 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$4:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    185:185:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment) -> <init>
    188:188:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.gallery.GalleryFragment$5 -> com.ddonging.debugtools.ui.gallery.GalleryFragment$5:
# {"id":"sourceFile","fileName":"GalleryFragment.java"}
    199:199:void <init>(com.ddonging.debugtools.ui.gallery.GalleryFragment) -> <init>
    202:210:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ddonging.debugtools.ui.gallery.GalleryViewModel -> com.ddonging.debugtools.ui.gallery.GalleryViewModel:
# {"id":"sourceFile","fileName":"GalleryViewModel.java"}
    12:13:void <init>() -> <init>
    31:34:androidx.lifecycle.LiveData getConnectionState() -> getConnectionState
    21:24:androidx.lifecycle.LiveData getData() -> getData
    36:39:void setConnection(boolean) -> setConnection
    26:29:void setConnectionState(boolean) -> setConnectionState
    16:19:void setData(java.lang.String) -> setData
com.ddonging.debugtools.ui.gallery.MqttConnectActivity -> com.ddonging.debugtools.ui.gallery.MqttConnectActivity:
# {"id":"sourceFile","fileName":"MqttConnectActivity.java"}
    42:56:void <init>() -> <init>
    42:42:com.ddonging.debugtools.databinding.ActivityMqttNewBinding access$000(com.ddonging.debugtools.ui.gallery.MqttConnectActivity) -> access$000
    59:68:void onCreate(android.os.Bundle) -> onCreate
    123:136:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    141:141:void onDestroy() -> onDestroy
    112:114:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.ddonging.debugtools.ui.gallery.MqttConnectActivity$1 -> com.ddonging.debugtools.ui.gallery.MqttConnectActivity$1:
# {"id":"sourceFile","fileName":"MqttConnectActivity.java"}
    68:68:void <init>(com.ddonging.debugtools.ui.gallery.MqttConnectActivity,com.ddonging.debugtools.ui.gallery.GalleryViewModel) -> <init>
    71:101:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.gallery.MqttConnectActivity$2 -> com.ddonging.debugtools.ui.gallery.MqttConnectActivity$2:
# {"id":"sourceFile","fileName":"MqttConnectActivity.java"}
    128:128:void <init>(com.ddonging.debugtools.ui.gallery.MqttConnectActivity) -> <init>
    131:131:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.ui.gallery.MqttDetailActivity -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    0:0:void $r8$lambda$AE2yl30qpyHSrpNgUeOn4K6wwR0(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> $r8$lambda$AE2yl30qpyHSrpNgUeOn4K6wwR0
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$xHeWFib3SIHZn8-X-I1g_w_LYXk(com.ddonging.debugtools.ui.gallery.MqttDetailActivity,android.content.Intent,android.os.Message) -> $r8$lambda$xHeWFib3SIHZn8-X-I1g_w_LYXk
      # {"id":"com.android.tools.r8.synthesized"}
    49:62:void <init>() -> <init>
    49:49:com.ddonging.debugtools.databinding.ActivityMqttLogBinding access$000(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> access$000
    49:49:void access$100(com.ddonging.debugtools.ui.gallery.MqttDetailActivity,java.lang.String) -> access$100
    49:49:org.eclipse.paho.client.mqttv3.MqttClient access$200(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> access$200
    49:49:void access$300(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> access$300
    49:49:android.os.Handler access$400(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> access$400
    376:393:void lambda$mqtt_connect$1() -> lambda$mqtt_connect$1
    85:108:boolean lambda$onCreate$0(android.content.Intent,android.os.Message) -> lambda$onCreate$0
    374:395:void mqtt_connect() -> mqtt_connect
    308:360:void mqtt_init(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> mqtt_init
    65:84:void onCreate(android.os.Bundle) -> onCreate
    224:257:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    293:301:void onDestroy() -> onDestroy
    212:214:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    122:207:void publish_message(java.lang.String) -> publish_message
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$ExternalSyntheticLambda0 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.ddonging.debugtools.ui.gallery.MqttDetailActivity com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$InternalSyntheticLambda$1$000cd8876ef1e939d978979ab8d9bdd696c0abdb3986cdd0c06e03c1ca8dea2d$0.f$0 -> f$0
    0:0:void com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$InternalSyntheticLambda$1$000cd8876ef1e939d978979ab8d9bdd696c0abdb3986cdd0c06e03c1ca8dea2d$0.<init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$InternalSyntheticLambda$1$000cd8876ef1e939d978979ab8d9bdd696c0abdb3986cdd0c06e03c1ca8dea2d$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$ExternalSyntheticLambda1 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.ddonging.debugtools.ui.gallery.MqttDetailActivity com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$InternalSyntheticLambda$1$68c8180dc42145bb5fb297a182319f5a8c81e192a3b8a6a1cbd92670eaa4ba2d$0.f$0 -> f$0
    android.content.Intent com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$InternalSyntheticLambda$1$68c8180dc42145bb5fb297a182319f5a8c81e192a3b8a6a1cbd92670eaa4ba2d$0.f$1 -> f$1
    0:0:void com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$InternalSyntheticLambda$1$68c8180dc42145bb5fb297a182319f5a8c81e192a3b8a6a1cbd92670eaa4ba2d$0.<init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity,android.content.Intent) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.ddonging.debugtools.ui.gallery.MqttDetailActivity$$InternalSyntheticLambda$1$68c8180dc42145bb5fb297a182319f5a8c81e192a3b8a6a1cbd92670eaa4ba2d$0.handleMessage(android.os.Message) -> handleMessage
      # {"id":"com.android.tools.r8.synthesized"}
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$1 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$1:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    78:78:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> <init>
    81:81:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$10 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$10:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    360:360:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity,java.lang.Exception) -> <init>
    363:366:void run() -> run
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$11 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$11:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    381:381:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity,java.lang.Exception) -> <init>
    384:387:void run() -> run
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$2 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$2:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    108:108:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity,java.lang.String,java.lang.Exception) -> <init>
    111:111:void run() -> run
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    138:138:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity,java.lang.String) -> <init>
    141:176:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3$1 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3$1:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    145:145:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3,org.eclipse.paho.client.mqttv3.MqttException) -> <init>
    148:151:void run() -> run
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3$2 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3$2:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    160:160:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3,org.eclipse.paho.client.mqttv3.MqttException) -> <init>
    163:166:void run() -> run
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3$3 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3$3:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    176:176:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity$3,org.eclipse.paho.client.mqttv3.MqttException) -> <init>
    179:182:void run() -> run
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$4 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$4:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    197:197:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> <init>
    200:200:void run() -> run
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$5 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$5:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    229:229:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> <init>
    232:232:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$6 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$6:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    236:236:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> <init>
    239:240:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$7 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$7:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    246:246:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity,android.view.Menu) -> <init>
    246:246:void onChanged(java.lang.Object) -> onChanged
    249:253:void onChanged(java.lang.Boolean) -> onChanged
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$8 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$8:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    257:257:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity,android.view.Menu,com.ddonging.debugtools.ui.gallery.GalleryViewModel) -> <init>
    260:284:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$9 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$9:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    320:320:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity) -> <init>
    323:326:void connectionLost(java.lang.Throwable) -> connectionLost
    0:0:void deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken) -> deliveryComplete
    335:356:void messageArrived(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> messageArrived
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$9$1 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$9$1:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    335:335:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity$9,org.eclipse.paho.client.mqttv3.MqttMessage,java.lang.String) -> <init>
    338:344:void run() -> run
com.ddonging.debugtools.ui.gallery.MqttDetailActivity$9$1$1 -> com.ddonging.debugtools.ui.gallery.MqttDetailActivity$9$1$1:
# {"id":"sourceFile","fileName":"MqttDetailActivity.java"}
    344:344:void <init>(com.ddonging.debugtools.ui.gallery.MqttDetailActivity$9$1) -> <init>
    347:347:void run() -> run
com.ddonging.debugtools.ui.home.BleDetailActivity -> com.ddonging.debugtools.ui.home.BleDetailActivity:
# {"id":"sourceFile","fileName":"BleDetailActivity.java"}
    39:39:void <init>() -> <init>
    39:39:void access$000(com.ddonging.debugtools.ui.home.BleDetailActivity) -> access$000
    70:87:void export() -> export
    44:54:void onCreate(android.os.Bundle) -> onCreate
    92:159:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    177:179:void onDestroy() -> onDestroy
    59:61:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.ddonging.debugtools.ui.home.BleDetailActivity$1 -> com.ddonging.debugtools.ui.home.BleDetailActivity$1:
# {"id":"sourceFile","fileName":"BleDetailActivity.java"}
    95:95:void <init>(com.ddonging.debugtools.ui.home.BleDetailActivity,android.view.Menu) -> <init>
    95:95:void onChanged(java.lang.Object) -> onChanged
    98:102:void onChanged(java.lang.Boolean) -> onChanged
com.ddonging.debugtools.ui.home.BleDetailActivity$2 -> com.ddonging.debugtools.ui.home.BleDetailActivity$2:
# {"id":"sourceFile","fileName":"BleDetailActivity.java"}
    109:109:void <init>(com.ddonging.debugtools.ui.home.BleDetailActivity,com.ddonging.debugtools.ui.home.BleViewModel) -> <init>
    112:112:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.ui.home.BleDetailActivity$3 -> com.ddonging.debugtools.ui.home.BleDetailActivity$3:
# {"id":"sourceFile","fileName":"BleDetailActivity.java"}
    116:116:void <init>(com.ddonging.debugtools.ui.home.BleDetailActivity) -> <init>
    119:120:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.ui.home.BleDetailActivity$4 -> com.ddonging.debugtools.ui.home.BleDetailActivity$4:
# {"id":"sourceFile","fileName":"BleDetailActivity.java"}
    125:125:void <init>(com.ddonging.debugtools.ui.home.BleDetailActivity) -> <init>
    128:137:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.ui.home.BleDetailActivity$4$1 -> com.ddonging.debugtools.ui.home.BleDetailActivity$4$1:
# {"id":"sourceFile","fileName":"BleDetailActivity.java"}
    131:131:void <init>(com.ddonging.debugtools.ui.home.BleDetailActivity$4) -> <init>
    134:134:void onClick(android.content.DialogInterface,int) -> onClick
com.ddonging.debugtools.ui.home.BleDetailActivity$5 -> com.ddonging.debugtools.ui.home.BleDetailActivity$5:
# {"id":"sourceFile","fileName":"BleDetailActivity.java"}
    141:141:void <init>(com.ddonging.debugtools.ui.home.BleDetailActivity) -> <init>
    144:155:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.ui.home.BleDetailActivity$5$1 -> com.ddonging.debugtools.ui.home.BleDetailActivity$5$1:
# {"id":"sourceFile","fileName":"BleDetailActivity.java"}
    148:148:void <init>(com.ddonging.debugtools.ui.home.BleDetailActivity$5,android.widget.TextView) -> <init>
    151:152:void onClick(android.content.DialogInterface,int) -> onClick
com.ddonging.debugtools.ui.home.BleDetailActivity$6 -> com.ddonging.debugtools.ui.home.BleDetailActivity$6:
# {"id":"sourceFile","fileName":"BleDetailActivity.java"}
    159:159:void <init>(com.ddonging.debugtools.ui.home.BleDetailActivity,android.view.Menu,com.ddonging.debugtools.ui.home.BleViewModel) -> <init>
    162:168:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.ddonging.debugtools.ui.home.BleViewModel -> com.ddonging.debugtools.ui.home.BleViewModel:
# {"id":"sourceFile","fileName":"BleViewModel.java"}
    9:9:void <init>() -> <init>
    85:88:androidx.lifecycle.LiveData getClear() -> getClear
    74:77:androidx.lifecycle.LiveData getConnection() -> getConnection
    64:67:androidx.lifecycle.LiveData getConnectionState() -> getConnectionState
    21:24:androidx.lifecycle.MutableLiveData getContent() -> getContent
    99:102:androidx.lifecycle.LiveData getFormat() -> getFormat
    41:44:androidx.lifecycle.LiveData getMtu() -> getMtu
    110:113:androidx.lifecycle.LiveData getReceiveTotal() -> getReceiveTotal
    122:125:androidx.lifecycle.LiveData getSendTotal() -> getSendTotal
    47:50:androidx.lifecycle.LiveData getWriteData() -> getWriteData
    80:83:void setClear(boolean) -> setClear
    69:72:void setConnection(boolean) -> setConnection
    59:62:void setConnectionState(boolean) -> setConnectionState
    27:30:void setData(java.lang.String) -> setData
    94:97:void setFormat(java.lang.String) -> setFormat
    36:39:void setMtu(java.lang.String) -> setMtu
    105:108:void setReceiveTotal(java.lang.Integer) -> setReceiveTotal
    117:120:void setSendTotal(java.lang.Integer) -> setSendTotal
    45:45:void setWriteData(java.lang.String) -> setWriteData
com.ddonging.debugtools.ui.home.HomeFragment -> com.ddonging.debugtools.ui.home.HomeFragment:
# {"id":"sourceFile","fileName":"HomeFragment.java"}
    40:90:void <init>() -> <init>
    40:40:com.ddonging.debugtools.adapter.QuickAdapter access$000(com.ddonging.debugtools.ui.home.HomeFragment) -> access$000
    40:40:void access$100(com.ddonging.debugtools.ui.home.HomeFragment) -> access$100
    80:86:void ble() -> ble
    103:103:void initBle() -> initBle
    46:76:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    157:160:void onDestroyView() -> onDestroyView
    145:148:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    92:95:boolean requestPermission() -> requestPermission
com.ddonging.debugtools.ui.home.HomeFragment$1 -> com.ddonging.debugtools.ui.home.HomeFragment$1:
# {"id":"sourceFile","fileName":"HomeFragment.java"}
    50:50:void <init>(com.ddonging.debugtools.ui.home.HomeFragment) -> <init>
    53:54:void onRefresh() -> onRefresh
com.ddonging.debugtools.ui.home.HomeFragment$2 -> com.ddonging.debugtools.ui.home.HomeFragment$2:
# {"id":"sourceFile","fileName":"HomeFragment.java"}
    65:65:void <init>(com.ddonging.debugtools.ui.home.HomeFragment) -> <init>
    68:73:void onItemClick(com.chad.library.adapter.base.BaseQuickAdapter,android.view.View,int) -> onItemClick
com.ddonging.debugtools.ui.home.HomeFragment$3 -> com.ddonging.debugtools.ui.home.HomeFragment$3:
# {"id":"sourceFile","fileName":"HomeFragment.java"}
    103:103:void <init>(com.ddonging.debugtools.ui.home.HomeFragment) -> <init>
    0:0:void onLeScan(com.clj.fastble.data.BleDevice) -> onLeScan
    0:0:void onScanFinished(java.util.List) -> onScanFinished
    0:0:void onScanStarted(boolean) -> onScanStarted
    115:126:void onScanning(com.clj.fastble.data.BleDevice) -> onScanning
com.ddonging.debugtools.ui.slideshow.SlideshowFragment -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    23:23:void <init>() -> <init>
    23:23:com.ddonging.debugtools.databinding.FragmentSlideshowBinding access$000(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> access$000
    28:193:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    222:223:void onDestroyView() -> onDestroyView
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$1 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$1:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    42:42:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    45:45:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$10 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$10:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    181:181:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    184:184:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$11 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$11:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    187:187:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    190:190:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$12 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$12:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    193:193:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    196:214:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$12$1 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$12$1:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    202:202:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment$12,android.widget.TextView) -> <init>
    204:210:void onClick(android.content.DialogInterface,int) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$2 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$2:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    51:51:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    54:54:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$3 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$3:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    57:57:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    60:79:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$3$1 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$3$1:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    66:66:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment$3,android.widget.TextView) -> <init>
    68:73:void onClick(android.content.DialogInterface,int) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$4 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$4:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    82:82:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    85:104:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$4$1 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$4$1:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    91:91:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment$4,android.widget.TextView) -> <init>
    93:98:void onClick(android.content.DialogInterface,int) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$5 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$5:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    114:114:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    117:117:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$6 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$6:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    120:120:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    123:142:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$6$1 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$6$1:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    129:129:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment$6,android.widget.TextView) -> <init>
    131:136:void onClick(android.content.DialogInterface,int) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$7 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$7:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    145:145:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    148:166:void onClick(android.view.View) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$7$1 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$7$1:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    154:154:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment$7,android.widget.TextView) -> <init>
    157:162:void onClick(android.content.DialogInterface,int) -> onClick
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$8 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$8:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    169:169:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    172:172:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ddonging.debugtools.ui.slideshow.SlideshowFragment$9 -> com.ddonging.debugtools.ui.slideshow.SlideshowFragment$9:
# {"id":"sourceFile","fileName":"SlideshowFragment.java"}
    175:175:void <init>(com.ddonging.debugtools.ui.slideshow.SlideshowFragment) -> <init>
    178:178:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ddonging.debugtools.ui.slideshow.SlideshowViewModel -> com.ddonging.debugtools.ui.slideshow.SlideshowViewModel:
# {"id":"sourceFile","fileName":"SlideshowViewModel.java"}
    11:13:void <init>() -> <init>
com.ddonging.debugtools.utils.ExcelUtils -> com.ddonging.debugtools.utils.ExcelUtils:
# {"id":"sourceFile","fileName":"ExcelUtils.java"}
    0:0:void <clinit>() -> <clinit>
    36:37:void Export(java.lang.String,java.lang.String[],java.util.List,android.content.Context) -> Export
    54:75:void format() -> format
    88:128:void initExcel(java.lang.String,int,java.lang.String[]) -> initExcel
    128:130:void initExcel(java.lang.String,int,java.lang.String[]) -> initExcel
    130:133:void initExcel(java.lang.String,int,java.lang.String[]) -> initExcel
    148:209:void writeObjListToExcel(java.util.List,java.lang.String,android.content.Context) -> writeObjListToExcel
    201:211:void writeObjListToExcel(java.util.List,java.lang.String,android.content.Context) -> writeObjListToExcel
    211:214:void writeObjListToExcel(java.util.List,java.lang.String,android.content.Context) -> writeObjListToExcel
com.ddonging.debugtools.utils.ExcelUtils$1 -> com.ddonging.debugtools.utils.ExcelUtils$1:
# {"id":"sourceFile","fileName":"ExcelUtils.java"}
    190:190:void <init>(android.content.Context) -> <init>
    193:193:void run() -> run
com.ddonging.debugtools.utils.PreferenceUtil -> com.ddonging.debugtools.utils.PreferenceUtil:
# {"id":"sourceFile","fileName":"PreferenceUtil.java"}
    0:0:void <clinit>() -> <clinit>
    45:46:void <init>(java.lang.String,android.content.Context) -> <init>
    41:43:com.ddonging.debugtools.utils.PreferenceUtil getInstance(java.lang.String,android.content.Context) -> getInstance
    120:121:java.lang.Integer getInterval(java.lang.Integer) -> getInterval
    159:159:java.lang.Boolean getIsAutoReconnect(java.lang.Boolean) -> getIsAutoReconnect
    100:100:java.lang.Boolean getIsAutoScroll(java.lang.Boolean) -> getIsAutoScroll
    170:170:java.lang.Boolean getIsCleanSession(java.lang.Boolean) -> getIsCleanSession
    69:69:java.lang.Boolean getIsMac(java.lang.Boolean) -> getIsMac
    109:109:java.lang.Boolean getIsName(java.lang.Boolean) -> getIsName
    78:78:java.lang.Boolean getIsRssi(java.lang.Boolean) -> getIsRssi
    88:88:java.lang.Boolean getIsTime(java.lang.Boolean) -> getIsTime
    150:151:java.lang.Integer getKeepAlive(java.lang.Integer) -> getKeepAlive
    130:131:java.lang.Integer getOperate(java.lang.Integer) -> getOperate
    59:60:java.lang.Integer getTime(java.lang.Integer) -> getTime
    140:141:java.lang.Integer getTimeout(java.lang.Integer) -> getTimeout
    124:126:void setInterval(java.lang.Integer) -> setInterval
    163:165:void setIsAutoReconnect(java.lang.Boolean) -> setIsAutoReconnect
    104:106:void setIsAutoScroll(java.lang.Boolean) -> setIsAutoScroll
    174:176:void setIsCleanSession(java.lang.Boolean) -> setIsCleanSession
    73:75:void setIsMac(java.lang.Boolean) -> setIsMac
    113:115:void setIsName(java.lang.Boolean) -> setIsName
    82:84:void setIsRssi(java.lang.Boolean) -> setIsRssi
    92:94:void setIsTime(java.lang.Boolean) -> setIsTime
    154:156:void setKeepalive(java.lang.Integer) -> setKeepalive
    134:136:void setOperate(java.lang.Integer) -> setOperate
    63:65:void setTime(java.lang.Integer) -> setTime
    144:146:void setTimeout(java.lang.Integer) -> setTimeout
com.ddonging.debugtools.utils.TextUtils -> com.ddonging.debugtools.utils.TextUtils:
# {"id":"sourceFile","fileName":"TextUtils.java"}
    169:178:java.lang.String byteToHexString(byte[]) -> byteToHexString
    67:67:java.lang.String getCharacteristicName(java.lang.String) -> getCharacteristicName
    50:50:java.lang.String getServiceName(java.lang.String) -> getServiceName
com.ddonging.debugtools.utils.ToastUtil -> com.ddonging.debugtools.utils.ToastUtil:
# {"id":"sourceFile","fileName":"ToastUtil.java"}
    14:22:void Toast(android.content.Context,java.lang.String) -> Toast
com.ddonging.debugtools.utils.lineChartHandle -> com.ddonging.debugtools.utils.lineChartHandle:
# {"id":"sourceFile","fileName":"lineChartHandle.java"}
    17:24:void <init>() -> <init>
    93:97:void addData(java.lang.String,java.lang.String,com.github.mikephil.charting.charts.LineChart,java.util.List) -> addData
    130:138:void addLine1Data(java.lang.Float) -> addLine1Data
    27:89:void initLineChart(com.github.mikephil.charting.charts.LineChart) -> initLineChart
    104:117:com.github.mikephil.charting.data.LineDataSet set(java.util.List,java.lang.String,java.lang.String) -> set
com.github.mikephil.charting.animation.ChartAnimator -> com.github.mikephil.charting.animation.ChartAnimator:
# {"id":"sourceFile","fileName":"ChartAnimator.java"}
    23:36:void <init>(android.animation.ValueAnimator$AnimatorUpdateListener) -> <init>
    251:254:void animateX(int) -> animateX
    269:272:void animateY(int) -> animateY
    299:299:float getPhaseX() -> getPhaseX
    281:281:float getPhaseY() -> getPhaseY
com.github.mikephil.charting.animation.Easing$EasingOption -> com.github.mikephil.charting.animation.Easing$EasingOption:
# {"id":"sourceFile","fileName":"Easing.java"}
    15:43:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    15:15:com.github.mikephil.charting.animation.Easing$EasingOption valueOf(java.lang.String) -> valueOf
    15:15:com.github.mikephil.charting.animation.Easing$EasingOption[] values() -> values
com.github.mikephil.charting.charts.BarChart -> com.github.mikephil.charting.charts.BarChart:
# {"id":"sourceFile","fileName":"BarChart.java"}
    27:42:void <init>(android.content.Context) -> <init>
    27:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    27:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    68:71:void calcMinMax() -> calcMinMax
    225:225:com.github.mikephil.charting.data.BarData getBarData() -> getBarData
    92:102:com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    55:62:void init() -> init
    208:208:boolean isHighlightFullBarEnabled() -> isHighlightFullBarEnabled
    179:179:void setDrawBarShadow(boolean) -> setDrawBarShadow
    160:160:void setDrawValueAboveBar(boolean) -> setDrawValueAboveBar
    236:236:void setFitBars(boolean) -> setFitBars
    200:200:void setHighlightFullBarEnabled(boolean) -> setHighlightFullBarEnabled
com.github.mikephil.charting.charts.BarLineChartBase -> com.github.mikephil.charting.charts.BarLineChartBase:
# {"id":"sourceFile","fileName":"BarLineChartBase.java"}
    53:1587:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:1587:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:1587:void <init>(android.content.Context) -> <init>
    344:361:void autoScale() -> autoScale
    367:371:void calcMinMax() -> calcMinMax
    377:440:void calculateLegendOffsets(android.graphics.RectF) -> calculateLegendOffsets
    456:519:void calculateOffsets() -> calculateOffsets
    569:570:void computeScroll() -> computeScroll
    527:534:void drawGridBackground(android.graphics.Canvas) -> drawGridBackground
    1421:1424:com.github.mikephil.charting.components.YAxis getAxis(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getAxis
    1400:1400:com.github.mikephil.charting.components.YAxis getAxisLeft() -> getAxisLeft
    1008:1011:float getAxisRange(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getAxisRange
    1410:1410:com.github.mikephil.charting.components.YAxis getAxisRight() -> getAxisRight
    44:44:com.github.mikephil.charting.data.BarLineScatterCandleBubbleData getData() -> getData
    1310:1312:com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet getDataSetByTouchPoint(float,float) -> getDataSetByTouchPoint
    0:0:com.github.mikephil.charting.listener.OnDrawListener getDrawListener() -> getDrawListener
    1349:1351:float getHighestVisibleX() -> getHighestVisibleX
    1330:1332:float getLowestVisibleX() -> getLowestVisibleX
    1066:1066:int getMaxVisibleCount() -> getMaxVisibleCount
    1229:1229:float getMinOffset() -> getMinOffset
    1494:1494:com.github.mikephil.charting.renderer.YAxisRenderer getRendererLeftYAxis() -> getRendererLeftYAxis
    1507:1507:com.github.mikephil.charting.renderer.YAxisRenderer getRendererRightYAxis() -> getRendererRightYAxis
    1481:1481:com.github.mikephil.charting.renderer.XAxisRenderer getRendererXAxis() -> getRendererXAxis
    1368:1371:float getScaleX() -> getScaleX
    1378:1381:float getScaleY() -> getScaleY
    546:549:com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getTransformer
    1361:1361:float getVisibleXRange() -> getVisibleXRange
    1521:1521:float getYChartMax() -> getYChartMax
    1526:1526:float getYChartMin() -> getYChartMin
    1477:1477:boolean hasNoDragOffset() -> hasNoDragOffset
    152:178:void init() -> init
    1535:1537:boolean isAnyAxisInverted() -> isAnyAxisInverted
    1204:1204:boolean isClipValuesToContentEnabled() -> isClipValuesToContentEnabled
    1155:1155:boolean isDoubleTapToZoomEnabled() -> isDoubleTapToZoomEnabled
    1109:1109:boolean isDragEnabled() -> isDragEnabled
    1390:1390:boolean isFullyZoomedOut() -> isFullyZoomedOut
    1080:1080:boolean isHighlightPerDragEnabled() -> isHighlightPerDragEnabled
    1429:1429:boolean isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency) -> isInverted
    1448:1448:boolean isPinchZoomEnabled() -> isPinchZoomEnabled
    1132:1132:boolean isScaleXEnabled() -> isScaleXEnabled
    1136:1136:boolean isScaleYEnabled() -> isScaleYEnabled
    830:833:void moveViewToX(float) -> moveViewToX
    315:336:void notifyDataSetChanged() -> notifyDataSetChanged
    187:277:void onDraw(android.graphics.Canvas) -> onDraw
    1593:1610:void onSizeChanged(int,int,int,int) -> onSizeChanged
    554:563:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    308:309:void prepareOffsetMatrix() -> prepareOffsetMatrix
    292:300:void prepareValuePxMatrix() -> prepareValuePxMatrix
    1551:1551:void setAutoScaleMinMaxEnabled(boolean) -> setAutoScaleMinMaxEnabled
    1222:1222:void setBorderColor(int) -> setBorderColor
    1213:1213:void setBorderWidth(float) -> setBorderWidth
    1194:1194:void setClipValuesToContent(boolean) -> setClipValuesToContent
    1146:1146:void setDoubleTapToZoomEnabled(boolean) -> setDoubleTapToZoomEnabled
    1100:1100:void setDragEnabled(boolean) -> setDragEnabled
    1458:1458:void setDragOffsetX(float) -> setDragOffsetX
    1468:1468:void setDragOffsetY(float) -> setDragOffsetY
    1174:1174:void setDrawBorders(boolean) -> setDrawBorders
    1164:1164:void setDrawGridBackground(boolean) -> setDrawGridBackground
    1090:1090:void setGridBackgroundColor(int) -> setGridBackgroundColor
    1076:1076:void setHighlightPerDragEnabled(boolean) -> setHighlightPerDragEnabled
    1250:1250:void setKeepPositionOnRotation(boolean) -> setKeepPositionOnRotation
    1062:1062:void setMaxVisibleValueCount(int) -> setMaxVisibleValueCount
    1236:1236:void setMinOffset(float) -> setMinOffset
    0:0:void setOnDrawListener(com.github.mikephil.charting.listener.OnDrawListener) -> setOnDrawListener
    1564:1568:void setPaint(android.graphics.Paint,int) -> setPaint
    1439:1439:void setPinchZoom(boolean) -> setPinchZoom
    1503:1503:void setRendererLeftYAxis(com.github.mikephil.charting.renderer.YAxisRenderer) -> setRendererLeftYAxis
    1516:1516:void setRendererRightYAxis(com.github.mikephil.charting.renderer.YAxisRenderer) -> setRendererRightYAxis
    1119:1120:void setScaleEnabled(boolean) -> setScaleEnabled
    741:742:void setScaleMinima(float,float) -> setScaleMinima
    1124:1124:void setScaleXEnabled(boolean) -> setScaleXEnabled
    1128:1128:void setScaleYEnabled(boolean) -> setScaleYEnabled
    974:975:void setViewPortOffsets(float,float,float,float) -> setViewPortOffsets
    780:782:void setVisibleXRange(float,float) -> setVisibleXRange
    754:755:void setVisibleXRangeMaximum(float) -> setVisibleXRangeMaximum
    767:768:void setVisibleXRangeMinimum(float) -> setVisibleXRangeMinimum
    816:818:void setVisibleYRange(float,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> setVisibleYRange
    793:794:void setVisibleYRangeMaximum(float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> setVisibleYRangeMaximum
    804:805:void setVisibleYRangeMinimum(float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> setVisibleYRangeMinimum
    1490:1490:void setXAxisRenderer(com.github.mikephil.charting.renderer.XAxisRenderer) -> setXAxisRenderer
    647:654:void zoom(float,float,float,float) -> zoom
com.github.mikephil.charting.charts.BarLineChartBase$1 -> com.github.mikephil.charting.charts.BarLineChartBase$1:
# {"id":"sourceFile","fileName":"BarLineChartBase.java"}
    975:975:void <init>(com.github.mikephil.charting.charts.BarLineChartBase,float,float,float,float) -> <init>
    980:982:void run() -> run
com.github.mikephil.charting.charts.BarLineChartBase$2 -> com.github.mikephil.charting.charts.BarLineChartBase$2:
# {"id":"sourceFile","fileName":"BarLineChartBase.java"}
    384:402:void <clinit>() -> <clinit>
com.github.mikephil.charting.charts.BubbleChart -> com.github.mikephil.charting.charts.BubbleChart:
# {"id":"sourceFile","fileName":"BubbleChart.java"}
    22:22:void <init>(android.content.Context) -> <init>
    26:26:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    30:30:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    41:41:com.github.mikephil.charting.data.BubbleData getBubbleData() -> getBubbleData
    35:37:void init() -> init
com.github.mikephil.charting.charts.CandleStickChart -> com.github.mikephil.charting.charts.CandleStickChart:
# {"id":"sourceFile","fileName":"CandleStickChart.java"}
    19:19:void <init>(android.content.Context) -> <init>
    23:23:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    27:27:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    42:42:com.github.mikephil.charting.data.CandleData getCandleData() -> getCandleData
    32:37:void init() -> init
com.github.mikephil.charting.charts.Chart -> com.github.mikephil.charting.charts.Chart:
# {"id":"sourceFile","fileName":"Chart.java"}
    73:1729:void <init>(android.content.Context) -> <init>
    73:1729:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:1729:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1634:1637:void addViewportJob(java.lang.Runnable) -> addViewportJob
    932:932:void animateX(int) -> animateX
    944:944:void animateY(int) -> animateY
    1282:1284:void disableScroll() -> disableScroll
    424:444:void drawDescription(android.graphics.Canvas) -> drawDescription
    721:747:void drawMarkers(android.graphics.Canvas) -> drawMarkers
    1291:1293:void enableScroll() -> enableScroll
    774:774:com.github.mikephil.charting.animation.ChartAnimator getAnimator() -> getAnimator
    1055:1055:com.github.mikephil.charting.utils.MPPointF getCenter() -> getCenter
    1455:1455:com.github.mikephil.charting.utils.MPPointF getCenterOfView() -> getCenterOfView
    1067:1067:com.github.mikephil.charting.utils.MPPointF getCenterOffsets() -> getCenterOffsets
    1465:1478:android.graphics.Bitmap getChartBitmap() -> getChartBitmap
    1275:1275:android.graphics.RectF getContentRect() -> getContentRect
    1401:1401:com.github.mikephil.charting.data.ChartData getData() -> getData
    984:984:com.github.mikephil.charting.formatter.IValueFormatter getDefaultValueFormatter() -> getDefaultValueFormatter
    1243:1243:com.github.mikephil.charting.components.Description getDescription() -> getDescription
    799:799:float getDragDecelerationFrictionCoef() -> getDragDecelerationFrictionCoef
    1125:1125:float getExtraBottomOffset() -> getExtraBottomOffset
    1139:1139:float getExtraLeftOffset() -> getExtraLeftOffset
    1111:1111:float getExtraRightOffset() -> getExtraRightOffset
    1097:1097:float getExtraTopOffset() -> getExtraTopOffset
    674:678:com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    486:486:com.github.mikephil.charting.highlight.Highlight[] getHighlighted() -> getHighlighted
    1435:1435:com.github.mikephil.charting.highlight.IHighlighter getHighlighter() -> getHighlighter
    1648:1648:java.util.ArrayList getJobs() -> getJobs
    1254:1254:com.github.mikephil.charting.components.Legend getLegend() -> getLegend
    1264:1264:com.github.mikephil.charting.renderer.LegendRenderer getLegendRenderer() -> getLegendRenderer
    1214:1214:com.github.mikephil.charting.components.IMarker getMarker() -> getMarker
    759:759:float[] getMarkerPosition(com.github.mikephil.charting.highlight.Highlight) -> getMarkerPosition
    1224:1224:com.github.mikephil.charting.components.IMarker getMarkerView() -> getMarkerView
    466:466:float getMaxHighlightDistance() -> getMaxHighlightDistance
    int getMaxVisibleCount() -> getMaxVisibleCount
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener() -> getOnChartGestureListener
    697:697:com.github.mikephil.charting.listener.ChartTouchListener getOnTouchListener() -> getOnTouchListener
    1420:1420:com.github.mikephil.charting.renderer.DataRenderer getRenderer() -> getRenderer
    1411:1411:com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler() -> getViewPortHandler
    974:974:com.github.mikephil.charting.components.XAxis getXAxis() -> getXAxis
    1035:1035:float getXChartMax() -> getXChartMax
    1040:1040:float getXChartMin() -> getXChartMin
    1045:1045:float getXRange() -> getXRange
    float getYChartMax() -> getYChartMax
      # {"id":"com.android.tools.r8.synthesized"}
    float getYChartMin() -> getYChartMin
      # {"id":"com.android.tools.r8.synthesized"}
    1021:1021:float getYMax() -> getYMax
    1030:1030:float getYMin() -> getYMin
    628:660:void highlightValue(com.github.mikephil.charting.highlight.Highlight,boolean) -> highlightValue
    209:240:void init() -> init
    781:781:boolean isDragDecelerationEnabled() -> isDragDecelerationEnabled
    1381:1381:boolean isDrawMarkersEnabled() -> isDrawMarkersEnabled
    495:495:boolean isHighlightPerTapEnabled() -> isHighlightPerTapEnabled
    1158:1158:boolean isLogEnabled() -> isLogEnabled
    1718:1723:void onDetachedFromWindow() -> onDetachedFromWindow
    399:414:void onDraw(android.graphics.Canvas) -> onDraw
    1654:1655:void onLayout(boolean,int,int,int,int) -> onLayout
    1661:1668:void onMeasure(int,int) -> onMeasure
    1679:1693:void onSizeChanged(int,int,int,int) -> onSizeChanged
    288:304:void setData(com.github.mikephil.charting.data.ChartData) -> setData
    1233:1233:void setDescription(com.github.mikephil.charting.components.Description) -> setDescription
    790:790:void setDragDecelerationEnabled(boolean) -> setDragDecelerationEnabled
    818:818:void setDragDecelerationFrictionCoef(float) -> setDragDecelerationFrictionCoef
    1371:1371:void setDrawMarkerViews(boolean) -> setDrawMarkerViews
    1392:1392:void setDrawMarkers(boolean) -> setDrawMarkers
    1118:1118:void setExtraBottomOffset(float) -> setExtraBottomOffset
    1132:1132:void setExtraLeftOffset(float) -> setExtraLeftOffset
    1080:1083:void setExtraOffsets(float,float,float,float) -> setExtraOffsets
    1104:1104:void setExtraRightOffset(float) -> setExtraRightOffset
    1090:1090:void setExtraTopOffset(float) -> setExtraTopOffset
    1707:1709:void setHardwareAccelerationEnabled(boolean) -> setHardwareAccelerationEnabled
    505:505:void setHighlightPerTapEnabled(boolean) -> setHighlightPerTapEnabled
    1445:1445:void setHighlighter(com.github.mikephil.charting.highlight.ChartHighlighter) -> setHighlighter
    528:531:void setLastHighlighted(com.github.mikephil.charting.highlight.Highlight[]) -> setLastHighlighted
    1149:1149:void setLogEnabled(boolean) -> setLogEnabled
    1205:1205:void setMarker(com.github.mikephil.charting.components.IMarker) -> setMarker
    1219:1219:void setMarkerView(com.github.mikephil.charting.components.IMarker) -> setMarkerView
    476:476:void setMaxHighlightDistance(float) -> setMaxHighlightDistance
    1168:1168:void setNoDataText(java.lang.String) -> setNoDataText
    1177:1177:void setNoDataTextColor(int) -> setNoDataTextColor
    1186:1186:void setNoDataTextTypeface(android.graphics.Typeface) -> setNoDataTextTypeface
    0:0:void setOnChartGestureListener(com.github.mikephil.charting.listener.OnChartGestureListener) -> setOnChartGestureListener
    0:0:void setOnChartValueSelectedListener(com.github.mikephil.charting.listener.OnChartValueSelectedListener) -> setOnChartValueSelectedListener
    688:688:void setOnTouchListener(com.github.mikephil.charting.listener.ChartTouchListener) -> setOnTouchListener
    1339:1342:void setPaint(android.graphics.Paint,int) -> setPaint
    1431:1431:void setRenderer(com.github.mikephil.charting.renderer.DataRenderer) -> setRenderer
    1196:1196:void setTouchEnabled(boolean) -> setTouchEnabled
    1759:1759:void setUnbindEnabled(boolean) -> setUnbindEnabled
    377:387:void setupDefaultFormatter(float,float) -> setupDefaultFormatter
    1739:1746:void unbindDrawables(android.view.View) -> unbindDrawables
    516:516:boolean valuesToHighlight() -> valuesToHighlight
com.github.mikephil.charting.charts.Chart$1 -> com.github.mikephil.charting.charts.Chart$1:
# {"id":"sourceFile","fileName":"Chart.java"}
    215:215:void <init>(com.github.mikephil.charting.charts.Chart) -> <init>
    220:220:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.github.mikephil.charting.charts.CombinedChart -> com.github.mikephil.charting.charts.CombinedChart:
# {"id":"sourceFile","fileName":"CombinedChart.java"}
    31:56:void <init>(android.content.Context) -> <init>
    31:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:64:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    132:134:com.github.mikephil.charting.data.BarData getBarData() -> getBarData
    153:155:com.github.mikephil.charting.data.BubbleData getBubbleData() -> getBubbleData
    146:148:com.github.mikephil.charting.data.CandleData getCandleData() -> getCandleData
    86:86:com.github.mikephil.charting.data.CombinedData getCombinedData() -> getCombinedData
    213:213:com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] getDrawOrder() -> getDrawOrder
    109:119:com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    125:127:com.github.mikephil.charting.data.LineData getLineData() -> getLineData
    139:141:com.github.mikephil.charting.data.ScatterData getScatterData() -> getScatterData
    69:81:void init() -> init
    204:204:boolean isHighlightFullBarEnabled() -> isHighlightFullBarEnabled
    25:25:void setData(com.github.mikephil.charting.data.ChartData) -> setData
    91:94:void setData(com.github.mikephil.charting.data.CombinedData) -> setData
    186:186:void setDrawBarShadow(boolean) -> setDrawBarShadow
    225:227:void setDrawOrder(com.github.mikephil.charting.charts.CombinedChart$DrawOrder[]) -> setDrawOrder
    175:175:void setDrawValueAboveBar(boolean) -> setDrawValueAboveBar
    196:196:void setHighlightFullBarEnabled(boolean) -> setHighlightFullBarEnabled
com.github.mikephil.charting.charts.CombinedChart$DrawOrder -> com.github.mikephil.charting.charts.CombinedChart$DrawOrder:
# {"id":"sourceFile","fileName":"CombinedChart.java"}
    51:52:void <clinit>() -> <clinit>
    51:51:void <init>(java.lang.String,int) -> <init>
    51:51:com.github.mikephil.charting.charts.CombinedChart$DrawOrder valueOf(java.lang.String) -> valueOf
    51:51:com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] values() -> values
com.github.mikephil.charting.charts.HorizontalBarChart -> com.github.mikephil.charting.charts.HorizontalBarChart:
# {"id":"sourceFile","fileName":"HorizontalBarChart.java"}
    32:168:void <init>(android.content.Context) -> <init>
    36:168:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:168:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    68:125:void calculateOffsets() -> calculateOffsets
    221:223:float getHighestVisibleX() -> getHighestVisibleX
    203:208:com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    213:215:float getLowestVisibleX() -> getLowestVisibleX
    138:138:float[] getMarkerPosition(com.github.mikephil.charting.highlight.Highlight) -> getMarkerPosition
    46:58:void init() -> init
    130:132:void prepareValuePxMatrix() -> prepareValuePxMatrix
    245:247:void setVisibleXRange(float,float) -> setVisibleXRange
    233:234:void setVisibleXRangeMaximum(float) -> setVisibleXRangeMaximum
    239:240:void setVisibleXRangeMinimum(float) -> setVisibleXRangeMinimum
    264:266:void setVisibleYRange(float,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> setVisibleYRange
    252:253:void setVisibleYRangeMaximum(float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> setVisibleYRangeMaximum
    258:259:void setVisibleYRangeMinimum(float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> setVisibleYRangeMinimum
com.github.mikephil.charting.charts.LineChart -> com.github.mikephil.charting.charts.LineChart:
# {"id":"sourceFile","fileName":"LineChart.java"}
    19:19:void <init>(android.content.Context) -> <init>
    23:23:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    27:27:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    39:39:com.github.mikephil.charting.data.LineData getLineData() -> getLineData
    32:34:void init() -> init
    45:48:void onDetachedFromWindow() -> onDetachedFromWindow
com.github.mikephil.charting.charts.PieChart -> com.github.mikephil.charting.charts.PieChart:
# {"id":"sourceFile","fileName":"PieChart.java"}
    33:98:void <init>(android.content.Context) -> <init>
    33:102:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    33:106:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    210:210:void calcAngles() -> calcAngles
    169:169:void calcMinMax() -> calcMinMax
    144:155:void calculateOffsets() -> calculateOffsets
    356:356:float[] getAbsoluteAngles() -> getAbsoluteAngles
    478:478:com.github.mikephil.charting.utils.MPPointF getCenterCircleBox() -> getCenterCircleBox
    423:423:java.lang.CharSequence getCenterText() -> getCenterText
    526:526:com.github.mikephil.charting.utils.MPPointF getCenterTextOffset() -> getCenterTextOffset
    698:698:float getCenterTextRadiusPercent() -> getCenterTextRadiusPercent
    469:469:android.graphics.RectF getCircleBox() -> getCircleBox
    346:346:float[] getDrawAngles() -> getDrawAngles
    554:554:float getHoleRadius() -> getHoleRadius
    310:313:int getIndexForAngle(float) -> getIndexForAngle
    175:201:float[] getMarkerPosition(com.github.mikephil.charting.highlight.Highlight) -> getMarkerPosition
    702:702:float getMaxAngle() -> getMaxAngle
    457:460:float getRadius() -> getRadius
    0:0:float getRequiredBaseOffset() -> getRequiredBaseOffset
    447:447:float getRequiredLegendOffset() -> getRequiredLegendOffset
    583:583:float getTransparentCircleRadius() -> getTransparentCircleRadius
    303:303:com.github.mikephil.charting.components.XAxis getXAxis() -> getXAxis
    111:116:void init() -> init
    442:442:boolean isDrawCenterTextEnabled() -> isDrawCenterTextEnabled
    402:402:boolean isDrawHoleEnabled() -> isDrawHoleEnabled
    383:383:boolean isDrawSlicesUnderHoleEnabled() -> isDrawSlicesUnderHoleEnabled
    725:728:void onDetachedFromWindow() -> onDetachedFromWindow
    121:139:void onDraw(android.graphics.Canvas) -> onDraw
    412:414:void setCenterText(java.lang.CharSequence) -> setCenterText
    535:535:void setCenterTextColor(int) -> setCenterTextColor
    516:517:void setCenterTextOffset(float,float) -> setCenterTextOffset
    689:689:void setCenterTextRadiusPercent(float) -> setCenterTextRadiusPercent
    496:497:void setCenterTextSize(float) -> setCenterTextSize
    506:506:void setCenterTextSizePixels(float) -> setCenterTextSizePixels
    487:487:void setCenterTextTypeface(android.graphics.Typeface) -> setCenterTextTypeface
    433:433:void setDrawCenterText(boolean) -> setDrawCenterText
    614:614:void setDrawEntryLabels(boolean) -> setDrawEntryLabels
    392:392:void setDrawHoleEnabled(boolean) -> setDrawHoleEnabled
    605:605:void setDrawSliceText(boolean) -> setDrawSliceText
    373:373:void setDrawSlicesUnderHole(boolean) -> setDrawSlicesUnderHole
    632:632:void setEntryLabelColor(int) -> setEntryLabelColor
    650:650:void setEntryLabelTextSize(float) -> setEntryLabelTextSize
    641:641:void setEntryLabelTypeface(android.graphics.Typeface) -> setEntryLabelTypeface
    366:366:void setHoleColor(int) -> setHoleColor
    545:545:void setHoleRadius(float) -> setHoleRadius
    719:719:void setMaxAngle(float) -> setMaxAngle
    594:594:void setTransparentCircleAlpha(int) -> setTransparentCircleAlpha
    564:567:void setTransparentCircleColor(int) -> setTransparentCircleColor
    579:579:void setTransparentCircleRadius(float) -> setTransparentCircleRadius
    671:671:void setUsePercentValues(boolean) -> setUsePercentValues
com.github.mikephil.charting.charts.PieRadarChartBase -> com.github.mikephil.charting.charts.PieRadarChartBase:
# {"id":"sourceFile","fileName":"PieRadarChartBase.java"}
    35:53:void <init>(android.content.Context) -> <init>
    35:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    35:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    0:0:void calcMinMax() -> calcMinMax
    115:247:void calculateOffsets() -> calculateOffsets
    93:94:void computeScroll() -> computeScroll
    317:339:float distanceToCenter(float,float) -> distanceToCenter
    262:280:float getAngleForPoint(float,float) -> getAngleForPoint
    425:430:float getDiameter() -> getDiameter
    78:78:int getMaxVisibleCount() -> getMaxVisibleCount
    409:409:float getMinOffset() -> getMinOffset
    297:298:com.github.mikephil.charting.utils.MPPointF getPosition(com.github.mikephil.charting.utils.MPPointF,float,float) -> getPosition
    303:304:void getPosition(com.github.mikephil.charting.utils.MPPointF,float,float,com.github.mikephil.charting.utils.MPPointF) -> getPosition
    373:373:float getRawRotationAngle() -> getRawRotationAngle
    383:383:float getRotationAngle() -> getRotationAngle
    0:0:float getYChartMax() -> getYChartMax
    0:0:float getYChartMin() -> getYChartMin
    66:68:void init() -> init
    402:402:boolean isRotationEnabled() -> isRotationEnabled
    99:107:void notifyDataSetChanged() -> notifyDataSetChanged
    84:87:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    416:416:void setMinOffset(float) -> setMinOffset
    360:361:void setRotationAngle(float) -> setRotationAngle
    393:393:void setRotationEnabled(boolean) -> setRotationEnabled
com.github.mikephil.charting.charts.PieRadarChartBase$2 -> com.github.mikephil.charting.charts.PieRadarChartBase$2:
# {"id":"sourceFile","fileName":"PieRadarChartBase.java"}
    120:177:void <clinit>() -> <clinit>
com.github.mikephil.charting.charts.RadarChart -> com.github.mikephil.charting.charts.RadarChart:
# {"id":"sourceFile","fileName":"RadarChart.java"}
    30:71:void <init>(android.content.Context) -> <init>
    30:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    30:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    100:102:void calcMinMax() -> calcMinMax
    168:169:float getFactor() -> getFactor
    185:189:int getIndexForAngle(float) -> getIndexForAngle
    335:336:float getRadius() -> getRadius
    328:330:float getRequiredBaseOffset() -> getRequiredBaseOffset
    323:323:float getRequiredLegendOffset() -> getRequiredLegendOffset
    318:318:int getSkipWebLineCount() -> getSkipWebLineCount
    178:178:float getSliceAngle() -> getSliceAngle
    258:258:int getWebAlpha() -> getWebAlpha
    273:273:int getWebColor() -> getWebColor
    288:288:int getWebColorInner() -> getWebColorInner
    225:225:float getWebLineWidth() -> getWebLineWidth
    239:239:float getWebLineWidthInner() -> getWebLineWidthInner
    212:212:com.github.mikephil.charting.components.YAxis getYAxis() -> getYAxis
    343:343:float getYChartMax() -> getYChartMax
    350:350:float getYChartMin() -> getYChartMin
    359:359:float getYRange() -> getYRange
    84:95:void init() -> init
    108:119:void notifyDataSetChanged() -> notifyDataSetChanged
    124:159:void onDraw(android.graphics.Canvas) -> onDraw
    298:298:void setDrawWeb(boolean) -> setDrawWeb
    309:309:void setSkipWebLineCount(int) -> setSkipWebLineCount
    249:249:void setWebAlpha(int) -> setWebAlpha
    269:269:void setWebColor(int) -> setWebColor
    284:284:void setWebColorInner(int) -> setWebColorInner
    221:221:void setWebLineWidth(float) -> setWebLineWidth
    235:235:void setWebLineWidthInner(float) -> setWebLineWidthInner
com.github.mikephil.charting.charts.ScatterChart -> com.github.mikephil.charting.charts.ScatterChart:
# {"id":"sourceFile","fileName":"ScatterChart.java"}
    21:21:void <init>(android.content.Context) -> <init>
    25:25:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    29:29:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    42:42:com.github.mikephil.charting.data.ScatterData getScatterData() -> getScatterData
    35:37:void init() -> init
com.github.mikephil.charting.charts.ScatterChart$ScatterShape -> com.github.mikephil.charting.charts.ScatterChart$ScatterShape:
# {"id":"sourceFile","fileName":"ScatterChart.java"}
    49:57:void <clinit>() -> <clinit>
    61:62:void <init>(java.lang.String,int,java.lang.String) -> <init>
    71:71:com.github.mikephil.charting.charts.ScatterChart$ScatterShape[] getAllDefaultShapes() -> getAllDefaultShapes
    67:67:java.lang.String toString() -> toString
    49:49:com.github.mikephil.charting.charts.ScatterChart$ScatterShape valueOf(java.lang.String) -> valueOf
    49:49:com.github.mikephil.charting.charts.ScatterChart$ScatterShape[] values() -> values
com.github.mikephil.charting.components.AxisBase -> com.github.mikephil.charting.components.AxisBase:
# {"id":"sourceFile","fileName":"AxisBase.java"}
    27:157:void <init>() -> <init>
    716:732:void calculate(float,float) -> calculate
    517:517:void enableGridDashedLine(float,float,float) -> enableGridDashedLine
    283:283:int getAxisLineColor() -> getAxisLineColor
    607:607:android.graphics.DashPathEffect getAxisLineDashPathEffect() -> getAxisLineDashPathEffect
    245:245:float getAxisLineWidth() -> getAxisLineWidth
    469:472:java.lang.String getFormattedLabel(int) -> getFormattedLabel
    378:378:float getGranularity() -> getGranularity
    227:227:int getGridColor() -> getGridColor
    555:555:android.graphics.DashPathEffect getGridDashPathEffect() -> getGridDashPathEffect
    265:265:float getGridLineWidth() -> getGridLineWidth
    354:354:int getLabelCount() -> getLabelCount
    430:430:java.util.List getLimitLines() -> getLimitLines
    457:460:java.lang.String getLongestLabel() -> getLongestLabel
    499:504:com.github.mikephil.charting.formatter.IAxisValueFormatter getValueFormatter() -> getValueFormatter
    207:207:boolean isCenterAxisLabelsEnabled() -> isCenterAxisLabelsEnabled
    193:193:boolean isDrawAxisLineEnabled() -> isDrawAxisLineEnabled
    175:175:boolean isDrawGridLinesEnabled() -> isDrawGridLinesEnabled
    302:302:boolean isDrawLabelsEnabled() -> isDrawLabelsEnabled
    444:444:boolean isDrawLimitLinesBehindDataEnabled() -> isDrawLimitLinesBehindDataEnabled
    345:345:boolean isForceLabelsEnabled() -> isForceLabelsEnabled
    361:361:boolean isGranularityEnabled() -> isGranularityEnabled
    691:693:void setAxisMaximum(float) -> setAxisMaximum
    668:670:void setAxisMinimum(float) -> setAxisMinimum
    203:203:void setCenterAxisLabels(boolean) -> setCenterAxisLabels
    184:184:void setDrawAxisLine(boolean) -> setDrawAxisLine
    166:166:void setDrawGridLines(boolean) -> setDrawGridLines
    388:390:void setGranularity(float) -> setGranularity
    318:319:void setLabelCount(int) -> setLabelCount
    335:336:void setLabelCount(int,boolean) -> setLabelCount
    764:764:void setSpaceMax(float) -> setSpaceMax
    748:748:void setSpaceMin(float) -> setSpaceMin
com.github.mikephil.charting.components.ComponentBase -> com.github.mikephil.charting.components.ComponentBase:
# {"id":"sourceFile","fileName":"ComponentBase.java"}
    19:47:void <init>() -> <init>
    151:151:int getTextColor() -> getTextColor
    131:131:float getTextSize() -> getTextSize
    97:97:android.graphics.Typeface getTypeface() -> getTypeface
    58:58:float getXOffset() -> getXOffset
    77:77:float getYOffset() -> getYOffset
    171:171:boolean isEnabled() -> isEnabled
    162:162:void setEnabled(boolean) -> setEnabled
    122:122:void setTextSize(float) -> setTextSize
com.github.mikephil.charting.components.Description -> com.github.mikephil.charting.components.Description:
# {"id":"sourceFile","fileName":"Description.java"}
    16:32:void <init>() -> <init>
    75:75:com.github.mikephil.charting.utils.MPPointF getPosition() -> getPosition
    51:51:java.lang.String getText() -> getText
    93:93:android.graphics.Paint$Align getTextAlign() -> getTextAlign
com.github.mikephil.charting.components.IMarker -> com.github.mikephil.charting.components.IMarker:
# {"id":"sourceFile","fileName":"IMarker.java"}
com.github.mikephil.charting.components.Legend -> com.github.mikephil.charting.components.Legend:
# {"id":"sourceFile","fileName":"Legend.java"}
    89:835:void <init>() -> <init>
    858:1028:void calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler) -> calculateDimensions
    842:842:java.util.List getCalculatedLabelBreakPoints() -> getCalculatedLabelBreakPoints
    838:838:java.util.List getCalculatedLabelSizes() -> getCalculatedLabelSizes
    846:846:java.util.List getCalculatedLineSizes() -> getCalculatedLineSizes
    607:607:com.github.mikephil.charting.components.Legend$LegendDirection getDirection() -> getDirection
    232:232:com.github.mikephil.charting.components.LegendEntry[] getEntries() -> getEntries
    336:336:com.github.mikephil.charting.components.LegendEntry[] getExtraEntries() -> getExtraEntries
    625:625:com.github.mikephil.charting.components.Legend$LegendForm getForm() -> getForm
    686:686:android.graphics.DashPathEffect getFormLineDashEffect() -> getFormLineDashEffect
    670:670:float getFormLineWidth() -> getFormLineWidth
    652:652:float getFormSize() -> getFormSize
    734:734:float getFormToTextSpace() -> getFormToTextSpace
    535:535:com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment getHorizontalAlignment() -> getHorizontalAlignment
    818:818:float getMaxSizePercent() -> getMaxSizePercent
    277:281:float getMaximumEntryHeight(android.graphics.Paint) -> getMaximumEntryHeight
    246:258:float getMaximumEntryWidth(android.graphics.Paint) -> getMaximumEntryWidth
    571:571:com.github.mikephil.charting.components.Legend$LegendOrientation getOrientation() -> getOrientation
    753:753:float getStackSpace() -> getStackSpace
    553:553:com.github.mikephil.charting.components.Legend$LegendVerticalAlignment getVerticalAlignment() -> getVerticalAlignment
    696:696:float getXEntrySpace() -> getXEntrySpace
    715:715:float getYEntrySpace() -> getYEntrySpace
    589:589:boolean isDrawInsideEnabled() -> isDrawInsideEnabled
    423:423:boolean isLegendCustom() -> isLegendCustom
    228:228:void setEntries(java.util.List) -> setEntries
com.github.mikephil.charting.components.Legend$1 -> com.github.mikephil.charting.components.Legend$1:
# {"id":"sourceFile","fileName":"Legend.java"}
    473:870:void <clinit>() -> <clinit>
com.github.mikephil.charting.components.Legend$LegendDirection -> com.github.mikephil.charting.components.Legend$LegendDirection:
# {"id":"sourceFile","fileName":"Legend.java"}
    82:83:void <clinit>() -> <clinit>
    82:82:void <init>(java.lang.String,int) -> <init>
    82:82:com.github.mikephil.charting.components.Legend$LegendDirection valueOf(java.lang.String) -> valueOf
    82:82:com.github.mikephil.charting.components.Legend$LegendDirection[] values() -> values
com.github.mikephil.charting.components.Legend$LegendForm -> com.github.mikephil.charting.components.Legend$LegendForm:
# {"id":"sourceFile","fileName":"Legend.java"}
    38:67:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String,int) -> <init>
    38:38:com.github.mikephil.charting.components.Legend$LegendForm valueOf(java.lang.String) -> valueOf
    38:38:com.github.mikephil.charting.components.Legend$LegendForm[] values() -> values
com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment -> com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment:
# {"id":"sourceFile","fileName":"Legend.java"}
    70:71:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    70:70:com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment valueOf(java.lang.String) -> valueOf
    70:70:com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment[] values() -> values
com.github.mikephil.charting.components.Legend$LegendOrientation -> com.github.mikephil.charting.components.Legend$LegendOrientation:
# {"id":"sourceFile","fileName":"Legend.java"}
    78:79:void <clinit>() -> <clinit>
    78:78:void <init>(java.lang.String,int) -> <init>
    78:78:com.github.mikephil.charting.components.Legend$LegendOrientation valueOf(java.lang.String) -> valueOf
    78:78:com.github.mikephil.charting.components.Legend$LegendOrientation[] values() -> values
com.github.mikephil.charting.components.Legend$LegendPosition -> com.github.mikephil.charting.components.Legend$LegendPosition:
# {"id":"sourceFile","fileName":"Legend.java"}
    29:35:void <clinit>() -> <clinit>
    30:30:void <init>(java.lang.String,int) -> <init>
    29:29:com.github.mikephil.charting.components.Legend$LegendPosition valueOf(java.lang.String) -> valueOf
    29:29:com.github.mikephil.charting.components.Legend$LegendPosition[] values() -> values
com.github.mikephil.charting.components.Legend$LegendVerticalAlignment -> com.github.mikephil.charting.components.Legend$LegendVerticalAlignment:
# {"id":"sourceFile","fileName":"Legend.java"}
    74:75:void <clinit>() -> <clinit>
    74:74:void <init>(java.lang.String,int) -> <init>
    74:74:com.github.mikephil.charting.components.Legend$LegendVerticalAlignment valueOf(java.lang.String) -> valueOf
    74:74:com.github.mikephil.charting.components.Legend$LegendVerticalAlignment[] values() -> values
com.github.mikephil.charting.components.LegendEntry -> com.github.mikephil.charting.components.LegendEntry:
# {"id":"sourceFile","fileName":"LegendEntry.java"}
    28:50:void <init>(java.lang.String,com.github.mikephil.charting.components.Legend$LegendForm,float,float,android.graphics.DashPathEffect,int) -> <init>
com.github.mikephil.charting.components.LimitLine$LimitLabelPosition -> com.github.mikephil.charting.components.LimitLine$LimitLabelPosition:
# {"id":"sourceFile","fileName":"LimitLine.java"}
    42:43:void <clinit>() -> <clinit>
    42:42:void <init>(java.lang.String,int) -> <init>
    42:42:com.github.mikephil.charting.components.LimitLine$LimitLabelPosition valueOf(java.lang.String) -> valueOf
    42:42:com.github.mikephil.charting.components.LimitLine$LimitLabelPosition[] values() -> values
com.github.mikephil.charting.components.MarkerView -> com.github.mikephil.charting.components.MarkerView:
# {"id":"sourceFile","fileName":"MarkerView.java"}
    121:127:void draw(android.graphics.Canvas,float,float) -> draw
    79:79:com.github.mikephil.charting.charts.Chart getChartView() -> getChartView
    71:71:com.github.mikephil.charting.utils.MPPointF getOffset() -> getOffset
    85:106:com.github.mikephil.charting.utils.MPPointF getOffsetForDrawingAtPoint(float,float) -> getOffsetForDrawingAtPoint
    112:114:void refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight) -> refreshContent
    75:75:void setChartView(com.github.mikephil.charting.charts.Chart) -> setChartView
    57:60:void setOffset(com.github.mikephil.charting.utils.MPPointF) -> setOffset
    65:66:void setOffset(float,float) -> setOffset
    47:53:void setupLayoutResource(int) -> setupLayoutResource
com.github.mikephil.charting.components.XAxis -> com.github.mikephil.charting.components.XAxis:
# {"id":"sourceFile","fileName":"XAxis.java"}
    19:65:void <init>() -> <init>
    88:88:float getLabelRotationAngle() -> getLabelRotationAngle
    72:72:com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition() -> getPosition
    116:116:boolean isAvoidFirstLastClippingEnabled() -> isAvoidFirstLastClippingEnabled
    81:81:void setPosition(com.github.mikephil.charting.components.XAxis$XAxisPosition) -> setPosition
com.github.mikephil.charting.components.XAxis$XAxisPosition -> com.github.mikephil.charting.components.XAxis$XAxisPosition:
# {"id":"sourceFile","fileName":"XAxis.java"}
    58:59:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:com.github.mikephil.charting.components.XAxis$XAxisPosition valueOf(java.lang.String) -> valueOf
    58:58:com.github.mikephil.charting.components.XAxis$XAxisPosition[] values() -> values
com.github.mikephil.charting.components.YAxis -> com.github.mikephil.charting.components.YAxis:
# {"id":"sourceFile","fileName":"YAxis.java"}
    24:112:void <init>(com.github.mikephil.charting.components.YAxis$AxisDependency) -> <init>
    364:391:void calculate(float,float) -> calculate
    116:116:com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency() -> getAxisDependency
    155:155:com.github.mikephil.charting.components.YAxis$YAxisLabelPosition getLabelPosition() -> getLabelPosition
    139:139:float getMaxWidth() -> getMaxWidth
    123:123:float getMinWidth() -> getMinWidth
    341:344:float getRequiredHeightSpace(android.graphics.Paint) -> getRequiredHeightSpace
    314:328:float getRequiredWidthSpace(android.graphics.Paint) -> getRequiredWidthSpace
    263:263:float getSpaceBottom() -> getSpaceBottom
    245:245:float getSpaceTop() -> getSpaceTop
    281:281:int getZeroLineColor() -> getZeroLineColor
    294:294:float getZeroLineWidth() -> getZeroLineWidth
    182:182:boolean isDrawBottomYLabelEntryEnabled() -> isDrawBottomYLabelEntryEnabled
    173:173:boolean isDrawTopYLabelEntryEnabled() -> isDrawTopYLabelEntryEnabled
    267:267:boolean isDrawZeroLineEnabled() -> isDrawZeroLineEnabled
    213:213:boolean isInverted() -> isInverted
    353:353:boolean needsOffset() -> needsOffset
com.github.mikephil.charting.components.YAxis$AxisDependency -> com.github.mikephil.charting.components.YAxis$AxisDependency:
# {"id":"sourceFile","fileName":"YAxis.java"}
    97:98:void <clinit>() -> <clinit>
    97:97:void <init>(java.lang.String,int) -> <init>
    97:97:com.github.mikephil.charting.components.YAxis$AxisDependency valueOf(java.lang.String) -> valueOf
    97:97:com.github.mikephil.charting.components.YAxis$AxisDependency[] values() -> values
com.github.mikephil.charting.components.YAxis$YAxisLabelPosition -> com.github.mikephil.charting.components.YAxis$YAxisLabelPosition:
# {"id":"sourceFile","fileName":"YAxis.java"}
    69:70:void <clinit>() -> <clinit>
    69:69:void <init>(java.lang.String,int) -> <init>
    69:69:com.github.mikephil.charting.components.YAxis$YAxisLabelPosition valueOf(java.lang.String) -> valueOf
    69:69:com.github.mikephil.charting.components.YAxis$YAxisLabelPosition[] values() -> values
com.github.mikephil.charting.data.BarData -> com.github.mikephil.charting.data.BarData:
# {"id":"sourceFile","fileName":"BarData.java"}
com.github.mikephil.charting.data.BarEntry -> com.github.mikephil.charting.data.BarEntry:
# {"id":"sourceFile","fileName":"BarEntry.java"}
    179:179:float getY() -> getY
com.github.mikephil.charting.data.BarLineScatterCandleBubbleData -> com.github.mikephil.charting.data.BarLineScatterCandleBubbleData:
# {"id":"sourceFile","fileName":"BarLineScatterCandleBubbleData.java"}
    25:25:void <init>(java.util.List) -> <init>
com.github.mikephil.charting.data.BarLineScatterCandleBubbleDataSet -> com.github.mikephil.charting.data.BarLineScatterCandleBubbleDataSet:
# {"id":"sourceFile","fileName":"BarLineScatterCandleBubbleDataSet.java"}
    18:21:void <init>(java.util.List,java.lang.String) -> <init>
    37:37:int getHighLightColor() -> getHighLightColor
com.github.mikephil.charting.data.BaseDataSet -> com.github.mikephil.charting.data.BaseDataSet:
# {"id":"sourceFile","fileName":"BaseDataSet.java"}
    32:103:void <init>() -> <init>
    112:113:void <init>(java.lang.String) -> <init>
    421:421:com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency() -> getAxisDependency
    139:139:int getColor() -> getColor
    144:144:int getColor(int) -> getColor
    130:130:java.util.List getColors() -> getColors
    347:347:com.github.mikephil.charting.components.Legend$LegendForm getForm() -> getForm
    374:374:android.graphics.DashPathEffect getFormLineDashEffect() -> getFormLineDashEffect
    365:365:float getFormLineWidth() -> getFormLineWidth
    356:356:float getFormSize() -> getFormSize
    406:406:com.github.mikephil.charting.utils.MPPointF getIconsOffset() -> getIconsOffset
    266:266:java.lang.String getLabel() -> getLabel
    290:292:com.github.mikephil.charting.formatter.IValueFormatter getValueFormatter() -> getValueFormatter
    328:328:int getValueTextColor(int) -> getValueTextColor
    338:338:float getValueTextSize() -> getValueTextSize
    333:333:android.graphics.Typeface getValueTypeface() -> getValueTypeface
    394:394:boolean isDrawIconsEnabled() -> isDrawIconsEnabled
    384:384:boolean isDrawValuesEnabled() -> isDrawValuesEnabled
    276:276:boolean isHighlightEnabled() -> isHighlightEnabled
    416:416:boolean isVisible() -> isVisible
    297:297:boolean needsFormatter() -> needsFormatter
    249:252:void resetColors() -> resetColors
    218:219:void setColor(int) -> setColor
    379:379:void setDrawValues(boolean) -> setDrawValues
    285:285:void setValueFormatter(com.github.mikephil.charting.formatter.IValueFormatter) -> setValueFormatter
com.github.mikephil.charting.data.BaseEntry -> com.github.mikephil.charting.data.BaseEntry:
# {"id":"sourceFile","fileName":"BaseEntry.java"}
    11:19:void <init>() -> <init>
    14:24:void <init>(float) -> <init>
    86:86:java.lang.Object getData() -> getData
    67:67:android.graphics.drawable.Drawable getIcon() -> getIcon
    49:49:float getY() -> getY
    95:95:void setData(java.lang.Object) -> setData
    76:76:void setY(float) -> setY
com.github.mikephil.charting.data.BubbleData -> com.github.mikephil.charting.data.BubbleData:
# {"id":"sourceFile","fileName":"BubbleData.java"}
com.github.mikephil.charting.data.BubbleEntry -> com.github.mikephil.charting.data.BubbleEntry:
# {"id":"sourceFile","fileName":"BubbleEntry.java"}
com.github.mikephil.charting.data.CandleData -> com.github.mikephil.charting.data.CandleData:
# {"id":"sourceFile","fileName":"CandleData.java"}
com.github.mikephil.charting.data.CandleEntry -> com.github.mikephil.charting.data.CandleEntry:
# {"id":"sourceFile","fileName":"CandleEntry.java"}
    131:131:float getY() -> getY
com.github.mikephil.charting.data.ChartData -> com.github.mikephil.charting.data.ChartData:
# {"id":"sourceFile","fileName":"ChartData.java"}
    26:98:void <init>(java.util.List) -> <init>
    132:182:void calcMinMax() -> calcMinMax
    487:507:void calcMinMax(com.github.mikephil.charting.interfaces.datasets.IDataSet) -> calcMinMax
    119:124:void calcMinMaxY(float,float) -> calcMinMaxY
    366:369:com.github.mikephil.charting.interfaces.datasets.IDataSet getDataSetByIndex(int) -> getDataSetByIndex
    196:198:int getDataSetCount() -> getDataSetCount
    285:285:java.util.List getDataSets() -> getDataSets
    794:795:int getEntryCount() -> getEntryCount
    338:341:com.github.mikephil.charting.data.Entry getEntryForHighlight(com.github.mikephil.charting.highlight.Highlight) -> getEntryForHighlight
    636:637:com.github.mikephil.charting.interfaces.datasets.IDataSet getFirstLeft(java.util.List) -> getFirstLeft
    650:651:com.github.mikephil.charting.interfaces.datasets.IDataSet getFirstRight(java.util.List) -> getFirstRight
    808:815:com.github.mikephil.charting.interfaces.datasets.IDataSet getMaxEntryCountSet() -> getMaxEntryCountSet
    276:276:float getXMax() -> getXMax
    267:267:float getXMin() -> getXMin
    237:237:float getYMax() -> getYMax
    247:255:float getYMax(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getYMax
    207:207:float getYMin() -> getYMin
    217:225:float getYMin(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getYMin
    107:107:void notifyDataChanged() -> notifyDataChanged
    727:728:void setDrawValues(boolean) -> setDrawValues
com.github.mikephil.charting.data.CombinedData -> com.github.mikephil.charting.data.CombinedData:
# {"id":"sourceFile","fileName":"CombinedData.java"}
com.github.mikephil.charting.data.DataSet -> com.github.mikephil.charting.data.DataSet:
# {"id":"sourceFile","fileName":"DataSet.java"}
    25:58:void <init>(java.util.List,java.lang.String) -> <init>
    64:73:void calcMinMax() -> calcMinMax
    106:108:void calcMinMax(com.github.mikephil.charting.data.Entry) -> calcMinMax
    113:117:void calcMinMaxX(com.github.mikephil.charting.data.Entry) -> calcMinMaxX
    80:92:void calcMinMaxY(float,float) -> calcMinMaxY
    122:126:void calcMinMaxY(com.github.mikephil.charting.data.Entry) -> calcMinMaxY
    377:405:java.util.List getEntriesForXValue(float) -> getEntriesForXValue
    131:131:int getEntryCount() -> getEntryCount
    286:286:com.github.mikephil.charting.data.Entry getEntryForIndex(int) -> getEntryForIndex
    273:275:com.github.mikephil.charting.data.Entry getEntryForXValue(float,float,com.github.mikephil.charting.data.DataSet$Rounding) -> getEntryForXValue
    281:281:com.github.mikephil.charting.data.Entry getEntryForXValue(float,float) -> getEntryForXValue
    267:267:int getEntryIndex(com.github.mikephil.charting.data.Entry) -> getEntryIndex
    292:361:int getEntryIndex(float,float,com.github.mikephil.charting.data.DataSet$Rounding) -> getEntryIndex
    200:200:float getXMax() -> getXMax
    195:195:float getXMin() -> getXMin
    190:190:float getYMax() -> getYMax
    185:185:float getYMin() -> getYMin
    177:180:java.lang.String toSimpleString() -> toSimpleString
    162:167:java.lang.String toString() -> toString
com.github.mikephil.charting.data.DataSet$Rounding -> com.github.mikephil.charting.data.DataSet$Rounding:
# {"id":"sourceFile","fileName":"DataSet.java"}
    420:423:void <clinit>() -> <clinit>
    420:420:void <init>(java.lang.String,int) -> <init>
    420:420:com.github.mikephil.charting.data.DataSet$Rounding valueOf(java.lang.String) -> valueOf
    420:420:com.github.mikephil.charting.data.DataSet$Rounding[] values() -> values
com.github.mikephil.charting.data.Entry -> com.github.mikephil.charting.data.Entry:
# {"id":"sourceFile","fileName":"Entry.java"}
    164:164:void <clinit>() -> <clinit>
    33:34:void <init>(float,float) -> <init>
    20:160:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    80:80:float getX() -> getX
    132:132:java.lang.String toString() -> toString
    142:152:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.github.mikephil.charting.data.Entry$1 -> com.github.mikephil.charting.data.Entry$1:
# {"id":"sourceFile","fileName":"Entry.java"}
    164:164:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    166:166:com.github.mikephil.charting.data.Entry createFromParcel(android.os.Parcel) -> createFromParcel
    164:164:java.lang.Object[] newArray(int) -> newArray
    170:170:com.github.mikephil.charting.data.Entry[] newArray(int) -> newArray
com.github.mikephil.charting.data.LineData -> com.github.mikephil.charting.data.LineData:
# {"id":"sourceFile","fileName":"LineData.java"}
    25:25:void <init>(java.util.List) -> <init>
com.github.mikephil.charting.data.LineDataSet -> com.github.mikephil.charting.data.LineDataSet:
# {"id":"sourceFile","fileName":"LineDataSet.java"}
    23:82:void <init>(java.util.List,java.lang.String) -> <init>
    282:282:int getCircleColor(int) -> getCircleColor
    287:287:int getCircleColorCount() -> getCircleColorCount
    373:373:int getCircleHoleColor() -> getCircleHoleColor
    186:186:float getCircleHoleRadius() -> getCircleHoleRadius
    166:166:float getCircleRadius() -> getCircleRadius
    145:145:float getCubicIntensity() -> getCubicIntensity
    239:239:android.graphics.DashPathEffect getDashPathEffect() -> getDashPathEffect
    406:406:com.github.mikephil.charting.formatter.IFillFormatter getFillFormatter() -> getFillFormatter
    115:115:com.github.mikephil.charting.data.LineDataSet$Mode getMode() -> getMode
    234:234:boolean isDashedLineEnabled() -> isDashedLineEnabled
    387:387:boolean isDrawCircleHoleEnabled() -> isDrawCircleHoleEnabled
    254:254:boolean isDrawCirclesEnabled() -> isDrawCirclesEnabled
    266:266:boolean isDrawSteppedEnabled() -> isDrawSteppedEnabled
    249:249:void setDrawCircles(boolean) -> setDrawCircles
    124:124:void setMode(com.github.mikephil.charting.data.LineDataSet$Mode) -> setMode
com.github.mikephil.charting.data.LineDataSet$Mode -> com.github.mikephil.charting.data.LineDataSet$Mode:
# {"id":"sourceFile","fileName":"LineDataSet.java"}
    409:413:void <clinit>() -> <clinit>
    409:409:void <init>(java.lang.String,int) -> <init>
    409:409:com.github.mikephil.charting.data.LineDataSet$Mode valueOf(java.lang.String) -> valueOf
    409:409:com.github.mikephil.charting.data.LineDataSet$Mode[] values() -> values
com.github.mikephil.charting.data.LineRadarDataSet -> com.github.mikephil.charting.data.LineRadarDataSet:
# {"id":"sourceFile","fileName":"LineRadarDataSet.java"}
    23:47:void <init>(java.util.List,java.lang.String) -> <init>
    83:83:int getFillAlpha() -> getFillAlpha
    52:52:int getFillColor() -> getFillColor
    68:68:android.graphics.drawable.Drawable getFillDrawable() -> getFillDrawable
    113:113:float getLineWidth() -> getLineWidth
    123:123:boolean isDrawFilledEnabled() -> isDrawFilledEnabled
    108:108:void setLineWidth(float) -> setLineWidth
com.github.mikephil.charting.data.LineScatterCandleRadarDataSet -> com.github.mikephil.charting.data.LineScatterCandleRadarDataSet:
# {"id":"sourceFile","fileName":"LineScatterCandleRadarDataSet.java"}
    15:27:void <init>(java.util.List,java.lang.String) -> <init>
    110:110:android.graphics.DashPathEffect getDashPathEffectHighlight() -> getDashPathEffectHighlight
    75:75:float getHighlightLineWidth() -> getHighlightLineWidth
    62:62:boolean isHorizontalHighlightIndicatorEnabled() -> isHorizontalHighlightIndicatorEnabled
    57:57:boolean isVerticalHighlightIndicatorEnabled() -> isVerticalHighlightIndicatorEnabled
com.github.mikephil.charting.data.PieDataSet$ValuePosition -> com.github.mikephil.charting.data.PieDataSet$ValuePosition:
# {"id":"sourceFile","fileName":"PieDataSet.java"}
    209:211:void <clinit>() -> <clinit>
    209:209:void <init>(java.lang.String,int) -> <init>
    209:209:com.github.mikephil.charting.data.PieDataSet$ValuePosition valueOf(java.lang.String) -> valueOf
    209:209:com.github.mikephil.charting.data.PieDataSet$ValuePosition[] values() -> values
com.github.mikephil.charting.data.PieEntry -> com.github.mikephil.charting.data.PieEntry:
# {"id":"sourceFile","fileName":"PieEntry.java"}
    79:79:float getX() -> getX
com.github.mikephil.charting.data.RadarEntry -> com.github.mikephil.charting.data.RadarEntry:
# {"id":"sourceFile","fileName":"RadarEntry.java"}
    42:42:float getX() -> getX
com.github.mikephil.charting.data.ScatterData -> com.github.mikephil.charting.data.ScatterData:
# {"id":"sourceFile","fileName":"ScatterData.java"}
com.github.mikephil.charting.exception.DrawingDataSetNotCreatedException -> com.github.mikephil.charting.exception.DrawingDataSetNotCreatedException:
# {"id":"sourceFile","fileName":"DrawingDataSetNotCreatedException.java"}
    11:11:void <init>() -> <init>
com.github.mikephil.charting.formatter.DefaultAxisValueFormatter -> com.github.mikephil.charting.formatter.DefaultAxisValueFormatter:
# {"id":"sourceFile","fileName":"DefaultAxisValueFormatter.java"}
    29:39:void <init>(int) -> <init>
    54:54:int getDecimalDigits() -> getDecimalDigits
    45:45:java.lang.String getFormattedValue(float,com.github.mikephil.charting.components.AxisBase) -> getFormattedValue
com.github.mikephil.charting.formatter.DefaultFillFormatter -> com.github.mikephil.charting.formatter.DefaultFillFormatter:
# {"id":"sourceFile","fileName":"DefaultFillFormatter.java"}
    20:40:float getFillLinePosition(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider) -> getFillLinePosition
com.github.mikephil.charting.formatter.DefaultValueFormatter -> com.github.mikephil.charting.formatter.DefaultValueFormatter:
# {"id":"sourceFile","fileName":"DefaultValueFormatter.java"}
    31:32:void <init>(int) -> <init>
    60:60:java.lang.String getFormattedValue(float,com.github.mikephil.charting.data.Entry,int,com.github.mikephil.charting.utils.ViewPortHandler) -> getFormattedValue
    42:51:void setup(int) -> setup
com.github.mikephil.charting.formatter.IAxisValueFormatter -> com.github.mikephil.charting.formatter.IAxisValueFormatter:
# {"id":"sourceFile","fileName":"IAxisValueFormatter.java"}
com.github.mikephil.charting.formatter.IFillFormatter -> com.github.mikephil.charting.formatter.IFillFormatter:
# {"id":"sourceFile","fileName":"IFillFormatter.java"}
com.github.mikephil.charting.formatter.IValueFormatter -> com.github.mikephil.charting.formatter.IValueFormatter:
# {"id":"sourceFile","fileName":"IValueFormatter.java"}
com.github.mikephil.charting.highlight.BarHighlighter -> com.github.mikephil.charting.highlight.BarHighlighter:
# {"id":"sourceFile","fileName":"BarHighlighter.java"}
    16:16:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider) -> <init>
    161:161:com.github.mikephil.charting.data.BarLineScatterCandleBubbleData getData() -> getData
    156:156:float getDistance(float,float,float,float) -> getDistance
    21:31:com.github.mikephil.charting.highlight.Highlight getHighlight(float,float) -> getHighlight
com.github.mikephil.charting.highlight.ChartHighlighter -> com.github.mikephil.charting.highlight.ChartHighlighter:
# {"id":"sourceFile","fileName":"ChartHighlighter.java"}
    28:31:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider) -> <init>
    162:181:java.util.List buildHighlights(com.github.mikephil.charting.interfaces.datasets.IDataSet,int,float,com.github.mikephil.charting.data.DataSet$Rounding) -> buildHighlights
    181:186:java.util.List buildHighlights(com.github.mikephil.charting.interfaces.datasets.IDataSet,int,float,com.github.mikephil.charting.data.DataSet$Rounding) -> buildHighlights
    210:216:com.github.mikephil.charting.highlight.Highlight getClosestHighlightByPixel(java.util.List,float,float,com.github.mikephil.charting.components.YAxis$AxisDependency,float) -> getClosestHighlightByPixel
    244:244:com.github.mikephil.charting.data.BarLineScatterCandleBubbleData getData() -> getData
    240:240:float getDistance(float,float,float,float) -> getDistance
    37:41:com.github.mikephil.charting.highlight.Highlight getHighlight(float,float) -> getHighlight
    70:81:com.github.mikephil.charting.highlight.Highlight getHighlightForX(float,float,float) -> getHighlightForX
    116:116:float getHighlightPos(com.github.mikephil.charting.highlight.Highlight) -> getHighlightPos
    130:148:java.util.List getHighlightsAtXValue(float,float,float) -> getHighlightsAtXValue
    99:105:float getMinimumDistance(java.util.List,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> getMinimumDistance
    56:56:com.github.mikephil.charting.utils.MPPointD getValsForTouch(float,float) -> getValsForTouch
com.github.mikephil.charting.highlight.CombinedHighlighter -> com.github.mikephil.charting.highlight.CombinedHighlighter:
# {"id":"sourceFile","fileName":"CombinedHighlighter.java"}
    25:28:void <init>(com.github.mikephil.charting.interfaces.dataprovider.CombinedDataProvider,com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider) -> <init>
    34:36:java.util.List getHighlightsAtXValue(float,float,float) -> getHighlightsAtXValue
com.github.mikephil.charting.highlight.Highlight -> com.github.mikephil.charting.highlight.Highlight:
# {"id":"sourceFile","fileName":"Highlight.java"}
    36:87:void <init>(float,float,float,float,int,com.github.mikephil.charting.components.YAxis$AxisDependency) -> <init>
    100:101:void <init>(float,float,float,float,int,int,com.github.mikephil.charting.components.YAxis$AxisDependency) -> <init>
    222:222:boolean equalTo(com.github.mikephil.charting.highlight.Highlight) -> equalTo
    178:178:com.github.mikephil.charting.components.YAxis$AxisDependency getAxis() -> getAxis
    142:142:int getDataIndex() -> getDataIndex
    155:155:int getDataSetIndex() -> getDataSetIndex
    198:198:float getDrawX() -> getDrawX
    207:207:float getDrawY() -> getDrawY
    110:110:float getX() -> getX
    126:126:float getXPx() -> getXPx
    119:119:float getY() -> getY
    133:133:float getYPx() -> getYPx
    188:189:void setDraw(float,float) -> setDraw
    232:232:java.lang.String toString() -> toString
com.github.mikephil.charting.highlight.HorizontalBarHighlighter -> com.github.mikephil.charting.highlight.HorizontalBarHighlighter:
# {"id":"sourceFile","fileName":"HorizontalBarHighlighter.java"}
    20:20:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider) -> <init>
    51:70:java.util.List buildHighlights(com.github.mikephil.charting.interfaces.datasets.IDataSet,int,float,com.github.mikephil.charting.data.DataSet$Rounding) -> buildHighlights
    70:75:java.util.List buildHighlights(com.github.mikephil.charting.interfaces.datasets.IDataSet,int,float,com.github.mikephil.charting.data.DataSet$Rounding) -> buildHighlights
    83:83:float getDistance(float,float,float,float) -> getDistance
    26:34:com.github.mikephil.charting.highlight.Highlight getHighlight(float,float) -> getHighlight
com.github.mikephil.charting.highlight.IHighlighter -> com.github.mikephil.charting.highlight.IHighlighter:
# {"id":"sourceFile","fileName":"IHighlighter.java"}
com.github.mikephil.charting.highlight.PieHighlighter -> com.github.mikephil.charting.highlight.PieHighlighter:
# {"id":"sourceFile","fileName":"PieHighlighter.java"}
    13:13:void <init>(com.github.mikephil.charting.charts.PieChart) -> <init>
    19:19:com.github.mikephil.charting.highlight.Highlight getClosestHighlight(int,float,float) -> getClosestHighlight
com.github.mikephil.charting.highlight.PieRadarHighlighter -> com.github.mikephil.charting.highlight.PieRadarHighlighter:
# {"id":"sourceFile","fileName":"PieRadarHighlighter.java"}
    20:23:void <init>(com.github.mikephil.charting.charts.PieRadarChartBase) -> <init>
    29:52:com.github.mikephil.charting.highlight.Highlight getHighlight(float,float) -> getHighlight
com.github.mikephil.charting.highlight.RadarHighlighter -> com.github.mikephil.charting.highlight.RadarHighlighter:
# {"id":"sourceFile","fileName":"RadarHighlighter.java"}
    17:17:void <init>(com.github.mikephil.charting.charts.RadarChart) -> <init>
    23:34:com.github.mikephil.charting.highlight.Highlight getClosestHighlight(int,float,float) -> getClosestHighlight
    54:62:java.util.List getHighlightsAtIndex(int) -> getHighlightsAtIndex
com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider -> com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider:
# {"id":"sourceFile","fileName":"BarDataProvider.java"}
com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider -> com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider:
# {"id":"sourceFile","fileName":"BarLineScatterCandleBubbleDataProvider.java"}
com.github.mikephil.charting.interfaces.dataprovider.BubbleDataProvider -> com.github.mikephil.charting.interfaces.dataprovider.BubbleDataProvider:
# {"id":"sourceFile","fileName":"BubbleDataProvider.java"}
com.github.mikephil.charting.interfaces.dataprovider.CandleDataProvider -> com.github.mikephil.charting.interfaces.dataprovider.CandleDataProvider:
# {"id":"sourceFile","fileName":"CandleDataProvider.java"}
com.github.mikephil.charting.interfaces.dataprovider.ChartInterface -> com.github.mikephil.charting.interfaces.dataprovider.ChartInterface:
# {"id":"sourceFile","fileName":"ChartInterface.java"}
com.github.mikephil.charting.interfaces.dataprovider.CombinedDataProvider -> com.github.mikephil.charting.interfaces.dataprovider.CombinedDataProvider:
# {"id":"sourceFile","fileName":"CombinedDataProvider.java"}
com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider -> com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider:
# {"id":"sourceFile","fileName":"LineDataProvider.java"}
com.github.mikephil.charting.interfaces.dataprovider.ScatterDataProvider -> com.github.mikephil.charting.interfaces.dataprovider.ScatterDataProvider:
# {"id":"sourceFile","fileName":"ScatterDataProvider.java"}
com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet -> com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet:
# {"id":"sourceFile","fileName":"IBarLineScatterCandleBubbleDataSet.java"}
com.github.mikephil.charting.interfaces.datasets.IDataSet -> com.github.mikephil.charting.interfaces.datasets.IDataSet:
# {"id":"sourceFile","fileName":"IDataSet.java"}
com.github.mikephil.charting.interfaces.datasets.ILineDataSet -> com.github.mikephil.charting.interfaces.datasets.ILineDataSet:
# {"id":"sourceFile","fileName":"ILineDataSet.java"}
com.github.mikephil.charting.interfaces.datasets.ILineRadarDataSet -> com.github.mikephil.charting.interfaces.datasets.ILineRadarDataSet:
# {"id":"sourceFile","fileName":"ILineRadarDataSet.java"}
com.github.mikephil.charting.interfaces.datasets.ILineScatterCandleRadarDataSet -> com.github.mikephil.charting.interfaces.datasets.ILineScatterCandleRadarDataSet:
# {"id":"sourceFile","fileName":"ILineScatterCandleRadarDataSet.java"}
com.github.mikephil.charting.jobs.MoveViewJob -> com.github.mikephil.charting.jobs.MoveViewJob:
# {"id":"sourceFile","fileName":"MoveViewJob.java"}
    18:19:void <clinit>() -> <clinit>
    37:37:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View) -> <init>
    23:28:com.github.mikephil.charting.jobs.MoveViewJob getInstance(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View) -> getInstance
    54:54:com.github.mikephil.charting.utils.ObjectPool$Poolable instantiate() -> instantiate
    33:33:void recycleInstance(com.github.mikephil.charting.jobs.MoveViewJob) -> recycleInstance
    43:49:void run() -> run
com.github.mikephil.charting.jobs.ViewPortJob -> com.github.mikephil.charting.jobs.ViewPortJob:
# {"id":"sourceFile","fileName":"ViewPortJob.java"}
    21:36:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,float,float,com.github.mikephil.charting.utils.Transformer,android.view.View) -> <init>
com.github.mikephil.charting.listener.BarLineChartTouchListener -> com.github.mikephil.charting.listener.BarLineChartTouchListener:
# {"id":"sourceFile","fileName":"BarLineChartTouchListener.java"}
    35:92:void <init>(com.github.mikephil.charting.charts.BarLineChartBase,android.graphics.Matrix,float) -> <init>
    637:670:void computeScroll() -> computeScroll
    505:517:com.github.mikephil.charting.utils.MPPointF getTrans(float,float) -> getTrans
    478:478:float getXDist(android.view.MotionEvent) -> getXDist
    490:490:float getYDist(android.view.MotionEvent) -> getYDist
    526:527:boolean inverted() -> inverted
    452:455:void midPoint(com.github.mikephil.charting.utils.MPPointF,android.view.MotionEvent) -> midPoint
    557:579:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    619:627:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    585:587:void onLongPress(android.view.MotionEvent) -> onLongPress
    598:613:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    99:266:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    297:321:void performDrag(android.view.MotionEvent) -> performDrag
    431:435:void performHighlightDrag(android.view.MotionEvent) -> performHighlightDrag
    334:419:void performZoom(android.view.MotionEvent) -> performZoom
    283:287:void saveTouchStart(android.view.MotionEvent) -> saveTouchStart
    465:467:float spacing(android.view.MotionEvent) -> spacing
    631:632:void stopDeceleration() -> stopDeceleration
com.github.mikephil.charting.listener.ChartTouchListener -> com.github.mikephil.charting.listener.ChartTouchListener:
# {"id":"sourceFile","fileName":"ChartTouchListener.java"}
    22:56:void <init>(com.github.mikephil.charting.charts.Chart) -> <init>
    141:141:float distance(float,float,float,float) -> distance
    79:79:void endAction(android.view.MotionEvent) -> endAction
    120:125:void performHighlight(com.github.mikephil.charting.highlight.Highlight,android.view.MotionEvent) -> performHighlight
    91:91:void setLastHighlighted(com.github.mikephil.charting.highlight.Highlight) -> setLastHighlighted
    66:66:void startAction(android.view.MotionEvent) -> startAction
com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture -> com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture:
# {"id":"sourceFile","fileName":"ChartTouchListener.java"}
    15:16:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    15:15:com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture valueOf(java.lang.String) -> valueOf
    15:15:com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture[] values() -> values
com.github.mikephil.charting.listener.OnChartGestureListener -> com.github.mikephil.charting.listener.OnChartGestureListener:
# {"id":"sourceFile","fileName":"OnChartGestureListener.java"}
com.github.mikephil.charting.listener.OnChartValueSelectedListener -> com.github.mikephil.charting.listener.OnChartValueSelectedListener:
# {"id":"sourceFile","fileName":"OnChartValueSelectedListener.java"}
com.github.mikephil.charting.listener.OnDrawListener -> com.github.mikephil.charting.listener.OnDrawListener:
# {"id":"sourceFile","fileName":"OnDrawListener.java"}
com.github.mikephil.charting.listener.PieRadarChartTouchListener -> com.github.mikephil.charting.listener.PieRadarChartTouchListener:
# {"id":"sourceFile","fileName":"PieRadarChartTouchListener.java"}
    24:37:void <init>(com.github.mikephil.charting.charts.PieRadarChartBase) -> <init>
    181:217:float calculateVelocity() -> calculateVelocity
    258:274:void computeScroll() -> computeScroll
    122:124:void onLongPress(android.view.MotionEvent) -> onLongPress
    0:0:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    139:152:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    44:110:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    158:158:void resetVelocity() -> resetVelocity
    163:170:void sampleVelocity(float,float) -> sampleVelocity
    235:235:void setGestureStartAngle(float,float) -> setGestureStartAngle
    253:253:void stopDeceleration() -> stopDeceleration
    246:246:void updateGestureRotation(float,float) -> updateGestureRotation
com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample -> com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample:
# {"id":"sourceFile","fileName":"PieRadarChartTouchListener.java"}
    282:284:void <init>(com.github.mikephil.charting.listener.PieRadarChartTouchListener,long,float) -> <init>
com.github.mikephil.charting.renderer.AxisRenderer -> com.github.mikephil.charting.renderer.AxisRenderer:
# {"id":"sourceFile","fileName":"AxisRenderer.java"}
    49:70:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.utils.Transformer,com.github.mikephil.charting.components.AxisBase) -> <init>
    122:141:void computeAxis(float,float,boolean) -> computeAxis
    154:255:void computeAxisValues(float,float) -> computeAxisValues
    80:80:android.graphics.Paint getPaintAxisLabels() -> getPaintAxisLabels
com.github.mikephil.charting.renderer.BarChartRenderer -> com.github.mikephil.charting.renderer.BarChartRenderer:
# {"id":"sourceFile","fileName":"BarChartRenderer.java"}
    32:85:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    73:75:void drawData(android.graphics.Canvas) -> drawData
    0:0:void drawExtras(android.graphics.Canvas) -> drawExtras
    420:424:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    192:194:void drawValues(android.graphics.Canvas) -> drawValues
    60:61:void initBuffers() -> initBuffers
com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer -> com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer:
# {"id":"sourceFile","fileName":"BarLineScatterCandleBubbleRenderer.java"}
    19:22:void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    47:49:boolean isInBoundsX(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet) -> isInBoundsX
    32:32:boolean shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet) -> shouldDrawValues
com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer$XBounds -> com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer$XBounds:
# {"id":"sourceFile","fileName":"BarLineScatterCandleBubbleRenderer.java"}
    59:59:void <init>(com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer) -> <init>
    83:93:void set(com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet) -> set
com.github.mikephil.charting.renderer.BubbleChartRenderer -> com.github.mikephil.charting.renderer.BubbleChartRenderer:
# {"id":"sourceFile","fileName":"BubbleChartRenderer.java"}
    32:199:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BubbleDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    49:51:void drawData(android.graphics.Canvas) -> drawData
    0:0:void drawExtras(android.graphics.Canvas) -> drawExtras
    204:210:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    118:118:void drawValues(android.graphics.Canvas) -> drawValues
    0:0:void initBuffers() -> initBuffers
com.github.mikephil.charting.renderer.CandleStickChartRenderer -> com.github.mikephil.charting.renderer.CandleStickChartRenderer:
# {"id":"sourceFile","fileName":"CandleStickChartRenderer.java"}
    27:36:void <init>(com.github.mikephil.charting.interfaces.dataprovider.CandleDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    47:49:void drawData(android.graphics.Canvas) -> drawData
    0:0:void drawExtras(android.graphics.Canvas) -> drawExtras
    337:341:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    259:261:void drawValues(android.graphics.Canvas) -> drawValues
    0:0:void initBuffers() -> initBuffers
com.github.mikephil.charting.renderer.CombinedChartRenderer -> com.github.mikephil.charting.renderer.CombinedChartRenderer:
# {"id":"sourceFile","fileName":"CombinedChartRenderer.java"}
    27:106:void <init>(com.github.mikephil.charting.charts.CombinedChart,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    43:71:void createRenderers() -> createRenderers
    88:89:void drawData(android.graphics.Canvas) -> drawData
    102:103:void drawExtras(android.graphics.Canvas) -> drawExtras
    111:138:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    95:96:void drawValues(android.graphics.Canvas) -> drawValues
    81:82:void initBuffers() -> initBuffers
com.github.mikephil.charting.renderer.CombinedChartRenderer$1 -> com.github.mikephil.charting.renderer.CombinedChartRenderer$1:
# {"id":"sourceFile","fileName":"CombinedChartRenderer.java"}
    53:53:void <clinit>() -> <clinit>
com.github.mikephil.charting.renderer.DataRenderer -> com.github.mikephil.charting.renderer.DataRenderer:
# {"id":"sourceFile","fileName":"DataRenderer.java"}
    52:68:void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    113:114:void applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet) -> applyValueTextStyle
    151:152:void drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int) -> drawValue
    72:73:boolean isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface) -> isDrawingValuesAllowed
com.github.mikephil.charting.renderer.HorizontalBarChartRenderer -> com.github.mikephil.charting.renderer.HorizontalBarChartRenderer:
# {"id":"sourceFile","fileName":"HorizontalBarChartRenderer.java"}
    35:53:void <init>(com.github.mikephil.charting.interfaces.dataprovider.BarDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    148:150:void drawValues(android.graphics.Canvas) -> drawValues
    43:44:void initBuffers() -> initBuffers
    424:425:boolean isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface) -> isDrawingValuesAllowed
com.github.mikephil.charting.renderer.LegendRenderer -> com.github.mikephil.charting.renderer.LegendRenderer:
# {"id":"sourceFile","fileName":"LegendRenderer.java"}
    45:468:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.Legend) -> <init>
    85:220:void computeLegend(com.github.mikephil.charting.data.ChartData) -> computeLegend
    486:546:void drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend) -> drawForm
    558:558:void drawLabel(android.graphics.Canvas,float,float,java.lang.String) -> drawLabel
    63:63:android.graphics.Paint getLabelPaint() -> getLabelPaint
    227:450:void renderLegend(android.graphics.Canvas) -> renderLegend
com.github.mikephil.charting.renderer.LegendRenderer$1 -> com.github.mikephil.charting.renderer.LegendRenderer$1:
# {"id":"sourceFile","fileName":"LegendRenderer.java"}
    260:505:void <clinit>() -> <clinit>
com.github.mikephil.charting.renderer.LineChartRenderer -> com.github.mikephil.charting.renderer.LineChartRenderer:
# {"id":"sourceFile","fileName":"LineChartRenderer.java"}
    54:604:void <init>(com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    608:678:void drawCircles(android.graphics.Canvas) -> drawCircles
    186:260:void drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> drawCubicBezier
    265:280:void drawCubicFill(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet,android.graphics.Path,com.github.mikephil.charting.utils.Transformer,com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer$XBounds) -> drawCubicFill
    76:101:void drawData(android.graphics.Canvas) -> drawData
    106:128:void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> drawDataSet
    593:593:void drawExtras(android.graphics.Canvas) -> drawExtras
    687:707:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    133:181:void drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> drawHorizontalBezier
    294:421:void drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> drawLinear
    436:463:void drawLinearFill(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet,com.github.mikephil.charting.utils.Transformer,com.github.mikephil.charting.renderer.BarLineScatterCandleBubbleRenderer$XBounds) -> drawLinearFill
    523:586:void drawValues(android.graphics.Canvas) -> drawValues
    484:517:void generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int,android.graphics.Path) -> generateFilledPath
    0:0:void initBuffers() -> initBuffers
    736:743:void releaseBitmap() -> releaseBitmap
com.github.mikephil.charting.renderer.LineChartRenderer$1 -> com.github.mikephil.charting.renderer.LineChartRenderer$1:
# {"id":"sourceFile","fileName":"LineChartRenderer.java"}
    112:112:void <clinit>() -> <clinit>
com.github.mikephil.charting.renderer.LineChartRenderer$DataSetImageCache -> com.github.mikephil.charting.renderer.LineChartRenderer$DataSetImageCache:
# {"id":"sourceFile","fileName":"LineChartRenderer.java"}
    747:749:void <init>(com.github.mikephil.charting.renderer.LineChartRenderer) -> <init>
    747:747:void <init>(com.github.mikephil.charting.renderer.LineChartRenderer,com.github.mikephil.charting.renderer.LineChartRenderer$1) -> <init>
    784:825:void fill(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,boolean,boolean) -> fill
    842:842:android.graphics.Bitmap getBitmap(int) -> getBitmap
    761:768:boolean init(com.github.mikephil.charting.interfaces.datasets.ILineDataSet) -> init
com.github.mikephil.charting.renderer.LineRadarRenderer -> com.github.mikephil.charting.renderer.LineRadarRenderer:
# {"id":"sourceFile","fileName":"LineRadarRenderer.java"}
    18:18:void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    93:93:boolean clipPathSupported() -> clipPathSupported
    30:44:void drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable) -> drawFilledPath
    61:83:void drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int) -> drawFilledPath
com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer -> com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer:
# {"id":"sourceFile","fileName":"LineScatterCandleRadarRenderer.java"}
    18:21:void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    35:60:void drawHighlightLines(android.graphics.Canvas,float,float,com.github.mikephil.charting.interfaces.datasets.ILineScatterCandleRadarDataSet) -> drawHighlightLines
com.github.mikephil.charting.renderer.PieChartRenderer -> com.github.mikephil.charting.renderer.PieChartRenderer:
# {"id":"sourceFile","fileName":"PieChartRenderer.java"}
    61:758:void <init>(com.github.mikephil.charting.charts.PieChart,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    692:754:void drawCenterText(android.graphics.Canvas) -> drawCenterText
    126:145:void drawData(android.graphics.Canvas) -> drawData
    637:639:void drawExtras(android.graphics.Canvas) -> drawExtras
    762:949:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    650:681:void drawHole(android.graphics.Canvas) -> drawHole
    387:408:void drawValues(android.graphics.Canvas) -> drawValues
    111:111:android.text.TextPaint getPaintCenterText() -> getPaintCenterText
    115:115:android.graphics.Paint getPaintEntryLabels() -> getPaintEntryLabels
    103:103:android.graphics.Paint getPaintHole() -> getPaintHole
    107:107:android.graphics.Paint getPaintTransparentCircle() -> getPaintTransparentCircle
    0:0:void initBuffers() -> initBuffers
    1008:1015:void releaseBitmap() -> releaseBitmap
com.github.mikephil.charting.renderer.RadarChartRenderer -> com.github.mikephil.charting.renderer.RadarChartRenderer:
# {"id":"sourceFile","fileName":"RadarChartRenderer.java"}
    33:364:void <init>(com.github.mikephil.charting.charts.RadarChart,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    60:62:void drawData(android.graphics.Canvas) -> drawData
    236:236:void drawExtras(android.graphics.Canvas) -> drawExtras
    301:361:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    152:167:void drawValues(android.graphics.Canvas) -> drawValues
    241:256:void drawWeb(android.graphics.Canvas) -> drawWeb
    0:0:void initBuffers() -> initBuffers
com.github.mikephil.charting.renderer.Renderer -> com.github.mikephil.charting.renderer.Renderer:
# {"id":"sourceFile","fileName":"Renderer.java"}
    18:19:void <init>(com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
com.github.mikephil.charting.renderer.ScatterChartRenderer -> com.github.mikephil.charting.renderer.ScatterChartRenderer:
# {"id":"sourceFile","fileName":"ScatterChartRenderer.java"}
    28:48:void <init>(com.github.mikephil.charting.interfaces.dataprovider.ScatterDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    39:41:void drawData(android.graphics.Canvas) -> drawData
    0:0:void drawExtras(android.graphics.Canvas) -> drawExtras
    171:175:void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[]) -> drawHighlighted
    96:98:void drawValues(android.graphics.Canvas) -> drawValues
    0:0:void initBuffers() -> initBuffers
com.github.mikephil.charting.renderer.XAxisRenderer -> com.github.mikephil.charting.renderer.XAxisRenderer:
# {"id":"sourceFile","fileName":"XAxisRenderer.java"}
    28:341:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.XAxis,com.github.mikephil.charting.utils.Transformer) -> <init>
    48:67:void computeAxis(float,float,boolean) -> computeAxis
    72:74:void computeAxisValues(float,float) -> computeAxisValues
    79:101:void computeSize() -> computeSize
    287:293:void drawGridLine(android.graphics.Canvas,float,float,android.graphics.Path) -> drawGridLine
    231:231:void drawLabel(android.graphics.Canvas,java.lang.String,float,float,com.github.mikephil.charting.utils.MPPointF,float) -> drawLabel
    182:225:void drawLabels(android.graphics.Canvas,float,com.github.mikephil.charting.utils.MPPointF) -> drawLabels
    272:274:android.graphics.RectF getGridClippingRect() -> getGridClippingRect
    107:145:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    151:171:void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    238:266:void renderGridLines(android.graphics.Canvas) -> renderGridLines
    307:320:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
    38:40:void setupGridPaint() -> setupGridPaint
com.github.mikephil.charting.renderer.XAxisRendererHorizontalBarChart -> com.github.mikephil.charting.renderer.XAxisRendererHorizontalBarChart:
# {"id":"sourceFile","fileName":"XAxisRendererHorizontalBarChart.java"}
    29:210:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.XAxis,com.github.mikephil.charting.utils.Transformer,com.github.mikephil.charting.charts.BarChart) -> <init>
    39:58:void computeAxis(float,float,boolean) -> computeAxis
    64:84:void computeSize() -> computeSize
    175:181:void drawGridLine(android.graphics.Canvas,float,float,android.graphics.Path) -> drawGridLine
    136:160:void drawLabels(android.graphics.Canvas,float,com.github.mikephil.charting.utils.MPPointF) -> drawLabels
    167:169:android.graphics.RectF getGridClippingRect() -> getGridClippingRect
    90:130:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    187:206:void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    220:236:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.XAxisRendererRadarChart -> com.github.mikephil.charting.renderer.XAxisRendererRadarChart:
# {"id":"sourceFile","fileName":"XAxisRendererRadarChart.java"}
    18:20:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.XAxis,com.github.mikephil.charting.charts.RadarChart) -> <init>
    26:44:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    0:0:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.YAxisRenderer -> com.github.mikephil.charting.renderer.YAxisRenderer:
# {"id":"sourceFile","fileName":"YAxisRenderer.java"}
    28:248:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.YAxis,com.github.mikephil.charting.utils.Transformer) -> <init>
    117:127:void drawYLabels(android.graphics.Canvas,float,float[],float) -> drawYLabels
    223:243:void drawZeroLine(android.graphics.Canvas) -> drawZeroLine
    171:173:android.graphics.RectF getGridClippingRect() -> getGridClippingRect
    201:211:float[] getTransformedPositions() -> getTransformedPositions
    186:187:android.graphics.Path linePath(android.graphics.Path,int,float[]) -> linePath
    50:88:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    94:105:void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    135:164:void renderGridLines(android.graphics.Canvas) -> renderGridLines
    257:272:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.YAxisRendererHorizontalBarChart -> com.github.mikephil.charting.renderer.YAxisRendererHorizontalBarChart:
# {"id":"sourceFile","fileName":"YAxisRendererHorizontalBarChart.java"}
    25:215:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.YAxis,com.github.mikephil.charting.utils.Transformer) -> <init>
    41:60:void computeAxis(float,float,boolean) -> computeAxis
    136:149:void drawYLabels(android.graphics.Canvas,float,float[],float) -> drawYLabels
    191:211:void drawZeroLine(android.graphics.Canvas) -> drawZeroLine
    172:174:android.graphics.RectF getGridClippingRect() -> getGridClippingRect
    156:166:float[] getTransformedPositions() -> getTransformedPositions
    180:181:android.graphics.Path linePath(android.graphics.Path,int,float[]) -> linePath
    69:104:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    110:123:void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    225:242:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.YAxisRendererRadarChart -> com.github.mikephil.charting.renderer.YAxisRendererRadarChart:
# {"id":"sourceFile","fileName":"YAxisRendererRadarChart.java"}
    21:178:void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.YAxis,com.github.mikephil.charting.charts.RadarChart) -> <init>
    32:142:void computeAxisValues(float,float) -> computeAxisValues
    148:175:void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    182:226:void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.utils.FSize -> com.github.mikephil.charting.utils.FSize:
# {"id":"sourceFile","fileName":"FSize.java"}
    20:21:void <clinit>() -> <clinit>
    47:49:void <init>(float,float) -> <init>
    60:62:boolean equals(java.lang.Object) -> equals
    30:32:com.github.mikephil.charting.utils.FSize getInstance(float,float) -> getInstance
    77:77:int hashCode() -> hashCode
    26:26:com.github.mikephil.charting.utils.ObjectPool$Poolable instantiate() -> instantiate
    37:37:void recycleInstance(com.github.mikephil.charting.utils.FSize) -> recycleInstance
    69:69:java.lang.String toString() -> toString
com.github.mikephil.charting.utils.HorizontalViewPortHandler -> com.github.mikephil.charting.utils.HorizontalViewPortHandler:
# {"id":"sourceFile","fileName":"HorizontalViewPortHandler.java"}
    7:7:void <init>() -> <init>
com.github.mikephil.charting.utils.MPPointD -> com.github.mikephil.charting.utils.MPPointD:
# {"id":"sourceFile","fileName":"MPPointD.java"}
    16:17:void <clinit>() -> <clinit>
    42:44:void <init>(double,double) -> <init>
    21:23:com.github.mikephil.charting.utils.MPPointD getInstance(double,double) -> getInstance
    39:39:com.github.mikephil.charting.utils.ObjectPool$Poolable instantiate() -> instantiate
    28:28:void recycleInstance(com.github.mikephil.charting.utils.MPPointD) -> recycleInstance
    51:51:java.lang.String toString() -> toString
com.github.mikephil.charting.utils.MPPointF -> com.github.mikephil.charting.utils.MPPointF:
# {"id":"sourceFile","fileName":"MPPointF.java"}
    19:57:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    26:28:void <init>(float,float) -> <init>
    32:34:com.github.mikephil.charting.utils.MPPointF getInstance(float,float) -> getInstance
    39:39:com.github.mikephil.charting.utils.MPPointF getInstance() -> getInstance
    43:45:com.github.mikephil.charting.utils.MPPointF getInstance(com.github.mikephil.charting.utils.MPPointF) -> getInstance
    97:97:com.github.mikephil.charting.utils.ObjectPool$Poolable instantiate() -> instantiate
    83:84:void my_readFromParcel(android.os.Parcel) -> my_readFromParcel
    50:50:void recycleInstance(com.github.mikephil.charting.utils.MPPointF) -> recycleInstance
com.github.mikephil.charting.utils.MPPointF$1 -> com.github.mikephil.charting.utils.MPPointF$1:
# {"id":"sourceFile","fileName":"MPPointF.java"}
    57:57:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:63:com.github.mikephil.charting.utils.MPPointF createFromParcel(android.os.Parcel) -> createFromParcel
    57:57:java.lang.Object[] newArray(int) -> newArray
    71:71:com.github.mikephil.charting.utils.MPPointF[] newArray(int) -> newArray
com.github.mikephil.charting.utils.ObjectPool -> com.github.mikephil.charting.utils.ObjectPool:
# {"id":"sourceFile","fileName":"ObjectPool.java"}
    0:0:void <clinit>() -> <clinit>
    54:63:void <init>(int,com.github.mikephil.charting.utils.ObjectPool$Poolable) -> <init>
    47:51:com.github.mikephil.charting.utils.ObjectPool create(int,com.github.mikephil.charting.utils.ObjectPool$Poolable) -> create
    115:123:com.github.mikephil.charting.utils.ObjectPool$Poolable get() -> get
    133:149:void recycle(com.github.mikephil.charting.utils.ObjectPool$Poolable) -> recycle
    88:88:void refillPool() -> refillPool
    92:103:void refillPool(float) -> refillPool
    180:186:void resizePool() -> resizePool
    80:80:void setReplenishPercentage(float) -> setReplenishPercentage
com.github.mikephil.charting.utils.ObjectPool$Poolable -> com.github.mikephil.charting.utils.ObjectPool$Poolable:
# {"id":"sourceFile","fileName":"ObjectPool.java"}
    0:0:void <clinit>() -> <clinit>
    210:213:void <init>() -> <init>
com.github.mikephil.charting.utils.Transformer -> com.github.mikephil.charting.utils.Transformer:
# {"id":"sourceFile","fileName":"Transformer.java"}
    28:453:void <init>(com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    177:195:float[] generateTransformedValuesLine(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,float,float,int,int) -> generateTransformedValuesLine
    425:433:com.github.mikephil.charting.utils.MPPointD getPixelForValues(float,float) -> getPixelForValues
    447:450:android.graphics.Matrix getValueToPixelMatrix() -> getValueToPixelMatrix
    399:400:com.github.mikephil.charting.utils.MPPointD getValuesByTouchPoint(float,float) -> getValuesByTouchPoint
    406:412:void getValuesByTouchPoint(float,float,com.github.mikephil.charting.utils.MPPointD) -> getValuesByTouchPoint
    245:247:void pathValueToPixel(android.graphics.Path) -> pathValueToPixel
    367:378:void pixelsToValue(float[]) -> pixelsToValue
    270:272:void pointValuesToPixel(float[]) -> pointValuesToPixel
    75:85:void prepareMatrixOffset(boolean) -> prepareMatrixOffset
    52:65:void prepareMatrixValuePx(float,float,float,float) -> prepareMatrixValuePx
com.github.mikephil.charting.utils.TransformerHorizontalBarChart -> com.github.mikephil.charting.utils.TransformerHorizontalBarChart:
# {"id":"sourceFile","fileName":"TransformerHorizontalBarChart.java"}
    12:12:void <init>(com.github.mikephil.charting.utils.ViewPortHandler) -> <init>
    22:34:void prepareMatrixOffset(boolean) -> prepareMatrixOffset
com.github.mikephil.charting.utils.Utils -> com.github.mikephil.charting.utils.Utils:
# {"id":"sourceFile","fileName":"Utils.java"}
    46:554:void <clinit>() -> <clinit>
    162:165:int calcTextHeight(android.graphics.Paint,java.lang.String) -> calcTextHeight
    199:200:com.github.mikephil.charting.utils.FSize calcTextSize(android.graphics.Paint,java.lang.String) -> calcTextSize
    215:219:void calcTextSize(android.graphics.Paint,java.lang.String,com.github.mikephil.charting.utils.FSize) -> calcTextSize
    148:148:int calcTextWidth(android.graphics.Paint,java.lang.String) -> calcTextWidth
    106:115:float convertDpToPixel(float) -> convertDpToPixel
    535:550:void drawImage(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int) -> drawImage
    563:619:void drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float) -> drawXAxisValue
    235:235:com.github.mikephil.charting.formatter.IValueFormatter generateDefaultValueFormatter() -> generateDefaultValueFormatter
    377:382:int getDecimals(float) -> getDecimals
    242:242:com.github.mikephil.charting.formatter.IValueFormatter getDefaultValueFormatter() -> getDefaultValueFormatter
    171:171:float getLineHeight(android.graphics.Paint) -> getLineHeight
    175:176:float getLineHeight(android.graphics.Paint,android.graphics.Paint$FontMetrics) -> getLineHeight
    180:180:float getLineSpacing(android.graphics.Paint) -> getLineSpacing
    184:185:float getLineSpacing(android.graphics.Paint,android.graphics.Paint$FontMetrics) -> getLineSpacing
    515:515:int getMaximumFlingVelocity() -> getMaximumFlingVelocity
    511:511:int getMinimumFlingVelocity() -> getMinimumFlingVelocity
    0:0:float getNormalizedAngle(float) -> getNormalizedAngle
    466:467:void getPosition(com.github.mikephil.charting.utils.MPPointF,float,float,com.github.mikephil.charting.utils.MPPointF) -> getPosition
    777:777:int getSDKInt() -> getSDKInt
    754:754:com.github.mikephil.charting.utils.FSize getSizeOfRotatedRectangleByDegrees(float,float,float) -> getSizeOfRotatedRectangleByDegrees
    768:772:com.github.mikephil.charting.utils.FSize getSizeOfRotatedRectangleByRadians(float,float,float) -> getSizeOfRotatedRectangleByRadians
    61:74:void init(android.content.Context) -> init
    443:443:double nextUp(double) -> nextUp
    505:505:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    356:364:float roundToNextSignificant(double) -> roundToNextSignificant
    475:490:void velocityTrackerPointerUpCleanUpIfNecessary(android.view.MotionEvent,android.view.VelocityTracker) -> velocityTrackerPointerUpCleanUpIfNecessary
com.github.mikephil.charting.utils.ViewPortHandler -> com.github.mikephil.charting.utils.ViewPortHandler:
# {"id":"sourceFile","fileName":"ViewPortHandler.java"}
    19:412:void <init>() -> <init>
    739:739:boolean canZoomInMoreX() -> canZoomInMoreX
    757:757:boolean canZoomInMoreY() -> canZoomInMoreY
    730:730:boolean canZoomOutMoreX() -> canZoomOutMoreX
    748:748:boolean canZoomOutMoreY() -> canZoomOutMoreY
    397:406:void centerViewPort(float[],android.view.View) -> centerViewPort
    148:148:float contentBottom() -> contentBottom
    156:156:float contentHeight() -> contentHeight
    140:140:float contentLeft() -> contentLeft
    144:144:float contentRight() -> contentRight
    136:136:float contentTop() -> contentTop
    152:152:float contentWidth() -> contentWidth
    168:168:float getChartHeight() -> getChartHeight
    172:172:float getChartWidth() -> getChartWidth
    164:164:com.github.mikephil.charting.utils.MPPointF getContentCenter() -> getContentCenter
    160:160:android.graphics.RectF getContentRect() -> getContentRect
    578:578:android.graphics.Matrix getMatrixTouch() -> getMatrixTouch
    622:622:float getScaleX() -> getScaleX
    629:629:float getScaleY() -> getScaleY
    107:107:boolean hasChartDimens() -> hasChartDimens
    721:721:boolean hasNoDragOffset() -> hasNoDragOffset
    673:673:boolean isFullyZoomedOut() -> isFullyZoomedOut
    692:692:boolean isFullyZoomedOutX() -> isFullyZoomedOutX
    682:682:boolean isFullyZoomedOutY() -> isFullyZoomedOutY
    597:597:boolean isInBounds(float,float) -> isInBounds
    615:615:boolean isInBoundsBottom(float) -> isInBoundsBottom
    601:601:boolean isInBoundsLeft(float) -> isInBoundsLeft
    606:606:boolean isInBoundsRight(float) -> isInBoundsRight
    610:610:boolean isInBoundsTop(float) -> isInBoundsTop
    589:589:boolean isInBoundsX(float) -> isInBoundsX
    593:593:boolean isInBoundsY(float) -> isInBoundsY
    441:475:void limitTransAndScale(android.graphics.Matrix,android.graphics.RectF) -> limitTransAndScale
    132:132:float offsetBottom() -> offsetBottom
    120:120:float offsetLeft() -> offsetLeft
    124:124:float offsetRight() -> offsetRight
    128:128:float offsetTop() -> offsetTop
    422:430:android.graphics.Matrix refresh(android.graphics.Matrix,android.view.View,boolean) -> refresh
    115:115:void restrainViewPort(float,float,float,float) -> restrainViewPort
    95:103:void setChartDimens(float,float) -> setChartDimens
    702:702:void setDragOffsetX(float) -> setDragOffsetX
    712:712:void setDragOffsetY(float) -> setDragOffsetY
    503:505:void setMaximumScaleX(float) -> setMaximumScaleX
    553:555:void setMaximumScaleY(float) -> setMaximumScaleY
    522:525:void setMinMaxScaleX(float,float) -> setMinMaxScaleX
    566:569:void setMinMaxScaleY(float,float) -> setMinMaxScaleY
    488:490:void setMinimumScaleX(float) -> setMinimumScaleX
    538:540:void setMinimumScaleY(float) -> setMinimumScaleY
    273:275:void zoom(float,float,float,float,android.graphics.Matrix) -> zoom
com.google.android.material.R$styleable -> com.google.android.material.R$styleable:
    0:0:void <clinit>() -> <clinit>
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
# {"id":"sourceFile","fileName":"AnimationUtils.java"}
    36:43:void <clinit>() -> <clinit>
    0:0:float lerp(float,float,float) -> lerp
    52:52:int lerp(int,int,float) -> lerp
    71:71:float lerp(float,float,float,float,float) -> lerp
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
# {"id":"sourceFile","fileName":"AnimatorSetCompat.java"}
    39:47:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.animation.ArgbEvaluatorCompat:
# {"id":"sourceFile","fileName":"ArgbEvaluatorCompat.java"}
    29:29:void <clinit>() -> <clinit>
    28:28:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    58:91:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    40:40:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> getInstance
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
# {"id":"sourceFile","fileName":"ChildrenAlphaProperty.java"}
    38:38:void <clinit>() -> <clinit>
    42:42:void <init>(java.lang.String) -> <init>
    33:33:java.lang.Object get(java.lang.Object) -> get
    48:52:java.lang.Float get(android.view.ViewGroup) -> get
    33:33:void set(java.lang.Object,java.lang.Object) -> set
    58:64:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.animation.DrawableAlphaProperty:
# {"id":"sourceFile","fileName":"DrawableAlphaProperty.java"}
    36:36:void <clinit>() -> <clinit>
    39:42:void <init>() -> <init>
    30:30:java.lang.Object get(java.lang.Object) -> get
    49:49:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    30:30:void set(java.lang.Object,java.lang.Object) -> set
    63:63:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
# {"id":"sourceFile","fileName":"ImageMatrixProperty.java"}
    28:31:void <init>() -> <init>
    27:27:java.lang.Object get(java.lang.Object) -> get
    42:43:android.graphics.Matrix get(android.widget.ImageView) -> get
    27:27:void set(java.lang.Object,java.lang.Object) -> set
    36:36:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
# {"id":"sourceFile","fileName":"MatrixEvaluator.java"}
    26:29:void <init>() -> <init>
    34:41:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
# {"id":"sourceFile","fileName":"MotionSpec.java"}
    66:71:void <init>() -> <init>
    215:220:void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addInfoFromAnimator
    128:130:android.animation.PropertyValuesHolder[] clonePropertyValuesHolder(android.animation.PropertyValuesHolder[]) -> clonePropertyValuesHolder
    175:178:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    188:200:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    207:209:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    229:235:boolean equals(java.lang.Object) -> equals
    149:151:android.animation.ObjectAnimator getAnimator(java.lang.String,java.lang.Object,android.util.Property) -> getAnimator
    110:113:android.animation.PropertyValuesHolder[] getPropertyValues(java.lang.String) -> getPropertyValues
    84:87:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    161:163:long getTotalDuration() -> getTotalDuration
    99:99:boolean hasPropertyValues(java.lang.String) -> hasPropertyValues
    76:76:boolean hasTiming(java.lang.String) -> hasTiming
    240:240:int hashCode() -> hashCode
    123:123:void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[]) -> setPropertyValues
    92:92:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    246:254:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
# {"id":"sourceFile","fileName":"MotionTiming.java"}
    33:41:void <init>(long,long) -> <init>
    35:47:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:56:void apply(android.animation.Animator) -> apply
    83:87:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    119:137:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    70:70:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    102:108:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    74:74:int getRepeatCount() -> getRepeatCount
    78:78:int getRepeatMode() -> getRepeatMode
    142:146:int hashCode() -> hashCode
    153:169:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
# {"id":"sourceFile","fileName":"Positioning.java"}
    34:37:void <init>(int,float,float) -> <init>
com.google.android.material.animation.TransformationCallback -> com.google.android.material.animation.TransformationCallback:
# {"id":"sourceFile","fileName":"TransformationCallback.java"}
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    0:0:void $r8$lambda$L4UAs858CLQVMmD1QMlZMKD6UY8(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable,android.animation.ValueAnimator) -> $r8$lambda$L4UAs858CLQVMmD1QMlZMKD6UY8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$XV3VI5THqRjqH1lLQck6TBMHyoU(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable,android.animation.ValueAnimator) -> $r8$lambda$XV3VI5THqRjqH1lLQck6TBMHyoU
      # {"id":"com.android.tools.r8.synthesized"}
    185:185:void <clinit>() -> <clinit>
    225:225:void <init>(android.content.Context) -> <init>
    229:229:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    189:315:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    364:368:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> addOnOffsetChangedListener
    374:374:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> addOnOffsetChangedListener
    697:697:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1099:1102:void clearLiftOnScrollTargetView() -> clearLiftOnScrollTargetView
    482:489:void draw(android.graphics.Canvas) -> draw
    495:501:void drawableStateChanged() -> drawableStateChanged
    1081:1095:android.view.View findLiftOnScrollTargetView(android.view.View) -> findLiftOnScrollTargetView
    141:141:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    141:141:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    702:702:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    141:141:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    141:141:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    141:141:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    141:141:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    712:717:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    645:645:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    788:830:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    835:870:int getDownNestedScrollRange() -> getDownNestedScrollRange
    1067:1067:int getLiftOnScrollTargetViewId() -> getLiftOnScrollTargetViewId
    893:910:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    1129:1129:int getPendingAction() -> getPendingAction
    477:477:android.graphics.drawable.Drawable getStatusBarForeground() -> getStatusBarForeground
    0:0:float getTargetElevation() -> getTargetElevation
    1138:1138:int getTopInset() -> getTopInset
    737:774:int getTotalScrollRange() -> getTotalScrollRange
    783:783:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    728:728:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    596:597:boolean hasCollapsibleChild() -> hasCollapsibleChild
    778:778:boolean hasScrollableChildren() -> hasScrollableChildren
    326:328:void initializeLiftOnScrollWithColor(com.google.android.material.shape.MaterialShapeDrawable) -> initializeLiftOnScrollWithColor
    343:344:void initializeLiftOnScrollWithElevation(android.content.Context,com.google.android.material.shape.MaterialShapeDrawable) -> initializeLiftOnScrollWithElevation
    611:622:void invalidateScrollRanges() -> invalidateScrollRanges
    1035:1035:boolean isLiftOnScroll() -> isLiftOnScroll
    329:335:void lambda$initializeLiftOnScrollWithColor$0(com.google.android.material.shape.MaterialShapeDrawable,android.animation.ValueAnimator) -> lambda$initializeLiftOnScrollWithColor$0
    345:351:void lambda$initializeLiftOnScrollWithElevation$1(com.google.android.material.shape.MaterialShapeDrawable,android.animation.ValueAnimator) -> lambda$initializeLiftOnScrollWithElevation$1
    637:639:void onAttachedToWindow() -> onAttachedToWindow
    915:931:int[] onCreateDrawableState(int) -> onCreateDrawableState
    722:724:void onDetachedFromWindow() -> onDetachedFromWindow
    553:583:void onLayout(boolean,int,int,int,int) -> onLayout
    522:548:void onMeasure(int,int) -> onMeasure
    874:886:void onOffsetChanged(int) -> onOffsetChanged
    1156:1165:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> onWindowInsetChanged
    386:387:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> removeOnOffsetChangedListener
    393:393:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> removeOnOffsetChangedListener
    1133:1133:void resetPendingAction() -> resetPendingAction
    652:654:void setElevation(float) -> setElevation
    669:669:void setExpanded(boolean) -> setExpanded
    684:684:void setExpanded(boolean,boolean) -> setExpanded
    691:692:void setExpanded(boolean,boolean,boolean) -> setExpanded
    1030:1030:void setLiftOnScroll(boolean) -> setLiftOnScroll
    1043:1047:void setLiftOnScrollTargetView(android.view.View) -> setLiftOnScrollTargetView
    1056:1058:void setLiftOnScrollTargetViewId(int) -> setLiftOnScrollTargetViewId
    956:956:void setLiftableOverrideEnabled(boolean) -> setLiftableOverrideEnabled
    961:963:boolean setLiftableState(boolean) -> setLiftableState
    984:984:boolean setLiftedState(boolean) -> setLiftedState
    989:998:boolean setLiftedState(boolean,boolean) -> setLiftedState
    629:632:void setOrientation(int) -> setOrientation
    425:439:void setStatusBarForeground(android.graphics.drawable.Drawable) -> setStatusBarForeground
    453:453:void setStatusBarForegroundColor(int) -> setStatusBarForegroundColor
    466:466:void setStatusBarForegroundResource(int) -> setStatusBarForegroundResource
    1115:1115:void setTargetElevation(float) -> setTargetElevation
    512:516:void setVisibility(int) -> setVisibility
    592:592:boolean shouldDrawStatusBarForeground() -> shouldDrawStatusBarForeground
    1071:1076:boolean shouldLift(android.view.View) -> shouldLift
    1146:1148:boolean shouldOffsetFirstChild() -> shouldOffsetFirstChild
    1008:1018:void startLiftOnScrollColorAnimation(float,float) -> startLiftOnScrollColorAnimation
    588:588:void updateWillNotDraw() -> updateWillNotDraw
    507:507:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.appbar.AppBarLayout$$InternalSyntheticApiModelOutline$1$c4c4e90362869dcac5896a8c0555c6ccada328bfc07fd5993d23a799b5458961$0.m(com.google.android.material.appbar.AppBarLayout,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticLambda1 -> com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$2$62ff5e24e16581cf11391e651817586e7ec846c9afec44a99725bb1880889007$0.f$0 -> f$0
    com.google.android.material.shape.MaterialShapeDrawable com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$2$62ff5e24e16581cf11391e651817586e7ec846c9afec44a99725bb1880889007$0.f$1 -> f$1
    0:0:void com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$2$62ff5e24e16581cf11391e651817586e7ec846c9afec44a99725bb1880889007$0.<init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$2$62ff5e24e16581cf11391e651817586e7ec846c9afec44a99725bb1880889007$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticLambda2 -> com.google.android.material.appbar.AppBarLayout$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$2$6fdf0d613a93346b5c80a2aeb382ac8e451e7029141b5a67c1f3e062033b8aa2$0.f$0 -> f$0
    com.google.android.material.shape.MaterialShapeDrawable com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$2$6fdf0d613a93346b5c80a2aeb382ac8e451e7029141b5a67c1f3e062033b8aa2$0.f$1 -> f$1
    0:0:void com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$2$6fdf0d613a93346b5c80a2aeb382ac8e451e7029141b5a67c1f3e062033b8aa2$0.<init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.appbar.AppBarLayout$$InternalSyntheticLambda$2$6fdf0d613a93346b5c80a2aeb382ac8e451e7029141b5a67c1f3e062033b8aa2$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$1 -> com.google.android.material.appbar.AppBarLayout$1:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    317:317:void <init>(com.google.android.material.appbar.AppBarLayout) -> <init>
    320:320:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    0:0:boolean $r8$lambda$QeS_UGSkShOdio730SqysJJGrYc(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,int,android.view.KeyEvent) -> $r8$lambda$QeS_UGSkShOdio730SqysJJGrYc
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$n_zC0BmoMwb1UwxgpoyEBoSiwM4(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.KeyEvent) -> $r8$lambda$n_zC0BmoMwb1UwxgpoyEBoSiwM4
      # {"id":"com.android.tools.r8.synthesized"}
    1477:1477:void <init>() -> <init>
    1480:1480:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1446:1446:boolean access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$000
    1446:1446:int access$100(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$100
    1952:1990:boolean addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> addAccessibilityScrollActions
    2002:2002:void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,boolean) -> addActionToExpand
    1606:1617:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1625:1650:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    1729:1729:int calculateSnapOffset(int,int,int) -> calculateSnapOffset
    1446:1446:boolean canDragView(android.view.View) -> canDragView
    2023:2028:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    1514:1515:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    0:0:boolean checkFlag(int,int) -> checkFlag
    1934:1938:boolean childrenHaveScrollFlags(com.google.android.material.appbar.AppBarLayout) -> childrenHaveScrollFlags
    1860:1874:void controlExpansionOnKeyPress(android.view.KeyEvent,android.view.View,com.google.android.material.appbar.AppBarLayout) -> controlExpansionOnKeyPress
    2253:2255:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    2241:2244:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1654:1663:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    1920:1926:android.view.View getChildWithScrollingBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout) -> getChildWithScrollingBehavior
    1446:1446:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    2046:2046:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    1446:1446:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    2051:2051:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    2266:2266:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    2128:2162:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    1837:1837:boolean lambda$onLayoutChild$0(android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.KeyEvent) -> lambda$onLayoutChild$0
    1848:1848:boolean lambda$onLayoutChild$1(android.view.View,com.google.android.material.appbar.AppBarLayout,android.view.View,int,android.view.KeyEvent) -> lambda$onLayoutChild$1
    1446:1446:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    2038:2040:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    1446:1446:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1768:1846:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1446:1446:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1745:1761:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1446:1446:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1532:1544:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1446:1446:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1563:1569:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1446:1446:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2279:2284:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1446:1446:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2271:2272:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1446:1446:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1495:1506:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1446:1446:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1580:1589:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    2313:2314:void restoreScrollState(com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState,boolean) -> restoreScrollState
    2290:2305:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState saveScrollState(android.os.Parcelable,com.google.android.material.appbar.AppBarLayout) -> saveScrollState
    1446:1446:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    2061:2118:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    2224:2232:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1674:1723:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    1882:1915:void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> updateAccessibilityActions
    2181:2217:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticApiModelOutline$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$1.m(android.view.View,android.view.View$OnUnhandledKeyEventListener) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout$BaseBehavior com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.f$0 -> f$0
    android.view.View com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.f$1 -> f$1
    com.google.android.material.appbar.AppBarLayout com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.f$2 -> f$2
    0:0:void com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.<init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda2 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.appbar.AppBarLayout$BaseBehavior com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.f$0 -> f$0
    android.view.View com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.f$1 -> f$1
    com.google.android.material.appbar.AppBarLayout com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.f$2 -> f$2
    0:0:void com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.<init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,android.view.View,com.google.android.material.appbar.AppBarLayout) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.appbar.AppBarLayout$BaseBehavior$$InternalSyntheticLambda$1$1ff26bedcaf7b0e7cde68f7f43c2667bb5e26a2a254c5c8251146eb700793b54$2.onKey(android.view.View,int,android.view.KeyEvent) -> onKey
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1637:1637:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1640:1641:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$2 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$2:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1903:1903:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> <init>
    1907:1909:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.appbar.AppBarLayout$BaseBehavior$3 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$3:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1971:1971:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> <init>
    1974:1974:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$4 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$4:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    2006:2006:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,com.google.android.material.appbar.AppBarLayout,boolean) -> <init>
    2009:2009:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    2349:2349:void <clinit>() -> <clinit>
    2327:2332:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2336:2336:void <init>(android.os.Parcelable) -> <init>
    2341:2346:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    2350:2350:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2350:2350:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2354:2354:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2360:2360:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2350:2350:java.lang.Object[] newArray(int) -> newArray
    2366:2366:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener -> com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1433:1433:void <init>() -> <init>
    1437:1437:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1427:1427:int getTopAndBottomOffset() -> getTopAndBottomOffset
    1427:1427:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1427:1427:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1427:1427:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1427:1427:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1427:1427:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1427:1427:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1427:1427:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1427:1427:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1427:1427:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1427:1427:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    1427:1427:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.AppBarLayout$ChildScrollEffect -> com.google.android.material.appbar.AppBarLayout$ChildScrollEffect:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
com.google.android.material.appbar.AppBarLayout$CompressChildScrollEffect -> com.google.android.material.appbar.AppBarLayout$CompressChildScrollEffect:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    2540:2549:void <init>() -> <init>
    2561:2594:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,android.view.View,float) -> onOffsetChanged
    2552:2555:void updateRelativeRect(android.graphics.Rect,com.google.android.material.appbar.AppBarLayout,android.view.View) -> updateRelativeRect
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1250:1292:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1250:1296:void <init>(int,int) -> <init>
    1250:1304:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1250:1308:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1250:1314:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    1356:1356:com.google.android.material.appbar.AppBarLayout$ChildScrollEffect createScrollEffectFromInt(int) -> createScrollEffectFromInt
    1367:1367:com.google.android.material.appbar.AppBarLayout$ChildScrollEffect getScrollEffect() -> getScrollEffect
    1349:1349:int getScrollFlags() -> getScrollFlags
    1412:1412:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    1417:1417:boolean isCollapsible() -> isCollapsible
    1388:1388:void setScrollEffect(int) -> setScrollEffect
    1338:1338:void setScrollFlags(int) -> setScrollFlags
com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener -> com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    2378:2378:void <init>() -> <init>
    2381:2387:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2376:2376:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    2488:2491:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    2478:2480:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> getAppBarLayoutOffset
    2456:2460:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    2499:2502:int getScrollRange(android.view.View) -> getScrollRange
    2393:2393:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2440:2450:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    2399:2400:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2407:2410:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2376:2376:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2376:2376:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2420:2431:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2507:2510:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.CollapsingToolbarLayout -> com.google.android.material.appbar.CollapsingToolbarLayout:
# {"id":"sourceFile","fileName":"CollapsingToolbarLayout.java"}
    124:124:void <clinit>() -> <clinit>
    190:190:void <init>(android.content.Context) -> <init>
    194:194:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    149:333:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    906:926:void animateScrim(int) -> animateScrim
    1597:1597:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    861:868:android.text.TextUtils$TruncateAt convertEllipsizeToTruncateAt(int) -> convertEllipsizeToTruncateAt
    475:476:void disableLiftOnScrollIfNeeded(com.google.android.material.appbar.AppBarLayout) -> disableLiftOnScrollIfNeeded
    400:434:void draw(android.graphics.Canvas) -> draw
    451:457:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1031:1049:void drawableStateChanged() -> drawableStateChanged
    496:527:void ensureToolbar() -> ensureToolbar
    545:547:android.view.View findDirectChild(android.view.View) -> findDirectChild
    122:122:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    122:122:android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1602:1602:com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    122:122:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    122:122:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1607:1607:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1612:1612:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1151:1151:int getCollapsedTitleGravity() -> getCollapsedTitleGravity
    1226:1226:float getCollapsedTitleTextSize() -> getCollapsedTitleTextSize
    1241:1241:android.graphics.Typeface getCollapsedTitleTypeface() -> getCollapsedTitleTypeface
    997:997:android.graphics.drawable.Drawable getContentScrim() -> getContentScrim
    1198:1198:int getExpandedTitleGravity() -> getExpandedTitleGravity
    1349:1349:int getExpandedTitleMarginBottom() -> getExpandedTitleMarginBottom
    1328:1328:int getExpandedTitleMarginEnd() -> getExpandedTitleMarginEnd
    1286:1286:int getExpandedTitleMarginStart() -> getExpandedTitleMarginStart
    1307:1307:int getExpandedTitleMarginTop() -> getExpandedTitleMarginTop
    1212:1212:float getExpandedTitleTextSize() -> getExpandedTitleTextSize
    1256:1256:android.graphics.Typeface getExpandedTitleTypeface() -> getExpandedTitleTypeface
    732:737:int getHeightWithMargins(android.view.View) -> getHeightWithMargins
    1439:1439:int getHyphenationFrequency() -> getHyphenationFrequency
    1388:1388:int getLineCount() -> getLineCount
    1405:1405:float getLineSpacingAdd() -> getLineSpacingAdd
    1422:1422:float getLineSpacingMultiplier() -> getLineSpacingMultiplier
    1379:1379:int getMaxLines() -> getMaxLines
    1739:1741:int getMaxOffsetForPinChild(android.view.View) -> getMaxOffsetForPinChild
    941:941:int getScrimAlpha() -> getScrimAlpha
    1592:1592:long getScrimAnimationDuration() -> getScrimAnimationDuration
    1540:1556:int getScrimVisibleHeightTrigger() -> getScrimVisibleHeightTrigger
    1103:1103:android.graphics.drawable.Drawable getStatusBarScrim() -> getStatusBarScrim
    770:770:java.lang.CharSequence getTitle() -> getTitle
    807:807:int getTitleCollapseMode() -> getTitleCollapseMode
    1577:1577:android.animation.TimeInterpolator getTitlePositionInterpolator() -> getTitlePositionInterpolator
    854:854:android.text.TextUtils$TruncateAt getTitleTextEllipsize() -> getTitleTextEllipsize
    721:725:java.lang.CharSequence getToolbarTitle(android.view.View) -> getToolbarTitle
    742:745:com.google.android.material.appbar.ViewOffsetHelper getViewOffsetHelper(android.view.View) -> getViewOffsetHelper
    469:469:boolean isTitleCollapseFadeMode() -> isTitleCollapseFadeMode
    531:531:boolean isToolbar(android.view.View) -> isToolbar
    536:537:boolean isToolbarChild(android.view.View) -> isToolbarChild
    346:364:void onAttachedToWindow() -> onAttachedToWindow
    441:442:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    371:376:void onDetachedFromWindow() -> onDetachedFromWindow
    615:645:void onLayout(boolean,int,int,int,int) -> onLayout
    573:608:void onMeasure(int,int) -> onMeasure
    462:464:void onSizeChanged(int,int,int,int) -> onSizeChanged
    382:395:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> onWindowInsetChanged
    1142:1142:void setCollapsedTitleGravity(int) -> setCollapsedTitleGravity
    1114:1114:void setCollapsedTitleTextAppearance(int) -> setCollapsedTitleTextAppearance
    1123:1123:void setCollapsedTitleTextColor(int) -> setCollapsedTitleTextColor
    1132:1132:void setCollapsedTitleTextColor(android.content.res.ColorStateList) -> setCollapsedTitleTextColor
    1221:1221:void setCollapsedTitleTextSize(float) -> setCollapsedTitleTextSize
    1235:1235:void setCollapsedTitleTypeface(android.graphics.Typeface) -> setCollapsedTitleTypeface
    953:963:void setContentScrim(android.graphics.drawable.Drawable) -> setContentScrim
    975:975:void setContentScrimColor(int) -> setContentScrimColor
    986:986:void setContentScrimResource(int) -> setContentScrimResource
    1170:1170:void setExpandedTitleColor(int) -> setExpandedTitleColor
    1189:1189:void setExpandedTitleGravity(int) -> setExpandedTitleGravity
    1273:1277:void setExpandedTitleMargin(int,int,int,int) -> setExpandedTitleMargin
    1360:1361:void setExpandedTitleMarginBottom(int) -> setExpandedTitleMarginBottom
    1339:1340:void setExpandedTitleMarginEnd(int) -> setExpandedTitleMarginEnd
    1297:1298:void setExpandedTitleMarginStart(int) -> setExpandedTitleMarginStart
    1318:1319:void setExpandedTitleMarginTop(int) -> setExpandedTitleMarginTop
    1161:1161:void setExpandedTitleTextAppearance(int) -> setExpandedTitleTextAppearance
    1179:1179:void setExpandedTitleTextColor(android.content.res.ColorStateList) -> setExpandedTitleTextColor
    1207:1207:void setExpandedTitleTextSize(float) -> setExpandedTitleTextSize
    1250:1250:void setExpandedTitleTypeface(android.graphics.Typeface) -> setExpandedTitleTypeface
    1502:1502:void setExtraMultilineHeightEnabled(boolean) -> setExtraMultilineHeightEnabled
    1484:1484:void setForceApplySystemWindowInsetTop(boolean) -> setForceApplySystemWindowInsetTop
    1432:1432:void setHyphenationFrequency(int) -> setHyphenationFrequency
    1398:1398:void setLineSpacingAdd(float) -> setLineSpacingAdd
    1415:1415:void setLineSpacingMultiplier(float) -> setLineSpacingMultiplier
    1370:1370:void setMaxLines(int) -> setMaxLines
    1466:1466:void setRtlTextDirectionHeuristicsEnabled(boolean) -> setRtlTextDirectionHeuristicsEnabled
    930:936:void setScrimAlpha(int) -> setScrimAlpha
    1587:1587:void setScrimAnimationDuration(long) -> setScrimAnimationDuration
    1526:1529:void setScrimVisibleHeightTrigger(int) -> setScrimVisibleHeightTrigger
    882:882:void setScrimsShown(boolean) -> setScrimsShown
    895:901:void setScrimsShown(boolean,boolean) -> setScrimsShown
    1457:1457:void setStaticLayoutBuilderConfigurer(com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer) -> setStaticLayoutBuilderConfigurer
    1011:1025:void setStatusBarScrim(android.graphics.drawable.Drawable) -> setStatusBarScrim
    1081:1081:void setStatusBarScrimColor(int) -> setStatusBarScrimColor
    1092:1092:void setStatusBarScrimResource(int) -> setStatusBarScrimResource
    758:759:void setTitle(java.lang.CharSequence) -> setTitle
    780:796:void setTitleCollapseMode(int) -> setTitleCollapseMode
    846:846:void setTitleEllipsize(android.text.TextUtils$TruncateAt) -> setTitleEllipsize
    820:824:void setTitleEnabled(boolean) -> setTitleEnabled
    1568:1568:void setTitlePositionInterpolator(android.animation.TimeInterpolator) -> setTitlePositionInterpolator
    1060:1067:void setVisibility(int) -> setVisibility
    689:716:void updateCollapsedBounds(boolean) -> updateCollapsedBounds
    1746:1746:void updateContentDescriptionFromTitle() -> updateContentDescriptionFromTitle
    481:481:void updateContentScrimBounds(android.graphics.drawable.Drawable,int,int) -> updateContentScrimBounds
    489:492:void updateContentScrimBounds(android.graphics.drawable.Drawable,android.view.View,int,int) -> updateContentScrimBounds
    554:566:void updateDummyView() -> updateDummyView
    1733:1734:void updateScrimVisibility() -> updateScrimVisibility
    652:673:void updateTextBounds(int,int,int,int,boolean) -> updateTextBounds
    679:682:void updateTitleFromToolbarIfNeeded() -> updateTitleFromToolbarIfNeeded
    1055:1055:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.CollapsingToolbarLayout$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.appbar.CollapsingToolbarLayout$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.appbar.CollapsingToolbarLayout$$InternalSyntheticApiModelOutline$1$48b62805cea0e9c52717c1249093e6b51b98413586476e93a91c4937f11e8c3b$0.m(android.widget.Toolbar) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.CollapsingToolbarLayout$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.appbar.CollapsingToolbarLayout$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.appbar.CollapsingToolbarLayout$$InternalSyntheticApiModelOutline$1$48b62805cea0e9c52717c1249093e6b51b98413586476e93a91c4937f11e8c3b$1.m(android.widget.Toolbar) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.CollapsingToolbarLayout$$ExternalSyntheticApiModelOutline2 -> com.google.android.material.appbar.CollapsingToolbarLayout$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.appbar.CollapsingToolbarLayout$$InternalSyntheticApiModelOutline$1$48b62805cea0e9c52717c1249093e6b51b98413586476e93a91c4937f11e8c3b$2.m(android.widget.Toolbar) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.CollapsingToolbarLayout$$ExternalSyntheticApiModelOutline3 -> com.google.android.material.appbar.CollapsingToolbarLayout$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.appbar.CollapsingToolbarLayout$$InternalSyntheticApiModelOutline$1$48b62805cea0e9c52717c1249093e6b51b98413586476e93a91c4937f11e8c3b$3.m(android.widget.Toolbar) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.appbar.CollapsingToolbarLayout$1 -> com.google.android.material.appbar.CollapsingToolbarLayout$1:
# {"id":"sourceFile","fileName":"CollapsingToolbarLayout.java"}
    335:335:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    339:339:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.appbar.CollapsingToolbarLayout$2 -> com.google.android.material.appbar.CollapsingToolbarLayout$2:
# {"id":"sourceFile","fileName":"CollapsingToolbarLayout.java"}
    914:914:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    917:917:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams -> com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams:
# {"id":"sourceFile","fileName":"CollapsingToolbarLayout.java"}
    1640:1654:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1640:1658:void <init>(int,int) -> <init>
    1640:1666:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1717:1717:void setParallaxMultiplier(float) -> setParallaxMultiplier
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener -> com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener:
# {"id":"sourceFile","fileName":"CollapsingToolbarLayout.java"}
    1750:1750:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    1754:1791:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int) -> onOffsetChanged
com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer -> com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer:
# {"id":"sourceFile","fileName":"CollapsingToolbarLayout.java"}
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
# {"id":"sourceFile","fileName":"HeaderBehavior.java"}
    45:50:void <init>() -> <init>
    45:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    0:0:boolean canDragView(android.view.View) -> canDragView
    254:255:void ensureVelocityTracker() -> ensureVelocityTracker
    202:226:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    246:246:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    250:250:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    183:183:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    0:0:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    59:102:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    112:154:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    188:191:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    158:158:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
    164:173:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
# {"id":"sourceFile","fileName":"HeaderBehavior.java"}
    263:265:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    270:276:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
# {"id":"sourceFile","fileName":"HeaderScrollingViewBehavior.java"}
    41:47:void <init>() -> <init>
    41:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    167:169:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    0:0:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    205:205:int getOverlayTop() -> getOverlayTop
    180:180:int getScrollRange(android.view.View) -> getScrollRange
    187:187:int getVerticalLayoutGap() -> getVerticalLayoutGap
    114:154:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    61:100:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    0:0:int resolveGravity(int) -> resolveGravity
    197:197:void setOverlayTop(int) -> setOverlayTop
    0:0:boolean shouldHeaderOverlapScrollingChild() -> shouldHeaderOverlapScrollingChild
com.google.android.material.appbar.MaterialToolbar -> com.google.android.material.appbar.MaterialToolbar:
# {"id":"sourceFile","fileName":"MaterialToolbar.java"}
    72:74:void <clinit>() -> <clinit>
    93:93:void <init>(android.content.Context) -> <init>
    97:97:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:127:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    163:180:android.util.Pair calculateTitleBoundLimits(android.widget.TextView,android.widget.TextView) -> calculateTitleBoundLimits
    227:227:android.widget.ImageView$ScaleType getLogoScaleType() -> getLogoScaleType
    313:313:java.lang.Integer getNavigationIconTint() -> getNavigationIconTint
    365:375:void initBackground(android.content.Context) -> initBackground
    185:204:void layoutTitleCenteredHorizontally(android.view.View,android.util.Pair) -> layoutTitleCenteredHorizontally
    139:157:void maybeCenterTitleViews() -> maybeCenterTitleViews
    380:382:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    257:259:void onAttachedToWindow() -> onAttachedToWindow
    132:135:void onLayout(boolean,int,int,int,int) -> onLayout
    265:267:void setElevation(float) -> setElevation
    249:251:void setLogoAdjustViewBounds(boolean) -> setLogoAdjustViewBounds
    232:234:void setLogoScaleType(android.widget.ImageView$ScaleType) -> setLogoScaleType
    272:272:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    281:285:void setNavigationIconTint(int) -> setNavigationIconTint
    348:350:void setSubtitleCentered(boolean) -> setSubtitleCentered
    324:326:void setTitleCentered(boolean) -> setTitleCentered
    208:215:void updateLogoImageView() -> updateLogoImageView
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
# {"id":"sourceFile","fileName":"ViewOffsetBehavior.java"}
    30:33:void <init>() -> <init>
    30:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:88:int getTopAndBottomOffset() -> getTopAndBottomOffset
    66:66:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    43:57:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    70:73:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
# {"id":"sourceFile","fileName":"ViewOffsetHelper.java"}
    37:41:void <init>(android.view.View) -> <init>
    51:52:void applyOffsets() -> applyOffsets
    94:94:int getLayoutTop() -> getLayoutTop
    86:86:int getTopAndBottomOffset() -> getTopAndBottomOffset
    46:47:void onViewLayout() -> onViewLayout
    77:79:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    62:64:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewUtilsLollipop -> com.google.android.material.appbar.ViewUtilsLollipop:
# {"id":"sourceFile","fileName":"ViewUtilsLollipop.java"}
    36:36:void <clinit>() -> <clinit>
    39:39:void setBoundsViewOutlineProvider(android.view.View) -> setBoundsViewOutlineProvider
    62:79:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
    44:56:void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int) -> setStateListAnimatorFromAttrs
com.google.android.material.badge.BadgeDrawable -> com.google.android.material.badge.BadgeDrawable:
# {"id":"sourceFile","fileName":"BadgeDrawable.java"}
    149:150:void <clinit>() -> <clinit>
    248:262:void <init>(android.content.Context,int,int,int,com.google.android.material.badge.BadgeState$State) -> <init>
    894:943:void calculateCenterAndBounds(android.content.Context,android.graphics.Rect,android.view.View) -> calculateCenterAndBounds
    191:191:com.google.android.material.badge.BadgeDrawable create(android.content.Context) -> create
    185:185:com.google.android.material.badge.BadgeDrawable createFromSavedState(android.content.Context,com.google.android.material.badge.BadgeState$State) -> createFromSavedState
    605:611:void draw(android.graphics.Canvas) -> draw
    949:956:void drawText(android.graphics.Canvas) -> drawText
    572:572:int getAlpha() -> getAlpha
    962:973:java.lang.String getBadgeText() -> getBadgeText
    646:668:java.lang.CharSequence getContentDescription() -> getContentDescription
    334:334:android.widget.FrameLayout getCustomBadgeParent() -> getCustomBadgeParent
    693:693:int getHorizontalOffset() -> getHorizontalOffset
    594:594:int getIntrinsicHeight() -> getIntrinsicHeight
    600:600:int getIntrinsicWidth() -> getIntrinsicWidth
    513:513:int getMaxCharacterCount() -> getMaxCharacterCount
    473:473:int getNumber() -> getNumber
    0:0:int getOpacity() -> getOpacity
    178:178:com.google.android.material.badge.BadgeState$State getSavedState() -> getSavedState
    888:889:int getTotalHorizontalOffsetForState() -> getTotalHorizontalOffsetForState
    882:883:int getTotalVerticalOffsetForState() -> getTotalVerticalOffsetForState
    460:460:boolean hasNumber() -> hasNumber
    0:0:boolean isStateful() -> isStateful
    582:583:void onAlphaUpdated() -> onAlphaUpdated
    408:411:void onBackgroundColorUpdated() -> onBackgroundColorUpdated
    554:556:void onBadgeGravityUpdated() -> onBadgeGravityUpdated
    440:441:void onBadgeTextColorUpdated() -> onBadgeTextColorUpdated
    530:533:void onMaxCharacterCountUpdated() -> onMaxCharacterCountUpdated
    501:503:void onNumberUpdated() -> onNumberUpdated
    628:628:boolean onStateChange(int[]) -> onStateChange
    623:623:void onTextSizeChange() -> onTextSizeChange
    221:226:void onVisibilityUpdated() -> onVisibilityUpdated
    231:240:void restoreState() -> restoreState
    577:578:void setAlpha(int) -> setAlpha
    0:0:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    838:846:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    830:834:void setTextAppearanceResource(int) -> setTextAppearanceResource
    342:370:void tryWrapAnchorInCompatParent(android.view.View) -> tryWrapAnchorInCompatParent
    380:382:void updateAnchorParentToNotClip(android.view.View) -> updateAnchorParentToNotClip
    317:328:void updateBadgeCoordinates(android.view.View,android.widget.FrameLayout) -> updateBadgeCoordinates
    850:876:void updateCenterAndBounds() -> updateCenterAndBounds
    979:979:void updateMaxBadgeNumber() -> updateMaxBadgeNumber
com.google.android.material.badge.BadgeDrawable$1 -> com.google.android.material.badge.BadgeDrawable$1:
# {"id":"sourceFile","fileName":"BadgeDrawable.java"}
    371:371:void <init>(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> <init>
    374:374:void run() -> run
com.google.android.material.badge.BadgeState -> com.google.android.material.badge.BadgeState:
# {"id":"sourceFile","fileName":"BadgeState.java"}
    68:203:void <init>(android.content.Context,int,int,int,com.google.android.material.badge.BadgeState$State) -> <init>
    214:221:android.content.res.TypedArray generateTypedArray(android.content.Context,int,int,int) -> generateTypedArray
    345:345:int getAdditionalHorizontalOffset() -> getAdditionalHorizontalOffset
    355:355:int getAdditionalVerticalOffset() -> getAdditionalVerticalOffset
    256:256:int getAlpha() -> getAlpha
    275:275:int getBackgroundColor() -> getBackgroundColor
    295:295:int getBadgeGravity() -> getBadgeGravity
    285:285:int getBadgeTextColor() -> getBadgeTextColor
    384:384:int getContentDescriptionExceedsMaxBadgeNumberStringResource() -> getContentDescriptionExceedsMaxBadgeNumberStringResource
    364:364:java.lang.CharSequence getContentDescriptionNumberless() -> getContentDescriptionNumberless
    374:374:int getContentDescriptionQuantityStrings() -> getContentDescriptionQuantityStrings
    325:325:int getHorizontalOffsetWithText() -> getHorizontalOffsetWithText
    305:305:int getHorizontalOffsetWithoutText() -> getHorizontalOffsetWithoutText
    265:265:int getMaxCharacterCount() -> getMaxCharacterCount
    243:243:int getNumber() -> getNumber
    393:393:java.util.Locale getNumberLocale() -> getNumberLocale
    226:226:com.google.android.material.badge.BadgeState$State getOverridingState() -> getOverridingState
    335:335:int getVerticalOffsetWithText() -> getVerticalOffsetWithText
    315:315:int getVerticalOffsetWithoutText() -> getVerticalOffsetWithoutText
    239:239:boolean hasNumber() -> hasNumber
    230:230:boolean isVisible() -> isVisible
    403:403:int readColorFromAttributes(android.content.Context,android.content.res.TypedArray,int) -> readColorFromAttributes
    260:261:void setAlpha(int) -> setAlpha
com.google.android.material.badge.BadgeState$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.badge.BadgeState$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Locale$Category com.google.android.material.badge.BadgeState$$InternalSyntheticApiModelOutline$1$baa1693d5758e6c05b748fc82e6061d925c7a139b1ed0350d2b2b85219d3bbd6$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.badge.BadgeState$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.badge.BadgeState$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Locale com.google.android.material.badge.BadgeState$$InternalSyntheticApiModelOutline$1$baa1693d5758e6c05b748fc82e6061d925c7a139b1ed0350d2b2b85219d3bbd6$1.m(java.util.Locale$Category) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.badge.BadgeState$State -> com.google.android.material.badge.BadgeState$State:
# {"id":"sourceFile","fileName":"BadgeState.java"}
    473:473:void <clinit>() -> <clinit>
    421:451:void <init>() -> <init>
    421:470:void <init>(android.os.Parcel) -> <init>
    410:410:int access$000(com.google.android.material.badge.BadgeState$State) -> access$000
    410:410:int access$002(com.google.android.material.badge.BadgeState$State,int) -> access$002
    410:410:int access$100(com.google.android.material.badge.BadgeState$State) -> access$100
    410:410:java.lang.Integer access$1000(com.google.android.material.badge.BadgeState$State) -> access$1000
    410:410:java.lang.Integer access$1002(com.google.android.material.badge.BadgeState$State,java.lang.Integer) -> access$1002
    410:410:int access$102(com.google.android.material.badge.BadgeState$State,int) -> access$102
    410:410:java.lang.Integer access$1100(com.google.android.material.badge.BadgeState$State) -> access$1100
    410:410:java.lang.Integer access$1102(com.google.android.material.badge.BadgeState$State,java.lang.Integer) -> access$1102
    410:410:java.lang.Integer access$1200(com.google.android.material.badge.BadgeState$State) -> access$1200
    410:410:java.lang.Integer access$1202(com.google.android.material.badge.BadgeState$State,java.lang.Integer) -> access$1202
    410:410:java.lang.Integer access$1300(com.google.android.material.badge.BadgeState$State) -> access$1300
    410:410:java.lang.Integer access$1302(com.google.android.material.badge.BadgeState$State,java.lang.Integer) -> access$1302
    410:410:java.lang.Integer access$1400(com.google.android.material.badge.BadgeState$State) -> access$1400
    410:410:java.lang.Integer access$1402(com.google.android.material.badge.BadgeState$State,java.lang.Integer) -> access$1402
    410:410:java.lang.Integer access$1500(com.google.android.material.badge.BadgeState$State) -> access$1500
    410:410:java.lang.Integer access$1502(com.google.android.material.badge.BadgeState$State,java.lang.Integer) -> access$1502
    410:410:java.lang.Integer access$1600(com.google.android.material.badge.BadgeState$State) -> access$1600
    410:410:java.lang.Integer access$1602(com.google.android.material.badge.BadgeState$State,java.lang.Integer) -> access$1602
    410:410:java.util.Locale access$1700(com.google.android.material.badge.BadgeState$State) -> access$1700
    410:410:java.util.Locale access$1702(com.google.android.material.badge.BadgeState$State,java.util.Locale) -> access$1702
    410:410:java.lang.CharSequence access$200(com.google.android.material.badge.BadgeState$State) -> access$200
    410:410:java.lang.CharSequence access$202(com.google.android.material.badge.BadgeState$State,java.lang.CharSequence) -> access$202
    410:410:int access$300(com.google.android.material.badge.BadgeState$State) -> access$300
    410:410:int access$302(com.google.android.material.badge.BadgeState$State,int) -> access$302
    410:410:int access$400(com.google.android.material.badge.BadgeState$State) -> access$400
    410:410:int access$402(com.google.android.material.badge.BadgeState$State,int) -> access$402
    410:410:java.lang.Boolean access$500(com.google.android.material.badge.BadgeState$State) -> access$500
    410:410:java.lang.Boolean access$502(com.google.android.material.badge.BadgeState$State,java.lang.Boolean) -> access$502
    410:410:int access$600(com.google.android.material.badge.BadgeState$State) -> access$600
    410:410:int access$602(com.google.android.material.badge.BadgeState$State,int) -> access$602
    410:410:int access$700(com.google.android.material.badge.BadgeState$State) -> access$700
    410:410:int access$702(com.google.android.material.badge.BadgeState$State,int) -> access$702
    410:410:java.lang.Integer access$800(com.google.android.material.badge.BadgeState$State) -> access$800
    410:410:java.lang.Integer access$802(com.google.android.material.badge.BadgeState$State,java.lang.Integer) -> access$802
    410:410:java.lang.Integer access$900(com.google.android.material.badge.BadgeState$State) -> access$900
    410:410:java.lang.Integer access$902(com.google.android.material.badge.BadgeState$State,java.lang.Integer) -> access$902
    0:0:int describeContents() -> describeContents
    495:512:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.badge.BadgeState$State$1 -> com.google.android.material.badge.BadgeState$State$1:
# {"id":"sourceFile","fileName":"BadgeState.java"}
    474:474:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    478:478:com.google.android.material.badge.BadgeState$State createFromParcel(android.os.Parcel) -> createFromParcel
    474:474:java.lang.Object[] newArray(int) -> newArray
    484:484:com.google.android.material.badge.BadgeState$State[] newArray(int) -> newArray
com.google.android.material.badge.BadgeUtils -> com.google.android.material.badge.BadgeUtils:
# {"id":"sourceFile","fileName":"BadgeUtils.java"}
    50:50:void <clinit>() -> <clinit>
    91:99:void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> attachBadgeDrawable
    290:298:android.util.SparseArray createBadgeDrawablesFromSavedStates(android.content.Context,com.google.android.material.internal.ParcelableSparseArray) -> createBadgeDrawablesFromSavedStates
    265:272:com.google.android.material.internal.ParcelableSparseArray createParcelableBadgeStates(android.util.SparseArray) -> createParcelableBadgeStates
    179:182:void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View) -> detachBadgeDrawable
    247:250:void setBadgeDrawableBounds(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> setBadgeDrawableBounds
    69:69:void updateBadgeBounds(android.graphics.Rect,float,float,float,float) -> updateBadgeBounds
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
# {"id":"sourceFile","fileName":"HideBottomViewOnScrollBehavior.java"}
    71:73:void <clinit>() -> <clinit>
    65:102:void <init>() -> <init>
    65:105:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:47:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    261:265:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    215:215:boolean isScrolledDown() -> isScrolledDown
    178:178:boolean isScrolledUp() -> isScrolledUp
    112:130:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    170:172:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    0:0:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    140:143:void setAdditionalHiddenOffsetY(android.view.View,int) -> setAdditionalHiddenOffsetY
    223:223:void slideDown(android.view.View) -> slideDown
    233:246:void slideDown(android.view.View,boolean) -> slideDown
    186:186:void slideUp(android.view.View) -> slideUp
    196:209:void slideUp(android.view.View,boolean) -> slideUp
    251:253:void updateCurrentState(android.view.View,int) -> updateCurrentState
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
# {"id":"sourceFile","fileName":"HideBottomViewOnScrollBehavior.java"}
    266:266:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    269:269:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
# {"id":"sourceFile","fileName":"SwipeDismissBehavior.java"}
    43:237:void <init>() -> <init>
    43:43:boolean access$002(com.google.android.material.behavior.SwipeDismissBehavior,boolean) -> access$002
    0:0:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    451:451:float clamp(float,float,float) -> clamp
    455:455:int clamp(int,int,int) -> clamp
    391:395:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    0:0:float fraction(float,float,float) -> fraction
    191:209:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    179:183:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    216:220:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    161:161:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    152:152:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    134:134:void setSwipeDirection(int) -> setSwipeDirection
    421:423:void updateAccessibilityActions(android.view.View) -> updateAccessibilityActions
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
# {"id":"sourceFile","fileName":"SwipeDismissBehavior.java"}
    238:242:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    337:362:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    367:367:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    331:331:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    253:265:void onViewCaptured(android.view.View,int) -> onViewCaptured
    271:271:void onViewDragStateChanged(int) -> onViewDragStateChanged
    373:385:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    279:298:void onViewReleased(android.view.View,float,float) -> onViewReleased
    306:323:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    247:248:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$2 -> com.google.android.material.behavior.SwipeDismissBehavior$2:
# {"id":"sourceFile","fileName":"SwipeDismissBehavior.java"}
    427:427:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    430:439:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
# {"id":"sourceFile","fileName":"SwipeDismissBehavior.java"}
    403:405:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    410:413:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    0:0:void $r8$lambda$w7TZ-1dukS0NyaoArwjwMZK7i-E(android.view.View) -> $r8$lambda$w7TZ-1dukS0NyaoArwjwMZK7i-E
      # {"id":"com.android.tools.r8.synthesized"}
    122:126:void <clinit>() -> <clinit>
    297:297:void <init>(android.content.Context) -> <init>
    301:301:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    186:375:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    120:120:boolean access$000(com.google.android.material.bottomappbar.BottomAppBar) -> access$000
    120:120:boolean access$002(com.google.android.material.bottomappbar.BottomAppBar,boolean) -> access$002
    120:120:int access$100(com.google.android.material.bottomappbar.BottomAppBar) -> access$100
    120:120:int access$1000(com.google.android.material.bottomappbar.BottomAppBar) -> access$1000
    120:120:int access$1002(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$1002
    120:120:boolean access$1100(com.google.android.material.bottomappbar.BottomAppBar) -> access$1100
    120:120:int access$1200(com.google.android.material.bottomappbar.BottomAppBar) -> access$1200
    120:120:int access$1202(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$1202
    120:120:void access$1300(com.google.android.material.bottomappbar.BottomAppBar) -> access$1300
    120:120:void access$1400(com.google.android.material.bottomappbar.BottomAppBar) -> access$1400
    120:120:void access$1500(com.google.android.material.bottomappbar.BottomAppBar) -> access$1500
    120:120:void access$1600(com.google.android.material.bottomappbar.BottomAppBar) -> access$1600
    120:120:void access$1700(com.google.android.material.bottomappbar.BottomAppBar) -> access$1700
    120:120:android.animation.Animator access$1802(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$1802
    120:120:float access$1900(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$1900
    120:120:boolean access$200(com.google.android.material.bottomappbar.BottomAppBar) -> access$200
    120:120:android.animation.Animator access$2002(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$2002
    120:120:int access$2100(com.google.android.material.bottomappbar.BottomAppBar) -> access$2100
    120:120:void access$2200(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean,boolean) -> access$2200
    120:120:com.google.android.material.floatingactionbutton.FloatingActionButton access$2300(com.google.android.material.bottomappbar.BottomAppBar) -> access$2300
    120:120:float access$2400(com.google.android.material.bottomappbar.BottomAppBar) -> access$2400
    120:120:int access$2800(com.google.android.material.bottomappbar.BottomAppBar) -> access$2800
    120:120:int access$2900(com.google.android.material.bottomappbar.BottomAppBar) -> access$2900
    120:120:void access$300(com.google.android.material.bottomappbar.BottomAppBar,int,boolean) -> access$300
    120:120:int access$3000(com.google.android.material.bottomappbar.BottomAppBar) -> access$3000
    120:120:int access$3100(com.google.android.material.bottomappbar.BottomAppBar) -> access$3100
    120:120:android.view.View access$3200(com.google.android.material.bottomappbar.BottomAppBar) -> access$3200
    120:120:void access$3300(com.google.android.material.bottomappbar.BottomAppBar,android.view.View) -> access$3300
    120:120:boolean access$3400(com.google.android.material.bottomappbar.BottomAppBar) -> access$3400
    120:120:void access$3500(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$3500
    120:120:int access$400(com.google.android.material.bottomappbar.BottomAppBar) -> access$400
    120:120:com.google.android.material.shape.MaterialShapeDrawable access$500(com.google.android.material.bottomappbar.BottomAppBar) -> access$500
    120:120:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment access$600(com.google.android.material.bottomappbar.BottomAppBar) -> access$600
    120:120:boolean access$700(com.google.android.material.bottomappbar.BottomAppBar) -> access$700
    120:120:int access$802(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$802
    120:120:boolean access$900(com.google.android.material.bottomappbar.BottomAppBar) -> access$900
    1244:1258:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> addFabAnimationListeners
    1171:1175:void cancelAnimations() -> cancelAnimations
    893:901:void createFabDefaultXAnimation(int,java.util.List) -> createFabDefaultXAnimation
    920:922:void createFabTranslationXAnimation(int,java.util.List) -> createFabTranslationXAnimation
    989:1035:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> createMenuViewTranslationAnimation
    788:791:void dispatchAnimationEnd() -> dispatchAnimationEnd
    779:782:void dispatchAnimationStart() -> dispatchAnimationStart
    858:859:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> findDependentFab
    864:871:android.view.View findDependentView() -> findDependentView
    1072:1075:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    1131:1162:int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean) -> getActionMenuViewTranslationX
    566:566:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    120:120:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1286:1289:com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior() -> getBehavior
    1262:1262:int getBottomInset() -> getBottomInset
    615:615:float getCradleVerticalOffset() -> getCradleVerticalOffset
    926:927:int getFabAlignmentAnimationDuration() -> getFabAlignmentAnimationDuration
    442:442:int getFabAlignmentMode() -> getFabAlignmentMode
    639:639:int getFabAlignmentModeEndMargin() -> getFabAlignmentModeEndMargin
    483:483:int getFabAnchorMode() -> getFabAnchorMode
    521:521:int getFabAnimationMode() -> getFabAnimationMode
    573:573:float getFabCradleMargin() -> getFabCradleMargin
    595:595:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    1047:1060:float getFabTranslationX(int) -> getFabTranslationX
    1067:1067:float getFabTranslationX() -> getFabTranslationX
    1040:1041:float getFabTranslationY() -> getFabTranslationY
    661:661:boolean getHideOnScroll() -> getHideOnScroll
    1270:1270:int getLeftInset() -> getLeftInset
    557:557:int getMenuAlignmentMode() -> getMenuAlignmentMode
    1266:1266:int getRightInset() -> getRightInset
    1205:1206:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment() -> getTopEdgeTreatment
    880:881:boolean isFabVisibleOrWillBeShown() -> isFabVisibleOrWillBeShown
    1195:1195:void lambda$onLayout$0(android.view.View) -> lambda$onLayout$0
    942:981:void maybeAnimateMenuView(int,boolean) -> maybeAnimateMenuView
    818:853:void maybeAnimateModeChange(int) -> maybeAnimateModeChange
    932:934:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    1294:1301:void onAttachedToWindow() -> onAttachedToWindow
    1181:1200:void onLayout(boolean,int,int,int,int) -> onLayout
    1483:1490:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1474:1477:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    757:759:void replaceMenu(int) -> replaceMenu
    1224:1232:void setActionMenuViewPosition() -> setActionMenuViewPosition
    561:561:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    625:628:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    1211:1219:void setCutoutStateAndTranslateFab() -> setCutoutStateAndTranslateFab
    742:746:void setElevation(float) -> setElevation
    453:453:void setFabAlignmentMode(int) -> setFabAlignmentMode
    470:474:void setFabAlignmentModeAndReplaceMenu(int,int) -> setFabAlignmentModeAndReplaceMenu
    649:651:void setFabAlignmentModeEndMargin(int) -> setFabAlignmentModeEndMargin
    493:499:void setFabAnchorMode(int) -> setFabAnchorMode
    531:531:void setFabAnimationMode(int) -> setFabAnimationMode
    811:813:void setFabCornerSize(float) -> setFabCornerSize
    583:585:void setFabCradleMargin(float) -> setFabCradleMargin
    603:605:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    801:803:boolean setFabDiameter(int) -> setFabDiameter
    670:670:void setHideOnScroll(boolean) -> setHideOnScroll
    542:546:void setMenuAlignmentMode(int) -> setMenuAlignmentMode
    419:419:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    428:432:void setNavigationIconTint(int) -> setNavigationIconTint
    0:0:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    0:0:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1086:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> translateActionMenuView
    1104:1117:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean,boolean) -> translateActionMenuView
    505:511:void updateFabAnchorGravity(com.google.android.material.bottomappbar.BottomAppBar,android.view.View) -> updateFabAnchorGravity
com.google.android.material.bottomappbar.BottomAppBar$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.bottomappbar.BottomAppBar$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.bottomappbar.BottomAppBar$$InternalSyntheticApiModelOutline$1$82fc2814047889d9bb8d3a652a08681e309dc4e41085129b199ca25e90843d70$0.m(com.google.android.material.bottomappbar.BottomAppBar,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.bottomappbar.BottomAppBar$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.bottomappbar.BottomAppBar$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.bottomappbar.BottomAppBar$$InternalSyntheticApiModelOutline$1$82fc2814047889d9bb8d3a652a08681e309dc4e41085129b199ca25e90843d70$1.m(com.google.android.material.bottomappbar.BottomAppBar,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.bottomappbar.BottomAppBar$$ExternalSyntheticLambda2 -> com.google.android.material.bottomappbar.BottomAppBar$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.View com.google.android.material.bottomappbar.BottomAppBar$$InternalSyntheticLambda$1$efcc82ee6a03aa82dfe086b78806067225c6d7807963df5249f394c0878016ab$0.f$0 -> f$0
    0:0:void com.google.android.material.bottomappbar.BottomAppBar$$InternalSyntheticLambda$1$efcc82ee6a03aa82dfe086b78806067225c6d7807963df5249f394c0878016ab$0.<init>(android.view.View) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.bottomappbar.BottomAppBar$$InternalSyntheticLambda$1$efcc82ee6a03aa82dfe086b78806067225c6d7807963df5249f394c0878016ab$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.bottomappbar.BottomAppBar$1 -> com.google.android.material.bottomappbar.BottomAppBar$1:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    249:249:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    256:257:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$2 -> com.google.android.material.bottomappbar.BottomAppBar$2:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    265:265:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    265:265:void onScaleChanged(android.view.View) -> onScaleChanged
    268:270:void onScaleChanged(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onScaleChanged
    265:265:void onTranslationChanged(android.view.View) -> onTranslationChanged
    276:292:void onTranslationChanged(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onTranslationChanged
com.google.android.material.bottomappbar.BottomAppBar$3 -> com.google.android.material.bottomappbar.BottomAppBar$3:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    380:380:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    391:409:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomappbar.BottomAppBar$4 -> com.google.android.material.bottomappbar.BottomAppBar$4:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    841:841:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    849:850:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    844:844:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$5 -> com.google.android.material.bottomappbar.BottomAppBar$5:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    902:902:void <init>(com.google.android.material.bottomappbar.BottomAppBar,int) -> <init>
    905:906:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
com.google.android.material.bottomappbar.BottomAppBar$5$1 -> com.google.android.material.bottomappbar.BottomAppBar$5$1:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    907:907:void <init>(com.google.android.material.bottomappbar.BottomAppBar$5) -> <init>
    910:910:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.bottomappbar.BottomAppBar$6 -> com.google.android.material.bottomappbar.BottomAppBar$6:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    968:968:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    976:978:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    971:971:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$7 -> com.google.android.material.bottomappbar.BottomAppBar$7:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1011:1011:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    1016:1016:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    1021:1024:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$8 -> com.google.android.material.bottomappbar.BottomAppBar$8:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1105:1105:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    1108:1109:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar$9 -> com.google.android.material.bottomappbar.BottomAppBar$9:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1246:1246:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    1249:1254:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1317:1399:void <init>() -> <init>
    1317:1404:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1309:1309:java.lang.ref.WeakReference access$2500(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2500
    1309:1309:android.graphics.Rect access$2600(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2600
    1309:1309:int access$2700(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2700
    1309:1309:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1410:1453:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    1309:1309:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1465:1466:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1 -> com.google.android.material.bottomappbar.BottomAppBar$Behavior$1:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1318:1318:void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> <init>
    1330:1392:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1514:1514:void <clinit>() -> <clinit>
    1498:1498:void <init>(android.os.Parcelable) -> <init>
    1502:1504:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1509:1511:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1515:1515:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1515:1515:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1519:1519:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1525:1525:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1515:1515:java.lang.Object[] newArray(int) -> newArray
    1531:1531:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment -> com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
# {"id":"sourceFile","fileName":"BottomAppBarTopEdgeTreatment.java"}
    53:68:void <init>(float,float,float) -> <init>
    223:223:float getCradleVerticalOffset() -> getCradleVerticalOffset
    74:179:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    255:255:float getFabCornerRadius() -> getFabCornerRadius
    239:239:float getFabCradleMargin() -> getFabCradleMargin
    247:247:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    189:189:float getFabDiameter() -> getFabDiameter
    214:214:float getHorizontalOffset() -> getHorizontalOffset
    233:235:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    259:259:void setFabCornerSize(float) -> setFabCornerSize
    243:243:void setFabCradleMargin(float) -> setFabCradleMargin
    251:251:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    199:199:void setFabDiameter(float) -> setFabDiameter
    204:204:void setHorizontalOffset(float) -> setHorizontalOffset
com.google.android.material.bottomnavigation.BottomNavigationItemView -> com.google.android.material.bottomnavigation.BottomNavigationItemView:
# {"id":"sourceFile","fileName":"BottomNavigationItemView.java"}
    34:34:void <init>(android.content.Context) -> <init>
    46:46:int getItemDefaultMarginResId() -> getItemDefaultMarginResId
    40:40:int getItemLayoutResId() -> getItemLayoutResId
com.google.android.material.bottomnavigation.BottomNavigationMenuView -> com.google.android.material.bottomnavigation.BottomNavigationMenuView:
# {"id":"sourceFile","fileName":"BottomNavigationMenuView.java"}
    47:66:void <init>(android.content.Context) -> <init>
    196:196:com.google.android.material.navigation.NavigationBarItemView createNavigationBarItemView(android.content.Context) -> createNavigationBarItemView
    190:190:boolean isItemHorizontalTranslationEnabled() -> isItemHorizontalTranslationEnabled
    152:166:void onLayout(boolean,int,int,int,int) -> onLayout
    72:147:void onMeasure(int,int) -> onMeasure
    179:179:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
com.google.android.material.bottomnavigation.BottomNavigationView -> com.google.android.material.bottomnavigation.BottomNavigationView:
# {"id":"sourceFile","fileName":"BottomNavigationView.java"}
    94:94:void <init>(android.content.Context) -> <init>
    98:98:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    103:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    108:134:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    233:241:void addCompatibilityTopDivider(android.content.Context) -> addCompatibilityTopDivider
    138:138:void applyWindowInsets() -> applyWindowInsets
    216:216:com.google.android.material.navigation.NavigationBarMenuView createNavigationBarMenuView(android.content.Context) -> createNavigationBarMenuView
    0:0:int getMaxItemCount() -> getMaxItemCount
    169:174:int makeMinHeightSpec(int) -> makeMinHeightSpec
    164:165:void onMeasure(int,int) -> onMeasure
    188:191:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    272:272:void setOnNavigationItemReselectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener) -> setOnNavigationItemReselectedListener
    257:257:void setOnNavigationItemSelectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener) -> setOnNavigationItemSelectedListener
    0:0:boolean shouldDrawCompatibilityTopDivider() -> shouldDrawCompatibilityTopDivider
com.google.android.material.bottomnavigation.BottomNavigationView$1 -> com.google.android.material.bottomnavigation.BottomNavigationView$1:
# {"id":"sourceFile","fileName":"BottomNavigationView.java"}
    140:140:void <init>(com.google.android.material.bottomnavigation.BottomNavigationView) -> <init>
    149:156:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener -> com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener:
# {"id":"sourceFile","fileName":"BottomNavigationView.java"}
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener -> com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener:
# {"id":"sourceFile","fileName":"BottomNavigationView.java"}
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    273:273:void <clinit>() -> <clinit>
    204:1698:void <init>() -> <init>
    204:1698:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:87:void access$100(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int,boolean) -> access$100
    87:87:boolean access$1000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1000
    87:87:int access$1102(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$1102
    87:87:void access$1200(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> access$1200
    87:87:boolean access$1300(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1300
    87:87:boolean access$1400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1400
    87:87:int access$1500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1500
    87:87:boolean access$1600(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1600
    87:87:int access$1900(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1900
    87:87:com.google.android.material.shape.MaterialShapeDrawable access$200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$200
    87:87:boolean access$2000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$2000
    87:87:int access$302(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$302
    87:87:boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$400
    87:87:int access$500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$500
    87:87:int access$502(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$502
    87:87:boolean access$600(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$600
    87:87:boolean access$700(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$700
    87:87:boolean access$800(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$800
    87:87:boolean access$900(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$900
    2259:2262:int addAccessibilityActionForState(android.view.View,int,int) -> addAccessibilityActionForState
    1258:1259:void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> addBottomSheetCallback
    1440:1445:void calculateCollapsedOffset() -> calculateCollapsedOffset
    1450:1450:void calculateHalfExpandedOffset() -> calculateHalfExpandedOffset
    1427:1436:int calculatePeekHeight() -> calculatePeekHeight
    1455:1457:float calculateSlideOffsetWithTop(int) -> calculateSlideOffsetWithTop
    1931:1931:boolean canBeHiddenByDragging() -> canBeHiddenByDragging
    2240:2247:void clearAccessibilityAction(android.view.View,int) -> clearAccessibilityAction
    2266:2266:androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int) -> createAccessibilityViewCommandForState
    1532:1545:void createMaterialShapeDrawableIfNeeded(android.content.Context) -> createMaterialShapeDrawableIfNeeded
    1554:1556:void createShapeValueAnimator() -> createShapeValueAnimator
    1860:1864:void dispatchOnSlide(int) -> dispatchOnSlide
    1507:1516:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    502:515:int getChildMeasureSpec(int,int,int,int) -> getChildMeasureSpec
    1075:1077:int getExpandedOffset() -> getExpandedOffset
    1356:1356:int getState() -> getState
    1685:1695:int getTopOffsetForState(int) -> getTopOffsetForState
    1658:1662:float getYVelocity() -> getYVelocity
    1423:1423:boolean isExpandedAndShouldRemoveCorners() -> isExpandedAndShouldRemoveCorners
    870:870:boolean isFitToContents() -> isFitToContents
    1345:1345:boolean isGestureInsetBottomIgnored() -> isGestureInsetBottomIgnored
    1122:1122:boolean isHideable() -> isHideable
    0:0:boolean isHideableWhenDragging() -> isHideableWhenDragging
    1324:1325:boolean isLayouting(android.view.View) -> isLayouting
    0:0:boolean isNestedScrollingCheckEnabled() -> isNestedScrollingCheckEnabled
    452:456:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    461:464:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    598:655:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    523:590:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    475:496:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    855:858:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    715:756:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    0:0:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    436:446:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    430:430:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    697:698:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    765:830:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    661:686:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    1269:1269:void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> removeBottomSheetCallback
    2253:2254:void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> replaceAccessibilityActionForState
    1461:1464:void reset() -> reset
    1469:1484:void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) -> restoreOptionalState
    1316:1319:void runAfterLayout(android.view.View,java.lang.Runnable) -> runAfterLayout
    2168:2175:void setAccessibilityDelegateView(android.view.View) -> setAccessibilityDelegateView
    1157:1157:void setDraggable(boolean) -> setDraggable
    1061:1064:void setExpandedOffset(int) -> setExpandedOffset
    881:895:void setFitToContents(boolean) -> setFitToContents
    1338:1338:void setGestureInsetBottomIgnored(boolean) -> setGestureInsetBottomIgnored
    1028:1034:void setHalfExpandedRatio(float) -> setHalfExpandedRatio
    1105:1111:void setHideable(boolean) -> setHideable
    931:931:void setMaxHeight(int) -> setMaxHeight
    908:908:void setMaxWidth(int) -> setMaxWidth
    954:954:void setPeekHeight(int) -> setPeekHeight
    970:982:void setPeekHeight(int,boolean) -> setPeekHeight
    1195:1195:void setSaveFlags(int) -> setSaveFlags
    1173:1173:void setSignificantVelocityThreshold(int) -> setSignificantVelocityThreshold
    1134:1134:void setSkipCollapsed(boolean) -> setSkipCollapsed
    1281:1304:void setState(int) -> setState
    1360:1390:void setStateInternal(int) -> setStateInternal
    1571:1584:void setWindowInsetsListener(android.view.View) -> setWindowInsetsListener
    0:0:boolean shouldExpandOnUpwardDrag(long,float) -> shouldExpandOnUpwardDrag
    1528:1528:boolean shouldHandleDraggingWithHelper() -> shouldHandleDraggingWithHelper
    1489:1501:boolean shouldHide(android.view.View,float) -> shouldHide
    0:0:boolean shouldSkipHalfExpandedStateWhenDragging() -> shouldSkipHalfExpandedStateWhenDragging
    0:0:boolean shouldSkipSmoothAnimation() -> shouldSkipSmoothAnimation
    1666:1678:void startSettling(android.view.View,int,boolean) -> startSettling
    2179:2184:void updateAccessibilityActions() -> updateAccessibilityActions
    2192:2225:void updateAccessibilityActions(android.view.View,int) -> updateAccessibilityActions
    1399:1417:void updateDrawableForTargetState(int,boolean) -> updateDrawableForTargetState
    2113:2163:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
    987:995:void updatePeekHeight(boolean) -> updatePeekHeight
com.google.android.material.bottomsheet.BottomSheetBehavior$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$1:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1306:1306:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1309:1309:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1557:1557:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1560:1562:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomsheet.BottomSheetBehavior$3 -> com.google.android.material.bottomsheet.BottomSheetBehavior$3:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1586:1586:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> <init>
    1591:1650:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomsheet.BottomSheetBehavior$4 -> com.google.android.material.bottomsheet.BottomSheetBehavior$4:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1699:1699:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1846:1846:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1838:1841:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1851:1854:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    1730:1731:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1725:1725:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1744:1833:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1737:1737:boolean releasedLow(android.view.View) -> releasedLow
    1705:1719:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$5 -> com.google.android.material.bottomsheet.BottomSheetBehavior$5:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    2266:2266:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> <init>
    2269:2269:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback -> com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    0:0:void onLayout(android.view.View) -> onLayout
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    2057:2057:void <clinit>() -> <clinit>
    2015:2021:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2025:2030:void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    2049:2054:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    2058:2058:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2058:2058:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2062:2062:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2068:2068:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2058:2058:java.lang.Object[] newArray(int) -> newArray
    2074:2074:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker -> com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1972:1976:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1972:1972:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,com.google.android.material.bottomsheet.BottomSheetBehavior$1) -> <init>
    1972:1972:boolean access$1702(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker,boolean) -> access$1702
    1972:1972:int access$1800(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker) -> access$1800
    1991:1997:void continueSettlingToState(int) -> continueSettlingToState
com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker$1:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1977:1977:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior$StateSettlingTracker) -> <init>
    1980:1984:void run() -> run
com.google.android.material.bottomsheet.BottomSheetDragHandleView -> com.google.android.material.bottomsheet.BottomSheetDragHandleView:
# {"id":"sourceFile","fileName":"BottomSheetDragHandleView.java"}
    0:0:boolean $r8$lambda$xAn-b-a4Gk3yqfHJB7SUvsig1zc(com.google.android.material.bottomsheet.BottomSheetDragHandleView,android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> $r8$lambda$xAn-b-a4Gk3yqfHJB7SUvsig1zc
      # {"id":"com.android.tools.r8.synthesized"}
    52:52:void <clinit>() -> <clinit>
    82:82:void <init>(android.content.Context) -> <init>
    86:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:101:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    50:50:void access$000(com.google.android.material.bottomsheet.BottomSheetDragHandleView,int) -> access$000
    50:50:boolean access$100(com.google.android.material.bottomsheet.BottomSheetDragHandleView) -> access$100
    215:221:void announceAccessibilityEvent(java.lang.String) -> announceAccessibilityEvent
    187:210:boolean expandOrCollapseBottomSheetIfPossible() -> expandOrCollapseBottomSheetIfPossible
    231:237:com.google.android.material.bottomsheet.BottomSheetBehavior findParentBottomSheetBehavior() -> findParentBottomSheetBehavior
    246:247:android.view.View getParentView(android.view.View) -> getParentView
    163:163:boolean lambda$onBottomSheetStateChanged$0(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> lambda$onBottomSheetStateChanged$0
    135:136:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
    116:120:void onAttachedToWindow() -> onAttachedToWindow
    155:162:void onBottomSheetStateChanged(int) -> onBottomSheetStateChanged
    126:130:void onDetachedFromWindow() -> onDetachedFromWindow
    140:150:void setBottomSheetBehavior(com.google.android.material.bottomsheet.BottomSheetBehavior) -> setBottomSheetBehavior
    167:173:void updateInteractableState() -> updateInteractableState
com.google.android.material.bottomsheet.BottomSheetDragHandleView$$ExternalSyntheticLambda0 -> com.google.android.material.bottomsheet.BottomSheetDragHandleView$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.bottomsheet.BottomSheetDragHandleView com.google.android.material.bottomsheet.BottomSheetDragHandleView$$InternalSyntheticLambda$1$6e0c29d7213493c55d30ad4b742182cc19d419d02261296a64cf8befddf5292a$0.f$0 -> f$0
    0:0:void com.google.android.material.bottomsheet.BottomSheetDragHandleView$$InternalSyntheticLambda$1$6e0c29d7213493c55d30ad4b742182cc19d419d02261296a64cf8befddf5292a$0.<init>(com.google.android.material.bottomsheet.BottomSheetDragHandleView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.bottomsheet.BottomSheetDragHandleView$$InternalSyntheticLambda$1$6e0c29d7213493c55d30ad4b742182cc19d419d02261296a64cf8befddf5292a$0.perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.bottomsheet.BottomSheetDragHandleView$1 -> com.google.android.material.bottomsheet.BottomSheetDragHandleView$1:
# {"id":"sourceFile","fileName":"BottomSheetDragHandleView.java"}
    70:70:void <init>(com.google.android.material.bottomsheet.BottomSheetDragHandleView) -> <init>
    0:0:void onSlide(android.view.View,float) -> onSlide
    74:74:void onStateChanged(android.view.View,int) -> onStateChanged
com.google.android.material.bottomsheet.BottomSheetDragHandleView$2 -> com.google.android.material.bottomsheet.BottomSheetDragHandleView$2:
# {"id":"sourceFile","fileName":"BottomSheetDragHandleView.java"}
    103:103:void <init>(com.google.android.material.bottomsheet.BottomSheetDragHandleView) -> <init>
    106:108:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
    132:197:void <clinit>() -> <clinit>
    218:218:void <init>(android.content.Context) -> <init>
    222:222:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    200:256:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:262:java.lang.String getA11yClassName() -> getA11yClassName
    536:548:android.text.Layout$Alignment getActualTextAlignment() -> getActualTextAlignment
    384:384:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    395:395:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1049:1049:int getCornerRadius() -> getCornerRadius
    511:520:android.text.Layout$Alignment getGravityTextAlignment() -> getGravityTextAlignment
    757:757:android.graphics.drawable.Drawable getIcon() -> getIcon
    1061:1061:int getIconGravity() -> getIconGravity
    682:682:int getIconPadding() -> getIconPadding
    712:712:int getIconSize() -> getIconSize
    796:796:android.content.res.ColorStateList getIconTint() -> getIconTint
    821:821:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    1096:1096:int getInsetBottom() -> getInsetBottom
    1116:1116:int getInsetTop() -> getInsetTop
    923:923:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1273:1276:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    965:965:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    1008:1008:int getStrokeWidth() -> getStrokeWidth
    329:335:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    367:372:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    626:641:int getTextHeight() -> getTextHeight
    618:622:int getTextLayoutWidth() -> getTextLayoutWidth
    1232:1232:boolean isCheckable() -> isCheckable
    1188:1188:boolean isChecked() -> isChecked
    878:878:boolean isIconEnd() -> isIconEnd
    874:874:boolean isIconStart() -> isIconStart
    882:882:boolean isIconTop() -> isIconTop
    645:645:boolean isLayoutRTL() -> isLayoutRTL
    1299:1299:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    465:469:void onAttachedToWindow() -> onAttachedToWindow
    1121:1128:int[] onCreateDrawableState(int) -> onCreateDrawableState
    276:278:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    267:271:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    449:454:void onLayout(boolean,int,int,int,int) -> onLayout
    292:298:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    284:286:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    459:460:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    1198:1202:boolean performClick() -> performClick
    484:491:void refreshDrawableState() -> refreshDrawableState
    864:869:void resetIconDrawable() -> resetIconDrawable
    411:411:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    400:405:void setBackgroundColor(int) -> setBackgroundColor
    425:443:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    418:420:void setBackgroundResource(int) -> setBackgroundResource
    378:378:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    389:389:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1242:1243:void setCheckable(boolean) -> setCheckable
    1164:1182:void setChecked(boolean) -> setChecked
    1020:1021:void setCornerRadius(int) -> setCornerRadius
    1034:1035:void setCornerRadiusResource(int) -> setCornerRadiusResource
    476:478:void setElevation(float) -> setElevation
    725:728:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    1072:1074:void setIconGravity(int) -> setIconGravity
    667:669:void setIconPadding(int) -> setIconPadding
    743:745:void setIconResource(int) -> setIconResource
    694:699:void setIconSize(int) -> setIconSize
    769:771:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    807:809:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    784:784:void setIconTintResource(int) -> setIconTintResource
    1085:1085:void setInsetBottom(int) -> setInsetBottom
    1105:1105:void setInsetTop(int) -> setInsetTop
    656:656:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    1287:1287:void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener) -> setOnPressedChangeListenerInternal
    1292:1295:void setPressed(boolean) -> setPressed
    894:895:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    908:909:void setRippleColorResource(int) -> setRippleColorResource
    1254:1257:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1303:1304:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    936:937:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    951:952:void setStrokeColorResource(int) -> setStrokeColorResource
    978:979:void setStrokeWidth(int) -> setStrokeWidth
    993:994:void setStrokeWidthResource(int) -> setStrokeWidthResource
    310:315:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    348:353:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    499:500:void setTextAlignment(int) -> setTextAlignment
    1222:1222:void setToggleCheckedStateOnClick(boolean) -> setToggleCheckedStateOnClick
    1193:1193:void toggle() -> toggle
    829:859:void updateIcon(boolean) -> updateIcon
    553:611:void updateIconPosition(int,int) -> updateIconPosition
com.google.android.material.button.MaterialButton$OnPressedChangeListener -> com.google.android.material.button.MaterialButton$OnPressedChangeListener:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
com.google.android.material.button.MaterialButton$SavedState -> com.google.android.material.button.MaterialButton$SavedState:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
    1334:1334:void <clinit>() -> <clinit>
    1313:1313:void <init>(android.os.Parcelable) -> <init>
    1317:1321:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1331:1331:void readFromParcel(android.os.Parcel) -> readFromParcel
    1326:1327:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.button.MaterialButton$SavedState$1 -> com.google.android.material.button.MaterialButton$SavedState$1:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
    1335:1335:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1335:1335:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1339:1339:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1345:1345:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1335:1335:java.lang.Object[] newArray(int) -> newArray
    1351:1351:com.google.android.material.button.MaterialButton$SavedState[] newArray(int) -> newArray
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
# {"id":"sourceFile","fileName":"MaterialButtonHelper.java"}
    55:57:void <clinit>() -> <clinit>
    75:85:void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    215:251:android.graphics.drawable.Drawable createBackground() -> createBackground
    336:336:int getCornerRadius() -> getCornerRadius
    437:437:int getInsetBottom() -> getInsetBottom
    467:467:int getInsetTop() -> getInsetTop
    410:416:com.google.android.material.shape.Shapeable getMaskDrawable() -> getMaskDrawable
    341:349:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean) -> getMaterialShapeDrawable
    358:358:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> getMaterialShapeDrawable
    283:283:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    429:429:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    295:295:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    306:306:int getStrokeWidth() -> getStrokeWidth
    188:188:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    201:201:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    379:379:com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable() -> getSurfaceColorStrokeDrawable
    170:170:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    366:366:boolean isCheckable() -> isCheckable
    370:370:boolean isToggleCheckedStateOnClick() -> isToggleCheckedStateOnClick
    89:137:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    262:263:void setBackgroundColor(int) -> setBackgroundColor
    162:166:void setBackgroundOverwritten() -> setBackgroundOverwritten
    362:362:void setCheckable(boolean) -> setCheckable
    327:331:void setCornerRadius(int) -> setCornerRadius
    433:433:void setInsetBottom(int) -> setInsetBottom
    441:441:void setInsetTop(int) -> setInsetTop
    268:276:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    423:424:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    205:206:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    287:289:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    299:301:void setStrokeWidth(int) -> setStrokeWidth
    179:182:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    192:195:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    374:374:void setToggleCheckedStateOnClick(boolean) -> setToggleCheckedStateOnClick
    446:458:void setVerticalInsets(int,int) -> setVerticalInsets
    146:152:void updateBackground() -> updateBackground
    385:403:void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel) -> updateButtonShape
    310:318:void updateStroke() -> updateStroke
    175:175:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.button.MaterialButtonToggleGroup -> com.google.android.material.button.MaterialButtonToggleGroup:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    143:143:void <clinit>() -> <clinit>
    180:180:void <init>(android.content.Context) -> <init>
    184:184:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    146:207:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    125:125:int access$100(com.google.android.material.button.MaterialButtonToggleGroup,android.view.View) -> access$100
    410:410:void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> addOnButtonCheckedListener
    230:256:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    504:532:void adjustChildMarginsAndUpdateLayout() -> adjustChildMarginsAndUpdateLayout
    736:741:android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View) -> buildLayoutParams
    669:687:void checkInternal(int,boolean) -> checkInternal
    353:353:void clearChecked() -> clearChecked
    220:221:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    704:705:void dispatchOnButtonChecked(int,boolean) -> dispatchOnButtonChecked
    372:372:int getCheckedButtonId() -> getCheckedButtonId
    389:393:java.util.List getCheckedButtonIds() -> getCheckedButtonIds
    536:536:com.google.android.material.button.MaterialButton getChildButton(int) -> getChildButton
    750:755:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    579:581:int getFirstVisibleChildIndex() -> getFirstVisibleChildIndex
    616:624:int getIndexWithinVisibleButtons(android.view.View) -> getIndexWithinVisibleButtons
    590:592:int getLastVisibleChildIndex() -> getLastVisibleChildIndex
    634:647:com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int) -> getNewCornerData
    607:608:int getVisibleButtonCount() -> getVisibleButtonCount
    601:602:boolean isChildVisible(int) -> isChildVisible
    435:435:boolean isSingleSelection() -> isSingleSelection
    770:773:void onButtonCheckedStateChanged(com.google.android.material.button.MaterialButton,boolean) -> onButtonCheckedStateChanged
    212:214:void onFinishInflate() -> onFinishInflate
    302:309:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    294:297:void onMeasure(int,int) -> onMeasure
    277:289:void onViewRemoved(android.view.View) -> onViewRemoved
    540:555:void resetChildMargins(int) -> resetChildMargins
    484:488:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    783:787:void setEnabled(boolean) -> setEnabled
    711:712:void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton) -> setGeneratedIdIfNeeded
    459:459:void setSelectionRequired(boolean) -> setSelectionRequired
    447:449:void setSingleSelection(boolean) -> setSingleSelection
    480:480:void setSingleSelection(int) -> setSingleSelection
    724:731:void setupButtonChild(com.google.android.material.button.MaterialButton) -> setupButtonChild
    656:664:void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> updateBuilderWithCornerData
    691:700:void updateCheckedIds(java.util.Set) -> updateCheckedIds
    759:765:void updateChildOrder() -> updateChildOrder
    561:574:void updateChildShapes() -> updateChildShapes
com.google.android.material.button.MaterialButtonToggleGroup$1 -> com.google.android.material.button.MaterialButtonToggleGroup$1:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    152:152:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    152:152:int compare(java.lang.Object,java.lang.Object) -> compare
    155:166:int compare(com.google.android.material.button.MaterialButton,com.google.android.material.button.MaterialButton) -> compare
com.google.android.material.button.MaterialButtonToggleGroup$2 -> com.google.android.material.button.MaterialButtonToggleGroup$2:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    258:258:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    262:270:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.button.MaterialButtonToggleGroup$CornerData -> com.google.android.material.button.MaterialButtonToggleGroup$CornerData:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    801:801:void <clinit>() -> <clinit>
    809:813:void <init>(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize) -> <init>
    843:843:com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> bottom
    823:823:com.google.android.material.button.MaterialButtonToggleGroup$CornerData end(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> end
    828:828:com.google.android.material.button.MaterialButtonToggleGroup$CornerData left(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> left
    833:833:com.google.android.material.button.MaterialButtonToggleGroup$CornerData right(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> right
    818:818:com.google.android.material.button.MaterialButtonToggleGroup$CornerData start(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> start
    838:838:com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> top
com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener -> com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker:
# {"id":"sourceFile","fileName":"MaterialButtonToggleGroup.java"}
    791:791:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    791:791:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    795:795:void onPressedChanged(com.google.android.material.button.MaterialButton,boolean) -> onPressedChanged
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.canvas.CanvasCompat:
# {"id":"sourceFile","fileName":"CanvasCompat.java"}
    59:59:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> saveLayerAlpha
com.google.android.material.card.MaterialCardView -> com.google.android.material.card.MaterialCardView:
# {"id":"sourceFile","fileName":"MaterialCardView.java"}
    93:97:void <clinit>() -> <clinit>
    156:156:void <init>(android.content.Context) -> <init>
    160:160:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    151:185:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    80:80:float access$001(com.google.android.material.card.MaterialCardView) -> access$001
    680:681:void forceRippleRedrawIfNeeded() -> forceRippleRedrawIfNeeded
    655:656:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    336:336:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    358:358:android.content.res.ColorStateList getCardForegroundColor() -> getCardForegroundColor
    270:270:float getCardViewRadius() -> getCardViewRadius
    559:559:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    694:694:int getCheckedIconGravity() -> getCheckedIconGravity
    633:633:int getCheckedIconMargin() -> getCheckedIconMargin
    606:606:int getCheckedIconSize() -> getCheckedIconSize
    590:590:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    320:320:int getContentPaddingBottom() -> getContentPaddingBottom
    305:305:int getContentPaddingLeft() -> getContentPaddingLeft
    315:315:int getContentPaddingRight() -> getContentPaddingRight
    310:310:int getContentPaddingTop() -> getContentPaddingTop
    291:291:float getProgress() -> getProgress
    266:266:float getRadius() -> getRadius
    548:548:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    676:676:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    233:233:int getStrokeColor() -> getStrokeColor
    239:239:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    255:255:int getStrokeWidth() -> getStrokeWidth
    461:461:boolean isCheckable() -> isCheckable
    426:426:boolean isChecked() -> isChecked
    451:451:boolean isDragged() -> isDragged
    371:373:void onAttachedToWindow() -> onAttachedToWindow
    489:499:int[] onCreateDrawableState(int) -> onCreateDrawableState
    199:201:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    190:194:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    206:207:void onMeasure(int,int) -> onMeasure
    300:300:void setAncestorContentPadding(int,int,int,int) -> setAncestorContentPadding
    404:404:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    409:414:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    421:421:void setBackgroundInternal(android.graphics.drawable.Drawable) -> setBackgroundInternal
    325:325:void setCardBackgroundColor(int) -> setCardBackgroundColor
    330:330:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    378:379:void setCardElevation(float) -> setCardElevation
    347:347:void setCardForegroundColor(android.content.res.ColorStateList) -> setCardForegroundColor
    471:471:void setCheckable(boolean) -> setCheckable
    431:432:void setChecked(boolean) -> setChecked
    579:579:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    705:706:void setCheckedIconGravity(int) -> setCheckedIconGravity
    637:637:void setCheckedIconMargin(int) -> setCheckedIconMargin
    648:649:void setCheckedIconMarginResource(int) -> setCheckedIconMarginResource
    569:569:void setCheckedIconResource(int) -> setCheckedIconResource
    616:616:void setCheckedIconSize(int) -> setCheckedIconSize
    627:627:void setCheckedIconSizeResource(int) -> setCheckedIconSizeResource
    601:601:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    363:365:void setClickable(boolean) -> setClickable
    296:296:void setContentPadding(int,int,int,int) -> setContentPadding
    442:446:void setDragged(boolean) -> setDragged
    384:385:void setMaxCardElevation(float) -> setMaxCardElevation
    0:0:void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener) -> setOnCheckedChangeListener
    397:399:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    280:280:void setProgress(float) -> setProgress
    260:261:void setRadius(float) -> setRadius
    523:523:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    535:536:void setRippleColorResource(int) -> setRippleColorResource
    663:665:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    216:216:void setStrokeColor(int) -> setStrokeColor
    225:226:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    248:249:void setStrokeWidth(int) -> setStrokeWidth
    390:392:void setUseCompatPadding(boolean) -> setUseCompatPadding
    476:480:void toggle() -> toggle
com.google.android.material.card.MaterialCardView$OnCheckedChangeListener -> com.google.android.material.card.MaterialCardView$OnCheckedChangeListener:
# {"id":"sourceFile","fileName":"MaterialCardView.java"}
com.google.android.material.card.MaterialCardViewHelper -> com.google.android.material.card.MaterialCardViewHelper:
# {"id":"sourceFile","fileName":"MaterialCardViewHelper.java"}
    0:0:void $r8$lambda$3WoItmtzfLszshWzhC1gtU5reVQ(com.google.android.material.card.MaterialCardViewHelper,android.animation.ValueAnimator) -> $r8$lambda$3WoItmtzfLszshWzhC1gtU5reVQ
      # {"id":"com.android.tools.r8.synthesized"}
    72:98:void <clinit>() -> <clinit>
    101:173:void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int) -> <init>
    311:331:void animateCheckedIcon(boolean) -> animateCheckedIcon
    657:670:float calculateActualCornerPadding() -> calculateActualCornerPadding
    674:676:float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float) -> calculateCornerPaddingForCornerTreatment
    622:623:float calculateHorizontalBackgroundPadding() -> calculateHorizontalBackgroundPadding
    612:613:float calculateVerticalBackgroundPadding() -> calculateVerticalBackgroundPadding
    627:627:boolean canClipToOutline() -> canClipToOutline
    711:714:android.graphics.drawable.Drawable createCompatRippleDrawable() -> createCompatRippleDrawable
    700:706:android.graphics.drawable.Drawable createForegroundRippleDrawable() -> createForegroundRippleDrawable
    729:729:com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable() -> createForegroundShapeDrawable
    517:524:void forceRippleRedraw() -> forceRippleRedraw
    270:270:com.google.android.material.shape.MaterialShapeDrawable getBackground() -> getBackground
    278:278:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    287:287:android.content.res.ColorStateList getCardForegroundColor() -> getCardForegroundColor
    440:440:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    749:749:int getCheckedIconGravity() -> getCheckedIconGravity
    469:469:int getCheckedIconMargin() -> getCheckedIconMargin
    460:460:int getCheckedIconSize() -> getCheckedIconSize
    430:430:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    684:695:android.graphics.drawable.Drawable getClickableForeground() -> getClickableForeground
    348:348:float getCornerRadius() -> getCornerRadius
    631:633:float getParentCardViewCalculatedCornerPadding() -> getParentCardViewCalculatedCornerPadding
    364:364:float getProgress() -> getProgress
    435:435:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    546:546:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    247:247:int getStrokeColor() -> getStrokeColor
    252:252:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    265:265:int getStrokeWidth() -> getStrokeWidth
    297:297:android.graphics.Rect getUserContentPadding() -> getUserContentPadding
    578:583:android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable) -> insetDrawable
    229:229:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    413:413:boolean isCheckable() -> isCheckable
    763:763:boolean isCheckedIconBottom() -> isCheckedIconBottom
    759:759:boolean isCheckedIconEnd() -> isCheckedIconEnd
    319:322:void lambda$animateCheckedIcon$0(android.animation.ValueAnimator) -> lambda$animateCheckedIcon$0
    177:225:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    477:511:void recalculateCheckedIconPosition(int,int) -> recalculateCheckedIconPosition
    233:233:void setBackgroundOverwritten(boolean) -> setBackgroundOverwritten
    274:274:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    282:283:void setCardForegroundColor(android.content.res.ColorStateList) -> setCardForegroundColor
    409:409:void setCheckable(boolean) -> setCheckable
    733:733:void setChecked(boolean) -> setChecked
    737:742:void setChecked(boolean,boolean) -> setChecked
    445:453:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    753:755:void setCheckedIconGravity(int) -> setCheckedIconGravity
    473:473:void setCheckedIconMargin(int) -> setCheckedIconMargin
    464:464:void setCheckedIconSize(int) -> setCheckedIconSize
    422:424:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    335:343:void setCornerRadius(float) -> setCornerRadius
    352:358:void setProgress(float) -> setProgress
    417:418:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    529:541:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    237:242:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    256:260:void setStrokeWidth(int) -> setStrokeWidth
    291:292:void setUserContentPadding(int,int,int,int) -> setUserContentPadding
    639:639:boolean shouldAddCornerPaddingInsideCardBackground() -> shouldAddCornerPaddingInsideCardBackground
    643:645:boolean shouldAddCornerPaddingOutsideCardBackground() -> shouldAddCornerPaddingOutsideCardBackground
    301:305:void updateClickable() -> updateClickable
    392:401:void updateContentPadding() -> updateContentPadding
    368:368:void updateElevation() -> updateElevation
    555:559:void updateInsetForeground(android.graphics.drawable.Drawable) -> updateInsetForeground
    373:376:void updateInsets() -> updateInsets
    720:723:void updateRippleColor() -> updateRippleColor
    380:380:void updateStroke() -> updateStroke
com.google.android.material.card.MaterialCardViewHelper$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.card.MaterialCardViewHelper$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.card.MaterialCardViewHelper$$InternalSyntheticApiModelOutline$1$1689473f01b8635891ea195e639c31b982cdd042a3c13e3bfc1fbb0a0d2caf57$0.m(android.graphics.drawable.InsetDrawable,android.graphics.drawable.Drawable) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.card.MaterialCardViewHelper$$ExternalSyntheticLambda1 -> com.google.android.material.card.MaterialCardViewHelper$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.card.MaterialCardViewHelper com.google.android.material.card.MaterialCardViewHelper$$InternalSyntheticLambda$1$2c75e7ad1faed21bb23359ebd4f7d8897a54a80b3ea928f5bb0535bb207af8a6$0.f$0 -> f$0
    0:0:void com.google.android.material.card.MaterialCardViewHelper$$InternalSyntheticLambda$1$2c75e7ad1faed21bb23359ebd4f7d8897a54a80b3ea928f5bb0535bb207af8a6$0.<init>(com.google.android.material.card.MaterialCardViewHelper) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.card.MaterialCardViewHelper$$InternalSyntheticLambda$1$2c75e7ad1faed21bb23359ebd4f7d8897a54a80b3ea928f5bb0535bb207af8a6$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.card.MaterialCardViewHelper$1 -> com.google.android.material.card.MaterialCardViewHelper$1:
# {"id":"sourceFile","fileName":"MaterialCardViewHelper.java"}
    584:584:void <init>(com.google.android.material.card.MaterialCardViewHelper,android.graphics.drawable.Drawable,int,int,int,int) -> <init>
    0:0:int getMinimumHeight() -> getMinimumHeight
    0:0:int getMinimumWidth() -> getMinimumWidth
    0:0:boolean getPadding(android.graphics.Rect) -> getPadding
com.google.android.material.checkbox.MaterialCheckBox -> com.google.android.material.checkbox.MaterialCheckBox:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
    83:134:void <clinit>() -> <clinit>
    223:223:void <init>(android.content.Context) -> <init>
    227:227:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    136:277:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:81:int[] access$000(com.google.android.material.checkbox.MaterialCheckBox) -> access$000
    567:567:android.graphics.drawable.Drawable getButtonDrawable() -> getButtonDrawable
    630:630:android.graphics.drawable.Drawable getButtonIconDrawable() -> getButtonIconDrawable
    658:658:android.content.res.ColorStateList getButtonIconTintList() -> getButtonIconTintList
    686:686:android.graphics.PorterDuff$Mode getButtonIconTintMode() -> getButtonIconTintMode
    811:816:java.lang.String getButtonStateDescription() -> getButtonStateDescription
    582:582:android.content.res.ColorStateList getButtonTintList() -> getButtonTintList
    429:429:int getCheckedState() -> getCheckedState
    521:521:java.lang.CharSequence getErrorAccessibilityLabel() -> getErrorAccessibilityLabel
    844:864:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    822:828:android.content.res.ColorStateList getSuperButtonTintList() -> getSuperButtonTintList
    832:839:boolean isButtonDrawableLegacy(androidx.appcompat.widget.TintTypedArray) -> isButtonDrawableLegacy
    353:353:boolean isChecked() -> isChecked
    486:486:boolean isErrorShown() -> isErrorShown
    314:317:void onAttachedToWindow() -> onAttachedToWindow
    323:335:int[] onCreateDrawableState(int) -> onCreateDrawableState
    288:309:void onDraw(android.graphics.Canvas) -> onDraw
    368:374:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    880:886:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    870:874:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    724:737:void refreshButtonDrawable() -> refreshButtonDrawable
    554:554:void setButtonDrawable(int) -> setButtonDrawable
    559:561:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    616:617:void setButtonIconDrawable(android.graphics.drawable.Drawable) -> setButtonIconDrawable
    602:602:void setButtonIconDrawableResource(int) -> setButtonIconDrawableResource
    643:647:void setButtonIconTintList(android.content.res.ColorStateList) -> setButtonIconTintList
    671:675:void setButtonIconTintMode(android.graphics.PorterDuff$Mode) -> setButtonIconTintMode
    572:576:void setButtonTintList(android.content.res.ColorStateList) -> setButtonTintList
    587:588:void setButtonTintMode(android.graphics.PorterDuff$Mode) -> setButtonTintMode
    712:712:void setCenterIfNoTextEnabled(boolean) -> setCenterIfNoTextEnabled
    348:348:void setChecked(boolean) -> setChecked
    385:413:void setCheckedState(int) -> setCheckedState
    804:805:void setDefaultStateDescription() -> setDefaultStateDescription
    342:343:void setEnabled(boolean) -> setEnabled
    510:510:void setErrorAccessibilityLabel(java.lang.CharSequence) -> setErrorAccessibilityLabel
    498:498:void setErrorAccessibilityLabelResource(int) -> setErrorAccessibilityLabelResource
    469:475:void setErrorShown(boolean) -> setErrorShown
    363:363:void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    795:799:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    745:764:void setUpDefaultButtonDrawableAnimationIfNeeded() -> setUpDefaultButtonDrawableAnimationIfNeeded
    694:698:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
    358:358:void toggle() -> toggle
    770:775:void updateButtonTints() -> updateButtonTints
    0:0:void updateIconTintIfNeeded() -> updateIconTintIfNeeded
com.google.android.material.checkbox.MaterialCheckBox$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.checkbox.MaterialCheckBox$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Class com.google.android.material.checkbox.MaterialCheckBox$$InternalSyntheticApiModelOutline$1$28be0964e0cdc682270b346d6aa6bb6304efdf014b7b21ff83a13b6fb0621188$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.checkbox.MaterialCheckBox$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.checkbox.MaterialCheckBox$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object com.google.android.material.checkbox.MaterialCheckBox$$InternalSyntheticApiModelOutline$1$28be0964e0cdc682270b346d6aa6bb6304efdf014b7b21ff83a13b6fb0621188$1.m(android.content.Context,java.lang.Class) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.checkbox.MaterialCheckBox$$ExternalSyntheticApiModelOutline2 -> com.google.android.material.checkbox.MaterialCheckBox$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.autofill.AutofillManager com.google.android.material.checkbox.MaterialCheckBox$$InternalSyntheticApiModelOutline$1$28be0964e0cdc682270b346d6aa6bb6304efdf014b7b21ff83a13b6fb0621188$2.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.checkbox.MaterialCheckBox$$ExternalSyntheticApiModelOutline3 -> com.google.android.material.checkbox.MaterialCheckBox$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.checkbox.MaterialCheckBox$$InternalSyntheticApiModelOutline$1$28be0964e0cdc682270b346d6aa6bb6304efdf014b7b21ff83a13b6fb0621188$3.m(android.view.autofill.AutofillManager,android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.checkbox.MaterialCheckBox$1 -> com.google.android.material.checkbox.MaterialCheckBox$1:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
    168:168:void <init>(com.google.android.material.checkbox.MaterialCheckBox) -> <init>
    183:185:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    171:177:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
com.google.android.material.checkbox.MaterialCheckBox$SavedState -> com.google.android.material.checkbox.MaterialCheckBox$SavedState:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
    923:923:void <clinit>() -> <clinit>
    889:889:void <init>(android.os.Parcel,com.google.android.material.checkbox.MaterialCheckBox$1) -> <init>
    897:897:void <init>(android.os.Parcelable) -> <init>
    904:905:void <init>(android.os.Parcel) -> <init>
    938:938:java.lang.String getCheckedStateString() -> getCheckedStateString
    917:919:java.lang.String toString() -> toString
    910:911:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.checkbox.MaterialCheckBox$SavedState$1 -> com.google.android.material.checkbox.MaterialCheckBox$SavedState$1:
# {"id":"sourceFile","fileName":"MaterialCheckBox.java"}
    924:924:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    927:927:com.google.android.material.checkbox.MaterialCheckBox$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    924:924:java.lang.Object[] newArray(int) -> newArray
    932:932:com.google.android.material.checkbox.MaterialCheckBox$SavedState[] newArray(int) -> newArray
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
# {"id":"sourceFile","fileName":"Chip.java"}
    0:0:void $r8$lambda$SrupMt7y9EGNLPrqW-9UBo9kKNA(com.google.android.material.chip.Chip,android.widget.CompoundButton,boolean) -> $r8$lambda$SrupMt7y9EGNLPrqW-9UBo9kKNA
      # {"id":"com.android.tools.r8.synthesized"}
    136:143:void <clinit>() -> <clinit>
    194:194:void <init>(android.content.Context) -> <init>
    198:198:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    177:256:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    131:131:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> access$000
    131:131:boolean access$100(com.google.android.material.chip.Chip) -> access$100
    131:131:android.graphics.RectF access$200(com.google.android.material.chip.Chip) -> access$200
    131:131:android.view.View$OnClickListener access$300(com.google.android.material.chip.Chip) -> access$300
    131:131:boolean access$402(com.google.android.material.chip.Chip,boolean) -> access$402
    131:131:android.graphics.Rect access$500(com.google.android.material.chip.Chip) -> access$500
    131:131:android.graphics.Rect access$600() -> access$600
    497:497:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> applyChipDrawable
    899:935:int[] createCloseIconDrawableState() -> createCloseIconDrawableState
    822:826:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    831:845:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    883:892:void drawableStateChanged() -> drawableStateChanged
    2278:2326:boolean ensureAccessibleTouchTarget(int) -> ensureAccessibleTouchTarget
    462:465:void ensureChipDrawableHasCallback() -> ensureChipDrawableHasCallback
    2342:2351:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    471:472:android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    1842:1842:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1877:1877:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1076:1076:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1144:1144:float getChipCornerRadius() -> getChipCornerRadius
    434:434:android.graphics.drawable.Drawable getChipDrawable() -> getChipDrawable
    2220:2220:float getChipEndPadding() -> getChipEndPadding
    1467:1467:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1539:1539:float getChipIconSize() -> getChipIconSize
    1502:1502:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1110:1110:float getChipMinHeight() -> getChipMinHeight
    1982:1982:float getChipStartPadding() -> getChipStartPadding
    1192:1192:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1226:1226:float getChipStrokeWidth() -> getChipStrokeWidth
    1301:1301:java.lang.CharSequence getChipText() -> getChipText
    1629:1629:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1745:1745:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2186:2186:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1700:1700:float getCloseIconSize() -> getCloseIconSize
    2152:2152:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1666:1666:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    947:954:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    959:961:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    650:650:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    858:863:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1948:1948:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2050:2050:float getIconEndPadding() -> getIconEndPadding
    2016:2016:float getIconStartPadding() -> getIconStartPadding
    1261:1261:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1168:1168:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1913:1913:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1404:1404:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2118:2118:float getTextEndPadding() -> getTextEndPadding
    2084:2084:float getTextStartPadding() -> getTextStartPadding
    942:942:boolean hasCloseIcon() -> hasCloseIcon
    321:337:void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int) -> initMinTouchTarget
    417:417:void initOutlineProvider() -> initOutlineProvider
    2369:2369:void insetChipBackgroundDrawable(int,int,int,int) -> insetChipBackgroundDrawable
    1755:1755:boolean isCheckable() -> isCheckable
    1577:1577:boolean isCloseIconVisible() -> isCloseIconVisible
    258:262:void lambda$new$0(android.widget.CompoundButton,boolean) -> lambda$new$0
    269:271:void onAttachedToWindow() -> onAttachedToWindow
    709:712:void onChipDrawableSizeChange() -> onChipDrawableSizeChange
    502:507:int[] onCreateDrawableState(int) -> onCreateDrawableState
    850:852:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    806:817:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    285:302:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    968:969:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    372:378:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    772:801:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    749:760:boolean performCloseIconClick() -> performCloseIconClick
    2359:2363:void removeBackgroundInset() -> removeBackgroundInset
    2336:2336:void setAccessibilityClassName(java.lang.CharSequence) -> setAccessibilityClassName
    542:545:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    0:0:void setBackgroundColor(int) -> setBackgroundColor
    551:554:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    0:0:void setBackgroundResource(int) -> setBackgroundResource
    0:0:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    0:0:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1777:1778:void setCheckable(boolean) -> setCheckable
    1765:1766:void setCheckableResource(int) -> setCheckableResource
    718:722:void setChecked(boolean) -> setChecked
    1864:1865:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1831:1831:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1825:1825:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1852:1853:void setCheckedIconResource(int) -> setCheckedIconResource
    1900:1901:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    1887:1888:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1805:1806:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1817:1818:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1098:1099:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1086:1087:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1179:1180:void setChipCornerRadius(float) -> setChipCornerRadius
    1155:1156:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    439:446:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    2242:2243:void setChipEndPadding(float) -> setChipEndPadding
    2230:2231:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1489:1490:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1456:1456:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1450:1450:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1477:1478:void setChipIconResource(int) -> setChipIconResource
    1565:1566:void setChipIconSize(float) -> setChipIconSize
    1551:1552:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1525:1526:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1512:1513:void setChipIconTintResource(int) -> setChipIconTintResource
    1430:1431:void setChipIconVisible(int) -> setChipIconVisible
    1442:1443:void setChipIconVisible(boolean) -> setChipIconVisible
    1132:1133:void setChipMinHeight(float) -> setChipMinHeight
    1120:1121:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2004:2005:void setChipStartPadding(float) -> setChipStartPadding
    1992:1993:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1214:1215:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1202:1203:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1248:1249:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1236:1237:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1337:1337:void setChipText(java.lang.CharSequence) -> setChipText
    1331:1331:void setChipTextResource(int) -> setChipTextResource
    1652:1655:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1733:1734:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1618:1618:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1612:1612:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2208:2209:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2196:2197:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    875:877:void setCloseIconHovered(boolean) -> setCloseIconHovered
    868:870:void setCloseIconPressed(boolean) -> setCloseIconPressed
    1639:1642:void setCloseIconResource(int) -> setCloseIconResource
    1722:1723:void setCloseIconSize(float) -> setCloseIconSize
    1710:1711:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2174:2175:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2162:2163:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1688:1689:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1676:1677:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1593:1593:void setCloseIconVisible(int) -> setCloseIconVisible
    1603:1606:void setCloseIconVisible(boolean) -> setCloseIconVisible
    565:571:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    610:616:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    623:629:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    639:644:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    577:583:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    593:599:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    277:279:void setElevation(float) -> setElevation
    655:663:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2266:2267:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    517:517:void setGravity(int) -> setGravity
    1970:1971:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1958:1959:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2072:2073:void setIconEndPadding(float) -> setIconEndPadding
    2060:2061:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2038:2039:void setIconStartPadding(float) -> setIconStartPadding
    2026:2027:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    979:979:void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener) -> setInternalOnCheckedChangeListener
    1306:1310:void setLayoutDirection(int) -> setLayoutDirection
    678:680:void setLines(int) -> setLines
    694:696:void setMaxLines(int) -> setMaxLines
    701:703:void setMaxWidth(int) -> setMaxWidth
    686:688:void setMinLines(int) -> setMinLines
    730:730:void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    735:736:void setOnCloseIconClickListener(android.view.View$OnClickListener) -> setOnCloseIconClickListener
    1286:1290:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1271:1274:void setRippleColorResource(int) -> setRippleColorResource
    1162:1162:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1935:1936:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1923:1924:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    670:672:void setSingleLine(boolean) -> setSingleLine
    1316:1324:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1357:1360:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1365:1369:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1374:1378:void setTextAppearance(int) -> setTextAppearance
    1347:1347:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2140:2141:void setTextEndPadding(float) -> setTextEndPadding
    2128:2129:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1383:1388:void setTextSize(int,float) -> setTextSize
    2106:2107:void setTextStartPadding(float) -> setTextStartPadding
    2094:2095:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    2255:2255:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    492:492:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> unapplyChipDrawable
    309:315:void updateAccessibilityDelegate() -> updateAccessibilityDelegate
    451:457:void updateBackgroundDrawable() -> updateBackgroundDrawable
    479:487:void updateFrameworkRippleBackground() -> updateFrameworkRippleBackground
    345:366:void updatePaddingInternal() -> updatePaddingInternal
    1392:1398:void updateTextPaintDrawState() -> updateTextPaintDrawState
    386:408:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.chip.Chip$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.chip.Chip$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.PointerIcon com.google.android.material.chip.Chip$$InternalSyntheticApiModelOutline$1$8c37024ddf2b415ce4cda3cd84686dfc714c5b1bc5183763a4786f2c4fd5c13a$0.m(android.content.Context,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.chip.Chip$$ExternalSyntheticLambda1 -> com.google.android.material.chip.Chip$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.chip.Chip com.google.android.material.chip.Chip$$InternalSyntheticLambda$1$860a95f2ba16f11470ac682f45bacaa4f73f666c1689a0905cdb57dc12e2eff5$0.f$0 -> f$0
    0:0:void com.google.android.material.chip.Chip$$InternalSyntheticLambda$1$860a95f2ba16f11470ac682f45bacaa4f73f666c1689a0905cdb57dc12e2eff5$0.<init>(com.google.android.material.chip.Chip) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.chip.Chip$$InternalSyntheticLambda$1$860a95f2ba16f11470ac682f45bacaa4f73f666c1689a0905cdb57dc12e2eff5$0.onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$1:
# {"id":"sourceFile","fileName":"Chip.java"}
    180:180:void <init>(com.google.android.material.chip.Chip) -> <init>
    0:0:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    184:186:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$2:
# {"id":"sourceFile","fileName":"Chip.java"}
    418:418:void <init>(com.google.android.material.chip.Chip) -> <init>
    422:425:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$ChipTouchHelper:
# {"id":"sourceFile","fileName":"Chip.java"}
    985:986:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    991:991:int getVirtualViewAt(float,float) -> getVirtualViewAt
    998:1000:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    1057:1059:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    1039:1048:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    1016:1033:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    1007:1008:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.ChipDrawable:
# {"id":"sourceFile","fileName":"ChipDrawable.java"}
    166:170:void <clinit>() -> <clinit>
    176:332:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1329:1345:void applyChildDrawable(android.graphics.drawable.Drawable) -> applyChildDrawable
    823:839:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipIconBounds
    538:539:float calculateChipIconWidth() -> calculateChipIconWidth
    933:946:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipTouchBounds
    914:928:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconBounds
    952:971:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconTouchBounds
    578:579:float calculateCloseIconWidth() -> calculateCloseIconWidth
    888:905:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> calculateTextBounds
    879:880:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    846:860:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> calculateTextOriginAndAlignment
    533:533:boolean canShowCheckedIcon() -> canShowCheckedIcon
    280:281:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    590:635:void draw(android.graphics.Canvas) -> draw
    709:719:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCheckedIcon
    649:654:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> drawChipBackground
    694:704:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> drawChipIcon
    663:677:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> drawChipStroke
    640:644:void drawChipSurface(android.graphics.Canvas,android.graphics.Rect) -> drawChipSurface
    760:777:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCloseIcon
    682:689:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> drawCompatRipple
    782:814:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> drawDebug
    725:754:void drawText(android.graphics.Canvas,android.graphics.Rect) -> drawText
    1238:1238:int getAlpha() -> getAlpha
    2040:2040:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    2079:2079:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1422:1422:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1489:1489:float getChipCornerRadius() -> getChipCornerRadius
    2432:2432:float getChipEndPadding() -> getChipEndPadding
    1718:1718:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1786:1786:float getChipIconSize() -> getChipIconSize
    1747:1747:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1455:1455:float getChipMinHeight() -> getChipMinHeight
    2180:2180:float getChipStartPadding() -> getChipStartPadding
    1526:1526:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1562:1562:float getChipStrokeWidth() -> getChipStrokeWidth
    1868:1868:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1958:1958:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2396:2396:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1930:1930:float getCloseIconSize() -> getCloseIconSize
    2360:2360:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1013:1013:int[] getCloseIconState() -> getCloseIconState
    1910:1910:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    492:492:void getCloseIconTouchBounds(android.graphics.RectF) -> getCloseIconTouchBounds
    1252:1252:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    561:565:float getCurrentChipIconHeight() -> getCurrentChipIconHeight
    549:551:float getCurrentChipIconWidth() -> getCurrentChipIconWidth
    1663:1663:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    2150:2150:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2253:2253:float getIconEndPadding() -> getIconEndPadding
    2214:2214:float getIconStartPadding() -> getIconStartPadding
    513:513:int getIntrinsicHeight() -> getIntrinsicHeight
    498:507:int getIntrinsicWidth() -> getIntrinsicWidth
    0:0:int getOpacity() -> getOpacity
    1280:1291:void getOutline(android.graphics.Outline) -> getOutline
    1601:1601:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    2119:2119:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1630:1630:java.lang.CharSequence getText() -> getText
    1651:1651:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2326:2326:float getTextEndPadding() -> getTextEndPadding
    2292:2292:float getTextStartPadding() -> getTextStartPadding
    1355:1355:android.graphics.ColorFilter getTintColorFilter() -> getTintColorFilter
    463:463:boolean getUseCompatRipple() -> getUseCompatRipple
    1376:1376:boolean hasState(int[],int) -> hasState
    1296:1298:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1962:1962:boolean isCheckable() -> isCheckable
    993:993:boolean isCloseIconStateful() -> isCloseIconStateful
    1821:1821:boolean isCloseIconVisible() -> isCloseIconVisible
    979:987:boolean isStateful() -> isStateful
    1151:1151:boolean isStateful(android.content.res.ColorStateList) -> isStateful
    1155:1155:boolean isStateful(android.graphics.drawable.Drawable) -> isStateful
    1160:1161:boolean isStateful(com.google.android.material.resources.TextAppearance) -> isStateful
    338:449:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    1166:1179:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1186:1199:boolean onLevelChange(int) -> onLevelChange
    473:475:void onSizeChange() -> onSizeChange
    1024:1027:boolean onStateChange(int[]) -> onStateChange
    1033:1089:boolean onStateChange(int[],int[]) -> onStateChange
    1089:1093:boolean onStateChange(int[],int[]) -> onStateChange
    1093:1145:boolean onStateChange(int[],int[]) -> onStateChange
    1018:1019:void onTextSizeChange() -> onTextSizeChange
    1304:1306:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1230:1232:void setAlpha(int) -> setAlpha
    1970:1981:void setCheckable(boolean) -> setCheckable
    1966:1966:void setCheckableResource(int) -> setCheckableResource
    2060:2071:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    2050:2050:void setCheckedIconResource(int) -> setCheckedIconResource
    2100:2107:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    2089:2089:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1997:1997:void setCheckedIconVisible(int) -> setCheckedIconVisible
    2001:2015:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1442:1444:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1432:1432:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1511:1514:void setChipCornerRadius(float) -> setChipCornerRadius
    1500:1500:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    2452:2455:void setChipEndPadding(float) -> setChipEndPadding
    2442:2442:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1726:1739:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1722:1722:void setChipIconResource(int) -> setChipIconResource
    1808:1815:void setChipIconSize(float) -> setChipIconSize
    1797:1797:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1767:1774:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1757:1757:void setChipIconTintResource(int) -> setChipIconTintResource
    1681:1681:void setChipIconVisible(int) -> setChipIconVisible
    1685:1699:void setChipIconVisible(boolean) -> setChipIconVisible
    1475:1478:void setChipMinHeight(float) -> setChipMinHeight
    1465:1465:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2200:2203:void setChipStartPadding(float) -> setChipStartPadding
    2190:2190:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1546:1551:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1536:1536:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1582:1589:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1572:1572:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1364:1366:void setChipSurfaceColor(android.content.res.ColorStateList) -> setChipSurfaceColor
    1876:1892:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1948:1952:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    2416:2420:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2406:2406:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    1872:1872:void setCloseIconResource(int) -> setCloseIconResource
    1938:1942:void setCloseIconSize(float) -> setCloseIconSize
    1934:1934:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2380:2384:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2370:2370:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1001:1004:boolean setCloseIconState(int[]) -> setCloseIconState
    1918:1925:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1914:1914:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1835:1849:void setCloseIconVisible(boolean) -> setCloseIconVisible
    1243:1245:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    468:468:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> setDelegate
    1667:1667:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2170:2170:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    2160:2160:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2273:2280:void setIconEndPadding(float) -> setIconEndPadding
    2263:2263:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2234:2241:void setIconStartPadding(float) -> setIconStartPadding
    2224:2224:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    2475:2475:void setMaxWidth(int) -> setMaxWidth
    1621:1624:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1611:1611:void setRippleColorResource(int) -> setRippleColorResource
    2489:2489:void setShouldDrawText(boolean) -> setShouldDrawText
    2139:2139:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    2129:2129:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    1641:1645:void setText(java.lang.CharSequence) -> setText
    1659:1659:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1655:1655:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2346:2349:void setTextEndPadding(float) -> setTextEndPadding
    2336:2336:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1385:1389:void setTextSize(float) -> setTextSize
    2312:2315:void setTextStartPadding(float) -> setTextStartPadding
    2302:2302:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    1257:1259:void setTintList(android.content.res.ColorStateList) -> setTintList
    1265:1268:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    454:457:void setUseCompatRipple(boolean) -> setUseCompatRipple
    1206:1219:boolean setVisible(boolean,boolean) -> setVisible
    2479:2479:boolean shouldDrawText() -> shouldDrawText
    523:523:boolean showsCheckedIcon() -> showsCheckedIcon
    518:518:boolean showsChipIcon() -> showsChipIcon
    528:528:boolean showsCloseIcon() -> showsCloseIcon
    1320:1320:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> unapplyChildDrawable
    1312:1314:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1360:1360:void updateCompatRippleColor() -> updateCompatRippleColor
    1899:1901:void updateFrameworkCloseIconRipple() -> updateFrameworkCloseIconRipple
com.google.android.material.chip.ChipDrawable$Delegate -> com.google.android.material.chip.ChipDrawable$Delegate:
# {"id":"sourceFile","fileName":"ChipDrawable.java"}
com.google.android.material.chip.ChipGroup -> com.google.android.material.chip.ChipGroup:
# {"id":"sourceFile","fileName":"ChipGroup.java"}
    113:113:void <clinit>() -> <clinit>
    128:128:void <init>(android.content.Context) -> <init>
    132:132:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    120:169:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    60:60:com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener access$100(com.google.android.material.chip.ChipGroup) -> access$100
    60:60:com.google.android.material.internal.CheckableGroup access$200(com.google.android.material.chip.ChipGroup) -> access$200
    208:208:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    203:203:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    191:191:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    197:197:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    290:290:int getCheckedChipId() -> getCheckedChipId
    306:306:java.util.List getCheckedChipIds() -> getCheckedChipIds
    408:408:int getChipSpacingHorizontal() -> getChipSpacingHorizontal
    428:428:int getChipSpacingVertical() -> getChipSpacingVertical
    373:380:int getIndexOfChip(android.view.View) -> getIndexOfChip
    359:360:int getVisibleChipCount() -> getVisibleChipCount
    391:391:boolean isChildVisible(int) -> isChildVisible
    449:449:boolean isSingleLine() -> isSingleLine
    466:466:boolean isSingleSelection() -> isSingleSelection
    219:223:void onFinishInflate() -> onFinishInflate
    174:183:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    396:397:void setChipSpacing(int) -> setChipSpacing
    413:416:void setChipSpacingHorizontal(int) -> setChipSpacingHorizontal
    422:422:void setChipSpacingHorizontalResource(int) -> setChipSpacingHorizontalResource
    402:402:void setChipSpacingResource(int) -> setChipSpacingResource
    433:436:void setChipSpacingVertical(int) -> setChipSpacingVertical
    442:442:void setChipSpacingVerticalResource(int) -> setChipSpacingVerticalResource
    230:230:void setDividerDrawableHorizontal(android.graphics.drawable.Drawable) -> setDividerDrawableHorizontal
    238:238:void setDividerDrawableVertical(android.graphics.drawable.Drawable) -> setDividerDrawableVertical
    260:260:void setFlexWrap(int) -> setFlexWrap
    331:334:void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    354:354:void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener) -> setOnCheckedStateChangeListener
    214:214:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    494:494:void setSelectionRequired(boolean) -> setSelectionRequired
    246:246:void setShowDividerHorizontal(int) -> setShowDividerHorizontal
    253:253:void setShowDividerVertical(int) -> setShowDividerVertical
    456:456:void setSingleLine(boolean) -> setSingleLine
    461:461:void setSingleLine(int) -> setSingleLine
    475:475:void setSingleSelection(boolean) -> setSingleSelection
    484:484:void setSingleSelection(int) -> setSingleSelection
com.google.android.material.chip.ChipGroup$1 -> com.google.android.material.chip.ChipGroup$1:
# {"id":"sourceFile","fileName":"ChipGroup.java"}
    157:157:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    160:163:void onCheckedStateChanged(java.util.Set) -> onCheckedStateChanged
com.google.android.material.chip.ChipGroup$2 -> com.google.android.material.chip.ChipGroup$2:
# {"id":"sourceFile","fileName":"ChipGroup.java"}
    335:335:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> <init>
    339:342:void onCheckedChanged(com.google.android.material.chip.ChipGroup,java.util.List) -> onCheckedChanged
com.google.android.material.chip.ChipGroup$LayoutParams -> com.google.android.material.chip.ChipGroup$LayoutParams:
# {"id":"sourceFile","fileName":"ChipGroup.java"}
    97:97:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:101:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    105:105:void <init>(int,int) -> <init>
com.google.android.material.chip.ChipGroup$OnCheckedChangeListener -> com.google.android.material.chip.ChipGroup$OnCheckedChangeListener:
# {"id":"sourceFile","fileName":"ChipGroup.java"}
com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener -> com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener:
# {"id":"sourceFile","fileName":"ChipGroup.java"}
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener -> com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
# {"id":"sourceFile","fileName":"ChipGroup.java"}
    513:513:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    513:513:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    513:513:android.view.ViewGroup$OnHierarchyChangeListener access$302(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> access$302
    518:529:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    535:540:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.CircularRevealCompat:
# {"id":"sourceFile","fileName":"CircularRevealCompat.java"}
    57:76:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    123:123:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> createCircularRevealListener
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.CircularRevealCompat$1:
# {"id":"sourceFile","fileName":"CircularRevealCompat.java"}
    123:123:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    131:131:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    126:126:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealFrameLayout -> com.google.android.material.circularreveal.CircularRevealFrameLayout:
# {"id":"sourceFile","fileName":"CircularRevealFrameLayout.java"}
    34:34:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:96:void actualDraw(android.graphics.Canvas) -> actualDraw
    110:110:boolean actualIsOpaque() -> actualIsOpaque
    44:44:void buildCircularRevealCache() -> buildCircularRevealCache
    49:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    87:90:void draw(android.graphics.Canvas) -> draw
    76:76:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    65:65:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    55:55:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    101:104:boolean isOpaque() -> isOpaque
    81:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    70:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    60:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealGridLayout -> com.google.android.material.circularreveal.CircularRevealGridLayout:
# {"id":"sourceFile","fileName":"CircularRevealGridLayout.java"}
    33:33:void <init>(android.content.Context) -> <init>
    37:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:94:void actualDraw(android.graphics.Canvas) -> actualDraw
    108:108:boolean actualIsOpaque() -> actualIsOpaque
    43:43:void buildCircularRevealCache() -> buildCircularRevealCache
    48:48:void destroyCircularRevealCache() -> destroyCircularRevealCache
    85:88:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    99:102:boolean isOpaque() -> isOpaque
    80:80:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:59:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.CircularRevealHelper:
# {"id":"sourceFile","fileName":"CircularRevealHelper.java"}
    128:128:void <clinit>() -> <clinit>
    136:144:void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate) -> <init>
    153:171:void buildCircularRevealCache() -> buildCircularRevealCache
    176:180:void destroyCircularRevealCache() -> destroyCircularRevealCache
    264:300:void draw(android.graphics.Canvas) -> draw
    304:311:void drawOverlayDrawable(android.graphics.Canvas) -> drawOverlayDrawable
    233:233:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    228:228:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    254:255:float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> getDistanceToFurthestCorner
    210:216:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    242:250:void invalidateRevealInfo() -> invalidateRevealInfo
    316:316:boolean isOpaque() -> isOpaque
    237:238:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    222:223:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    190:205:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
    320:322:boolean shouldDrawCircularReveal() -> shouldDrawCircularReveal
    333:333:boolean shouldDrawOverlayDrawable() -> shouldDrawOverlayDrawable
    329:329:boolean shouldDrawScrim() -> shouldDrawScrim
com.google.android.material.circularreveal.CircularRevealHelper$Delegate -> com.google.android.material.circularreveal.CircularRevealHelper$Delegate:
# {"id":"sourceFile","fileName":"CircularRevealHelper.java"}
com.google.android.material.circularreveal.CircularRevealLinearLayout -> com.google.android.material.circularreveal.CircularRevealLinearLayout:
# {"id":"sourceFile","fileName":"CircularRevealLinearLayout.java"}
    33:33:void <init>(android.content.Context) -> <init>
    37:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:94:void actualDraw(android.graphics.Canvas) -> actualDraw
    108:108:boolean actualIsOpaque() -> actualIsOpaque
    43:43:void buildCircularRevealCache() -> buildCircularRevealCache
    48:48:void destroyCircularRevealCache() -> destroyCircularRevealCache
    85:88:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    99:102:boolean isOpaque() -> isOpaque
    80:80:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:59:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealRelativeLayout -> com.google.android.material.circularreveal.CircularRevealRelativeLayout:
# {"id":"sourceFile","fileName":"CircularRevealRelativeLayout.java"}
    33:33:void <init>(android.content.Context) -> <init>
    37:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:94:void actualDraw(android.graphics.Canvas) -> actualDraw
    108:108:boolean actualIsOpaque() -> actualIsOpaque
    43:43:void buildCircularRevealCache() -> buildCircularRevealCache
    48:48:void destroyCircularRevealCache() -> destroyCircularRevealCache
    85:88:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    99:102:boolean isOpaque() -> isOpaque
    80:80:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:59:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealWidget -> com.google.android.material.circularreveal.CircularRevealWidget:
# {"id":"sourceFile","fileName":"CircularRevealWidget.java"}
com.google.android.material.circularreveal.CircularRevealWidget$1 -> com.google.android.material.circularreveal.CircularRevealWidget$1:
# {"id":"sourceFile","fileName":"CircularRevealWidget.java"}
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
# {"id":"sourceFile","fileName":"CircularRevealWidget.java"}
    209:209:void <clinit>() -> <clinit>
    207:210:void <init>() -> <init>
    207:207:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    216:220:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
# {"id":"sourceFile","fileName":"CircularRevealWidget.java"}
    181:181:void <clinit>() -> <clinit>
    185:185:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    191:191:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    196:196:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
# {"id":"sourceFile","fileName":"CircularRevealWidget.java"}
    230:230:void <clinit>() -> <clinit>
    234:234:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object get(java.lang.Object) -> get
    240:240:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    228:228:void set(java.lang.Object,java.lang.Object) -> set
    245:245:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
# {"id":"sourceFile","fileName":"CircularRevealWidget.java"}
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    146:149:void <init>(float,float,float) -> <init>
    153:153:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> <init>
    171:171:boolean isInvalid() -> isInvalid
    157:159:void set(float,float,float) -> set
    163:163:void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.cardview.CircularRevealCardView -> com.google.android.material.circularreveal.cardview.CircularRevealCardView:
# {"id":"sourceFile","fileName":"CircularRevealCardView.java"}
    37:37:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:98:void actualDraw(android.graphics.Canvas) -> actualDraw
    112:112:boolean actualIsOpaque() -> actualIsOpaque
    47:47:void buildCircularRevealCache() -> buildCircularRevealCache
    52:52:void destroyCircularRevealCache() -> destroyCircularRevealCache
    89:92:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    73:73:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    63:63:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    103:106:boolean isOpaque() -> isOpaque
    84:84:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:68:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    57:57:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout -> com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout:
# {"id":"sourceFile","fileName":"CircularRevealCoordinatorLayout.java"}
    37:37:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:98:void actualDraw(android.graphics.Canvas) -> actualDraw
    112:112:boolean actualIsOpaque() -> actualIsOpaque
    47:47:void buildCircularRevealCache() -> buildCircularRevealCache
    52:52:void destroyCircularRevealCache() -> destroyCircularRevealCache
    89:92:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    73:73:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    63:63:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    103:106:boolean isOpaque() -> isOpaque
    84:84:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:68:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    57:57:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.color.MaterialColors -> com.google.android.material.color.MaterialColors:
# {"id":"sourceFile","fileName":"MaterialColors.java"}
    233:234:int compositeARGBWithAlpha(int,int) -> compositeARGBWithAlpha
    74:76:int getColor(android.view.View,int) -> getColor
    87:89:int getColor(android.content.Context,int,java.lang.String) -> getColor
    100:100:int getColor(android.view.View,int,int) -> getColor
    110:112:int getColor(android.content.Context,int,int) -> getColor
    128:130:android.content.res.ColorStateList getColorStateList(android.content.Context,int,android.content.res.ColorStateList) -> getColorStateList
    142:148:android.content.res.ColorStateList getColorStateListOrNull(android.content.Context,int) -> getColorStateListOrNull
    239:239:boolean isColorLight(int) -> isColorLight
    194:196:int layer(android.view.View,int,int,float) -> layer
    208:210:int layer(int,int,float) -> layer
    219:219:int layer(int,int) -> layer
    154:159:int resolveColor(android.content.Context,android.util.TypedValue) -> resolveColor
    165:168:android.content.res.ColorStateList resolveColorStateList(android.content.Context,android.util.TypedValue) -> resolveColorStateList
com.google.android.material.datepicker.CalendarConstraints -> com.google.android.material.datepicker.CalendarConstraints:
# {"id":"sourceFile","fileName":"CalendarConstraints.java"}
    189:189:void <clinit>() -> <clinit>
    38:38:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,int,com.google.android.material.datepicker.CalendarConstraints$1) -> <init>
    67:87:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,int) -> <init>
    38:38:com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints) -> access$100
    38:38:com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints) -> access$200
    38:38:com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints) -> access$300
    38:38:int access$400(com.google.android.material.datepicker.CalendarConstraints) -> access$400
    38:38:com.google.android.material.datepicker.CalendarConstraints$DateValidator access$500(com.google.android.material.datepicker.CalendarConstraints) -> access$500
    227:232:com.google.android.material.datepicker.Month clamp(com.google.android.material.datepicker.Month) -> clamp
    0:0:int describeContents() -> describeContents
    169:177:boolean equals(java.lang.Object) -> equals
    98:98:com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator() -> getDateValidator
    110:110:com.google.android.material.datepicker.Month getEnd() -> getEnd
    126:126:int getFirstDayOfWeek() -> getFirstDayOfWeek
    134:134:int getMonthSpan() -> getMonthSpan
    116:116:com.google.android.material.datepicker.Month getOpenAt() -> getOpenAt
    104:104:com.google.android.material.datepicker.Month getStart() -> getStart
    142:142:int getYearSpan() -> getYearSpan
    182:183:int hashCode() -> hashCode
    91:91:boolean isWithinBounds(long) -> isWithinBounds
    216:220:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CalendarConstraints$1 -> com.google.android.material.datepicker.CalendarConstraints$1:
# {"id":"sourceFile","fileName":"CalendarConstraints.java"}
    190:190:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    194:199:com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel) -> createFromParcel
    190:190:java.lang.Object[] newArray(int) -> newArray
    205:205:com.google.android.material.datepicker.CalendarConstraints[] newArray(int) -> newArray
com.google.android.material.datepicker.CalendarConstraints$Builder -> com.google.android.material.datepicker.CalendarConstraints$Builder:
# {"id":"sourceFile","fileName":"CalendarConstraints.java"}
    246:252:void <clinit>() -> <clinit>
    256:269:void <init>(com.google.android.material.datepicker.CalendarConstraints) -> <init>
    385:391:com.google.android.material.datepicker.CalendarConstraints build() -> build
    352:352:com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long) -> setOpenAt
com.google.android.material.datepicker.CalendarConstraints$DateValidator -> com.google.android.material.datepicker.CalendarConstraints$DateValidator:
# {"id":"sourceFile","fileName":"CalendarConstraints.java"}
com.google.android.material.datepicker.CalendarItemStyle -> com.google.android.material.datepicker.CalendarItemStyle:
# {"id":"sourceFile","fileName":"CalendarItemStyle.java"}
    67:78:void <init>(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect) -> <init>
    88:131:com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int) -> create
    179:179:int getBottomInset() -> getBottomInset
    175:175:int getTopInset() -> getTopInset
    140:140:void styleItem(android.widget.TextView) -> styleItem
    148:162:void styleItem(android.widget.TextView,android.content.res.ColorStateList) -> styleItem
com.google.android.material.datepicker.CalendarStyle -> com.google.android.material.datepicker.CalendarStyle:
# {"id":"sourceFile","fileName":"CalendarStyle.java"}
    74:115:void <init>(android.content.Context) -> <init>
com.google.android.material.datepicker.CompositeDateValidator -> com.google.android.material.datepicker.CompositeDateValidator:
# {"id":"sourceFile","fileName":"CompositeDateValidator.java"}
    42:108:void <clinit>() -> <clinit>
    27:27:void <init>(java.util.List,com.google.android.material.datepicker.CompositeDateValidator$Operator,com.google.android.material.datepicker.CompositeDateValidator$1) -> <init>
    88:90:void <init>(java.util.List,com.google.android.material.datepicker.CompositeDateValidator$Operator) -> <init>
    27:27:com.google.android.material.datepicker.CompositeDateValidator$Operator access$000() -> access$000
    27:27:com.google.android.material.datepicker.CompositeDateValidator$Operator access$100() -> access$100
    0:0:int describeContents() -> describeContents
    166:172:boolean equals(java.lang.Object) -> equals
    177:177:int hashCode() -> hashCode
    146:146:boolean isValid(long) -> isValid
    156:157:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CompositeDateValidator$1 -> com.google.android.material.datepicker.CompositeDateValidator$1:
# {"id":"sourceFile","fileName":"CompositeDateValidator.java"}
    0:0:int getId() -> getId
    47:51:boolean isValid(java.util.List,long) -> isValid
com.google.android.material.datepicker.CompositeDateValidator$2 -> com.google.android.material.datepicker.CompositeDateValidator$2:
# {"id":"sourceFile","fileName":"CompositeDateValidator.java"}
    0:0:int getId() -> getId
    70:74:boolean isValid(java.util.List,long) -> isValid
com.google.android.material.datepicker.CompositeDateValidator$3 -> com.google.android.material.datepicker.CompositeDateValidator$3:
# {"id":"sourceFile","fileName":"CompositeDateValidator.java"}
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    114:126:com.google.android.material.datepicker.CompositeDateValidator createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    132:132:com.google.android.material.datepicker.CompositeDateValidator[] newArray(int) -> newArray
com.google.android.material.datepicker.CompositeDateValidator$Operator -> com.google.android.material.datepicker.CompositeDateValidator$Operator:
# {"id":"sourceFile","fileName":"CompositeDateValidator.java"}
com.google.android.material.datepicker.DateFormatTextWatcher -> com.google.android.material.datepicker.DateFormatTextWatcher:
# {"id":"sourceFile","fileName":"DateFormatTextWatcher.java"}
    0:0:void $r8$lambda$522ap9tLQTJ0Q4tV2zWF8Zif_Xw(com.google.android.material.datepicker.DateFormatTextWatcher,java.lang.String) -> $r8$lambda$522ap9tLQTJ0Q4tV2zWF8Zif_Xw
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$jGG6qqlbk2aGp7DPyeS8kvE-KeQ(com.google.android.material.datepicker.DateFormatTextWatcher,long) -> $r8$lambda$jGG6qqlbk2aGp7DPyeS8kvE-KeQ
      # {"id":"com.android.tools.r8.synthesized"}
    48:54:void <init>(java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints) -> <init>
    106:106:java.lang.Runnable createRangeErrorCallback(long) -> createRangeErrorCallback
    107:109:void lambda$createRangeErrorCallback$1(long) -> lambda$createRangeErrorCallback$1
    56:70:void lambda$new$0(java.lang.String) -> lambda$new$0
    80:101:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    119:119:void runValidation(android.view.View,java.lang.Runnable) -> runValidation
    115:115:java.lang.String sanitizeDateString(java.lang.String) -> sanitizeDateString
com.google.android.material.datepicker.DateFormatTextWatcher$$ExternalSyntheticLambda0 -> com.google.android.material.datepicker.DateFormatTextWatcher$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.datepicker.DateFormatTextWatcher com.google.android.material.datepicker.DateFormatTextWatcher$$InternalSyntheticLambda$2$09d591b553e0b91fd38a140b583055e4c3bd38134df8b0dff6a8c7adc6e4aa2e$0.f$0 -> f$0
    java.lang.String com.google.android.material.datepicker.DateFormatTextWatcher$$InternalSyntheticLambda$2$09d591b553e0b91fd38a140b583055e4c3bd38134df8b0dff6a8c7adc6e4aa2e$0.f$1 -> f$1
    0:0:void com.google.android.material.datepicker.DateFormatTextWatcher$$InternalSyntheticLambda$2$09d591b553e0b91fd38a140b583055e4c3bd38134df8b0dff6a8c7adc6e4aa2e$0.<init>(com.google.android.material.datepicker.DateFormatTextWatcher,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.datepicker.DateFormatTextWatcher$$InternalSyntheticLambda$2$09d591b553e0b91fd38a140b583055e4c3bd38134df8b0dff6a8c7adc6e4aa2e$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.datepicker.DateFormatTextWatcher$$ExternalSyntheticLambda1 -> com.google.android.material.datepicker.DateFormatTextWatcher$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.datepicker.DateFormatTextWatcher com.google.android.material.datepicker.DateFormatTextWatcher$$InternalSyntheticLambda$2$443890f43f80bf6d217c14f9b3fc59313fe5757a4ab9a0d168a53a4a1c20eb52$0.f$0 -> f$0
    long com.google.android.material.datepicker.DateFormatTextWatcher$$InternalSyntheticLambda$2$443890f43f80bf6d217c14f9b3fc59313fe5757a4ab9a0d168a53a4a1c20eb52$0.f$1 -> f$1
    0:0:void com.google.android.material.datepicker.DateFormatTextWatcher$$InternalSyntheticLambda$2$443890f43f80bf6d217c14f9b3fc59313fe5757a4ab9a0d168a53a4a1c20eb52$0.<init>(com.google.android.material.datepicker.DateFormatTextWatcher,long) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.datepicker.DateFormatTextWatcher$$InternalSyntheticLambda$2$443890f43f80bf6d217c14f9b3fc59313fe5757a4ab9a0d168a53a4a1c20eb52$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.datepicker.DateSelector -> com.google.android.material.datepicker.DateSelector:
# {"id":"sourceFile","fileName":"DateSelector.java"}
com.google.android.material.datepicker.DateSelector$$ExternalSyntheticLambda0 -> com.google.android.material.datepicker.DateSelector$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.EditText[] com.google.android.material.datepicker.DateSelector$$InternalSyntheticLambda$2$40236076200f37017f2df347ee7397941387d178aaa84b9864cac0a0f6830258$0.f$0 -> f$0
    0:0:void com.google.android.material.datepicker.DateSelector$$InternalSyntheticLambda$2$40236076200f37017f2df347ee7397941387d178aaa84b9864cac0a0f6830258$0.<init>(android.widget.EditText[]) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.datepicker.DateSelector$$InternalSyntheticLambda$2$40236076200f37017f2df347ee7397941387d178aaa84b9864cac0a0f6830258$0.onFocusChange(android.view.View,boolean) -> onFocusChange
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.datepicker.DateSelector$-CC -> com.google.android.material.datepicker.DateSelector$-CC:
# {"id":"sourceFile","fileName":"DateSelector.java"}
# {"id":"com.android.tools.r8.synthesized"}
    137:142:void com.google.android.material.datepicker.DateSelector.lambda$showKeyboardWithAutoHideBehavior$0(android.widget.EditText[],android.view.View,boolean) -> lambda$showKeyboardWithAutoHideBehavior$0
    137:142:void lambda$showKeyboardWithAutoHideBehavior$0(android.widget.EditText[],android.view.View,boolean):0 -> lambda$showKeyboardWithAutoHideBehavior$0
      # {"id":"com.android.tools.r8.synthesized"}
    131:149:void com.google.android.material.datepicker.DateSelector.showKeyboardWithAutoHideBehavior(android.widget.EditText[]) -> showKeyboardWithAutoHideBehavior
    131:149:void showKeyboardWithAutoHideBehavior(android.widget.EditText[]):0 -> showKeyboardWithAutoHideBehavior
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.datepicker.DateStrings -> com.google.android.material.datepicker.DateStrings:
# {"id":"sourceFile","fileName":"DateStrings.java"}
    152:152:androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long) -> getDateRangeString
    174:202:androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long,java.text.SimpleDateFormat) -> getDateRangeString
    120:120:java.lang.String getDateString(long) -> getDateString
    136:141:java.lang.String getDateString(long,java.text.SimpleDateFormat) -> getDateString
    221:232:java.lang.String getDayContentDescription(android.content.Context,long,boolean,boolean,boolean) -> getDayContentDescription
    64:64:java.lang.String getMonthDay(long) -> getMonthDay
    78:81:java.lang.String getMonthDay(long,java.util.Locale) -> getMonthDay
    85:85:java.lang.String getMonthDayOfWeekDay(long) -> getMonthDayOfWeekDay
    89:92:java.lang.String getMonthDayOfWeekDay(long,java.util.Locale) -> getMonthDayOfWeekDay
    113:116:java.lang.String getOptionalYearMonthDayOfWeekDay(long) -> getOptionalYearMonthDayOfWeekDay
    245:250:java.lang.String getYearContentDescription(android.content.Context,int) -> getYearContentDescription
    39:39:java.lang.String getYearMonth(long) -> getYearMonth
    43:43:java.lang.String getYearMonthDay(long) -> getYearMonthDay
    57:60:java.lang.String getYearMonthDay(long,java.util.Locale) -> getYearMonthDay
    96:96:java.lang.String getYearMonthDayOfWeekDay(long) -> getYearMonthDayOfWeekDay
    100:103:java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale) -> getYearMonthDayOfWeekDay
    145:148:boolean isDateWithinCurrentYear(long) -> isDateWithinCurrentYear
com.google.android.material.datepicker.DateStrings$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.datepicker.DateStrings$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String com.google.android.material.datepicker.DateStrings$$InternalSyntheticApiModelOutline$1$2d12220e67e1d339a3168b3f41a8c0e062bfeb68f8e94d6873f76dc59592d403$0.m(android.icu.text.DateFormat,java.util.Date) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.datepicker.DateValidatorPointBackward -> com.google.android.material.datepicker.DateValidatorPointBackward:
# {"id":"sourceFile","fileName":"DateValidatorPointBackward.java"}
    58:58:void <clinit>() -> <clinit>
    31:31:void <init>(long,com.google.android.material.datepicker.DateValidatorPointBackward$1) -> <init>
    35:36:void <init>(long) -> <init>
    0:0:int describeContents() -> describeContents
    93:98:boolean equals(java.lang.Object) -> equals
    103:104:int hashCode() -> hashCode
    75:75:boolean isValid(long) -> isValid
    85:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointBackward$1 -> com.google.android.material.datepicker.DateValidatorPointBackward$1:
# {"id":"sourceFile","fileName":"DateValidatorPointBackward.java"}
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:com.google.android.material.datepicker.DateValidatorPointBackward createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    69:69:com.google.android.material.datepicker.DateValidatorPointBackward[] newArray(int) -> newArray
com.google.android.material.datepicker.DateValidatorPointForward -> com.google.android.material.datepicker.DateValidatorPointForward:
# {"id":"sourceFile","fileName":"DateValidatorPointForward.java"}
    57:57:void <clinit>() -> <clinit>
    30:30:void <init>(long,com.google.android.material.datepicker.DateValidatorPointForward$1) -> <init>
    34:35:void <init>(long) -> <init>
    0:0:int describeContents() -> describeContents
    92:96:boolean equals(java.lang.Object) -> equals
    44:44:com.google.android.material.datepicker.DateValidatorPointForward from(long) -> from
    101:102:int hashCode() -> hashCode
    74:74:boolean isValid(long) -> isValid
    84:84:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointForward$1 -> com.google.android.material.datepicker.DateValidatorPointForward$1:
# {"id":"sourceFile","fileName":"DateValidatorPointForward.java"}
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    68:68:com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int) -> newArray
com.google.android.material.datepicker.DayViewDecorator -> com.google.android.material.datepicker.DayViewDecorator:
# {"id":"sourceFile","fileName":"DayViewDecorator.java"}
    0:0:android.content.res.ColorStateList getBackgroundColor(android.content.Context,int,int,int,boolean,boolean) -> getBackgroundColor
    0:0:android.graphics.drawable.Drawable getCompoundDrawableBottom(android.content.Context,int,int,int,boolean,boolean) -> getCompoundDrawableBottom
    0:0:android.graphics.drawable.Drawable getCompoundDrawableLeft(android.content.Context,int,int,int,boolean,boolean) -> getCompoundDrawableLeft
    0:0:android.graphics.drawable.Drawable getCompoundDrawableRight(android.content.Context,int,int,int,boolean,boolean) -> getCompoundDrawableRight
    0:0:android.graphics.drawable.Drawable getCompoundDrawableTop(android.content.Context,int,int,int,boolean,boolean) -> getCompoundDrawableTop
    0:0:java.lang.CharSequence getContentDescription(android.content.Context,int,int,int,boolean,boolean,java.lang.CharSequence) -> getContentDescription
    0:0:void initialize(android.content.Context) -> initialize
com.google.android.material.datepicker.DaysOfWeekAdapter -> com.google.android.material.datepicker.DaysOfWeekAdapter:
# {"id":"sourceFile","fileName":"DaysOfWeekAdapter.java"}
    47:47:void <clinit>() -> <clinit>
    40:54:void <init>() -> <init>
    40:58:void <init>(int) -> <init>
    78:78:int getCount() -> getCount
    38:38:java.lang.Object getItem(int) -> getItem
    64:67:java.lang.Integer getItem(int) -> getItem
    0:0:long getItemId(int) -> getItemId
    85:98:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    104:105:int positionToDayOfWeek(int) -> positionToDayOfWeek
com.google.android.material.datepicker.MaterialCalendar -> com.google.android.material.datepicker.MaterialCalendar:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    76:82:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    61:61:androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar) -> access$000
    61:61:com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar) -> access$100
    61:61:com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar) -> access$200
    61:61:androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar) -> access$300
    61:61:com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar) -> access$400
    61:61:android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar) -> access$500
    61:61:com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month) -> access$602
    405:476:void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter) -> addActionsToMonthNavigation
    522:522:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    267:267:androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration() -> createItemDecoration
    325:325:com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints() -> getCalendarConstraints
    359:359:com.google.android.material.datepicker.CalendarStyle getCalendarStyle() -> getCalendarStyle
    319:319:com.google.android.material.datepicker.Month getCurrentMonth() -> getCurrentMonth
    355:355:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    370:370:int getDayHeight(android.content.Context) -> getDayHeight
    499:511:int getDialogPickerHeight(android.content.Context) -> getDialogPickerHeight
    517:517:androidx.recyclerview.widget.LinearLayoutManager getLayoutManager() -> getLayoutManager
    112:119:com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.DayViewDecorator) -> newInstance
    135:141:void onCreate(android.os.Bundle) -> onCreate
    150:248:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    125:130:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    489:489:void postSmoothRecyclerViewScroll(int) -> postSmoothRecyclerViewScroll
    335:348:void setCurrentMonth(com.google.android.material.datepicker.Month) -> setCurrentMonth
    374:391:void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector) -> setSelector
    253:253:void setUpForAccessibility() -> setUpForAccessibility
    396:399:void toggleVisibleSelector() -> toggleVisibleSelector
com.google.android.material.datepicker.MaterialCalendar$1 -> com.google.android.material.datepicker.MaterialCalendar$1:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    171:171:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    175:177:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$10 -> com.google.android.material.datepicker.MaterialCalendar$10:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    477:477:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    480:482:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$11 -> com.google.android.material.datepicker.MaterialCalendar$11:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    490:490:void <init>(com.google.android.material.datepicker.MaterialCalendar,int) -> <init>
    493:493:void run() -> run
com.google.android.material.datepicker.MaterialCalendar$2 -> com.google.android.material.datepicker.MaterialCalendar$2:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    189:189:void <init>(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int) -> <init>
    192:197:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
com.google.android.material.datepicker.MaterialCalendar$3 -> com.google.android.material.datepicker.MaterialCalendar$3:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    210:210:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    214:222:void onDayClick(long) -> onDayClick
com.google.android.material.datepicker.MaterialCalendar$4 -> com.google.android.material.datepicker.MaterialCalendar$4:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    255:255:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    259:260:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$5 -> com.google.android.material.datepicker.MaterialCalendar$5:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    267:270:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    275:310:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
com.google.android.material.datepicker.MaterialCalendar$6 -> com.google.android.material.datepicker.MaterialCalendar$6:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    409:409:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    414:418:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$7 -> com.google.android.material.datepicker.MaterialCalendar$7:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    432:432:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton) -> <init>
    448:450:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    437:442:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.google.android.material.datepicker.MaterialCalendar$8 -> com.google.android.material.datepicker.MaterialCalendar$8:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    459:459:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    462:462:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$9 -> com.google.android.material.datepicker.MaterialCalendar$9:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    467:467:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    470:472:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector -> com.google.android.material.datepicker.MaterialCalendar$CalendarSelector:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
    64:66:void <clinit>() -> <clinit>
    64:64:void <init>(java.lang.String,int) -> <init>
    64:64:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String) -> valueOf
    64:64:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values() -> values
com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener -> com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener:
# {"id":"sourceFile","fileName":"MaterialCalendar.java"}
com.google.android.material.datepicker.MaterialCalendarGridView -> com.google.android.material.datepicker.MaterialCalendarGridView:
# {"id":"sourceFile","fileName":"MaterialCalendarGridView.java"}
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    230:234:void gainFocus(int,android.graphics.Rect) -> gainFocus
    41:41:android.widget.Adapter getAdapter() -> getAdapter
    41:41:android.widget.ListAdapter getAdapter() -> getAdapter
    109:109:com.google.android.material.datepicker.MonthAdapter getAdapter() -> getAdapter
    239:239:android.view.View getChildAtPosition(int) -> getChildAtPosition
    254:254:int horizontalMidPoint(android.view.View) -> horizontalMidPoint
    76:77:void onAttachedToWindow() -> onAttachedToWindow
    126:200:void onDraw(android.graphics.Canvas) -> onDraw
    222:224:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    91:100:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    207:215:void onMeasure(int,int) -> onMeasure
    41:41:void setAdapter(android.widget.Adapter) -> setAdapter
    114:121:void setAdapter(android.widget.ListAdapter) -> setAdapter
    82:85:void setSelection(int) -> setSelection
    250:250:boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long) -> skipMonth
com.google.android.material.datepicker.MaterialCalendarGridView$1 -> com.google.android.material.datepicker.MaterialCalendarGridView$1:
# {"id":"sourceFile","fileName":"MaterialCalendarGridView.java"}
    63:63:void <init>(com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    67:69:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker -> com.google.android.material.datepicker.MaterialDatePicker:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    87:89:void <clinit>() -> <clinit>
    73:130:void <init>() -> <init>
    73:73:java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker) -> access$000
    73:73:com.google.android.material.datepicker.DateSelector access$100(com.google.android.material.datepicker.MaterialDatePicker) -> access$100
    73:73:java.util.LinkedHashSet access$200(com.google.android.material.datepicker.MaterialDatePicker) -> access$200
    73:73:android.widget.Button access$300(com.google.android.material.datepicker.MaterialDatePicker) -> access$300
    73:73:com.google.android.material.internal.CheckableImageButton access$400(com.google.android.material.datepicker.MaterialDatePicker) -> access$400
    73:73:void access$500(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton) -> access$500
    73:73:void access$600(com.google.android.material.datepicker.MaterialDatePicker) -> access$600
    511:517:android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context) -> createHeaderToggleDrawable
    391:418:void enableEdgeToEdgeIfNeeded(android.view.Window) -> enableEdgeToEdgeIfNeeded
    502:505:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    524:525:java.lang.CharSequence getFirstLineBySeparator(java.lang.CharSequence) -> getFirstLineBySeparator
    434:434:java.lang.String getHeaderContentDescription() -> getHeaderContentDescription
    121:121:java.lang.String getHeaderText() -> getHeaderText
    554:559:int getPaddedPickerWidth(android.content.Context) -> getPaddedPickerWidth
    387:387:java.lang.Object getSelection() -> getSelection
    220:223:int getThemeResId(android.content.Context) -> getThemeResId
    471:479:void initHeaderToggle(android.content.Context) -> initHeaderToggle
    535:535:boolean isFullscreen(android.content.Context) -> isFullscreen
    531:531:boolean isLandscape() -> isLandscape
    539:539:boolean isNestedScrollable(android.content.Context) -> isNestedScrollable
    363:366:void onCancel(android.content.DialogInterface) -> onCancel
    200:216:void onCreate(android.os.Bundle) -> onCreate
    229:243:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    253:320:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    371:378:void onDismiss(android.content.DialogInterface) -> onDismiss
    179:195:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    335:352:void onStart() -> onStart
    357:358:void onStop() -> onStop
    543:549:boolean readMaterialCalendarStyleBoolean(android.content.Context,int) -> readMaterialCalendarStyleBoolean
    438:455:void startPickerFragment() -> startPickerFragment
    429:430:void updateHeader(java.lang.String) -> updateHeader
    423:424:void updateTitle(boolean) -> updateTitle
    495:498:void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton) -> updateToggleContentDescription
com.google.android.material.datepicker.MaterialDatePicker$1 -> com.google.android.material.datepicker.MaterialDatePicker$1:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    291:291:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    295:298:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$2 -> com.google.android.material.datepicker.MaterialDatePicker$2:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    303:303:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    307:309:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker$3 -> com.google.android.material.datepicker.MaterialDatePicker$3:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    321:321:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    324:327:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$4 -> com.google.android.material.datepicker.MaterialDatePicker$4:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    402:402:void <init>(com.google.android.material.datepicker.MaterialDatePicker,int,android.view.View,int) -> <init>
    405:414:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.datepicker.MaterialDatePicker$5 -> com.google.android.material.datepicker.MaterialDatePicker$5:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    456:456:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    465:465:void onIncompleteSelectionChanged() -> onIncompleteSelectionChanged
    459:460:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.MaterialDatePicker$6 -> com.google.android.material.datepicker.MaterialDatePicker$6:
# {"id":"sourceFile","fileName":"MaterialDatePicker.java"}
    480:480:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    484:488:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialTextInputPicker -> com.google.android.material.datepicker.MaterialTextInputPicker:
# {"id":"sourceFile","fileName":"MaterialTextInputPicker.java"}
    35:35:void <init>() -> <init>
    50:55:com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    69:73:void onCreate(android.os.Bundle) -> onCreate
    82:84:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    61:64:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.material.datepicker.MaterialTextInputPicker$1 -> com.google.android.material.datepicker.MaterialTextInputPicker$1:
# {"id":"sourceFile","fileName":"MaterialTextInputPicker.java"}
    89:89:void <init>(com.google.android.material.datepicker.MaterialTextInputPicker) -> <init>
    99:100:void onIncompleteSelectionChanged() -> onIncompleteSelectionChanged
    92:93:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.Month -> com.google.android.material.datepicker.Month:
# {"id":"sourceFile","fileName":"Month.java"}
    203:203:void <clinit>() -> <clinit>
    59:66:void <init>(java.util.Calendar) -> <init>
    30:30:int compareTo(java.lang.Object) -> compareTo
    135:135:int compareTo(com.google.android.material.datepicker.Month) -> compareTo
    75:77:com.google.android.material.datepicker.Month create(long) -> create
    90:93:com.google.android.material.datepicker.Month create(int,int) -> create
    102:102:com.google.android.material.datepicker.Month current() -> current
    106:110:int daysFromStartOfWeekToFirstOfMonth(int) -> daysFromStartOfWeekToFirstOfMonth
    0:0:int describeContents() -> describeContents
    120:124:boolean equals(java.lang.Object) -> equals
    169:171:long getDay(int) -> getDay
    175:177:int getDayOfMonth(long) -> getDayOfMonth
    194:197:java.lang.String getLongName() -> getLongName
    156:156:long getStableId() -> getStableId
    129:130:int hashCode() -> hashCode
    186:188:com.google.android.material.datepicker.Month monthsLater(int) -> monthsLater
    148:151:int monthsUntil(com.google.android.material.datepicker.Month) -> monthsUntil
    227:228:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.Month$1 -> com.google.android.material.datepicker.Month$1:
# {"id":"sourceFile","fileName":"Month.java"}
    204:204:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    208:210:com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel) -> createFromParcel
    204:204:java.lang.Object[] newArray(int) -> newArray
    216:216:com.google.android.material.datepicker.Month[] newArray(int) -> newArray
com.google.android.material.datepicker.MonthAdapter -> com.google.android.material.datepicker.MonthAdapter:
# {"id":"sourceFile","fileName":"MonthAdapter.java"}
    47:52:void <clinit>() -> <clinit>
    74:79:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.DayViewDecorator) -> <init>
    321:321:int dayToPosition(int) -> dayToPosition
    293:293:int firstPositionInMonth() -> firstPositionInMonth
    119:119:int getCount() -> getCount
    242:243:java.lang.String getDayContentDescription(android.content.Context,long) -> getDayContentDescription
    42:42:java.lang.Object getItem(int) -> getItem
    99:102:java.lang.Long getItem(int) -> getItem
    107:107:long getItemId(int) -> getItemId
    42:42:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    125:150:android.widget.TextView getView(int,android.view.View,android.view.ViewGroup) -> getView
    0:0:boolean hasStableIds() -> hasStableIds
    280:281:void initializeStyles(android.content.Context) -> initializeStyles
    262:263:boolean isEndOfRange(long) -> isEndOfRange
    334:334:boolean isFirstInRow(int) -> isFirstInRow
    342:342:boolean isLastInRow(int) -> isLastInRow
    271:272:boolean isSelected(long) -> isSelected
    252:253:boolean isStartOfRange(long) -> isStartOfRange
    247:247:boolean isToday(long) -> isToday
    304:304:int lastPositionInMonth() -> lastPositionInMonth
    315:315:int positionToDay(int) -> positionToDay
    188:237:void updateSelectedState(android.widget.TextView,long,int) -> updateSelectedState
    171:177:void updateSelectedStateForDate(com.google.android.material.datepicker.MaterialCalendarGridView,long) -> updateSelectedStateForDate
    156:166:void updateSelectedStates(com.google.android.material.datepicker.MaterialCalendarGridView) -> updateSelectedStates
    326:326:boolean withinMonth(int) -> withinMonth
com.google.android.material.datepicker.MonthsPagerAdapter -> com.google.android.material.datepicker.MonthsPagerAdapter:
# {"id":"sourceFile","fileName":"MonthsPagerAdapter.java"}
    52:73:void <init>(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.DayViewDecorator,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener) -> <init>
    39:39:com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter) -> access$000
    142:142:int getItemCount() -> getItemCount
    137:137:long getItemId(int) -> getItemId
    152:152:com.google.android.material.datepicker.Month getPageMonth(int) -> getPageMonth
    147:147:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    156:156:int getPosition(com.google.android.material.datepicker.Month) -> getPosition
    39:39:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    110:124:void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int) -> onBindViewHolder
    39:39:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    97:104:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.MonthsPagerAdapter$1 -> com.google.android.material.datepicker.MonthsPagerAdapter$1:
# {"id":"sourceFile","fileName":"MonthsPagerAdapter.java"}
    125:125:void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    128:129:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder -> com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder:
# {"id":"sourceFile","fileName":"MonthsPagerAdapter.java"}
    82:87:void <init>(android.widget.LinearLayout,boolean) -> <init>
com.google.android.material.datepicker.OnSelectionChangedListener -> com.google.android.material.datepicker.OnSelectionChangedListener:
# {"id":"sourceFile","fileName":"OnSelectionChangedListener.java"}
com.google.android.material.datepicker.PickerFragment -> com.google.android.material.datepicker.PickerFragment:
# {"id":"sourceFile","fileName":"PickerFragment.java"}
    21:23:void <init>() -> <init>
    30:30:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    40:40:void clearOnSelectionChangedListeners() -> clearOnSelectionChangedListeners
com.google.android.material.datepicker.RangeDateSelector -> com.google.android.material.datepicker.RangeDateSelector:
# {"id":"sourceFile","fileName":"RangeDateSelector.java"}
    330:330:void <clinit>() -> <clinit>
    53:62:void <init>() -> <init>
    53:53:java.lang.Long access$002(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$002
    53:53:void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> access$100
    53:53:java.lang.Long access$202(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$202
    53:53:java.lang.Long access$302(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$302
    53:53:java.lang.Long access$402(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$402
    314:318:void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout) -> clearInvalidRange
    0:0:int describeContents() -> describeContents
    126:136:int getDefaultThemeResId(android.content.Context) -> getDefaultThemeResId
    185:185:java.lang.String getError() -> getError
    114:119:java.util.Collection getSelectedDays() -> getSelectedDays
    105:107:java.util.Collection getSelectedRanges() -> getSelectedRanges
    52:52:java.lang.Object getSelection() -> getSelection
    99:99:androidx.core.util.Pair getSelection() -> getSelection
    167:178:java.lang.String getSelectionContentDescription(android.content.Context) -> getSelectionContentDescription
    142:158:java.lang.String getSelectionDisplayString(android.content.Context) -> getSelectionDisplayString
    80:82:boolean isSelectionComplete() -> isSelectionComplete
    0:0:boolean isValidRange(long,long) -> isValidRange
    205:276:android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> onCreateTextInputView
    68:74:void select(long) -> select
    323:324:void setInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout) -> setInvalidRange
    304:309:void updateError(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout) -> updateError
    289:300:void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> updateIfValidTextProposal
    356:357:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.RangeDateSelector$1 -> com.google.android.material.datepicker.RangeDateSelector$1:
# {"id":"sourceFile","fileName":"RangeDateSelector.java"}
    245:245:void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    255:256:void onInvalidDate() -> onInvalidDate
    249:250:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.RangeDateSelector$2 -> com.google.android.material.datepicker.RangeDateSelector$2:
# {"id":"sourceFile","fileName":"RangeDateSelector.java"}
    261:261:void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    271:272:void onInvalidDate() -> onInvalidDate
    265:266:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.RangeDateSelector$3 -> com.google.android.material.datepicker.RangeDateSelector$3:
# {"id":"sourceFile","fileName":"RangeDateSelector.java"}
    331:331:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    335:338:com.google.android.material.datepicker.RangeDateSelector createFromParcel(android.os.Parcel) -> createFromParcel
    331:331:java.lang.Object[] newArray(int) -> newArray
    345:345:com.google.android.material.datepicker.RangeDateSelector[] newArray(int) -> newArray
com.google.android.material.datepicker.SingleDateSelector -> com.google.android.material.datepicker.SingleDateSelector:
# {"id":"sourceFile","fileName":"SingleDateSelector.java"}
    200:200:void <clinit>() -> <clinit>
    50:50:void access$000(com.google.android.material.datepicker.SingleDateSelector) -> access$000
    50:50:java.lang.CharSequence access$102(com.google.android.material.datepicker.SingleDateSelector,java.lang.CharSequence) -> access$102
    50:50:java.lang.Long access$202(com.google.android.material.datepicker.SingleDateSelector,java.lang.Long) -> access$202
    62:62:void clearSelection() -> clearSelection
    0:0:int describeContents() -> describeContents
    160:161:int getDefaultThemeResId(android.content.Context) -> getDefaultThemeResId
    189:189:java.lang.String getError() -> getError
    84:86:java.util.Collection getSelectedDays() -> getSelectedDays
    78:78:java.util.Collection getSelectedRanges() -> getSelectedRanges
    49:49:java.lang.Object getSelection() -> getSelection
    94:94:java.lang.Long getSelection() -> getSelection
    178:183:java.lang.String getSelectionContentDescription(android.content.Context) -> getSelectionContentDescription
    167:172:java.lang.String getSelectionDisplayString(android.content.Context) -> getSelectionDisplayString
    72:72:boolean isSelectionComplete() -> isSelectionComplete
    109:153:android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> onCreateTextInputView
    58:58:void select(long) -> select
    224:224:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.SingleDateSelector$1 -> com.google.android.material.datepicker.SingleDateSelector$1:
# {"id":"sourceFile","fileName":"SingleDateSelector.java"}
    133:133:void <init>(com.google.android.material.datepicker.SingleDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener,com.google.android.material.textfield.TextInputLayout) -> <init>
    148:149:void onInvalidDate() -> onInvalidDate
    138:143:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.SingleDateSelector$2 -> com.google.android.material.datepicker.SingleDateSelector$2:
# {"id":"sourceFile","fileName":"SingleDateSelector.java"}
    201:201:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    205:206:com.google.android.material.datepicker.SingleDateSelector createFromParcel(android.os.Parcel) -> createFromParcel
    201:201:java.lang.Object[] newArray(int) -> newArray
    213:213:com.google.android.material.datepicker.SingleDateSelector[] newArray(int) -> newArray
com.google.android.material.datepicker.SmoothCalendarLayoutManager -> com.google.android.material.datepicker.SmoothCalendarLayoutManager:
# {"id":"sourceFile","fileName":"SmoothCalendarLayoutManager.java"}
    34:34:void <init>(android.content.Context,int,boolean) -> <init>
    40:49:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1 -> com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
# {"id":"sourceFile","fileName":"SmoothCalendarLayoutManager.java"}
    41:41:void <init>(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context) -> <init>
    45:45:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
com.google.android.material.datepicker.TimeSource -> com.google.android.material.datepicker.TimeSource:
# {"id":"sourceFile","fileName":"TimeSource.java"}
    25:25:void <clinit>() -> <clinit>
    31:33:void <init>(java.lang.Long,java.util.TimeZone) -> <init>
    80:80:java.util.Calendar now() -> now
    90:92:java.util.Calendar now(java.util.TimeZone) -> now
    43:43:com.google.android.material.datepicker.TimeSource system() -> system
com.google.android.material.datepicker.UtcDates -> com.google.android.material.datepicker.UtcDates:
# {"id":"sourceFile","fileName":"UtcDates.java"}
    40:40:void <clinit>() -> <clinit>
    130:133:long canonicalYearMonthDay(long) -> canonicalYearMonthDay
    267:273:int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int) -> findCharactersInDateFormatPattern
    193:193:android.icu.text.DateFormat getAbbrMonthDayFormat(java.util.Locale) -> getAbbrMonthDayFormat
    198:198:android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale) -> getAbbrMonthWeekdayDayFormat
    139:140:android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale) -> getAndroidFormat
    113:118:java.util.Calendar getDayCopy(java.util.Calendar) -> getDayCopy
    152:157:java.text.SimpleDateFormat getDefaultTextInputFormat() -> getDefaultTextInputFormat
    162:173:java.lang.String getDefaultTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat) -> getDefaultTextInputHint
    145:146:java.text.DateFormat getFormat(int,java.util.Locale) -> getFormat
    229:229:java.text.DateFormat getFullFormat(java.util.Locale) -> getFullFormat
    211:211:java.text.DateFormat getMediumFormat(java.util.Locale) -> getMediumFormat
    219:220:java.text.DateFormat getMediumNoYear(java.util.Locale) -> getMediumNoYear
    47:48:com.google.android.material.datepicker.TimeSource getTimeSource() -> getTimeSource
    54:54:java.util.TimeZone getTimeZone() -> getTimeZone
    66:71:java.util.Calendar getTodayCalendar() -> getTodayCalendar
    59:59:android.icu.util.TimeZone getUtcAndroidTimeZone() -> getUtcAndroidTimeZone
    83:83:java.util.Calendar getUtcCalendar() -> getUtcCalendar
    95:99:java.util.Calendar getUtcCalendarOf(java.util.Calendar) -> getUtcCalendarOf
    188:188:android.icu.text.DateFormat getYearAbbrMonthDayFormat(java.util.Locale) -> getYearAbbrMonthDayFormat
    203:203:android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale) -> getYearAbbrMonthWeekdayDayFormat
    236:256:java.lang.String removeYearFromDateFormatPattern(java.lang.String) -> removeYearFromDateFormatPattern
com.google.android.material.datepicker.UtcDates$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.datepicker.UtcDates$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.icu.text.DateFormat com.google.android.material.datepicker.UtcDates$$InternalSyntheticApiModelOutline$2$5f3798eb671532943f2026c9ad41c80b01f4723bf48a6f1a5c1b32b32e86cba2$0.m(java.lang.String,java.util.Locale) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.datepicker.UtcDates$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.datepicker.UtcDates$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.datepicker.UtcDates$$InternalSyntheticApiModelOutline$2$5f3798eb671532943f2026c9ad41c80b01f4723bf48a6f1a5c1b32b32e86cba2$1.m(android.icu.text.DateFormat,android.icu.util.TimeZone) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.datepicker.UtcDates$$ExternalSyntheticApiModelOutline2 -> com.google.android.material.datepicker.UtcDates$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.icu.util.TimeZone com.google.android.material.datepicker.UtcDates$$InternalSyntheticApiModelOutline$3$5435f78e13646594f1f78237fbfaa5216edf95d090f0872dec594c35f0a6cfc7$0.m(java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.datepicker.YearGridAdapter -> com.google.android.material.datepicker.YearGridAdapter:
# {"id":"sourceFile","fileName":"YearGridAdapter.java"}
    45:46:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    31:31:com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter) -> access$000
    80:80:android.view.View$OnClickListener createYearClickListener(int) -> createYearClickListener
    94:94:int getItemCount() -> getItemCount
    98:98:int getPositionForYear(int) -> getPositionForYear
    102:102:int getYearForPosition(int) -> getYearForPosition
    31:31:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    61:75:void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int) -> onBindViewHolder
    31:31:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    54:56:com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.YearGridAdapter$1 -> com.google.android.material.datepicker.YearGridAdapter$1:
# {"id":"sourceFile","fileName":"YearGridAdapter.java"}
    80:80:void <init>(com.google.android.material.datepicker.YearGridAdapter,int) -> <init>
    83:87:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.YearGridAdapter$ViewHolder -> com.google.android.material.datepicker.YearGridAdapter$ViewHolder:
# {"id":"sourceFile","fileName":"YearGridAdapter.java"}
    40:41:void <init>(android.widget.TextView) -> <init>
com.google.android.material.dialog.InsetDialogOnTouchListener -> com.google.android.material.dialog.InsetDialogOnTouchListener:
# {"id":"sourceFile","fileName":"InsetDialogOnTouchListener.java"}
    45:49:void <init>(android.app.Dialog,android.graphics.Rect) -> <init>
    54:76:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.divider.MaterialDivider -> com.google.android.material.divider.MaterialDivider:
# {"id":"sourceFile","fileName":"MaterialDivider.java"}
    50:50:void <clinit>() -> <clinit>
    59:59:void <init>(android.content.Context) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    251:251:int getDividerColor() -> getDividerColor
    215:215:int getDividerInsetEnd() -> getDividerInsetEnd
    182:182:int getDividerInsetStart() -> getDividerInsetStart
    149:149:int getDividerThickness() -> getDividerThickness
    106:112:void onDraw(android.graphics.Canvas) -> onDraw
    92:100:void onMeasure(int,int) -> onMeasure
    226:229:void setDividerColor(int) -> setDividerColor
    241:241:void setDividerColorResource(int) -> setDividerColorResource
    193:193:void setDividerInsetEnd(int) -> setDividerInsetEnd
    204:204:void setDividerInsetEndResource(int) -> setDividerInsetEndResource
    160:160:void setDividerInsetStart(int) -> setDividerInsetStart
    171:171:void setDividerInsetStartResource(int) -> setDividerInsetStartResource
    124:126:void setDividerThickness(int) -> setDividerThickness
    139:139:void setDividerThicknessResource(int) -> setDividerThicknessResource
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.drawable.DrawableUtils:
# {"id":"sourceFile","fileName":"DrawableUtils.java"}
    208:248:android.graphics.drawable.Drawable compositeTwoLayeredDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> compositeTwoLayeredDrawable
    152:152:android.graphics.drawable.Drawable createTintableDrawableIfNeeded(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintableDrawableIfNeeded
    168:168:android.graphics.drawable.Drawable createTintableMutatedDrawableIfNeeded(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintableMutatedDrawableIfNeeded
    182:187:android.graphics.drawable.Drawable createTintableMutatedDrawableIfNeeded(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> createTintableMutatedDrawableIfNeeded
    256:266:int[] getCheckedState(int[]) -> getCheckedState
    273:277:int[] getUncheckedState(int[]) -> getUncheckedState
    104:125:android.util.AttributeSet parseDrawableXml(android.content.Context,int,java.lang.CharSequence) -> parseDrawableXml
    285:297:void setOutlineToPath(android.graphics.Outline,android.graphics.Path) -> setOutlineToPath
    131:140:void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int) -> setRippleDrawableRadius
    79:81:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    96:97:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.drawable.DrawableUtils$$InternalSyntheticApiModelOutline$1$7bf955da3e61d122dfab5314d17e87acce2aac77190cbddda642f95d51387ce1$0.m(android.graphics.drawable.LayerDrawable,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.drawable.DrawableUtils$$InternalSyntheticApiModelOutline$1$7bf955da3e61d122dfab5314d17e87acce2aac77190cbddda642f95d51387ce1$1.m(android.graphics.drawable.LayerDrawable,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline2 -> com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.drawable.DrawableUtils$$InternalSyntheticApiModelOutline$1$e52028888c5266e8028ecf5e40bcfe9dd2d80a9d225f9d7e1f9c6e8f04dd8628$0.m(android.graphics.drawable.RippleDrawable,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline3 -> com.google.android.material.drawable.DrawableUtils$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.drawable.DrawableUtils$$InternalSyntheticApiModelOutline$1$f5923863e87451774c032344458021795757d7a20f0d93fc99337241970341f1$0.m(android.graphics.Outline,android.graphics.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.elevation.ElevationOverlayProvider -> com.google.android.material.elevation.ElevationOverlayProvider:
# {"id":"sourceFile","fileName":"ElevationOverlayProvider.java"}
    36:36:void <clinit>() -> <clinit>
    45:50:void <init>(android.content.Context) -> <init>
    58:63:void <init>(boolean,int,int,int,float) -> <init>
    158:164:float calculateOverlayAlphaFraction(float) -> calculateOverlayAlphaFraction
    132:142:int compositeOverlay(int,float) -> compositeOverlay
    109:110:int compositeOverlayIfNeeded(int,float) -> compositeOverlayIfNeeded
    85:85:int compositeOverlayWithThemeSurfaceColorIfNeeded(float) -> compositeOverlayWithThemeSurfaceColorIfNeeded
    169:169:boolean isThemeElevationOverlayEnabled() -> isThemeElevationOverlayEnabled
    193:193:boolean isThemeSurfaceColor(int) -> isThemeSurfaceColor
com.google.android.material.elevation.SurfaceColors -> com.google.android.material.elevation.SurfaceColors:
# {"id":"sourceFile","fileName":"SurfaceColors.java"}
    32:38:void <clinit>() -> <clinit>
    42:43:void <init>(java.lang.String,int,int) -> <init>
    51:52:int getColor(android.content.Context) -> getColor
    60:61:int getColorForElevation(android.content.Context,float) -> getColorForElevation
    32:32:com.google.android.material.elevation.SurfaceColors valueOf(java.lang.String) -> valueOf
    32:32:com.google.android.material.elevation.SurfaceColors[] values() -> values
com.google.android.material.expandable.ExpandableWidget -> com.google.android.material.expandable.ExpandableWidget:
# {"id":"sourceFile","fileName":"ExpandableWidget.java"}
com.google.android.material.expandable.ExpandableWidgetHelper -> com.google.android.material.expandable.ExpandableWidgetHelper:
# {"id":"sourceFile","fileName":"ExpandableWidgetHelper.java"}
    36:41:void <init>(com.google.android.material.expandable.ExpandableWidget) -> <init>
    91:93:void dispatchExpandedStateChanged() -> dispatchExpandedStateChanged
    87:87:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    56:56:boolean isExpanded() -> isExpanded
    71:75:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    62:64:android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    81:81:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
com.google.android.material.floatingactionbutton.AnimatorTracker -> com.google.android.material.floatingactionbutton.AnimatorTracker:
# {"id":"sourceFile","fileName":"AnimatorTracker.java"}
    33:34:void cancelCurrent() -> cancelCurrent
    39:39:void clear() -> clear
    28:29:void onNextAnimationStart(android.animation.Animator) -> onNextAnimationStart
com.google.android.material.floatingactionbutton.BaseMotionStrategy -> com.google.android.material.floatingactionbutton.BaseMotionStrategy:
# {"id":"sourceFile","fileName":"BaseMotionStrategy.java"}
    44:53:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker) -> <init>
    40:40:com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton access$000(com.google.android.material.floatingactionbutton.BaseMotionStrategy) -> access$000
    116:116:android.animation.AnimatorSet createAnimator() -> createAnimator
    121:206:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec) -> createAnimator
    63:71:com.google.android.material.animation.MotionSpec getCurrentMotionSpec() -> getCurrentMotionSpec
    87:87:java.util.List getListeners() -> getListeners
    93:93:com.google.android.material.animation.MotionSpec getMotionSpec() -> getMotionSpec
    111:111:void onAnimationCancel() -> onAnimationCancel
    105:105:void onAnimationEnd() -> onAnimationEnd
    99:99:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    58:58:void setMotionSpec(com.google.android.material.animation.MotionSpec) -> setMotionSpec
com.google.android.material.floatingactionbutton.BaseMotionStrategy$1 -> com.google.android.material.floatingactionbutton.BaseMotionStrategy$1:
# {"id":"sourceFile","fileName":"BaseMotionStrategy.java"}
    156:156:void <init>(com.google.android.material.floatingactionbutton.BaseMotionStrategy,java.lang.Class,java.lang.String) -> <init>
    156:156:java.lang.Object get(java.lang.Object) -> get
    161:166:java.lang.Float get(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> get
    156:156:void set(java.lang.Object,java.lang.Object) -> set
    173:198:void set(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.BorderDrawable -> com.google.android.material.floatingactionbutton.BorderDrawable:
# {"id":"sourceFile","fileName":"BorderDrawable.java"}
    62:86:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    223:248:android.graphics.Shader createGradientShader() -> createGradientShader
    126:142:void draw(android.graphics.Canvas) -> draw
    172:173:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    255:255:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    193:193:int getOpacity() -> getOpacity
    149:158:void getOutline(android.graphics.Outline) -> getOutline
    163:165:boolean getPadding(android.graphics.Rect) -> getPadding
    203:203:boolean isStateful() -> isStateful
    198:198:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    208:218:boolean onStateChange(int[]) -> onStateChange
    187:188:void setAlpha(int) -> setAlpha
    100:104:void setBorderTint(android.content.res.ColorStateList) -> setBorderTint
    90:94:void setBorderWidth(float) -> setBorderWidth
    109:110:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    118:121:void setGradientColors(int,int,int,int) -> setGradientColors
    181:182:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
com.google.android.material.floatingactionbutton.BorderDrawable$1 -> com.google.android.material.floatingactionbutton.BorderDrawable$1:
# {"id":"sourceFile","fileName":"BorderDrawable.java"}
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState -> com.google.android.material.floatingactionbutton.BorderDrawable$BorderState:
# {"id":"sourceFile","fileName":"BorderDrawable.java"}
    262:262:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable) -> <init>
    262:262:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable,com.google.android.material.floatingactionbutton.BorderDrawable$1) -> <init>
    0:0:int getChangingConfigurations() -> getChangingConfigurations
    267:267:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    83:986:void <clinit>() -> <clinit>
    191:191:void <init>(android.content.Context) -> <init>
    195:195:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    90:280:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:81:int access$000(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$000
    81:81:int access$100(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$100
    81:81:int access$200(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$200
    81:81:int access$202(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> access$202
    81:81:int access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$300
    81:81:int access$302(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> access$302
    81:81:void access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> access$400
    81:81:boolean access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$500
    81:81:boolean access$502(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean) -> access$502
    81:81:boolean access$602(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean) -> access$602
    81:81:int access$702(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> access$702
    81:81:boolean access$800(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$800
    81:81:boolean access$900(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$900
    477:477:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1017:1017:int getCollapsedPadding() -> getCollapsedPadding
    1011:1012:int getCollapsedSize() -> getCollapsedSize
    764:764:com.google.android.material.animation.MotionSpec getExtendMotionSpec() -> getExtendMotionSpec
    740:740:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    716:716:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    790:790:com.google.android.material.animation.MotionSpec getShrinkMotionSpec() -> getShrinkMotionSpec
    284:390:com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size getSizeFromExtendStrategyType(int) -> getSizeFromExtendStrategyType
    899:904:boolean isOrWillBeHidden() -> isOrWillBeHidden
    889:894:boolean isOrWillBeShown() -> isOrWillBeShown
    466:470:void onAttachedToWindow() -> onAttachedToWindow
    816:885:void performMotion(int,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> performMotion
    453:453:void saveOriginalTextCsl() -> saveOriginalTextCsl
    509:509:void setAnimateShowBeforeLayout(boolean) -> setAnimateShowBeforeLayout
    773:773:void setExtendMotionSpec(com.google.android.material.animation.MotionSpec) -> setExtendMotionSpec
    782:782:void setExtendMotionSpecResource(int) -> setExtendMotionSpecResource
    485:494:void setExtended(boolean) -> setExtended
    749:749:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    758:758:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    523:526:void setPadding(int,int,int,int) -> setPadding
    514:517:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    725:725:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    734:734:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    799:799:void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec) -> setShrinkMotionSpec
    808:808:void setShrinkMotionSpecResource(int) -> setShrinkMotionSpecResource
    442:443:void setTextColor(int) -> setTextColor
    448:449:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    909:910:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    461:461:void silentlyUpdateTextColor(android.content.res.ColorStateList) -> silentlyUpdateTextColor
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    241:241:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> <init>
    249:249:int getHeight() -> getHeight
    264:264:android.view.ViewGroup$LayoutParams getLayoutParams() -> getLayoutParams
    259:259:int getPaddingEnd() -> getPaddingEnd
    254:254:int getPaddingStart() -> getPaddingStart
    244:244:int getWidth() -> getWidth
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    285:285:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> <init>
    296:296:int getHeight() -> getHeight
    311:311:android.view.ViewGroup$LayoutParams getLayoutParams() -> getLayoutParams
    306:306:int getPaddingEnd() -> getPaddingEnd
    301:301:int getPaddingStart() -> getPaddingStart
    288:291:int getWidth() -> getWidth
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    315:315:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size) -> <init>
    345:371:int getHeight() -> getHeight
    386:387:android.view.ViewGroup$LayoutParams getLayoutParams() -> getLayoutParams
    381:381:int getPaddingEnd() -> getPaddingEnd
    376:376:int getPaddingStart() -> getPaddingStart
    320:338:int getWidth() -> getWidth
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    391:391:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size) -> <init>
    404:409:int getHeight() -> getHeight
    424:426:android.view.ViewGroup$LayoutParams getLayoutParams() -> getLayoutParams
    419:419:int getPaddingEnd() -> getPaddingEnd
    414:414:int getPaddingStart() -> getPaddingStart
    394:399:int getWidth() -> getWidth
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    857:857:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> <init>
    868:869:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    874:876:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    862:863:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    918:918:void <init>(java.lang.Class,java.lang.String) -> <init>
    918:918:java.lang.Object get(java.lang.Object) -> get
    932:932:java.lang.Float get(android.view.View) -> get
    918:918:void set(java.lang.Object,java.lang.Object) -> set
    923:924:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    941:941:void <init>(java.lang.Class,java.lang.String) -> <init>
    941:941:java.lang.Object get(java.lang.Object) -> get
    955:955:java.lang.Float get(android.view.View) -> get
    941:941:void set(java.lang.Object,java.lang.Object) -> set
    946:947:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$8 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$8:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    964:964:void <init>(java.lang.Class,java.lang.String) -> <init>
    964:964:java.lang.Object get(java.lang.Object) -> get
    978:978:java.lang.Float get(android.view.View) -> get
    964:964:void set(java.lang.Object,java.lang.Object) -> set
    967:972:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$9 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$9:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    987:987:void <init>(java.lang.Class,java.lang.String) -> <init>
    987:987:java.lang.Object get(java.lang.Object) -> get
    1001:1001:java.lang.Float get(android.view.View) -> get
    987:987:void set(java.lang.Object,java.lang.Object) -> set
    990:995:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    1307:1310:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size,boolean) -> <init>
    1360:1395:android.animation.AnimatorSet createAnimator() -> createAnimator
    1352:1354:int getDefaultMotionSpecResource() -> getDefaultMotionSpecResource
    1408:1417:void onAnimationEnd() -> onAnimationEnd
    1400:1403:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    0:0:void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> onChange
    1315:1334:void performNow() -> performNow
    1422:1422:boolean shouldCancel() -> shouldCancel
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    1038:1040:void <init>() -> <init>
    1047:1059:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1259:1263:void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> extendOrShow
    1025:1025:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1122:1122:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1148:1150:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1127:1130:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    1025:1025:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1137:1142:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View) -> onDependentViewChanged
    1025:1025:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1272:1286:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> onLayoutChild
    1170:1175:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shouldUpdateVisibility
    1239:1243:void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shrinkOrHide
    1188:1205:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1214:1221:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    1475:1476:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker) -> <init>
    1498:1498:int getDefaultMotionSpecResource() -> getDefaultMotionSpecResource
    1511:1512:void onAnimationCancel() -> onAnimationCancel
    1517:1520:void onAnimationEnd() -> onAnimationEnd
    1503:1506:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    0:0:void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> onChange
    1481:1481:void performNow() -> performNow
    1493:1493:boolean shouldCancel() -> shouldCancel
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
    1428:1429:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker) -> <init>
    1449:1449:int getDefaultMotionSpecResource() -> getDefaultMotionSpecResource
    1461:1462:void onAnimationEnd() -> onAnimationEnd
    1454:1456:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    0:0:void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> onChange
    1434:1437:void performNow() -> performNow
    1467:1467:boolean shouldCancel() -> shouldCancel
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size:
# {"id":"sourceFile","fileName":"ExtendedFloatingActionButton.java"}
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    110:110:void <clinit>() -> <clinit>
    197:197:void <init>(android.content.Context) -> <init>
    201:201:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    188:271:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    101:101:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    101:101:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    639:639:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    607:607:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1351:1351:void addTransformationCallback(com.google.android.material.animation.TransformationCallback) -> addTransformationCallback
    1445:1445:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    835:836:void drawableStateChanged() -> drawableStateChanged
    364:364:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    390:390:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    352:352:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1200:1200:float getCompatElevation() -> getCompatElevation
    1236:1236:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1273:1273:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    913:913:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    885:887:boolean getContentRect(android.graphics.Rect) -> getContentRect
    782:782:int getCustomSize() -> getCustomSize
    663:663:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1327:1327:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1436:1439:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    899:900:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    304:304:int getRippleColor() -> getRippleColor
    315:315:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    539:539:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1303:1303:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    723:723:int getSize() -> getSize
    796:796:int getSizeDimension() -> getSizeDimension
    800:817:int getSizeDimension(int) -> getSizeDimension
    424:424:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    443:443:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    457:457:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    471:471:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    691:691:boolean getUseCompatPadding() -> getUseCompatPadding
    631:631:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> hide
    635:635:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    653:653:boolean isExpanded() -> isExpanded
    747:747:boolean isOrWillBeHidden() -> isOrWillBeHidden
    751:751:boolean isOrWillBeShown() -> isOrWillBeShown
    841:842:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    904:907:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    475:493:void onApplySupportImageTint() -> onApplySupportImageTint
    823:824:void onAttachedToWindow() -> onAttachedToWindow
    829:830:void onDetachedFromWindow() -> onDetachedFromWindow
    276:289:void onMeasure(int,int) -> onMeasure
    863:872:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    847:854:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    918:924:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    0:0:void setBackgroundColor(int) -> setBackgroundColor
    0:0:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    0:0:void setBackgroundResource(int) -> setBackgroundResource
    375:377:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    402:404:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1212:1212:void setCompatElevation(float) -> setCompatElevation
    1224:1224:void setCompatElevationResource(int) -> setCompatElevationResource
    1249:1249:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1262:1262:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1285:1285:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1297:1297:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    766:771:void setCustomSize(int) -> setCustomSize
    1188:1189:void setElevation(float) -> setElevation
    560:562:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    658:658:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1336:1336:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1345:1345:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    520:524:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    514:515:void setImageResource(int) -> setImageResource
    578:579:void setMaxImageSize(int) -> setMaxImageSize
    329:329:void setRippleColor(int) -> setRippleColor
    343:345:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1414:1415:void setScaleX(float) -> setScaleX
    1420:1421:void setScaleY(float) -> setScaleY
    1432:1432:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    532:532:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1312:1312:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1321:1321:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    708:711:void setSize(int) -> setSize
    414:414:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    433:433:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    448:450:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    462:464:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    1396:1397:void setTranslationX(float) -> setTranslationX
    1402:1403:void setTranslationY(float) -> setTranslationY
    1408:1409:void setTranslationZ(float) -> setTranslationZ
    676:678:void setUseCompatPadding(boolean) -> setUseCompatPadding
    568:568:void setVisibility(int) -> setVisibility
    599:599:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> show
    603:603:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    733:733:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$1:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    733:733:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    741:741:void onHidden() -> onHidden
    736:736:void onShown() -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    959:960:void <init>() -> <init>
    964:971:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    950:950:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1133:1138:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1021:1023:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1151:1179:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    1000:1003:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    950:950:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1010:1015:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    950:950:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1106:1122:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    1038:1050:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    1062:1079:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1088:1095:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    936:936:void <init>() -> <init>
    940:940:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    933:933:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    933:933:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    933:933:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    933:933:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    0:0:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
    0:0:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    1452:1452:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1475:1475:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1469:1469:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1461:1463:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper -> com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper:
# {"id":"sourceFile","fileName":"FloatingActionButton.java"}
    1368:1369:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback) -> <init>
    1384:1385:boolean equals(java.lang.Object) -> equals
    1390:1390:int hashCode() -> hashCode
    1379:1379:void onScaleChanged() -> onScaleChanged
    1374:1374:void onTranslationChanged() -> onTranslationChanged
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    70:150:void <clinit>() -> <clinit>
    103:190:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    68:68:int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int) -> access$002
    68:68:android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator) -> access$102
    68:68:float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float) -> access$202
    68:68:void access$300(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float,android.graphics.Matrix) -> access$300
    410:413:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    394:397:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    694:697:void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) -> addTransformationCallback
    302:314:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    581:617:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    633:668:android.animation.AnimatorSet createDefaultAnimator(float,float,float,int,int) -> createDefaultAnimator
    840:845:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    727:727:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    361:361:boolean getEnsureMinTouchTargetSize() -> getEnsureMinTouchTargetSize
    349:349:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    259:259:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    799:810:android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener() -> getOrCreatePreDrawListener
    742:749:void getPadding(android.graphics.Rect) -> getPadding
    263:263:float getPressedTranslationZ() -> getPressedTranslationZ
    335:335:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> getShapeAppearance
    340:340:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    426:495:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    829:834:boolean isOrWillBeHidden() -> isOrWillBeHidden
    819:824:boolean isOrWillBeShown() -> isOrWillBeShown
    768:773:void onAttachedToWindow() -> onAttachedToWindow
    778:781:void onDetachedFromWindow() -> onDetachedFromWindow
    753:759:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    790:793:void onPreDraw() -> onPreDraw
    718:720:void onScaleChanged() -> onScaleChanged
    710:712:void onTranslationChanged() -> onTranslationChanged
    222:226:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    231:232:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    248:250:void setElevation(float) -> setElevation
    365:365:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    353:353:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    267:269:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    294:298:void setImageMatrixScale(float) -> setImageMatrixScale
    281:283:void setMaxImageSize(int) -> setMaxImageSize
    237:237:void setMinTouchTargetSize(int) -> setMinTouchTargetSize
    274:276:void setPressedTranslationZ(float) -> setPressedTranslationZ
    241:243:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    369:370:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    319:329:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearance
    344:344:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    917:917:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    357:357:boolean shouldExpandBoundsForA11y() -> shouldExpandBoundsForA11y
    501:573:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    290:290:void updateImageMatrixScale() -> updateImageMatrixScale
    735:738:void updatePadding() -> updatePadding
    380:381:void updateShapeElevation(float) -> updateShapeElevation
    679:683:void workAroundOreoBug(android.animation.ObjectAnimator) -> workAroundOreoBug
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    455:455:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    469:469:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    474:480:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    460:464:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    541:541:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    552:556:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    544:547:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    602:602:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    602:602:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    608:609:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    642:642:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float,float,float,float,float,float,float,android.graphics.Matrix) -> <init>
    645:654:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    683:684:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    683:683:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    687:688:java.lang.Float evaluate(float,java.lang.Float,java.lang.Float) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$6 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$6:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    801:801:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    804:804:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    908:908:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    0:0:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    890:890:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    894:894:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    899:899:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    903:903:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    881:881:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    885:885:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
# {"id":"sourceFile","fileName":"FloatingActionButtonImpl.java"}
    849:849:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    849:849:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    872:873:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    858:867:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
# {"id":"sourceFile","fileName":"FloatingActionButtonImplLollipop.java"}
    54:54:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    228:236:com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList) -> createBorderDrawable
    125:161:android.animation.StateListAnimator createDefaultStateListAnimator(float,float,float) -> createDefaultStateListAnimator
    168:173:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    243:244:com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable() -> createShapeDrawable
    179:179:float getElevation() -> getElevation
    249:255:void getPadding(android.graphics.Rect) -> getPadding
    64:85:void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> initializeBackgroundDrawable
    0:0:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    184:184:void onCompatShadowChanged() -> onCompatShadowChanged
    0:0:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    108:116:void onElevationsChanged(float,float,float) -> onElevationsChanged
    0:0:boolean requirePreDrawListener() -> requirePreDrawListener
    90:94:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    189:189:boolean shouldAddPadding() -> shouldAddPadding
    0:0:void updateFromViewRotation() -> updateFromViewRotation
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable:
# {"id":"sourceFile","fileName":"FloatingActionButtonImplLollipop.java"}
    268:268:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    0:0:boolean isStateful() -> isStateful
com.google.android.material.floatingactionbutton.MotionStrategy -> com.google.android.material.floatingactionbutton.MotionStrategy:
# {"id":"sourceFile","fileName":"MotionStrategy.java"}
com.google.android.material.imageview.ShapeableImageView -> com.google.android.material.imageview.ShapeableImageView:
# {"id":"sourceFile","fileName":"ShapeableImageView.java"}
    60:60:void <clinit>() -> <clinit>
    88:88:void <init>(android.content.Context) -> <init>
    92:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:151:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    58:58:com.google.android.material.shape.ShapeAppearanceModel access$000(com.google.android.material.imageview.ShapeableImageView) -> access$000
    58:58:com.google.android.material.shape.MaterialShapeDrawable access$100(com.google.android.material.imageview.ShapeableImageView) -> access$100
    58:58:com.google.android.material.shape.MaterialShapeDrawable access$102(com.google.android.material.imageview.ShapeableImageView,com.google.android.material.shape.MaterialShapeDrawable) -> access$102
    58:58:android.graphics.RectF access$200(com.google.android.material.imageview.ShapeableImageView) -> access$200
    481:491:void drawStroke(android.graphics.Canvas) -> drawStroke
    262:262:int getContentPaddingBottom() -> getContentPaddingBottom
    273:276:int getContentPaddingEnd() -> getContentPaddingEnd
    287:295:int getContentPaddingLeft() -> getContentPaddingLeft
    305:313:int getContentPaddingRight() -> getContentPaddingRight
    324:327:int getContentPaddingStart() -> getContentPaddingStart
    338:338:int getContentPaddingTop() -> getContentPaddingTop
    391:391:int getPaddingBottom() -> getPaddingBottom
    402:402:int getPaddingEnd() -> getPaddingEnd
    413:413:int getPaddingLeft() -> getPaddingLeft
    424:424:int getPaddingRight() -> getPaddingRight
    435:435:int getPaddingStart() -> getPaddingStart
    446:446:int getPaddingTop() -> getPaddingTop
    465:465:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    517:517:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    559:559:float getStrokeWidth() -> getStrokeWidth
    252:252:boolean isContentPaddingRelative() -> isContentPaddingRelative
    342:342:boolean isRtl() -> isRtl
    188:190:void onDraw(android.graphics.Canvas) -> onDraw
    157:183:void onMeasure(int,int) -> onMeasure
    195:196:void onSizeChanged(int,int,int,int) -> onSizeChanged
    209:223:void setContentPadding(int,int,int,int) -> setContentPadding
    239:248:void setContentPaddingRelative(int,int,int,int) -> setContentPaddingRelative
    357:361:void setPadding(int,int,int,int) -> setPadding
    376:380:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    451:458:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    563:564:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    505:505:void setStrokeColorResource(int) -> setStrokeColorResource
    530:532:void setStrokeWidth(float) -> setStrokeWidth
    546:546:void setStrokeWidthResource(int) -> setStrokeWidthResource
    469:477:void updateShapeMask(int,int) -> updateShapeMask
com.google.android.material.imageview.ShapeableImageView$OutlineProvider -> com.google.android.material.imageview.ShapeableImageView$OutlineProvider:
# {"id":"sourceFile","fileName":"ShapeableImageView.java"}
    568:570:void <init>(com.google.android.material.imageview.ShapeableImageView) -> <init>
    574:584:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
# {"id":"sourceFile","fileName":"BaselineLayout.java"}
    31:34:void <init>(android.content.Context) -> <init>
    31:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:108:void onLayout(boolean,int,int,int,int) -> onLayout
    47:79:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableGroup -> com.google.android.material.internal.CheckableGroup:
# {"id":"sourceFile","fileName":"CheckableGroup.java"}
    43:45:void <init>() -> <init>
    43:43:boolean access$000(com.google.android.material.internal.CheckableGroup,com.google.android.material.internal.MaterialCheckable) -> access$000
    43:43:boolean access$100(com.google.android.material.internal.CheckableGroup) -> access$100
    43:43:boolean access$200(com.google.android.material.internal.CheckableGroup,com.google.android.material.internal.MaterialCheckable,boolean) -> access$200
    43:43:void access$300(com.google.android.material.internal.CheckableGroup) -> access$300
    75:79:void addCheckable(com.google.android.material.internal.MaterialCheckable) -> addCheckable
    96:101:void check(int) -> check
    149:159:boolean checkInternal(com.google.android.material.internal.MaterialCheckable) -> checkInternal
    116:121:void clearCheck() -> clearCheck
    132:132:java.util.Set getCheckedIds() -> getCheckedIds
    137:142:java.util.List getCheckedIdsSortedByChildOrder(android.view.ViewGroup) -> getCheckedIdsSortedByChildOrder
    127:127:int getSingleCheckedId() -> getSingleCheckedId
    59:59:boolean isSingleSelection() -> isSingleSelection
    183:184:void onCheckedStateChanged() -> onCheckedStateChanged
    90:92:void removeCheckable(com.google.android.material.internal.MaterialCheckable) -> removeCheckable
    71:71:void setOnCheckedStateChangeListener(com.google.android.material.internal.CheckableGroup$OnCheckedStateChangeListener) -> setOnCheckedStateChangeListener
    63:63:void setSelectionRequired(boolean) -> setSelectionRequired
    52:54:void setSingleSelection(boolean) -> setSingleSelection
    166:177:boolean uncheckInternal(com.google.android.material.internal.MaterialCheckable,boolean) -> uncheckInternal
com.google.android.material.internal.CheckableGroup$1 -> com.google.android.material.internal.CheckableGroup$1:
# {"id":"sourceFile","fileName":"CheckableGroup.java"}
    79:79:void <init>(com.google.android.material.internal.CheckableGroup) -> <init>
    79:79:void onCheckedChanged(java.lang.Object,boolean) -> onCheckedChanged
    82:83:void onCheckedChanged(com.google.android.material.internal.MaterialCheckable,boolean) -> onCheckedChanged
com.google.android.material.internal.CheckableGroup$OnCheckedStateChangeListener -> com.google.android.material.internal.CheckableGroup$OnCheckedStateChangeListener:
# {"id":"sourceFile","fileName":"CheckableGroup.java"}
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
# {"id":"sourceFile","fileName":"CheckableImageButton.java"}
    41:41:void <clinit>() -> <clinit>
    48:48:void <init>(android.content.Context) -> <init>
    52:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    144:144:boolean isCheckable() -> isCheckable
    88:88:boolean isChecked() -> isChecked
    105:110:int[] onCreateDrawableState(int) -> onCreateDrawableState
    125:131:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    117:119:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    136:138:void setCheckable(boolean) -> setCheckable
    79:82:void setChecked(boolean) -> setChecked
    149:149:void setPressable(boolean) -> setPressable
    98:99:void setPressed(boolean) -> setPressed
    93:93:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
# {"id":"sourceFile","fileName":"CheckableImageButton.java"}
    60:60:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    63:64:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:72:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.CheckableImageButton$SavedState -> com.google.android.material.internal.CheckableImageButton$SavedState:
# {"id":"sourceFile","fileName":"CheckableImageButton.java"}
    180:180:void <clinit>() -> <clinit>
    162:162:void <init>(android.os.Parcelable) -> <init>
    166:167:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    177:177:void readFromParcel(android.os.Parcel) -> readFromParcel
    172:173:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.CheckableImageButton$SavedState$1 -> com.google.android.material.internal.CheckableImageButton$SavedState$1:
# {"id":"sourceFile","fileName":"CheckableImageButton.java"}
    181:181:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    185:185:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    191:191:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object[] newArray(int) -> newArray
    197:197:com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int) -> newArray
com.google.android.material.internal.ClippableRoundedCornerLayout -> com.google.android.material.internal.ClippableRoundedCornerLayout:
# {"id":"sourceFile","fileName":"ClippableRoundedCornerLayout.java"}
    43:43:void <init>(android.content.Context) -> <init>
    47:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    57:64:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    68:69:void resetClipBoundsAndCornerRadius() -> resetClipBoundsAndCornerRadius
    73:73:void updateClipBoundsAndCornerRadius(android.graphics.Rect,float) -> updateClipBoundsAndCornerRadius
    78:78:void updateClipBoundsAndCornerRadius(float,float,float,float,float) -> updateClipBoundsAndCornerRadius
    82:88:void updateClipBoundsAndCornerRadius(android.graphics.RectF,float) -> updateClipBoundsAndCornerRadius
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.CollapsingTextHelper:
# {"id":"sourceFile","fileName":"CollapsingTextHelper.java"}
    76:86:void <clinit>() -> <clinit>
    104:192:void <init>(android.view.View) -> <init>
    1275:1279:int blendARGB(int,int,float) -> blendARGB
    721:807:void calculateBaseOffsets(boolean) -> calculateBaseOffsets
    603:603:void calculateCurrentOffsets() -> calculateCurrentOffsets
    681:689:float calculateFadeModeTextAlpha(float) -> calculateFadeModeTextAlpha
    336:336:float calculateFadeModeThresholdFraction() -> calculateFadeModeThresholdFraction
    947:949:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    607:677:void calculateOffsets(float) -> calculateOffsets
    979:979:void calculateUsingTextSize(float) -> calculateUsingTextSize
    984:1069:void calculateUsingTextSize(float,boolean) -> calculateUsingTextSize
    1167:1169:void clearTexture() -> clearTexture
    1077:1093:android.text.StaticLayout createStaticLayout(int,float,boolean) -> createStaticLayout
    839:876:void draw(android.graphics.Canvas) -> draw
    885:939:void drawMultilineTransition(android.graphics.Canvas,float,float) -> drawMultilineTransition
    1112:1130:void ensureExpandedTexture() -> ensureExpandedTexture
    276:281:void getCollapsedTextActualBounds(android.graphics.RectF,int,int) -> getCollapsedTextActualBounds
    1255:1255:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    379:379:int getCollapsedTextGravity() -> getCollapsedTextGravity
    321:323:float getCollapsedTextHeight() -> getCollapsedTextHeight
    287:292:float getCollapsedTextLeftBound(int,int) -> getCollapsedTextLeftBound
    299:304:float getCollapsedTextRightBound(android.graphics.RectF,int,int) -> getCollapsedTextRightBound
    587:587:float getCollapsedTextSize() -> getCollapsedTextSize
    520:520:android.graphics.Typeface getCollapsedTypeface() -> getCollapsedTypeface
    705:705:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    713:716:int getCurrentColor(android.content.res.ColorStateList) -> getCurrentColor
    700:700:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    1200:1200:int getExpandedLineCount() -> getExpandedLineCount
    315:317:float getExpandedTextFullHeight() -> getExpandedTextFullHeight
    368:368:int getExpandedTextGravity() -> getExpandedTextGravity
    309:311:float getExpandedTextHeight() -> getExpandedTextHeight
    591:591:float getExpandedTextSize() -> getExpandedTextSize
    524:524:android.graphics.Typeface getExpandedTypeface() -> getExpandedTypeface
    583:583:float getExpansionFraction() -> getExpansionFraction
    579:579:float getFadeModeThresholdFraction() -> getFadeModeThresholdFraction
    1230:1230:int getHyphenationFrequency() -> getHyphenationFrequency
    1191:1191:int getLineCount() -> getLineCount
    1210:1210:float getLineSpacingAdd() -> getLineSpacingAdd
    1220:1220:float getLineSpacingMultiplier() -> getLineSpacingMultiplier
    1182:1182:int getMaxLines() -> getMaxLines
    1097:1107:android.text.Layout$Alignment getMultilineTextLayoutAlignment() -> getMultilineTextLayoutAlignment
    207:207:android.animation.TimeInterpolator getPositionInterpolator() -> getPositionInterpolator
    1163:1163:java.lang.CharSequence getText() -> getText
    353:356:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    345:348:void getTextPaintExpanded(android.text.TextPaint) -> getTextPaintExpanded
    458:458:android.text.TextUtils$TruncateAt getTitleTextEllipsize() -> getTitleTextEllipsize
    815:824:void interpolateBounds(float) -> interpolateBounds
    1247:1247:boolean isClose(float,float) -> isClose
    954:954:boolean isDefaultIsRtl() -> isDefaultIsRtl
    574:575:boolean isStateful() -> isStateful
    959:961:boolean isTextDirectionHeuristicsIsRtl(java.lang.CharSequence,boolean) -> isTextDirectionHeuristicsIsRtl
    1285:1287:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    528:542:void maybeUpdateFontWeightAdjustment(android.content.res.Configuration) -> maybeUpdateFontWeightAdjustment
    811:811:float measureTextWidth(android.text.TextPaint,java.lang.CharSequence) -> measureTextWidth
    1135:1135:void recalculate() -> recalculate
    1139:1143:void recalculate(boolean) -> recalculate
    1291:1291:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    239:242:void setCollapsedAndExpandedTextColor(android.content.res.ColorStateList) -> setCollapsedAndExpandedTextColor
    265:267:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    272:272:void setCollapsedBounds(android.graphics.Rect) -> setCollapsedBounds
    383:414:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    829:830:void setCollapsedTextBlend(float) -> setCollapsedTextBlend
    225:227:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    372:374:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    218:220:void setCollapsedTextSize(float) -> setCollapsedTextSize
    462:463:void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    485:494:boolean setCollapsedTypefaceInternal(android.graphics.Typeface) -> setCollapsedTypefaceInternal
    327:327:void setCurrentOffsetY(int) -> setCurrentOffsetY
    254:256:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    261:261:void setExpandedBounds(android.graphics.Rect) -> setExpandedBounds
    247:249:void setExpandedLetterSpacing(float) -> setExpandedLetterSpacing
    418:448:void setExpandedTextAppearance(int) -> setExpandedTextAppearance
    834:835:void setExpandedTextBlend(float) -> setExpandedTextBlend
    232:234:void setExpandedTextColor(android.content.res.ColorStateList) -> setExpandedTextColor
    361:363:void setExpandedTextGravity(int) -> setExpandedTextGravity
    211:213:void setExpandedTextSize(float) -> setExpandedTextSize
    468:469:void setExpandedTypeface(android.graphics.Typeface) -> setExpandedTypeface
    504:513:boolean setExpandedTypefaceInternal(android.graphics.Typeface) -> setExpandedTypefaceInternal
    554:558:void setExpansionFraction(float) -> setExpansionFraction
    341:341:void setFadeModeEnabled(boolean) -> setFadeModeEnabled
    331:332:void setFadeModeStartFraction(float) -> setFadeModeStartFraction
    1225:1225:void setHyphenationFrequency(int) -> setHyphenationFrequency
    965:975:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    1205:1205:void setLineSpacingAdd(float) -> setLineSpacingAdd
    1215:1215:void setLineSpacingMultiplier(float) -> setLineSpacingMultiplier
    1174:1177:void setMaxLines(int) -> setMaxLines
    201:202:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    595:595:void setRtlTextDirectionHeuristicsEnabled(boolean) -> setRtlTextDirectionHeuristicsEnabled
    563:566:boolean setState(int[]) -> setState
    1238:1238:void setStaticLayoutBuilderConfigurer(com.google.android.material.internal.StaticLayoutBuilderConfigurer) -> setStaticLayoutBuilderConfigurer
    1153:1157:void setText(java.lang.CharSequence) -> setText
    196:197:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    452:453:void setTitleTextEllipsize(android.text.TextUtils$TruncateAt) -> setTitleTextEllipsize
    474:477:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    881:881:boolean shouldDrawMultiline() -> shouldDrawMultiline
com.google.android.material.internal.CollapsingTextHelper$1 -> com.google.android.material.internal.CollapsingTextHelper$1:
# {"id":"sourceFile","fileName":"CollapsingTextHelper.java"}
    405:405:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    408:408:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.CollapsingTextHelper$2 -> com.google.android.material.internal.CollapsingTextHelper$2:
# {"id":"sourceFile","fileName":"CollapsingTextHelper.java"}
    439:439:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    442:442:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.ContextUtils -> com.google.android.material.internal.ContextUtils:
# {"id":"sourceFile","fileName":"ContextUtils.java"}
    41:45:android.app.Activity getActivity(android.content.Context) -> getActivity
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
# {"id":"sourceFile","fileName":"DescendantOffsetUtils.java"}
    37:38:void <clinit>() -> <clinit>
    83:84:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    89:99:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    50:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.EdgeToEdgeUtils -> com.google.android.material.internal.EdgeToEdgeUtils:
# {"id":"sourceFile","fileName":"EdgeToEdgeUtils.java"}
    83:111:void applyEdgeToEdge(android.view.Window,boolean,java.lang.Integer,java.lang.Integer) -> applyEdgeToEdge
    159:167:int getNavigationBarColor(android.content.Context,boolean) -> getNavigationBarColor
    142:152:int getStatusBarColor(android.content.Context,boolean) -> getStatusBarColor
    171:171:boolean isUsingLightSystemBar(int,boolean) -> isUsingLightSystemBar
    136:137:void setLightNavigationBar(android.view.Window,boolean) -> setLightNavigationBar
    123:124:void setLightStatusBar(android.view.Window,boolean) -> setLightStatusBar
com.google.android.material.internal.FadeThroughDrawable -> com.google.android.material.internal.FadeThroughDrawable:
# {"id":"sourceFile","fileName":"FadeThroughDrawable.java"}
    45:49:void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> <init>
    54:55:void draw(android.graphics.Canvas) -> draw
    72:72:int getIntrinsicHeight() -> getIntrinsicHeight
    67:67:int getIntrinsicWidth() -> getIntrinsicWidth
    82:82:int getMinimumHeight() -> getMinimumHeight
    77:77:int getMinimumWidth() -> getMinimumWidth
    0:0:int getOpacity() -> getOpacity
    111:111:boolean isStateful() -> isStateful
    87:94:void setAlpha(int) -> setAlpha
    60:62:void setBounds(int,int,int,int) -> setBounds
    99:101:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    123:130:void setProgress(float) -> setProgress
    116:117:boolean setState(int[]) -> setState
com.google.android.material.internal.FadeThroughUpdateListener -> com.google.android.material.internal.FadeThroughUpdateListener:
# {"id":"sourceFile","fileName":"FadeThroughUpdateListener.java"}
    40:43:void <init>(android.view.View,android.view.View) -> <init>
    48:54:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.internal.FadeThroughUtils -> com.google.android.material.internal.FadeThroughUtils:
# {"id":"sourceFile","fileName":"FadeThroughUtils.java"}
    29:33:void calculateFadeOutAndInAlphas(float,float[]) -> calculateFadeOutAndInAlphas
com.google.android.material.internal.FlowLayout -> com.google.android.material.internal.FlowLayout:
# {"id":"sourceFile","fileName":"FlowLayout.java"}
    50:50:void <init>(android.content.Context) -> <init>
    54:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:60:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    88:88:int getItemSpacing() -> getItemSpacing
    80:80:int getLineSpacing() -> getLineSpacing
    182:182:int getMeasuredDimension(int,int,int) -> getMeasuredDimension
    248:248:int getRowCount() -> getRowCount
    253:257:int getRowIndex(android.view.View) -> getRowIndex
    97:97:boolean isSingleLine() -> isSingleLine
    73:76:void loadFromAttributes(android.content.Context,android.util.AttributeSet) -> loadFromAttributes
    190:243:void onLayout(boolean,int,int,int,int) -> onLayout
    107:174:void onMeasure(int,int) -> onMeasure
    92:92:void setItemSpacing(int) -> setItemSpacing
    84:84:void setLineSpacing(int) -> setLineSpacing
    102:102:void setSingleLine(boolean) -> setSingleLine
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
# {"id":"sourceFile","fileName":"ForegroundLinearLayout.java"}
    54:54:void <init>(android.content.Context) -> <init>
    58:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    205:234:void draw(android.graphics.Canvas) -> draw
    242:244:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    137:139:void drawableStateChanged() -> drawableStateChanged
    188:188:android.graphics.drawable.Drawable getForeground() -> getForeground
    91:91:int getForegroundGravity() -> getForegroundGravity
    129:131:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    193:194:void onLayout(boolean,int,int,int,int) -> onLayout
    199:200:void onSizeChanged(int,int,int,int) -> onSizeChanged
    152:175:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    102:118:void setForegroundGravity(int) -> setForegroundGravity
    124:124:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.ManufacturerUtils -> com.google.android.material.internal.ManufacturerUtils:
# {"id":"sourceFile","fileName":"ManufacturerUtils.java"}
    53:53:boolean isDateInputKeyboardMissingSeparatorCharacters() -> isDateInputKeyboardMissingSeparatorCharacters
    41:41:boolean isLGEDevice() -> isLGEDevice
    36:36:boolean isMeizuDevice() -> isMeizuDevice
    46:46:boolean isSamsungDevice() -> isSamsungDevice
com.google.android.material.internal.MaterialCheckable -> com.google.android.material.internal.MaterialCheckable:
# {"id":"sourceFile","fileName":"MaterialCheckable.java"}
com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener -> com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener:
# {"id":"sourceFile","fileName":"MaterialCheckable.java"}
com.google.android.material.internal.MultiViewUpdateListener -> com.google.android.material.internal.MultiViewUpdateListener:
# {"id":"sourceFile","fileName":"MultiViewUpdateListener.java"}
    0:0:void $r8$lambda$Mtp5sBfS5LXd-63Z9XctnK3kqJE(android.animation.ValueAnimator,android.view.View) -> $r8$lambda$Mtp5sBfS5LXd-63Z9XctnK3kqJE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$Rryxfo13bMOcs5cmz2mcweOWiUY(android.animation.ValueAnimator,android.view.View) -> $r8$lambda$Rryxfo13bMOcs5cmz2mcweOWiUY
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$fJMU4cyqqeA8DD96LAqv3uCgNCo(android.animation.ValueAnimator,android.view.View) -> $r8$lambda$fJMU4cyqqeA8DD96LAqv3uCgNCo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$gtAYAqr0qsjIEvRsrfPVuv0tXPs(android.animation.ValueAnimator,android.view.View) -> $r8$lambda$gtAYAqr0qsjIEvRsrfPVuv0tXPs
      # {"id":"com.android.tools.r8.synthesized"}
    42:44:void <init>(com.google.android.material.internal.MultiViewUpdateListener$Listener,android.view.View[]) -> <init>
    75:75:com.google.android.material.internal.MultiViewUpdateListener alphaListener(android.view.View[]) -> alphaListener
    55:56:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    97:97:com.google.android.material.internal.MultiViewUpdateListener scaleListener(android.view.View[]) -> scaleListener
    88:88:void setAlpha(android.animation.ValueAnimator,android.view.View) -> setAlpha
    110:112:void setScale(android.animation.ValueAnimator,android.view.View) -> setScale
    134:134:void setTranslationX(android.animation.ValueAnimator,android.view.View) -> setTranslationX
    156:156:void setTranslationY(android.animation.ValueAnimator,android.view.View) -> setTranslationY
    121:121:com.google.android.material.internal.MultiViewUpdateListener translationXListener(android.view.View[]) -> translationXListener
    143:143:com.google.android.material.internal.MultiViewUpdateListener translationYListener(android.view.View[]) -> translationYListener
com.google.android.material.internal.MultiViewUpdateListener$$ExternalSyntheticLambda0 -> com.google.android.material.internal.MultiViewUpdateListener$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.internal.MultiViewUpdateListener$$InternalSyntheticLambda$2$6ac1a4ac045025182806301fad0e946d790410a6442ebaf78b8a6c6bf623d26b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.internal.MultiViewUpdateListener$$InternalSyntheticLambda$2$6ac1a4ac045025182806301fad0e946d790410a6442ebaf78b8a6c6bf623d26b$0.onAnimationUpdate(android.animation.ValueAnimator,android.view.View) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.MultiViewUpdateListener$$ExternalSyntheticLambda1 -> com.google.android.material.internal.MultiViewUpdateListener$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.internal.MultiViewUpdateListener$$InternalSyntheticLambda$2$7b327f87c1d965f774d9bdf9102ce46a03bb34d620af48ccf9ba9bd15a50edfb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.internal.MultiViewUpdateListener$$InternalSyntheticLambda$2$7b327f87c1d965f774d9bdf9102ce46a03bb34d620af48ccf9ba9bd15a50edfb$0.onAnimationUpdate(android.animation.ValueAnimator,android.view.View) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.MultiViewUpdateListener$$ExternalSyntheticLambda2 -> com.google.android.material.internal.MultiViewUpdateListener$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.internal.MultiViewUpdateListener$$InternalSyntheticLambda$2$97fa624734612a492f12bf319288cdca9037a5ce5f8b92578471e2ef5d06026b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.internal.MultiViewUpdateListener$$InternalSyntheticLambda$2$97fa624734612a492f12bf319288cdca9037a5ce5f8b92578471e2ef5d06026b$0.onAnimationUpdate(android.animation.ValueAnimator,android.view.View) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.MultiViewUpdateListener$$ExternalSyntheticLambda3 -> com.google.android.material.internal.MultiViewUpdateListener$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.internal.MultiViewUpdateListener$$InternalSyntheticLambda$2$fb3ee8f7e5d29de7890f88d884bf9abfc23814d68bfcc34b26207d95877adf21$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.internal.MultiViewUpdateListener$$InternalSyntheticLambda$2$fb3ee8f7e5d29de7890f88d884bf9abfc23814d68bfcc34b26207d95877adf21$0.onAnimationUpdate(android.animation.ValueAnimator,android.view.View) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.MultiViewUpdateListener$Listener -> com.google.android.material.internal.MultiViewUpdateListener$Listener:
# {"id":"sourceFile","fileName":"MultiViewUpdateListener.java"}
com.google.android.material.internal.NavigationMenu -> com.google.android.material.internal.NavigationMenu:
# {"id":"sourceFile","fileName":"NavigationMenu.java"}
    39:39:void <init>(android.content.Context) -> <init>
    45:47:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
# {"id":"sourceFile","fileName":"NavigationMenuItemView.java"}
    56:56:void <clinit>() -> <clinit>
    88:88:void <init>(android.content.Context) -> <init>
    92:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    137:150:void adjustAppearance() -> adjustAppearance
    176:182:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    190:190:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    108:127:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    258:260:int[] onCreateDrawableState(int) -> onCreateDrawableState
    0:0:boolean prefersCondensedTitle() -> prefersCondensedTitle
    156:159:void recycle() -> recycle
    164:170:void setActionView(android.view.View) -> setActionView
    200:203:void setCheckable(boolean) -> setCheckable
    210:213:void setChecked(boolean) -> setChecked
    287:287:void setHorizontalPadding(int) -> setHorizontalPadding
    222:239:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    291:291:void setIconPadding(int) -> setIconPadding
    243:243:void setIconSize(int) -> setIconSize
    266:270:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    295:295:void setMaxLines(int) -> setMaxLines
    283:283:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    0:0:void setShortcut(boolean,char) -> setShortcut
    275:275:void setTextAppearance(int) -> setTextAppearance
    279:279:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    195:195:void setTitle(java.lang.CharSequence) -> setTitle
    131:133:boolean shouldExpandActionArea() -> shouldExpandActionArea
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
# {"id":"sourceFile","fileName":"NavigationMenuItemView.java"}
    77:77:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    82:83:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuPresenter -> com.google.android.material.internal.NavigationMenuPresenter:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    62:486:void <init>() -> <init>
    62:62:int access$000(com.google.android.material.internal.NavigationMenuPresenter) -> access$000
    242:244:void addHeaderView(android.view.View) -> addHeaderView
    0:0:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    427:436:void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    0:0:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    0:0:boolean flagActionItems() -> flagActionItems
    232:232:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> getCheckedItem
    343:343:int getDividerInsetEnd() -> getDividerInsetEnd
    333:333:int getDividerInsetStart() -> getDividerInsetStart
    255:255:int getHeaderCount() -> getHeaderCount
    180:180:int getId() -> getId
    299:299:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    313:313:int getItemHorizontalPadding() -> getItemHorizontalPadding
    372:372:int getItemIconPadding() -> getItemIconPadding
    386:386:int getItemMaxLines() -> getItemMaxLines
    284:284:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    274:274:android.content.res.ColorStateList getItemTintList() -> getItemTintList
    323:323:int getItemVerticalPadding() -> getItemVerticalPadding
    120:136:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    363:363:int getSubheaderInsetEnd() -> getSubheaderInsetEnd
    353:353:int getSubheaderInsetStart() -> getSubheaderInsetStart
    236:237:android.view.View inflateHeaderView(int) -> inflateHeaderView
    111:115:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    158:159:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    209:221:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    190:202:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    0:0:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    405:407:void setBehindStatusBar(boolean) -> setBehindStatusBar
    227:227:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> setCheckedItem
    347:348:void setDividerInsetEnd(int) -> setDividerInsetEnd
    337:338:void setDividerInsetStart(int) -> setDividerInsetStart
    184:184:void setId(int) -> setId
    303:304:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    308:309:void setItemForeground(android.graphics.drawable.RippleDrawable) -> setItemForeground
    317:318:void setItemHorizontalPadding(int) -> setItemHorizontalPadding
    376:377:void setItemIconPadding(int) -> setItemIconPadding
    390:393:void setItemIconSize(int) -> setItemIconSize
    278:279:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    381:382:void setItemMaxLines(int) -> setItemMaxLines
    293:294:void setItemTextAppearance(int) -> setItemTextAppearance
    288:289:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    327:328:void setItemVerticalPadding(int) -> setItemVerticalPadding
    440:442:void setOverScrollMode(int) -> setOverScrollMode
    263:264:void setSubheaderColor(android.content.res.ColorStateList) -> setSubheaderColor
    367:368:void setSubheaderInsetEnd(int) -> setSubheaderInsetEnd
    357:358:void setSubheaderInsetStart(int) -> setSubheaderInsetStart
    268:269:void setSubheaderTextAppearance(int) -> setSubheaderTextAppearance
    398:399:void setUpdateSuspended(boolean) -> setUpdateSuspended
    141:142:void updateMenuView(boolean) -> updateMenuView
    419:423:void updateTopPadding() -> updateTopPadding
com.google.android.material.internal.NavigationMenuPresenter$1 -> com.google.android.material.internal.NavigationMenuPresenter$1:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    487:487:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    491:502:void onClick(android.view.View) -> onClick
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    479:479:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    517:522:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    507:507:int access$100(com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter,int) -> access$100
    666:670:int adjustItemPositionForA11yDelegate(int) -> adjustItemPositionForA11yDelegate
    763:764:void appendTransparentIconIfMissing(int,int) -> appendTransparentIconIfMissing
    785:803:android.os.Bundle createInstanceState() -> createInstanceState
    780:780:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> getCheckedItem
    532:532:int getItemCount() -> getItemCount
    0:0:long getItemId(int) -> getItemId
    537:550:int getItemViewType(int) -> getItemViewType
    856:858:int getRowCount() -> getRowCount
    507:507:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    571:636:void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int) -> onBindViewHolder
    507:507:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    558:564:com.google.android.material.internal.NavigationMenuPresenter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    507:507:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    678:679:void onViewRecycled(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder) -> onViewRecycled
    693:758:void prepareMenuItems() -> prepareMenuItems
    808:845:void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
    643:643:void setAccessibilityDelegate(android.view.View,int,boolean) -> setAccessibilityDelegate
    769:776:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> setCheckedItem
    851:851:void setUpdateSuspended(boolean) -> setUpdateSuspended
    684:685:void update() -> update
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter$1 -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter$1:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    645:645:void <init>(com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter,int,boolean) -> <init>
    649:657:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuItem:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    893:895:void <init>(int,int) -> <init>
    903:903:int getPaddingBottom() -> getPaddingBottom
    899:899:int getPaddingTop() -> getPaddingTop
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    877:878:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    882:882:androidx.appcompat.view.menu.MenuItemImpl getMenuItem() -> getMenuItem
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    915:916:void <init>(com.google.android.material.internal.NavigationMenuPresenter,androidx.recyclerview.widget.RecyclerView) -> <init>
    922:925:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    457:458:void <init>(android.view.LayoutInflater,android.view.ViewGroup,android.view.View$OnClickListener) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    472:472:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    465:465:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$ViewHolder:
# {"id":"sourceFile","fileName":"NavigationMenuPresenter.java"}
    449:449:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
# {"id":"sourceFile","fileName":"NavigationMenuView.java"}
    34:34:void <init>(android.content.Context) -> <init>
    38:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    0:0:int getWindowAnimations() -> getWindowAnimations
    0:0:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
com.google.android.material.internal.NavigationSubMenu -> com.google.android.material.internal.NavigationSubMenu:
# {"id":"sourceFile","fileName":"NavigationSubMenu.java"}
    37:37:void <init>(android.content.Context,com.google.android.material.internal.NavigationMenu,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    42:43:void onItemsChanged(boolean) -> onItemsChanged
com.google.android.material.internal.ParcelableSparseArray -> com.google.android.material.internal.ParcelableSparseArray:
# {"id":"sourceFile","fileName":"ParcelableSparseArray.java"}
    66:66:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    37:43:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    0:0:int describeContents() -> describeContents
    54:63:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseArray$1 -> com.google.android.material.internal.ParcelableSparseArray$1:
# {"id":"sourceFile","fileName":"ParcelableSparseArray.java"}
    67:67:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    71:71:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    77:77:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object[] newArray(int) -> newArray
    83:83:com.google.android.material.internal.ParcelableSparseArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseBooleanArray -> com.google.android.material.internal.ParcelableSparseBooleanArray:
# {"id":"sourceFile","fileName":"ParcelableSparseBooleanArray.java"}
    70:70:void <clinit>() -> <clinit>
    40:40:void <init>(int) -> <init>
    0:0:int describeContents() -> describeContents
    57:67:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseBooleanArray$1 -> com.google.android.material.internal.ParcelableSparseBooleanArray$1:
# {"id":"sourceFile","fileName":"ParcelableSparseBooleanArray.java"}
    71:71:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    75:85:com.google.android.material.internal.ParcelableSparseBooleanArray createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:java.lang.Object[] newArray(int) -> newArray
    94:94:com.google.android.material.internal.ParcelableSparseBooleanArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseIntArray -> com.google.android.material.internal.ParcelableSparseIntArray:
# {"id":"sourceFile","fileName":"ParcelableSparseIntArray.java"}
    70:70:void <clinit>() -> <clinit>
    40:40:void <init>(int) -> <init>
    0:0:int describeContents() -> describeContents
    57:67:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseIntArray$1 -> com.google.android.material.internal.ParcelableSparseIntArray$1:
# {"id":"sourceFile","fileName":"ParcelableSparseIntArray.java"}
    71:71:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    75:85:com.google.android.material.internal.ParcelableSparseIntArray createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:java.lang.Object[] newArray(int) -> newArray
    94:94:com.google.android.material.internal.ParcelableSparseIntArray[] newArray(int) -> newArray
com.google.android.material.internal.RectEvaluator -> com.google.android.material.internal.RectEvaluator:
# {"id":"sourceFile","fileName":"RectEvaluator.java"}
    36:37:void <init>(android.graphics.Rect) -> <init>
    31:31:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    42:47:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
com.google.android.material.internal.ReversableAnimatedValueInterpolator -> com.google.android.material.internal.ReversableAnimatedValueInterpolator:
# {"id":"sourceFile","fileName":"ReversableAnimatedValueInterpolator.java"}
    36:37:void <init>(android.animation.TimeInterpolator) -> <init>
    57:57:float getInterpolation(float) -> getInterpolation
    51:51:android.animation.TimeInterpolator of(boolean,android.animation.TimeInterpolator) -> of
com.google.android.material.internal.ScrimInsetsFrameLayout -> com.google.android.material.internal.ScrimInsetsFrameLayout:
# {"id":"sourceFile","fileName":"ScrimInsetsFrameLayout.java"}
    52:52:void <init>(android.content.Context) -> <init>
    56:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:74:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:155:void draw(android.graphics.Canvas) -> draw
    161:163:void onAttachedToWindow() -> onAttachedToWindow
    169:171:void onDetachedFromWindow() -> onDetachedFromWindow
    0:0:void onInsetsChanged(androidx.core.view.WindowInsetsCompat) -> onInsetsChanged
    106:106:void setDrawBottomInsetForeground(boolean) -> setDrawBottomInsetForeground
    110:110:void setDrawLeftInsetForeground(boolean) -> setDrawLeftInsetForeground
    114:114:void setDrawRightInsetForeground(boolean) -> setDrawRightInsetForeground
    102:102:void setDrawTopInsetForeground(boolean) -> setDrawTopInsetForeground
    98:98:void setScrimInsetForeground(android.graphics.drawable.Drawable) -> setScrimInsetForeground
com.google.android.material.internal.ScrimInsetsFrameLayout$1 -> com.google.android.material.internal.ScrimInsetsFrameLayout$1:
# {"id":"sourceFile","fileName":"ScrimInsetsFrameLayout.java"}
    76:76:void <init>(com.google.android.material.internal.ScrimInsetsFrameLayout) -> <init>
    80:91:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
# {"id":"sourceFile","fileName":"StateListAnimator.java"}
    37:44:void <init>() -> <init>
    62:64:void addState(int[],android.animation.ValueAnimator) -> addState
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
# {"id":"sourceFile","fileName":"StateListAnimator.java"}
    45:45:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    48:49:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
# {"id":"sourceFile","fileName":"StateListAnimator.java"}
    120:122:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.StaticLayoutBuilderCompat -> com.google.android.material.internal.StaticLayoutBuilderCompat:
# {"id":"sourceFile","fileName":"StaticLayoutBuilderCompat.java"}
    58:58:void <clinit>() -> <clinit>
    90:102:void <init>(java.lang.CharSequence,android.text.TextPaint,int) -> <init>
    246:309:android.text.StaticLayout build() -> build
    334:373:void createConstructorWithReflection() -> createConstructorWithReflection
    116:116:com.google.android.material.internal.StaticLayoutBuilderCompat obtain(java.lang.CharSequence,android.text.TextPaint,int) -> obtain
    128:128:com.google.android.material.internal.StaticLayoutBuilderCompat setAlignment(android.text.Layout$Alignment) -> setAlignment
    228:228:com.google.android.material.internal.StaticLayoutBuilderCompat setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    213:213:com.google.android.material.internal.StaticLayoutBuilderCompat setHyphenationFrequency(int) -> setHyphenationFrequency
    143:143:com.google.android.material.internal.StaticLayoutBuilderCompat setIncludePad(boolean) -> setIncludePad
    378:378:com.google.android.material.internal.StaticLayoutBuilderCompat setIsRtl(boolean) -> setIsRtl
    198:199:com.google.android.material.internal.StaticLayoutBuilderCompat setLineSpacing(float,float) -> setLineSpacing
    183:183:com.google.android.material.internal.StaticLayoutBuilderCompat setMaxLines(int) -> setMaxLines
    0:0:com.google.android.material.internal.StaticLayoutBuilderCompat setStaticLayoutBuilderConfigurer(com.google.android.material.internal.StaticLayoutBuilderConfigurer) -> setStaticLayoutBuilderConfigurer
com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.StaticLayout$Builder com.google.android.material.internal.StaticLayoutBuilderCompat$$InternalSyntheticApiModelOutline$1$885f1a5ee36ad76f0205a7ce4c9e2c716c15792dc899acdb92a88b86ee65d0fb$0.m(java.lang.CharSequence,int,int,android.text.TextPaint,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.StaticLayout$Builder com.google.android.material.internal.StaticLayoutBuilderCompat$$InternalSyntheticApiModelOutline$1$885f1a5ee36ad76f0205a7ce4c9e2c716c15792dc899acdb92a88b86ee65d0fb$1.m(android.text.StaticLayout$Builder,android.text.Layout$Alignment) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline2 -> com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.StaticLayout$Builder com.google.android.material.internal.StaticLayoutBuilderCompat$$InternalSyntheticApiModelOutline$1$885f1a5ee36ad76f0205a7ce4c9e2c716c15792dc899acdb92a88b86ee65d0fb$2.m(android.text.StaticLayout$Builder,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline3 -> com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.StaticLayout$Builder com.google.android.material.internal.StaticLayoutBuilderCompat$$InternalSyntheticApiModelOutline$1$885f1a5ee36ad76f0205a7ce4c9e2c716c15792dc899acdb92a88b86ee65d0fb$4.m(android.text.StaticLayout$Builder,android.text.TextUtils$TruncateAt) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline4 -> com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.StaticLayout$Builder com.google.android.material.internal.StaticLayoutBuilderCompat$$InternalSyntheticApiModelOutline$1$885f1a5ee36ad76f0205a7ce4c9e2c716c15792dc899acdb92a88b86ee65d0fb$5.m(android.text.StaticLayout$Builder,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline5 -> com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.StaticLayout$Builder com.google.android.material.internal.StaticLayoutBuilderCompat$$InternalSyntheticApiModelOutline$1$885f1a5ee36ad76f0205a7ce4c9e2c716c15792dc899acdb92a88b86ee65d0fb$6.m(android.text.StaticLayout$Builder,float,float) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline6 -> com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.StaticLayout$Builder com.google.android.material.internal.StaticLayoutBuilderCompat$$InternalSyntheticApiModelOutline$1$885f1a5ee36ad76f0205a7ce4c9e2c716c15792dc899acdb92a88b86ee65d0fb$7.m(android.text.StaticLayout$Builder,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline7 -> com.google.android.material.internal.StaticLayoutBuilderCompat$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.text.StaticLayout com.google.android.material.internal.StaticLayoutBuilderCompat$$InternalSyntheticApiModelOutline$1$885f1a5ee36ad76f0205a7ce4c9e2c716c15792dc899acdb92a88b86ee65d0fb$8.m(android.text.StaticLayout$Builder) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException -> com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException:
# {"id":"sourceFile","fileName":"StaticLayoutBuilderCompat.java"}
    385:385:void <init>(java.lang.Throwable) -> <init>
com.google.android.material.internal.StaticLayoutBuilderConfigurer -> com.google.android.material.internal.StaticLayoutBuilderConfigurer:
# {"id":"sourceFile","fileName":"StaticLayoutBuilderConfigurer.java"}
com.google.android.material.internal.TextDrawableHelper -> com.google.android.material.internal.TextDrawableHelper:
# {"id":"sourceFile","fileName":"TextDrawableHelper.java"}
    41:77:void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> <init>
    39:39:boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean) -> access$002
    39:39:java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper) -> access$100
    113:113:float calculateTextWidth(java.lang.CharSequence) -> calculateTextWidth
    123:123:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    87:87:android.text.TextPaint getTextPaint() -> getTextPaint
    100:105:float getTextWidth(java.lang.String) -> getTextWidth
    82:82:void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> setDelegate
    134:150:void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context) -> setTextAppearance
    91:91:void setTextWidthDirty(boolean) -> setTextWidthDirty
    156:156:void updateTextPaintDrawState(android.content.Context) -> updateTextPaintDrawState
com.google.android.material.internal.TextDrawableHelper$1 -> com.google.android.material.internal.TextDrawableHelper$1:
# {"id":"sourceFile","fileName":"TextDrawableHelper.java"}
    44:44:void <init>(com.google.android.material.internal.TextDrawableHelper) -> <init>
    59:63:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    50:53:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate -> com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate:
# {"id":"sourceFile","fileName":"TextDrawableHelper.java"}
com.google.android.material.internal.TextScale -> com.google.android.material.internal.TextScale:
# {"id":"sourceFile","fileName":"TextScale.java"}
    34:34:void <init>() -> <init>
    44:44:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    39:39:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    48:50:void captureValues(androidx.transition.TransitionValues) -> captureValues
    59:78:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
com.google.android.material.internal.TextScale$1 -> com.google.android.material.internal.TextScale$1:
# {"id":"sourceFile","fileName":"TextScale.java"}
    79:79:void <init>(com.google.android.material.internal.TextScale,android.widget.TextView) -> <init>
    82:84:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.internal.TextWatcherAdapter -> com.google.android.material.internal.TextWatcherAdapter:
# {"id":"sourceFile","fileName":"TextWatcherAdapter.java"}
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    0:0:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
# {"id":"sourceFile","fileName":"ThemeEnforcement.java"}
    44:47:void <clinit>() -> <clinit>
    212:212:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    128:147:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    216:216:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    157:186:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    246:247:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    200:207:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    228:229:boolean isMaterial3Theme(android.content.Context) -> isMaterial3Theme
    233:240:boolean isTheme(android.content.Context,int[]) -> isTheme
    76:82:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    114:120:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
com.google.android.material.internal.ToolbarUtils -> com.google.android.material.internal.ToolbarUtils:
# {"id":"sourceFile","fileName":"ToolbarUtils.java"}
    48:48:void <clinit>() -> <clinit>
    125:128:androidx.appcompat.widget.ActionMenuView getActionMenuView(androidx.appcompat.widget.Toolbar) -> getActionMenuView
    96:103:android.widget.ImageView getImageView(androidx.appcompat.widget.Toolbar,android.graphics.drawable.Drawable) -> getImageView
    88:88:android.widget.ImageView getLogoImageView(androidx.appcompat.widget.Toolbar) -> getLogoImageView
    136:144:android.widget.ImageButton getNavigationIconButton(androidx.appcompat.widget.Toolbar) -> getNavigationIconButton
    68:69:android.widget.TextView getSubtitleTextView(androidx.appcompat.widget.Toolbar) -> getSubtitleTextView
    73:79:java.util.List getTextViewsWithText(androidx.appcompat.widget.Toolbar,java.lang.CharSequence) -> getTextViewsWithText
    62:63:android.widget.TextView getTitleTextView(androidx.appcompat.widget.Toolbar) -> getTitleTextView
com.google.android.material.internal.ToolbarUtils$1 -> com.google.android.material.internal.ToolbarUtils$1:
# {"id":"sourceFile","fileName":"ToolbarUtils.java"}
    49:49:int compare(java.lang.Object,java.lang.Object) -> compare
    52:52:int compare(android.view.View,android.view.View) -> compare
com.google.android.material.internal.TouchObserverFrameLayout -> com.google.android.material.internal.TouchObserverFrameLayout:
# {"id":"sourceFile","fileName":"TouchObserverFrameLayout.java"}
    40:40:void <init>(android.content.Context) -> <init>
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:57:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    62:62:void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
com.google.android.material.internal.ViewOverlayApi18 -> com.google.android.material.internal.ViewOverlayApi18:
# {"id":"sourceFile","fileName":"ViewOverlayApi18.java"}
    30:31:void <init>(android.view.View) -> <init>
    36:36:void add(android.graphics.drawable.Drawable) -> add
    41:41:void remove(android.graphics.drawable.Drawable) -> remove
com.google.android.material.internal.ViewOverlayImpl -> com.google.android.material.internal.ViewOverlayImpl:
# {"id":"sourceFile","fileName":"ViewOverlayImpl.java"}
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    115:115:android.graphics.Rect calculateRectFromBounds(android.view.View) -> calculateRectFromBounds
    120:121:android.graphics.Rect calculateRectFromBounds(android.view.View,int) -> calculateRectFromBounds
    243:255:void doOnApplyWindowInsets(android.view.View,android.util.AttributeSet,int,int,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    297:314:void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    160:161:float dpToPx(android.content.Context,int) -> dpToPx
    428:429:java.lang.Integer getBackgroundColor(android.view.View) -> getBackgroundColor
    374:385:android.view.ViewGroup getContentView(android.view.View) -> getContentView
    396:396:com.google.android.material.internal.ViewOverlayImpl getContentViewOverlay(android.view.View) -> getContentViewOverlay
    103:103:android.view.inputmethod.InputMethodManager getInputMethodManager(android.view.View) -> getInputMethodManager
    362:362:com.google.android.material.internal.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    344:347:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    84:84:void hideKeyboard(android.view.View) -> hideKeyboard
    89:97:void hideKeyboard(android.view.View,boolean) -> hideKeyboard
    156:156:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    139:149:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    319:324:void requestApplyInsetsWhenAttached(android.view.View) -> requestApplyInsetsWhenAttached
    165:166:void requestFocusAndShowKeyboard(android.view.View) -> requestFocusAndShowKeyboard
    74:80:void showKeyboard(android.view.View,boolean) -> showKeyboard
com.google.android.material.internal.ViewUtils$1 -> com.google.android.material.internal.ViewUtils$1:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    167:167:void <init>(android.view.View) -> <init>
    170:173:void run() -> run
com.google.android.material.internal.ViewUtils$2 -> com.google.android.material.internal.ViewUtils$2:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    257:257:void <init>(boolean,boolean,boolean,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> <init>
    264:284:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$3 -> com.google.android.material.internal.ViewUtils$3:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    307:307:void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    310:310:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$4 -> com.google.android.material.internal.ViewUtils$4:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    328:329:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener -> com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
com.google.android.material.internal.ViewUtils$RelativePadding -> com.google.android.material.internal.ViewUtils$RelativePadding:
# {"id":"sourceFile","fileName":"ViewUtils.java"}
    203:207:void <init>(int,int,int,int) -> <init>
    210:214:void <init>(com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    219:219:void applyToView(android.view.View) -> applyToView
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
# {"id":"sourceFile","fileName":"VisibilityAwareImageButton.java"}
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:64:int getUserSetVisibility() -> getUserSetVisibility
    57:59:void internalSetVisibility(int,boolean) -> internalSetVisibility
    53:53:void setVisibility(int) -> setVisibility
com.google.android.material.materialswitch.MaterialSwitch -> com.google.android.material.materialswitch.MaterialSwitch:
# {"id":"sourceFile","fileName":"MaterialSwitch.java"}
    48:49:void <clinit>() -> <clinit>
    68:68:void <init>(android.content.Context) -> <init>
    72:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:111:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    143:143:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    194:194:android.graphics.drawable.Drawable getThumbIconDrawable() -> getThumbIconDrawable
    221:221:android.content.res.ColorStateList getThumbIconTintList() -> getThumbIconTintList
    245:245:android.graphics.PorterDuff$Mode getThumbIconTintMode() -> getThumbIconTintMode
    155:155:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    308:308:android.graphics.drawable.Drawable getTrackDecorationDrawable() -> getTrackDecorationDrawable
    335:335:android.content.res.ColorStateList getTrackDecorationTintList() -> getTrackDecorationTintList
    359:359:android.graphics.PorterDuff$Mode getTrackDecorationTintMode() -> getTrackDecorationTintMode
    257:257:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    269:269:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    116:117:void invalidate() -> invalidate
    122:129:int[] onCreateDrawableState(int) -> onCreateDrawableState
    363:375:void refreshThumbDrawable() -> refreshThumbDrawable
    379:400:void refreshTrackDrawable() -> refreshTrackDrawable
    458:462:void setInterpolatedDrawableTintIfPossible(android.graphics.drawable.Drawable,android.content.res.ColorStateList,int[],int[],float) -> setInterpolatedDrawableTintIfPossible
    136:137:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    183:184:void setThumbIconDrawable(android.graphics.drawable.Drawable) -> setThumbIconDrawable
    172:172:void setThumbIconResource(int) -> setThumbIconResource
    210:211:void setThumbIconTintList(android.content.res.ColorStateList) -> setThumbIconTintList
    234:235:void setThumbIconTintMode(android.graphics.PorterDuff$Mode) -> setThumbIconTintMode
    148:149:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    160:161:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    297:298:void setTrackDecorationDrawable(android.graphics.drawable.Drawable) -> setTrackDecorationDrawable
    286:286:void setTrackDecorationResource(int) -> setTrackDecorationResource
    324:325:void setTrackDecorationTintList(android.content.res.ColorStateList) -> setTrackDecorationTintList
    348:349:void setTrackDecorationTintMode(android.graphics.PorterDuff$Mode) -> setTrackDecorationTintMode
    250:251:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    262:263:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    274:275:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    404:434:void updateDrawableTints() -> updateDrawableTints
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
# {"id":"sourceFile","fileName":"MathUtils.java"}
    30:30:float dist(float,float,float,float) -> dist
    65:69:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
    0:0:boolean geq(float,float,float) -> geq
    0:0:float lerp(float,float,float) -> lerp
    0:0:float max(float,float,float,float) -> max
com.google.android.material.motion.MotionUtils -> com.google.android.material.motion.MotionUtils:
# {"id":"sourceFile","fileName":"MotionUtils.java"}
    129:131:float getLegacyControlPoint(java.lang.String[],int) -> getLegacyControlPoint
    123:125:java.lang.String getLegacyEasingContent(java.lang.String,java.lang.String) -> getLegacyEasingContent
    89:108:android.animation.TimeInterpolator getLegacyThemeInterpolator(java.lang.String) -> getLegacyThemeInterpolator
    113:114:boolean isLegacyEasingAttribute(java.lang.String) -> isLegacyEasingAttribute
    118:119:boolean isLegacyEasingType(java.lang.String,java.lang.String) -> isLegacyEasingType
    50:50:int resolveThemeDuration(android.content.Context,int,int) -> resolveThemeDuration
    68:85:android.animation.TimeInterpolator resolveThemeInterpolator(android.content.Context,int,android.animation.TimeInterpolator) -> resolveThemeInterpolator
com.google.android.material.navigation.NavigationBarItemView -> com.google.android.material.navigation.NavigationBarItemView:
# {"id":"sourceFile","fileName":"NavigationBarItemView.java"}
    83:113:void <clinit>() -> <clinit>
    85:158:void <init>(android.content.Context) -> <init>
    81:81:android.widget.ImageView access$200(com.google.android.material.navigation.NavigationBarItemView) -> access$200
    81:81:void access$300(com.google.android.material.navigation.NavigationBarItemView,android.view.View) -> access$300
    81:81:void access$400(com.google.android.material.navigation.NavigationBarItemView,int) -> access$400
    81:81:void access$500(com.google.android.material.navigation.NavigationBarItemView,float,float) -> access$500
    669:671:void calculateTextScaleFactors(float,float) -> calculateTextScaleFactors
    232:235:void clear() -> clear
    745:748:android.graphics.drawable.Drawable createItemBackgroundCompat(android.content.res.ColorStateList) -> createItemBackgroundCompat
    880:883:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    860:864:android.graphics.drawable.Drawable getActiveIndicatorDrawable() -> getActiveIndicatorDrawable
    907:907:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    956:957:android.widget.FrameLayout getCustomParentForBadge(android.view.View) -> getCustomParentForBadge
    246:246:android.view.View getIconOrContainer() -> getIconOrContainer
    997:997:int getItemBackgroundResId() -> getItemBackgroundResId
    276:276:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    1007:1007:int getItemDefaultMarginResId() -> getItemDefaultMarginResId
    254:254:int getItemPosition() -> getItemPosition
    525:530:int getItemVisiblePosition() -> getItemVisiblePosition
    979:987:int getSuggestedIconHeight() -> getSuggestedIconHeight
    965:974:int getSuggestedIconWidth() -> getSuggestedIconWidth
    190:193:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    181:185:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    915:915:boolean hasBadge() -> hasBadge
    199:220:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    829:829:boolean isActiveIndicatorResizeableAndUnlabeled() -> isActiveIndicatorResizeableAndUnlabeled
    349:377:void maybeAnimateActiveIndicatorToProgress(float) -> maybeAnimateActiveIndicatorToProgress
    577:579:int[] onCreateDrawableState(int) -> onCreateDrawableState
    493:515:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    304:310:void onSizeChanged(int,int,int,int) -> onSizeChanged
    0:0:boolean prefersCondensedTitle() -> prefersCondensedTitle
    387:388:void refreshChecked() -> refreshChecked
    702:734:void refreshItemBackground() -> refreshItemBackground
    911:911:void removeBadge() -> removeBadge
    869:874:void setActiveIndicatorDrawable(android.graphics.drawable.Drawable) -> setActiveIndicatorDrawable
    782:786:void setActiveIndicatorEnabled(boolean) -> setActiveIndicatorEnabled
    841:842:void setActiveIndicatorHeight(int) -> setActiveIndicatorHeight
    853:854:void setActiveIndicatorMarginHorizontal(int) -> setActiveIndicatorMarginHorizontal
    338:341:void setActiveIndicatorProgress(float,float) -> setActiveIndicatorProgress
    888:888:void setActiveIndicatorResizeable(boolean) -> setActiveIndicatorResizeable
    800:801:void setActiveIndicatorWidth(int) -> setActiveIndicatorWidth
    892:901:void setBadge(com.google.android.material.badge.BadgeDrawable) -> setBadge
    299:299:void setCheckable(boolean) -> setCheckable
    394:488:void setChecked(boolean) -> setChecked
    561:570:void setEnabled(boolean) -> setEnabled
    589:604:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    626:629:void setIconSize(int) -> setIconSize
    618:621:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    676:677:void setItemBackground(int) -> setItemBackground
    681:685:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    774:776:void setItemPaddingBottom(int) -> setItemPaddingBottom
    766:768:void setItemPaddingTop(int) -> setItemPaddingTop
    250:250:void setItemPosition(int) -> setItemPosition
    689:690:void setItemRippleColor(android.content.res.ColorStateList) -> setItemRippleColor
    265:269:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    258:260:void setShifting(boolean) -> setShifting
    0:0:void setShortcut(boolean,char) -> setShortcut
    638:641:void setTextAppearanceActive(int) -> setTextAppearanceActive
    633:634:void setTextAppearanceInactive(int) -> setTextAppearanceInactive
    653:657:void setTextAppearanceWithoutFontScaling(android.widget.TextView,int) -> setTextAppearanceWithoutFontScaling
    663:664:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    281:293:void setTitle(java.lang.CharSequence) -> setTitle
    549:551:void setViewScaleValues(android.view.View,float,float,int) -> setViewScaleValues
    538:544:void setViewTopMarginAndGravity(android.view.View,int,int) -> setViewTopMarginAndGravity
    927:936:void tryAttachBadgeToAnchor(android.view.View) -> tryAttachBadgeToAnchor
    941:951:void tryRemoveBadgeFromAnchor(android.view.View) -> tryRemoveBadgeFromAnchor
    919:923:void tryUpdateBadgeBounds(android.view.View) -> tryUpdateBadgeBounds
    813:825:void updateActiveIndicatorLayoutParams(int) -> updateActiveIndicatorLayoutParams
    320:323:void updateActiveIndicatorTransform() -> updateActiveIndicatorTransform
    555:556:void updateViewPaddingBottom(android.view.View,int) -> updateViewPaddingBottom
com.google.android.material.navigation.NavigationBarItemView$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.navigation.NavigationBarItemView$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.navigation.NavigationBarItemView$$InternalSyntheticApiModelOutline$1$c1142aaa50247fbdc02d16fef833aa95d6e5257ec67d9ac80b7feb3136a8c12f$0.m(com.google.android.material.navigation.NavigationBarItemView,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.navigation.NavigationBarItemView$1 -> com.google.android.material.navigation.NavigationBarItemView$1:
# {"id":"sourceFile","fileName":"NavigationBarItemView.java"}
    159:159:void <init>(com.google.android.material.navigation.NavigationBarItemView) -> <init>
    171:172:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.navigation.NavigationBarItemView$2 -> com.google.android.material.navigation.NavigationBarItemView$2:
# {"id":"sourceFile","fileName":"NavigationBarItemView.java"}
    311:311:void <init>(com.google.android.material.navigation.NavigationBarItemView,int) -> <init>
    314:314:void run() -> run
com.google.android.material.navigation.NavigationBarItemView$3 -> com.google.android.material.navigation.NavigationBarItemView$3:
# {"id":"sourceFile","fileName":"NavigationBarItemView.java"}
    360:360:void <init>(com.google.android.material.navigation.NavigationBarItemView,float) -> <init>
    363:364:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.navigation.NavigationBarItemView$ActiveIndicatorTransform -> com.google.android.material.navigation.NavigationBarItemView$ActiveIndicatorTransform:
# {"id":"sourceFile","fileName":"NavigationBarItemView.java"}
    1027:1027:void <init>(com.google.android.material.navigation.NavigationBarItemView$1) -> <init>
    1046:1046:float calculateAlpha(float,float) -> calculateAlpha
    1052:1052:float calculateScaleX(float,float) -> calculateScaleX
    0:0:float calculateScaleY(float,float) -> calculateScaleY
    1076:1078:void updateForProgress(float,float,android.view.View) -> updateForProgress
com.google.android.material.navigation.NavigationBarItemView$ActiveIndicatorUnlabeledTransform -> com.google.android.material.navigation.NavigationBarItemView$ActiveIndicatorUnlabeledTransform:
# {"id":"sourceFile","fileName":"NavigationBarItemView.java"}
    1089:1089:void <init>() -> <init>
    1089:1089:void <init>(com.google.android.material.navigation.NavigationBarItemView$1) -> <init>
    1093:1093:float calculateScaleY(float,float) -> calculateScaleY
com.google.android.material.navigation.NavigationBarMenu -> com.google.android.material.navigation.NavigationBarMenu:
# {"id":"sourceFile","fileName":"NavigationBarMenu.java"}
    44:46:void <init>(android.content.Context,java.lang.Class,int) -> <init>
    65:81:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    57:58:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.navigation.NavigationBarMenuView -> com.google.android.material.navigation.NavigationBarMenuView:
# {"id":"sourceFile","fileName":"NavigationBarMenuView.java"}
    69:70:void <clinit>() -> <clinit>
    74:145:void <init>(android.content.Context) -> <init>
    65:65:com.google.android.material.navigation.NavigationBarPresenter access$000(com.google.android.material.navigation.NavigationBarMenuView) -> access$000
    65:65:androidx.appcompat.view.menu.MenuBuilder access$100(com.google.android.material.navigation.NavigationBarMenuView) -> access$100
    681:747:void buildMenuView() -> buildMenuView
    656:671:android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    531:534:android.graphics.drawable.Drawable createItemActiveIndicatorDrawable() -> createItemActiveIndicatorDrawable
    819:819:android.util.SparseArray getBadgeDrawables() -> getBadgeDrawables
    191:191:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    503:503:android.content.res.ColorStateList getItemActiveIndicatorColor() -> getItemActiveIndicatorColor
    360:360:boolean getItemActiveIndicatorEnabled() -> getItemActiveIndicatorEnabled
    408:408:int getItemActiveIndicatorHeight() -> getItemActiveIndicatorHeight
    433:433:int getItemActiveIndicatorMarginHorizontal() -> getItemActiveIndicatorMarginHorizontal
    458:458:com.google.android.material.shape.ShapeAppearanceModel getItemActiveIndicatorShapeAppearance() -> getItemActiveIndicatorShapeAppearance
    384:384:int getItemActiveIndicatorWidth() -> getItemActiveIndicatorWidth
    599:604:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    549:549:int getItemBackgroundRes() -> getItemBackgroundRes
    213:213:int getItemIconSize() -> getItemIconSize
    339:339:int getItemPaddingBottom() -> getItemPaddingBottom
    318:318:int getItemPaddingTop() -> getItemPaddingTop
    589:589:android.content.res.ColorStateList getItemRippleColor() -> getItemRippleColor
    295:295:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    266:266:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    237:237:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    631:631:int getLabelVisibilityMode() -> getLabelVisibilityMode
    927:927:androidx.appcompat.view.menu.MenuBuilder getMenu() -> getMenu
    787:789:com.google.android.material.navigation.NavigationBarItemView getNewItem() -> getNewItem
    795:795:int getSelectedItemId() -> getSelectedItemId
    922:922:int getSelectedItemPosition() -> getSelectedItemPosition
    0:0:int getWindowAnimations() -> getWindowAnimations
    150:150:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    0:0:boolean isShifting(int,int) -> isShifting
    0:0:boolean isValidId(int) -> isValidId
    160:165:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    890:899:void removeUnusedBadges() -> removeUnusedBadges
    823:832:void restoreBadgeDrawables(android.util.SparseArray) -> restoreBadgeDrawables
    877:885:void setBadgeIfNeeded(com.google.android.material.navigation.NavigationBarItemView) -> setBadgeIfNeeded
    176:179:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    512:515:void setItemActiveIndicatorColor(android.content.res.ColorStateList) -> setItemActiveIndicatorColor
    369:372:void setItemActiveIndicatorEnabled(boolean) -> setItemActiveIndicatorEnabled
    417:420:void setItemActiveIndicatorHeight(int) -> setItemActiveIndicatorHeight
    443:446:void setItemActiveIndicatorMarginHorizontal(int) -> setItemActiveIndicatorMarginHorizontal
    488:491:void setItemActiveIndicatorResizeable(boolean) -> setItemActiveIndicatorResizeable
    468:471:void setItemActiveIndicatorShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setItemActiveIndicatorShapeAppearance
    393:396:void setItemActiveIndicatorWidth(int) -> setItemActiveIndicatorWidth
    558:561:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    304:307:void setItemBackgroundRes(int) -> setItemBackgroundRes
    202:205:void setItemIconSize(int) -> setItemIconSize
    641:648:void setItemOnTouchListener(int,android.view.View$OnTouchListener) -> setItemOnTouchListener
    346:349:void setItemPaddingBottom(int) -> setItemPaddingBottom
    326:329:void setItemPaddingTop(int) -> setItemPaddingTop
    574:577:void setItemRippleColor(android.content.res.ColorStateList) -> setItemRippleColor
    275:282:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    246:253:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    222:225:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    622:622:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    676:676:void setPresenter(com.google.android.material.navigation.NavigationBarPresenter) -> setPresenter
    806:812:void tryRestoreSelectedItemId(int) -> tryRestoreSelectedItemId
    751:782:void updateMenuView() -> updateMenuView
com.google.android.material.navigation.NavigationBarMenuView$1 -> com.google.android.material.navigation.NavigationBarMenuView$1:
# {"id":"sourceFile","fileName":"NavigationBarMenuView.java"}
    134:134:void <init>(com.google.android.material.navigation.NavigationBarMenuView) -> <init>
    137:140:void onClick(android.view.View) -> onClick
com.google.android.material.navigation.NavigationBarPresenter -> com.google.android.material.navigation.NavigationBarPresenter:
# {"id":"sourceFile","fileName":"NavigationBarPresenter.java"}
    44:47:void <init>() -> <init>
    0:0:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    0:0:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    0:0:boolean flagActionItems() -> flagActionItems
    110:110:int getId() -> getId
    56:57:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    0:0:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    125:130:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    116:119:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    0:0:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    105:105:void setId(int) -> setId
    51:51:void setMenuView(com.google.android.material.navigation.NavigationBarMenuView) -> setMenuView
    135:135:void setUpdateSuspended(boolean) -> setUpdateSuspended
    68:74:void updateMenuView(boolean) -> updateMenuView
com.google.android.material.navigation.NavigationBarPresenter$SavedState -> com.google.android.material.navigation.NavigationBarPresenter$SavedState:
# {"id":"sourceFile","fileName":"NavigationBarPresenter.java"}
    160:160:void <clinit>() -> <clinit>
    144:146:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    156:157:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationBarPresenter$SavedState$1 -> com.google.android.material.navigation.NavigationBarPresenter$SavedState$1:
# {"id":"sourceFile","fileName":"NavigationBarPresenter.java"}
    161:161:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    165:165:com.google.android.material.navigation.NavigationBarPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    161:161:java.lang.Object[] newArray(int) -> newArray
    171:171:com.google.android.material.navigation.NavigationBarPresenter$SavedState[] newArray(int) -> newArray
com.google.android.material.navigation.NavigationBarView -> com.google.android.material.navigation.NavigationBarView:
# {"id":"sourceFile","fileName":"NavigationBarView.java"}
    127:283:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    80:80:com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener access$000(com.google.android.material.navigation.NavigationBarView) -> access$000
    80:80:com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener access$100(com.google.android.material.navigation.NavigationBarView) -> access$100
    301:307:com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(android.content.Context) -> createMaterialShapeDrawableBackground
    675:675:android.content.res.ColorStateList getItemActiveIndicatorColor() -> getItemActiveIndicatorColor
    615:615:int getItemActiveIndicatorHeight() -> getItemActiveIndicatorHeight
    635:635:int getItemActiveIndicatorMarginHorizontal() -> getItemActiveIndicatorMarginHorizontal
    655:655:com.google.android.material.shape.ShapeAppearanceModel getItemActiveIndicatorShapeAppearance() -> getItemActiveIndicatorShapeAppearance
    596:596:int getItemActiveIndicatorWidth() -> getItemActiveIndicatorWidth
    499:499:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    475:475:int getItemBackgroundResource() -> getItemBackgroundResource
    438:438:int getItemIconSize() -> getItemIconSize
    393:393:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    561:561:int getItemPaddingBottom() -> getItemPaddingBottom
    545:545:int getItemPaddingTop() -> getItemPaddingTop
    524:524:android.content.res.ColorStateList getItemRippleColor() -> getItemRippleColor
    779:779:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    760:760:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    451:451:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    741:741:int getLabelVisibilityMode() -> getLabelVisibilityMode
    357:357:android.view.Menu getMenu() -> getMenu
    865:868:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    368:368:androidx.appcompat.view.menu.MenuView getMenuView() -> getMenuView
    879:879:com.google.android.material.navigation.NavigationBarPresenter getPresenter() -> getPresenter
    694:694:int getSelectedItemId() -> getSelectedItemId
    379:382:void inflateMenu(int) -> inflateMenu
    313:315:void onAttachedToWindow() -> onAttachedToWindow
    894:900:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    885:888:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    326:328:void setElevation(float) -> setElevation
    684:684:void setItemActiveIndicatorColor(android.content.res.ColorStateList) -> setItemActiveIndicatorColor
    586:586:void setItemActiveIndicatorEnabled(boolean) -> setItemActiveIndicatorEnabled
    624:624:void setItemActiveIndicatorHeight(int) -> setItemActiveIndicatorHeight
    645:645:void setItemActiveIndicatorMarginHorizontal(int) -> setItemActiveIndicatorMarginHorizontal
    665:665:void setItemActiveIndicatorShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setItemActiveIndicatorShapeAppearance
    605:605:void setItemActiveIndicatorWidth(int) -> setItemActiveIndicatorWidth
    512:512:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    488:488:void setItemBackgroundResource(int) -> setItemBackgroundResource
    415:415:void setItemIconSize(int) -> setItemIconSize
    427:427:void setItemIconSizeRes(int) -> setItemIconSizeRes
    403:403:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    787:787:void setItemOnTouchListener(int,android.view.View$OnTouchListener) -> setItemOnTouchListener
    568:568:void setItemPaddingBottom(int) -> setItemPaddingBottom
    553:553:void setItemPaddingTop(int) -> setItemPaddingTop
    536:536:void setItemRippleColor(android.content.res.ColorStateList) -> setItemRippleColor
    769:769:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    750:750:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    462:462:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    727:729:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    0:0:void setOnItemReselectedListener(com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener) -> setOnItemReselectedListener
    0:0:void setOnItemSelectedListener(com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener) -> setOnItemSelectedListener
    704:707:void setSelectedItemId(int) -> setSelectedItemId
com.google.android.material.navigation.NavigationBarView$1 -> com.google.android.material.navigation.NavigationBarView$1:
# {"id":"sourceFile","fileName":"NavigationBarView.java"}
    284:284:void <init>(com.google.android.material.navigation.NavigationBarView) -> <init>
    287:291:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    0:0:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener -> com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener:
# {"id":"sourceFile","fileName":"NavigationBarView.java"}
com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener -> com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener:
# {"id":"sourceFile","fileName":"NavigationBarView.java"}
com.google.android.material.navigation.NavigationBarView$SavedState -> com.google.android.material.navigation.NavigationBarView$SavedState:
# {"id":"sourceFile","fileName":"NavigationBarView.java"}
    928:928:void <clinit>() -> <clinit>
    907:907:void <init>(android.os.Parcelable) -> <init>
    911:915:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    925:925:void readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    920:921:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationBarView$SavedState$1 -> com.google.android.material.navigation.NavigationBarView$SavedState$1:
# {"id":"sourceFile","fileName":"NavigationBarView.java"}
    929:929:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    929:929:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    933:933:com.google.android.material.navigation.NavigationBarView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    939:939:com.google.android.material.navigation.NavigationBarView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    929:929:java.lang.Object[] newArray(int) -> newArray
    945:945:com.google.android.material.navigation.NavigationBarView$SavedState[] newArray(int) -> newArray
com.google.android.material.navigation.NavigationView -> com.google.android.material.navigation.NavigationView:
# {"id":"sourceFile","fileName":"NavigationView.java"}
    111:114:void <clinit>() -> <clinit>
    137:137:void <init>(android.content.Context) -> <init>
    141:141:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    118:336:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:109:int[] access$000(com.google.android.material.navigation.NavigationView) -> access$000
    109:109:com.google.android.material.internal.NavigationMenuPresenter access$100(com.google.android.material.navigation.NavigationView) -> access$100
    927:942:android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    425:427:android.graphics.drawable.Drawable createDefaultItemBackground(androidx.appcompat.widget.TintTypedArray) -> createDefaultItemBackground
    433:447:android.graphics.drawable.Drawable createDefaultItemDrawable(androidx.appcompat.widget.TintTypedArray,android.content.res.ColorStateList) -> createDefaultItemDrawable
    501:509:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    784:784:android.view.MenuItem getCheckedItem() -> getCheckedItem
    878:878:int getDividerInsetEnd() -> getDividerInsetEnd
    863:863:int getDividerInsetStart() -> getDividerInsetStart
    573:573:int getHeaderCount() -> getHeaderCount
    637:637:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    669:669:int getItemHorizontalPadding() -> getItemHorizontalPadding
    731:731:int getItemIconPadding() -> getItemIconPadding
    595:595:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    821:821:int getItemMaxLines() -> getItemMaxLines
    616:616:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    700:700:int getItemVerticalPadding() -> getItemVerticalPadding
    536:536:android.view.Menu getMenu() -> getMenu
    919:922:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    908:908:int getSubheaderInsetEnd() -> getSubheaderInsetEnd
    893:893:int getSubheaderInsetStart() -> getSubheaderInsetStart
    393:394:boolean hasShapeAppearance(androidx.appcompat.widget.TintTypedArray) -> hasShapeAppearance
    546:546:android.view.View inflateHeaderView(int) -> inflateHeaderView
    527:530:void inflateMenu(int) -> inflateMenu
    845:845:boolean isBottomInsetScrimEnabled() -> isBottomInsetScrimEnabled
    828:828:boolean isTopInsetScrimEnabled() -> isTopInsetScrimEnabled
    354:388:void maybeUpdateCornerSizeForDrawerLayout(int,int) -> maybeUpdateCornerSizeForDrawerLayout
    399:400:void onAttachedToWindow() -> onAttachedToWindow
    948:952:void onDetachedFromWindow() -> onDetachedFromWindow
    516:516:void onInsetsChanged(androidx.core.view.WindowInsetsCompat) -> onInsetsChanged
    482:496:void onMeasure(int,int) -> onMeasure
    461:467:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    452:455:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    405:406:void onSizeChanged(int,int,int,int) -> onSizeChanged
    855:855:void setBottomInsetScrimEnabled(boolean) -> setBottomInsetScrimEnabled
    760:762:void setCheckedItem(int) -> setCheckedItem
    772:776:void setCheckedItem(android.view.MenuItem) -> setCheckedItem
    885:885:void setDividerInsetEnd(int) -> setDividerInsetEnd
    870:870:void setDividerInsetStart(int) -> setDividerInsetStart
    412:414:void setElevation(float) -> setElevation
    658:658:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    648:648:void setItemBackgroundResource(int) -> setItemBackgroundResource
    679:679:void setItemHorizontalPadding(int) -> setItemHorizontalPadding
    689:689:void setItemHorizontalPaddingResource(int) -> setItemHorizontalPaddingResource
    741:741:void setItemIconPadding(int) -> setItemIconPadding
    751:751:void setItemIconPaddingResource(int) -> setItemIconPaddingResource
    803:803:void setItemIconSize(int) -> setItemIconSize
    605:605:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    812:812:void setItemMaxLines(int) -> setItemMaxLines
    793:793:void setItemTextAppearance(int) -> setItemTextAppearance
    626:626:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    710:710:void setItemVerticalPadding(int) -> setItemVerticalPadding
    720:720:void setItemVerticalPaddingResource(int) -> setItemVerticalPaddingResource
    477:477:void setNavigationItemSelectedListener(com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener) -> setNavigationItemSelectedListener
    341:343:void setOverScrollMode(int) -> setOverScrollMode
    915:915:void setSubheaderInsetEnd(int) -> setSubheaderInsetEnd
    900:900:void setSubheaderInsetStart(int) -> setSubheaderInsetStart
    838:838:void setTopInsetScrimEnabled(boolean) -> setTopInsetScrimEnabled
    962:1000:void setupInsetScrimsListener() -> setupInsetScrimsListener
com.google.android.material.navigation.NavigationView$1 -> com.google.android.material.navigation.NavigationView$1:
# {"id":"sourceFile","fileName":"NavigationView.java"}
    300:300:void <init>(com.google.android.material.navigation.NavigationView) -> <init>
    303:303:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    0:0:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
com.google.android.material.navigation.NavigationView$2 -> com.google.android.material.navigation.NavigationView$2:
# {"id":"sourceFile","fileName":"NavigationView.java"}
    963:963:void <init>(com.google.android.material.navigation.NavigationView) -> <init>
    966:994:void onGlobalLayout() -> onGlobalLayout
com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener -> com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener:
# {"id":"sourceFile","fileName":"NavigationView.java"}
com.google.android.material.navigation.NavigationView$SavedState -> com.google.android.material.navigation.NavigationView$SavedState:
# {"id":"sourceFile","fileName":"NavigationView.java"}
    1037:1037:void <clinit>() -> <clinit>
    1023:1024:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1028:1028:void <init>(android.os.Parcelable) -> <init>
    1033:1034:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationView$SavedState$1 -> com.google.android.material.navigation.NavigationView$SavedState$1:
# {"id":"sourceFile","fileName":"NavigationView.java"}
    1038:1038:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1038:1038:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1042:1042:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1048:1048:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1038:1038:java.lang.Object[] newArray(int) -> newArray
    1054:1054:com.google.android.material.navigation.NavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.navigationrail.NavigationRailItemView -> com.google.android.material.navigationrail.NavigationRailItemView:
# {"id":"sourceFile","fileName":"NavigationRailItemView.java"}
    35:35:void <init>(android.content.Context) -> <init>
    61:61:int getItemDefaultMarginResId() -> getItemDefaultMarginResId
    55:55:int getItemLayoutResId() -> getItemLayoutResId
    40:48:void onMeasure(int,int) -> onMeasure
com.google.android.material.navigationrail.NavigationRailMenuView -> com.google.android.material.navigationrail.NavigationRailMenuView:
# {"id":"sourceFile","fileName":"NavigationRailMenuView.java"}
    41:50:void <init>(android.content.Context) -> <init>
    89:89:com.google.android.material.navigation.NavigationBarItemView createNavigationBarItemView(android.content.Context) -> createNavigationBarItemView
    172:172:int getItemMinimumHeight() -> getItemMinimumHeight
    160:160:int getMenuGravity() -> getMenuGravity
    176:176:boolean isTopGravity() -> isTopGravity
    93:100:int makeSharedHeightSpec(int,int,int) -> makeSharedHeightSpec
    144:146:int measureChildHeight(android.view.View,int,int) -> measureChildHeight
    122:136:int measureSharedChildHeights(int,int,int,android.view.View) -> measureSharedChildHeights
    106:115:int measureShiftingChildHeights(int,int,int) -> measureShiftingChildHeights
    73:80:void onLayout(boolean,int,int,int,int) -> onLayout
    55:68:void onMeasure(int,int) -> onMeasure
    164:166:void setItemMinimumHeight(int) -> setItemMinimumHeight
    153:155:void setMenuGravity(int) -> setMenuGravity
com.google.android.material.navigationrail.NavigationRailView -> com.google.android.material.navigationrail.NavigationRailView:
# {"id":"sourceFile","fileName":"NavigationRailView.java"}
    110:110:void <init>(android.content.Context) -> <init>
    114:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    119:119:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    106:164:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    97:97:java.lang.Boolean access$000(com.google.android.material.navigationrail.NavigationRailView) -> access$000
    97:97:boolean access$100(com.google.android.material.navigationrail.NavigationRailView,java.lang.Boolean) -> access$100
    97:97:java.lang.Boolean access$200(com.google.android.material.navigationrail.NavigationRailView) -> access$200
    255:255:void addHeaderView(int) -> addHeaderView
    268:274:void addHeaderView(android.view.View) -> addHeaderView
    168:168:void applyWindowInsets() -> applyWindowInsets
    97:97:com.google.android.material.navigation.NavigationBarMenuView createNavigationBarMenuView(android.content.Context) -> createNavigationBarMenuView
    346:346:com.google.android.material.navigationrail.NavigationRailMenuView createNavigationBarMenuView(android.content.Context) -> createNavigationBarMenuView
    287:287:android.view.View getHeaderView() -> getHeaderView
    318:319:int getItemMinimumHeight() -> getItemMinimumHeight
    0:0:int getMaxItemCount() -> getMaxItemCount
    311:311:int getMenuGravity() -> getMenuGravity
    338:338:com.google.android.material.navigationrail.NavigationRailMenuView getNavigationRailMenuView() -> getNavigationRailMenuView
    362:362:boolean isHeaderViewVisible() -> isHeaderViewVisible
    350:355:int makeMinWidthSpec(int) -> makeMinWidthSpec
    221:240:void onLayout(boolean,int,int,int,int) -> onLayout
    209:215:void onMeasure(int,int) -> onMeasure
    298:300:void removeHeaderView() -> removeHeaderView
    328:329:void setItemMinimumHeight(int) -> setItemMinimumHeight
    306:306:void setMenuGravity(int) -> setMenuGravity
    204:204:boolean shouldApplyWindowInsetPadding(java.lang.Boolean) -> shouldApplyWindowInsetPadding
com.google.android.material.navigationrail.NavigationRailView$1 -> com.google.android.material.navigationrail.NavigationRailView$1:
# {"id":"sourceFile","fileName":"NavigationRailView.java"}
    170:170:void <init>(com.google.android.material.navigationrail.NavigationRailView) -> <init>
    179:191:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.progressindicator.AnimatorDurationScaleProvider -> com.google.android.material.progressindicator.AnimatorDurationScaleProvider:
# {"id":"sourceFile","fileName":"AnimatorDurationScaleProvider.java"}
    0:0:void <clinit>() -> <clinit>
    43:43:float getSystemAnimatorDurationScale(android.content.ContentResolver) -> getSystemAnimatorDurationScale
com.google.android.material.progressindicator.BaseProgressIndicator -> com.google.android.material.progressindicator.BaseProgressIndicator:
# {"id":"sourceFile","fileName":"BaseProgressIndicator.java"}
    80:80:void <clinit>() -> <clinit>
    120:823:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    70:70:void access$000(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$000
    70:70:void access$100(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$100
    70:70:long access$202(com.google.android.material.progressindicator.BaseProgressIndicator,long) -> access$202
    70:70:int access$300(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$300
    70:70:boolean access$400(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$400
    70:70:boolean access$500(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$500
    70:70:int access$600(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$600
    276:281:void applyNewVisibility(boolean) -> applyNewVisibility
    359:359:android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    365:370:com.google.android.material.progressindicator.DrawingDelegate getCurrentDrawingDelegate() -> getCurrentDrawingDelegate
    673:673:int getHideAnimationBehavior() -> getHideAnimationBehavior
    70:70:android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    429:429:com.google.android.material.progressindicator.IndeterminateDrawable getIndeterminateDrawable() -> getIndeterminateDrawable
    563:563:int[] getIndicatorColor() -> getIndicatorColor
    70:70:android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    423:423:com.google.android.material.progressindicator.DeterminateDrawable getProgressDrawable() -> getProgressDrawable
    648:648:int getShowAnimationBehavior() -> getShowAnimationBehavior
    595:595:int getTrackColor() -> getTrackColor
    622:622:int getTrackCornerRadius() -> getTrackCornerRadius
    536:536:int getTrackThickness() -> getTrackThickness
    249:253:void internalHide() -> internalHide
    213:217:void internalShow() -> internalShow
    347:349:void invalidate() -> invalidate
    468:478:boolean isEffectivelyVisible() -> isEffectivelyVisible
    487:488:boolean isNoLongerNeedToBeVisible() -> isNoLongerNeedToBeVisible
    286:290:void onAttachedToWindow() -> onAttachedToWindow
    297:301:void onDetachedFromWindow() -> onDetachedFromWindow
    308:322:void onDraw(android.graphics.Canvas) -> onDraw
    326:343:void onMeasure(int,int) -> onMeasure
    259:260:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    265:266:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    163:177:void registerAnimationCallbacks() -> registerAnimationCallbacks
    764:769:void setAnimatorDurationScaleProvider(com.google.android.material.progressindicator.AnimatorDurationScaleProvider) -> setAnimatorDurationScaleProvider
    685:686:void setHideAnimationBehavior(int) -> setHideAnimationBehavior
    501:525:void setIndeterminate(boolean) -> setIndeterminate
    408:415:void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    575:582:void setIndicatorColor(int[]) -> setIndicatorColor
    700:704:void setProgress(int) -> setProgress
    717:740:void setProgressCompat(int,boolean) -> setProgressCompat
    383:395:void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    660:661:void setShowAnimationBehavior(int) -> setShowAnimationBehavior
    607:609:void setTrackColor(int) -> setTrackColor
    634:635:void setTrackCornerRadius(int) -> setTrackCornerRadius
    548:550:void setTrackThickness(int) -> setTrackThickness
    752:756:void setVisibilityAfterHide(int) -> setVisibilityAfterHide
    182:187:void unregisterAnimationCallbacks() -> unregisterAnimationCallbacks
    437:439:boolean visibleToUser() -> visibleToUser
com.google.android.material.progressindicator.BaseProgressIndicator$1 -> com.google.android.material.progressindicator.BaseProgressIndicator$1:
# {"id":"sourceFile","fileName":"BaseProgressIndicator.java"}
    781:781:void <init>(com.google.android.material.progressindicator.BaseProgressIndicator) -> <init>
    784:784:void run() -> run
com.google.android.material.progressindicator.BaseProgressIndicator$2 -> com.google.android.material.progressindicator.BaseProgressIndicator$2:
# {"id":"sourceFile","fileName":"BaseProgressIndicator.java"}
    794:794:void <init>(com.google.android.material.progressindicator.BaseProgressIndicator) -> <init>
    797:798:void run() -> run
com.google.android.material.progressindicator.BaseProgressIndicator$3 -> com.google.android.material.progressindicator.BaseProgressIndicator$3:
# {"id":"sourceFile","fileName":"BaseProgressIndicator.java"}
    809:809:void <init>(com.google.android.material.progressindicator.BaseProgressIndicator) -> <init>
    813:814:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
com.google.android.material.progressindicator.BaseProgressIndicator$4 -> com.google.android.material.progressindicator.BaseProgressIndicator$4:
# {"id":"sourceFile","fileName":"BaseProgressIndicator.java"}
    824:824:void <init>(com.google.android.material.progressindicator.BaseProgressIndicator) -> <init>
    827:831:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
com.google.android.material.progressindicator.BaseProgressIndicatorSpec -> com.google.android.material.progressindicator.BaseProgressIndicatorSpec:
# {"id":"sourceFile","fileName":"BaseProgressIndicatorSpec.java"}
    57:110:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    178:178:boolean isHideAnimationEnabled() -> isHideAnimationEnabled
    174:174:boolean isShowAnimationEnabled() -> isShowAnimationEnabled
    122:143:void loadIndicatorColors(android.content.Context,android.content.res.TypedArray) -> loadIndicatorColors
    157:170:void loadTrackColor(android.content.Context,android.content.res.TypedArray) -> loadTrackColor
com.google.android.material.progressindicator.CircularDrawingDelegate -> com.google.android.material.progressindicator.CircularDrawingDelegate:
# {"id":"sourceFile","fileName":"CircularDrawingDelegate.java"}
    34:41:void <init>(com.google.android.material.progressindicator.CircularProgressIndicatorSpec) -> <init>
    70:112:void adjustCanvas(android.graphics.Canvas,android.graphics.Rect,float) -> adjustCanvas
    193:203:void drawRoundedEnd(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> drawRoundedEnd
    140:161:void fillIndicator(android.graphics.Canvas,android.graphics.Paint,float,float,int) -> fillIndicator
    174:184:void fillTrack(android.graphics.Canvas,android.graphics.Paint) -> fillTrack
    51:51:int getPreferredHeight() -> getPreferredHeight
    46:46:int getPreferredWidth() -> getPreferredWidth
    188:188:int getSize() -> getSize
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate:
# {"id":"sourceFile","fileName":"CircularIndeterminateAnimatorDelegate.java"}
    44:252:void <clinit>() -> <clinit>
    61:71:void <init>(com.google.android.material.progressindicator.CircularProgressIndicatorSpec) -> <init>
    34:34:int access$000(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> access$000
    34:34:int access$002(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate,int) -> access$002
    34:34:com.google.android.material.progressindicator.BaseProgressIndicatorSpec access$100(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> access$100
    34:34:float access$200(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> access$200
    34:34:float access$300(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> access$300
    34:34:void access$400(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate,float) -> access$400
    122:123:void cancelAnimatorImmediately() -> cancelAnimatorImmediately
    216:216:float getAnimationFraction() -> getAnimationFraction
    229:229:float getCompleteEndFraction() -> getCompleteEndFraction
    143:143:void invalidateSpecValues() -> invalidateSpecValues
    85:106:void maybeInitializeAnimators() -> maybeInitializeAnimators
    185:199:void maybeUpdateSegmentColors(int) -> maybeUpdateSegmentColors
    148:148:void registerAnimatorsCompleteCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimatorsCompleteCallback
    130:137:void requestCancelAnimatorAfterCurrentCycle() -> requestCancelAnimatorAfterCurrentCycle
    207:210:void resetPropertiesForNewStart() -> resetPropertiesForNewStart
    221:225:void setAnimationFraction(float) -> setAnimationFraction
    233:233:void setCompleteEndFraction(float) -> setCompleteEndFraction
    78:81:void startAnimator() -> startAnimator
    153:153:void unregisterAnimatorsCompleteCallback() -> unregisterAnimatorsCompleteCallback
    161:179:void updateSegmentPositions(int) -> updateSegmentPositions
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$1 -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$1:
# {"id":"sourceFile","fileName":"CircularIndeterminateAnimatorDelegate.java"}
    92:92:void <init>(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> <init>
    95:97:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$2 -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$2:
# {"id":"sourceFile","fileName":"CircularIndeterminateAnimatorDelegate.java"}
    107:107:void <init>(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> <init>
    110:113:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$3 -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$3:
# {"id":"sourceFile","fileName":"CircularIndeterminateAnimatorDelegate.java"}
    239:239:void <init>(java.lang.Class,java.lang.String) -> <init>
    239:239:java.lang.Object get(java.lang.Object) -> get
    242:242:java.lang.Float get(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> get
    239:239:void set(java.lang.Object,java.lang.Object) -> set
    247:247:void set(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate,java.lang.Float) -> set
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$4 -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$4:
# {"id":"sourceFile","fileName":"CircularIndeterminateAnimatorDelegate.java"}
    254:254:void <init>(java.lang.Class,java.lang.String) -> <init>
    254:254:java.lang.Object get(java.lang.Object) -> get
    257:257:java.lang.Float get(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> get
    254:254:void set(java.lang.Object,java.lang.Object) -> set
    262:262:void set(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate,java.lang.Float) -> set
com.google.android.material.progressindicator.CircularProgressIndicator -> com.google.android.material.progressindicator.CircularProgressIndicator:
# {"id":"sourceFile","fileName":"CircularProgressIndicator.java"}
    55:55:void <clinit>() -> <clinit>
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:75:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:com.google.android.material.progressindicator.BaseProgressIndicatorSpec createSpec(android.content.Context,android.util.AttributeSet) -> createSpec
    82:82:com.google.android.material.progressindicator.CircularProgressIndicatorSpec createSpec(android.content.Context,android.util.AttributeSet) -> createSpec
    174:174:int getIndicatorDirection() -> getIndicatorDirection
    118:118:int getIndicatorInset() -> getIndicatorInset
    145:145:int getIndicatorSize() -> getIndicatorSize
    88:89:void initializeDrawables() -> initializeDrawables
    186:187:void setIndicatorDirection(int) -> setIndicatorDirection
    130:132:void setIndicatorInset(int) -> setIndicatorInset
    157:161:void setIndicatorSize(int) -> setIndicatorSize
    105:106:void setTrackThickness(int) -> setTrackThickness
com.google.android.material.progressindicator.CircularProgressIndicatorSpec -> com.google.android.material.progressindicator.CircularProgressIndicatorSpec:
# {"id":"sourceFile","fileName":"CircularProgressIndicatorSpec.java"}
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:105:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    0:0:void validateSpec() -> validateSpec
com.google.android.material.progressindicator.DeterminateDrawable -> com.google.android.material.progressindicator.DeterminateDrawable:
# {"id":"sourceFile","fileName":"DeterminateDrawable.java"}
    232:232:void <clinit>() -> <clinit>
    46:64:void <init>(android.content.Context,com.google.android.material.progressindicator.BaseProgressIndicatorSpec,com.google.android.material.progressindicator.DrawingDelegate) -> <init>
    30:30:float access$000(com.google.android.material.progressindicator.DeterminateDrawable) -> access$000
    30:30:void access$100(com.google.android.material.progressindicator.DeterminateDrawable,float) -> access$100
    90:90:com.google.android.material.progressindicator.DeterminateDrawable createCircularDrawable(android.content.Context,com.google.android.material.progressindicator.CircularProgressIndicatorSpec) -> createCircularDrawable
    77:77:com.google.android.material.progressindicator.DeterminateDrawable createLinearDrawable(android.content.Context,com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> createLinearDrawable
    190:206:void draw(android.graphics.Canvas) -> draw
    30:30:int getAlpha() -> getAlpha
    222:222:com.google.android.material.progressindicator.DrawingDelegate getDrawingDelegate() -> getDrawingDelegate
    212:212:float getIndicatorFraction() -> getIndicatorFraction
    172:172:int getIntrinsicHeight() -> getIntrinsicHeight
    167:167:int getIntrinsicWidth() -> getIntrinsicWidth
    30:30:int getOpacity() -> getOpacity
    30:30:boolean hideNow() -> hideNow
    30:30:boolean isHiding() -> isHiding
    30:30:boolean isRunning() -> isRunning
    30:30:boolean isShowing() -> isShowing
    143:144:void jumpToCurrentState() -> jumpToCurrentState
    155:160:boolean onLevelChange(int) -> onLevelChange
    30:30:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    30:30:void setAlpha(int) -> setAlpha
    30:30:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    226:227:void setDrawingDelegate(com.google.android.material.progressindicator.DrawingDelegate) -> setDrawingDelegate
    216:217:void setIndicatorFraction(float) -> setIndicatorFraction
    183:183:void setLevelByFraction(float) -> setLevelByFraction
    30:30:boolean setVisible(boolean,boolean) -> setVisible
    30:30:boolean setVisible(boolean,boolean,boolean) -> setVisible
    124:132:boolean setVisibleInternal(boolean,boolean,boolean) -> setVisibleInternal
    30:30:void start() -> start
    30:30:void stop() -> stop
    30:30:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
com.google.android.material.progressindicator.DeterminateDrawable$1 -> com.google.android.material.progressindicator.DeterminateDrawable$1:
# {"id":"sourceFile","fileName":"DeterminateDrawable.java"}
    233:233:void <init>(java.lang.String) -> <init>
    233:233:float getValue(java.lang.Object) -> getValue
    236:236:float getValue(com.google.android.material.progressindicator.DeterminateDrawable) -> getValue
    233:233:void setValue(java.lang.Object,float) -> setValue
    241:241:void setValue(com.google.android.material.progressindicator.DeterminateDrawable,float) -> setValue
com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange -> com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange:
# {"id":"sourceFile","fileName":"DrawableWithAnimatedVisibilityChange.java"}
    441:441:void <clinit>() -> <clinit>
    77:88:void <init>(android.content.Context,com.google.android.material.progressindicator.BaseProgressIndicatorSpec) -> <init>
    42:42:void access$000(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> access$000
    42:42:boolean access$101(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange,boolean,boolean) -> access$101
    42:42:void access$200(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> access$200
    307:312:void cancelAnimatorsWithoutCallbacks(android.animation.ValueAnimator[]) -> cancelAnimatorsWithoutCallbacks
    178:183:void dispatchAnimationEnd() -> dispatchAnimationEnd
    166:171:void dispatchAnimationStart() -> dispatchAnimationStart
    316:321:void endAnimatorsWithoutCallbacks(android.animation.ValueAnimator[]) -> endAnimatorsWithoutCallbacks
    334:334:int getAlpha() -> getAlpha
    408:415:float getGrowFraction() -> getGrowFraction
    0:0:int getOpacity() -> getOpacity
    217:217:boolean hideNow() -> hideNow
    212:212:boolean isHiding() -> isHiding
    204:204:boolean isRunning() -> isRunning
    208:208:boolean isShowing() -> isShowing
    94:104:void maybeInitializeAnimators() -> maybeInitializeAnimators
    122:126:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    328:329:void setAlpha(int) -> setAlpha
    339:340:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    419:421:void setGrowFraction(float) -> setGrowFraction
    385:393:void setHideAnimator(android.animation.ValueAnimator) -> setHideAnimator
    355:362:void setShowAnimator(android.animation.ValueAnimator) -> setShowAnimator
    222:222:boolean setVisible(boolean,boolean) -> setVisible
    236:240:boolean setVisible(boolean,boolean,boolean) -> setVisible
    253:301:boolean setVisibleInternal(boolean,boolean,boolean) -> setVisibleInternal
    193:193:void start() -> start
    199:199:void stop() -> stop
    138:141:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$1 -> com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$1:
# {"id":"sourceFile","fileName":"DrawableWithAnimatedVisibilityChange.java"}
    363:363:void <init>(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> <init>
    366:368:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$2 -> com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$2:
# {"id":"sourceFile","fileName":"DrawableWithAnimatedVisibilityChange.java"}
    394:394:void <init>(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> <init>
    397:401:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$3 -> com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$3:
# {"id":"sourceFile","fileName":"DrawableWithAnimatedVisibilityChange.java"}
    442:442:void <init>(java.lang.Class,java.lang.String) -> <init>
    442:442:java.lang.Object get(java.lang.Object) -> get
    445:445:java.lang.Float get(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> get
    442:442:void set(java.lang.Object,java.lang.Object) -> set
    450:450:void set(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange,java.lang.Float) -> set
com.google.android.material.progressindicator.DrawingDelegate -> com.google.android.material.progressindicator.DrawingDelegate:
# {"id":"sourceFile","fileName":"DrawingDelegate.java"}
    31:32:void <init>(com.google.android.material.progressindicator.BaseProgressIndicatorSpec) -> <init>
    89:89:void registerDrawable(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> registerDrawable
    96:97:void validateSpecAndAdjustCanvas(android.graphics.Canvas,android.graphics.Rect,float) -> validateSpecAndAdjustCanvas
com.google.android.material.progressindicator.IndeterminateAnimatorDelegate -> com.google.android.material.progressindicator.IndeterminateAnimatorDelegate:
# {"id":"sourceFile","fileName":"IndeterminateAnimatorDelegate.java"}
    40:42:void <init>(int) -> <init>
    0:0:float getFractionInRange(int,int,int) -> getFractionInRange
    47:47:void registerDrawable(com.google.android.material.progressindicator.IndeterminateDrawable) -> registerDrawable
com.google.android.material.progressindicator.IndeterminateDrawable -> com.google.android.material.progressindicator.IndeterminateDrawable:
# {"id":"sourceFile","fileName":"IndeterminateDrawable.java"}
    40:43:void <init>(android.content.Context,com.google.android.material.progressindicator.BaseProgressIndicatorSpec,com.google.android.material.progressindicator.DrawingDelegate,com.google.android.material.progressindicator.IndeterminateAnimatorDelegate) -> <init>
    76:76:com.google.android.material.progressindicator.IndeterminateDrawable createCircularDrawable(android.content.Context,com.google.android.material.progressindicator.CircularProgressIndicatorSpec) -> createCircularDrawable
    56:63:com.google.android.material.progressindicator.IndeterminateDrawable createLinearDrawable(android.content.Context,com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> createLinearDrawable
    133:156:void draw(android.graphics.Canvas) -> draw
    27:27:int getAlpha() -> getAlpha
    163:163:com.google.android.material.progressindicator.IndeterminateAnimatorDelegate getAnimatorDelegate() -> getAnimatorDelegate
    174:174:com.google.android.material.progressindicator.DrawingDelegate getDrawingDelegate() -> getDrawingDelegate
    125:125:int getIntrinsicHeight() -> getIntrinsicHeight
    120:120:int getIntrinsicWidth() -> getIntrinsicWidth
    27:27:int getOpacity() -> getOpacity
    27:27:boolean hideNow() -> hideNow
    27:27:boolean isHiding() -> isHiding
    27:27:boolean isRunning() -> isRunning
    27:27:boolean isShowing() -> isShowing
    27:27:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    27:27:void setAlpha(int) -> setAlpha
    168:169:void setAnimatorDelegate(com.google.android.material.progressindicator.IndeterminateAnimatorDelegate) -> setAnimatorDelegate
    27:27:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    178:179:void setDrawingDelegate(com.google.android.material.progressindicator.DrawingDelegate) -> setDrawingDelegate
    27:27:boolean setVisible(boolean,boolean) -> setVisible
    27:27:boolean setVisible(boolean,boolean,boolean) -> setVisible
    99:112:boolean setVisibleInternal(boolean,boolean,boolean) -> setVisibleInternal
    27:27:void start() -> start
    27:27:void stop() -> stop
    27:27:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
com.google.android.material.progressindicator.LinearDrawingDelegate -> com.google.android.material.progressindicator.LinearDrawingDelegate:
# {"id":"sourceFile","fileName":"LinearDrawingDelegate.java"}
    34:40:void <init>(com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> <init>
    66:95:void adjustCanvas(android.graphics.Canvas,android.graphics.Rect,float) -> adjustCanvas
    122:141:void fillIndicator(android.graphics.Canvas,android.graphics.Paint,float,float,int) -> fillIndicator
    152:165:void fillTrack(android.graphics.Canvas,android.graphics.Paint) -> fillTrack
    50:50:int getPreferredHeight() -> getPreferredHeight
    0:0:int getPreferredWidth() -> getPreferredWidth
com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate -> com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate:
# {"id":"sourceFile","fileName":"LinearIndeterminateContiguousAnimatorDelegate.java"}
    171:171:void <clinit>() -> <clinit>
    50:59:void <init>(com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> <init>
    36:36:int access$000(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> access$000
    36:36:int access$002(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate,int) -> access$002
    36:36:com.google.android.material.progressindicator.BaseProgressIndicatorSpec access$100(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> access$100
    36:36:boolean access$202(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate,boolean) -> access$202
    36:36:float access$300(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> access$300
    94:95:void cancelAnimatorImmediately() -> cancelAnimatorImmediately
    156:156:float getAnimationFraction() -> getAnimationFraction
    107:107:void invalidateSpecValues() -> invalidateSpecValues
    73:79:void maybeInitializeAnimators() -> maybeInitializeAnimators
    134:140:void maybeUpdateSegmentColors() -> maybeUpdateSegmentColors
    0:0:void registerAnimatorsCompleteCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimatorsCompleteCallback
    0:0:void requestCancelAnimatorAfterCurrentCycle() -> requestCancelAnimatorAfterCurrentCycle
    146:150:void resetPropertiesForNewStart() -> resetPropertiesForNewStart
    161:165:void setAnimationFraction(float) -> setAnimationFraction
    66:69:void startAnimator() -> startAnimator
    0:0:void unregisterAnimatorsCompleteCallback() -> unregisterAnimatorsCompleteCallback
    124:129:void updateSegmentPositions(int) -> updateSegmentPositions
com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate$1 -> com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate$1:
# {"id":"sourceFile","fileName":"LinearIndeterminateContiguousAnimatorDelegate.java"}
    80:80:void <init>(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> <init>
    83:86:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate$2 -> com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate$2:
# {"id":"sourceFile","fileName":"LinearIndeterminateContiguousAnimatorDelegate.java"}
    173:173:void <init>(java.lang.Class,java.lang.String) -> <init>
    173:173:java.lang.Object get(java.lang.Object) -> get
    176:176:java.lang.Float get(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> get
    173:173:void set(java.lang.Object,java.lang.Object) -> set
    181:181:void set(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate,java.lang.Float) -> set
com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate -> com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate:
# {"id":"sourceFile","fileName":"LinearIndeterminateDisjointAnimatorDelegate.java"}
    47:216:void <clinit>() -> <clinit>
    59:78:void <init>(android.content.Context,com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> <init>
    42:42:int access$000(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> access$000
    42:42:int access$002(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate,int) -> access$002
    42:42:com.google.android.material.progressindicator.BaseProgressIndicatorSpec access$100(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> access$100
    42:42:boolean access$202(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate,boolean) -> access$202
    42:42:float access$300(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> access$300
    130:131:void cancelAnimatorImmediately() -> cancelAnimatorImmediately
    201:201:float getAnimationFraction() -> getAnimationFraction
    152:152:void invalidateSpecValues() -> invalidateSpecValues
    94:114:void maybeInitializeAnimators() -> maybeInitializeAnimators
    180:185:void maybeUpdateSegmentColors() -> maybeUpdateSegmentColors
    157:157:void registerAnimatorsCompleteCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimatorsCompleteCallback
    138:146:void requestCancelAnimatorAfterCurrentCycle() -> requestCancelAnimatorAfterCurrentCycle
    191:195:void resetPropertiesForNewStart() -> resetPropertiesForNewStart
    206:210:void setAnimationFraction(float) -> setAnimationFraction
    87:90:void startAnimator() -> startAnimator
    162:162:void unregisterAnimatorsCompleteCallback() -> unregisterAnimatorsCompleteCallback
    170:174:void updateSegmentPositions(int) -> updateSegmentPositions
com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$1 -> com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$1:
# {"id":"sourceFile","fileName":"LinearIndeterminateDisjointAnimatorDelegate.java"}
    101:101:void <init>(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> <init>
    104:106:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$2 -> com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$2:
# {"id":"sourceFile","fileName":"LinearIndeterminateDisjointAnimatorDelegate.java"}
    115:115:void <init>(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> <init>
    118:121:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$3 -> com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$3:
# {"id":"sourceFile","fileName":"LinearIndeterminateDisjointAnimatorDelegate.java"}
    218:218:void <init>(java.lang.Class,java.lang.String) -> <init>
    218:218:java.lang.Object get(java.lang.Object) -> get
    221:221:java.lang.Float get(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> get
    218:218:void set(java.lang.Object,java.lang.Object) -> set
    226:226:void set(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate,java.lang.Float) -> set
com.google.android.material.progressindicator.LinearProgressIndicator -> com.google.android.material.progressindicator.LinearProgressIndicator:
# {"id":"sourceFile","fileName":"LinearProgressIndicator.java"}
    54:54:void <clinit>() -> <clinit>
    67:67:void <init>(android.content.Context) -> <init>
    71:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    52:52:com.google.android.material.progressindicator.BaseProgressIndicatorSpec createSpec(android.content.Context,android.util.AttributeSet) -> createSpec
    85:85:com.google.android.material.progressindicator.LinearProgressIndicatorSpec createSpec(android.content.Context,android.util.AttributeSet) -> createSpec
    159:159:int getIndeterminateAnimationType() -> getIndeterminateAnimationType
    201:201:int getIndicatorDirection() -> getIndicatorDirection
    118:119:void initializeDrawables() -> initializeDrawables
    90:97:void onLayout(boolean,int,int,int,int) -> onLayout
    103:111:void onSizeChanged(int,int,int,int) -> onSizeChanged
    172:189:void setIndeterminateAnimationType(int) -> setIndeterminateAnimationType
    133:134:void setIndicatorColor(int[]) -> setIndicatorColor
    213:220:void setIndicatorDirection(int) -> setIndicatorDirection
    236:241:void setProgressCompat(int,boolean) -> setProgressCompat
    146:148:void setTrackCornerRadius(int) -> setTrackCornerRadius
com.google.android.material.progressindicator.LinearProgressIndicatorSpec -> com.google.android.material.progressindicator.LinearProgressIndicatorSpec:
# {"id":"sourceFile","fileName":"LinearProgressIndicatorSpec.java"}
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:64:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    72:93:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    99:110:void validateSpec() -> validateSpec
com.google.android.material.radiobutton.MaterialRadioButton -> com.google.android.material.radiobutton.MaterialRadioButton:
# {"id":"sourceFile","fileName":"MaterialRadioButton.java"}
    45:47:void <clinit>() -> <clinit>
    58:58:void <init>(android.content.Context) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:136:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    92:95:void onAttachedToWindow() -> onAttachedToWindow
    105:109:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.resources.CancelableFontCallback -> com.google.android.material.resources.CancelableFontCallback:
# {"id":"sourceFile","fileName":"CancelableFontCallback.java"}
    42:44:void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface) -> <init>
    64:64:void cancel() -> cancel
    54:54:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    49:49:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
    68:69:void updateIfNotCancelled(android.graphics.Typeface) -> updateIfNotCancelled
com.google.android.material.resources.CancelableFontCallback$ApplyFont -> com.google.android.material.resources.CancelableFontCallback$ApplyFont:
# {"id":"sourceFile","fileName":"CancelableFontCallback.java"}
com.google.android.material.resources.MaterialAttributes -> com.google.android.material.resources.MaterialAttributes:
# {"id":"sourceFile","fileName":"MaterialAttributes.java"}
    46:47:android.util.TypedValue resolve(android.content.Context,int) -> resolve
    121:123:boolean resolveBoolean(android.content.Context,int,boolean) -> resolveBoolean
    133:135:int resolveInteger(android.content.Context,int,int) -> resolveInteger
    89:89:int resolveOrThrow(android.content.Context,int,java.lang.String) -> resolveOrThrow
    56:57:android.util.TypedValue resolveTypedValueOrThrow(android.view.View,int) -> resolveTypedValueOrThrow
    65:75:android.util.TypedValue resolveTypedValueOrThrow(android.content.Context,int,java.lang.String) -> resolveTypedValueOrThrow
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
# {"id":"sourceFile","fileName":"MaterialResources.java"}
    62:81:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    91:110:android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int) -> getColorStateList
    246:246:int getComplexUnit(android.util.TypedValue) -> getComplexUnit
    173:180:int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int) -> getDimensionPixelSize
    122:131:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    259:259:int getIndexWithValue(android.content.res.TypedArray,int,int) -> getIndexWithValue
    142:145:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> getTextAppearance
    215:235:int getUnscaledTextSize(android.content.Context,int,int) -> getUnscaledTextSize
    188:188:boolean isFontScaleAtLeast1_3(android.content.Context) -> isFontScaleAtLeast1_3
    195:195:boolean isFontScaleAtLeast2_0(android.content.Context) -> isFontScaleAtLeast2_0
com.google.android.material.resources.TextAppearance -> com.google.android.material.resources.TextAppearance:
# {"id":"sourceFile","fileName":"TextAppearance.java"}
    77:117:void <init>(android.content.Context,int) -> <init>
    48:48:android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance) -> access$000
    48:48:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> access$002
    48:48:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> access$102
    269:289:void createFallbackFont() -> createFallbackFont
    263:264:android.graphics.Typeface getFallbackFont() -> getFallbackFont
    132:154:android.graphics.Typeface getFont(android.content.Context) -> getFont
    172:216:void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    235:237:void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    363:363:android.content.res.ColorStateList getTextColor() -> getTextColor
    371:371:float getTextSize() -> getTextSize
    367:367:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    375:375:void setTextSize(float) -> setTextSize
    379:384:boolean shouldLoadFontSynchronously(android.content.Context) -> shouldLoadFontSynchronously
    303:314:void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateDrawState
    328:331:void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateMeasureState
    342:356:void updateTextPaintMeasureState(android.content.Context,android.text.TextPaint,android.graphics.Typeface) -> updateTextPaintMeasureState
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.resources.TextAppearance$1:
# {"id":"sourceFile","fileName":"TextAppearance.java"}
    194:194:void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    204:205:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    197:199:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.resources.TextAppearance$2 -> com.google.android.material.resources.TextAppearance$2:
# {"id":"sourceFile","fileName":"TextAppearance.java"}
    239:239:void <init>(com.google.android.material.resources.TextAppearance,android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    249:249:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    243:244:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.resources.TextAppearanceConfig:
# {"id":"sourceFile","fileName":"TextAppearanceConfig.java"}
    43:43:boolean shouldLoadFontSynchronously() -> shouldLoadFontSynchronously
com.google.android.material.resources.TextAppearanceFontCallback -> com.google.android.material.resources.TextAppearanceFontCallback:
# {"id":"sourceFile","fileName":"TextAppearanceFontCallback.java"}
com.google.android.material.resources.TypefaceUtils -> com.google.android.material.resources.TypefaceUtils:
# {"id":"sourceFile","fileName":"TypefaceUtils.java"}
    45:45:android.graphics.Typeface maybeCopyWithFontWeightAdjustment(android.content.Context,android.graphics.Typeface) -> maybeCopyWithFontWeightAdjustment
    52:61:android.graphics.Typeface maybeCopyWithFontWeightAdjustment(android.content.res.Configuration,android.graphics.Typeface) -> maybeCopyWithFontWeightAdjustment
com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.resources.TypefaceUtils$$InternalSyntheticApiModelOutline$1$f820dc1d60c05b76a07a4eb308cb98f479c398dd077248d8ad415c710cd4497f$0.m(android.content.res.Configuration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.resources.TypefaceUtils$$InternalSyntheticApiModelOutline$1$f820dc1d60c05b76a07a4eb308cb98f479c398dd077248d8ad415c710cd4497f$2.m(android.graphics.Typeface) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline2 -> com.google.android.material.resources.TypefaceUtils$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.Typeface com.google.android.material.resources.TypefaceUtils$$InternalSyntheticApiModelOutline$1$f820dc1d60c05b76a07a4eb308cb98f479c398dd077248d8ad415c710cd4497f$4.m(android.graphics.Typeface,int,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.ripple.RippleDrawableCompat -> com.google.android.material.ripple.RippleDrawableCompat:
# {"id":"sourceFile","fileName":"RippleDrawableCompat.java"}
    47:47:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1) -> <init>
    58:58:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    62:63:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    126:127:void draw(android.graphics.Canvas) -> draw
    140:140:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    163:163:int getOpacity() -> getOpacity
    0:0:boolean isStateful() -> isStateful
    46:46:android.graphics.drawable.Drawable mutate() -> mutate
    146:147:com.google.android.material.ripple.RippleDrawableCompat mutate() -> mutate
    133:134:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:117:boolean onStateChange(int[]) -> onStateChange
    153:153:void setAlpha(int) -> setAlpha
    158:158:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    83:83:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    68:68:void setTint(int) -> setTint
    78:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    73:73:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.google.android.material.ripple.RippleDrawableCompat$1 -> com.google.android.material.ripple.RippleDrawableCompat$1:
# {"id":"sourceFile","fileName":"RippleDrawableCompat.java"}
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState -> com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState:
# {"id":"sourceFile","fileName":"RippleDrawableCompat.java"}
    175:177:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    180:182:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    0:0:int getChangingConfigurations() -> getChangingConfigurations
    170:170:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    188:188:com.google.android.material.ripple.RippleDrawableCompat newDrawable() -> newDrawable
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
# {"id":"sourceFile","fileName":"RippleUtils.java"}
    55:90:void <clinit>() -> <clinit>
    125:201:android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList) -> convertToRippleDrawableColor
    264:264:android.graphics.drawable.Drawable createOvalRippleLollipop(android.content.Context,int) -> createOvalRippleLollipop
    285:286:int doubleAlpha(int) -> doubleAlpha
    271:275:int getColorForState(android.content.res.ColorStateList,int[]) -> getColorForState
    221:230:android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList) -> sanitizeRippleDrawableColor
    241:241:boolean shouldDrawRippleCompat(int[]) -> shouldDrawRippleCompat
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop -> com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop:
# {"id":"sourceFile","fileName":"RippleUtils.java"}
    290:290:android.graphics.drawable.Drawable access$000(android.content.Context,int) -> access$000
    295:302:android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int) -> createOvalRipple
com.google.android.material.search.SearchBar -> com.google.android.material.search.SearchBar:
# {"id":"sourceFile","fileName":"SearchBar.java"}
    0:0:void $r8$lambda$5c5I5ljcFX0E60cUbkIqa0sWZAQ(com.google.android.material.search.SearchBar,boolean) -> $r8$lambda$5c5I5ljcFX0E60cUbkIqa0sWZAQ
      # {"id":"com.android.tools.r8.synthesized"}
    120:120:void <clinit>() -> <clinit>
    148:148:void <init>(android.content.Context) -> <init>
    152:152:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    139:206:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    118:118:android.view.accessibility.AccessibilityManager access$000(com.google.android.material.search.SearchBar) -> access$000
    118:118:androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener access$100(com.google.android.material.search.SearchBar) -> access$100
    314:318:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    0:0:int defaultIfZero(int,int) -> defaultIfZero
    527:527:android.view.View getCenterView() -> getCenterView
    799:799:float getCompatElevation() -> getCompatElevation
    613:613:float getCornerSize() -> getCornerSize
    571:571:java.lang.CharSequence getHint() -> getHint
    795:795:int getMenuResId() -> getMenuResId
    587:587:int getStrokeColor() -> getStrokeColor
    600:600:float getStrokeWidth() -> getStrokeWidth
    550:550:java.lang.CharSequence getText() -> getText
    544:544:android.widget.TextView getTextView() -> getTextView
    411:412:void inflateMenu(int) -> inflateMenu
    277:296:void initBackground(com.google.android.material.shape.ShapeAppearanceModel,float,float,int) -> initBackground
    250:255:void initNavigationIcon() -> initNavigationIcon
    260:268:void initTextView(int,java.lang.String,java.lang.String) -> initTextView
    145:145:void lambda$new$0(boolean) -> lambda$new$0
    501:513:void layoutCenterView() -> layoutCenterView
    517:520:void layoutChild(android.view.View,int,int,int,int) -> layoutChild
    365:384:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    495:496:void measureCenterView(int,int) -> measureCenterView
    431:435:void onAttachedToWindow() -> onAttachedToWindow
    332:345:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    424:426:void onLayout(boolean,int,int,int,int) -> onLayout
    417:419:void onMeasure(int,int) -> onMeasure
    865:871:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    857:859:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    532:537:void setCenterView(android.view.View) -> setCenterView
    462:471:void setDefaultMargins() -> setDefaultMargins
    629:630:void setDefaultScrollFlagsEnabled(boolean) -> setDefaultScrollFlagsEnabled
    324:326:void setElevation(float) -> setElevation
    576:576:void setHint(java.lang.CharSequence) -> setHint
    581:581:void setHint(int) -> setHint
    360:360:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    389:406:void setNavigationIconDecorative(boolean) -> setNavigationIconDecorative
    350:355:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    657:657:void setOnLoadAnimationFadeInEnabled(boolean) -> setOnLoadAnimationFadeInEnabled
    480:488:void setOrClearDefaultScrollFlags() -> setOrClearDefaultScrollFlags
    592:593:void setStrokeColor(int) -> setStrokeColor
    605:606:void setStrokeWidth(float) -> setStrokeWidth
    0:0:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    555:555:void setText(java.lang.CharSequence) -> setText
    560:560:void setText(int) -> setText
    0:0:void setTitle(java.lang.CharSequence) -> setTitle
    210:217:void setupTouchExplorationStateChangeListener() -> setupTouchExplorationStateChangeListener
    647:647:void stopOnLoadAnimation() -> stopOnLoadAnimation
    238:243:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.search.SearchBar$$ExternalSyntheticLambda0 -> com.google.android.material.search.SearchBar$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchBar com.google.android.material.search.SearchBar$$InternalSyntheticLambda$1$a02787dccba7994b0a065deab84748e07a161a6fd05ca596998ccde1b9e1254a$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchBar$$InternalSyntheticLambda$1$a02787dccba7994b0a065deab84748e07a161a6fd05ca596998ccde1b9e1254a$0.<init>(com.google.android.material.search.SearchBar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchBar$$InternalSyntheticLambda$1$a02787dccba7994b0a065deab84748e07a161a6fd05ca596998ccde1b9e1254a$0.onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchBar$1 -> com.google.android.material.search.SearchBar$1:
# {"id":"sourceFile","fileName":"SearchBar.java"}
    218:218:void <init>(com.google.android.material.search.SearchBar) -> <init>
    221:222:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    227:228:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.search.SearchBar$SavedState -> com.google.android.material.search.SearchBar$SavedState:
# {"id":"sourceFile","fileName":"SearchBar.java"}
    891:891:void <clinit>() -> <clinit>
    879:879:void <init>(android.os.Parcel) -> <init>
    883:884:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    888:888:void <init>(android.os.Parcelable) -> <init>
    912:913:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.search.SearchBar$SavedState$1 -> com.google.android.material.search.SearchBar$SavedState$1:
# {"id":"sourceFile","fileName":"SearchBar.java"}
    892:892:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    892:892:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    896:896:com.google.android.material.search.SearchBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    901:901:com.google.android.material.search.SearchBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    892:892:java.lang.Object[] newArray(int) -> newArray
    906:906:com.google.android.material.search.SearchBar$SavedState[] newArray(int) -> newArray
com.google.android.material.search.SearchBar$ScrollingViewBehavior -> com.google.android.material.search.SearchBar$ScrollingViewBehavior:
# {"id":"sourceFile","fileName":"SearchBar.java"}
    805:807:void <init>() -> <init>
    805:810:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    816:820:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    826:834:void setAppBarLayoutTransparent(com.google.android.material.appbar.AppBarLayout) -> setAppBarLayoutTransparent
    0:0:boolean shouldHeaderOverlapScrollingChild() -> shouldHeaderOverlapScrollingChild
com.google.android.material.search.SearchBarAnimationHelper -> com.google.android.material.search.SearchBarAnimationHelper:
# {"id":"sourceFile","fileName":"SearchBarAnimationHelper.java"}
    46:70:void <init>() -> <init>
    135:135:void setOnLoadAnimationFadeInEnabled(boolean) -> setOnLoadAnimationFadeInEnabled
    115:126:void stopOnLoadAnimation(com.google.android.material.search.SearchBar) -> stopOnLoadAnimation
com.google.android.material.search.SearchView -> com.google.android.material.search.SearchView:
# {"id":"sourceFile","fileName":"SearchView.java"}
    0:0:androidx.core.view.WindowInsetsCompat $r8$lambda$3UmXoLhTKCnP1oZBuDxC_DTiJTc(com.google.android.material.search.SearchView,android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> $r8$lambda$3UmXoLhTKCnP1oZBuDxC_DTiJTc
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$67egrGdp1lGwrKJheRxDNujvYf8(com.google.android.material.search.SearchView,android.view.View) -> $r8$lambda$67egrGdp1lGwrKJheRxDNujvYf8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$E-4zkU1Pg7dGm5jLkTBLLrBhg_4(com.google.android.material.search.SearchView,android.view.View) -> $r8$lambda$E-4zkU1Pg7dGm5jLkTBLLrBhg_4
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ExPaTI05NZan8-hRAbY4u_gxOYk(com.google.android.material.search.SearchView) -> $r8$lambda$ExPaTI05NZan8-hRAbY4u_gxOYk
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:androidx.core.view.WindowInsetsCompat $r8$lambda$SYoVZjtzfp51C05VRAHGJWdL38k(com.google.android.material.search.SearchView,android.view.View,androidx.core.view.WindowInsetsCompat) -> $r8$lambda$SYoVZjtzfp51C05VRAHGJWdL38k
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$XQChGz93BJSJFol8cMBWVkQo85Y(com.google.android.material.search.SearchView,android.view.View,android.view.MotionEvent) -> $r8$lambda$XQChGz93BJSJFol8cMBWVkQo85Y
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ZNPrDnaPr2360wKCwA2s3Pd8y7M(com.google.android.material.search.SearchView,android.view.View) -> $r8$lambda$ZNPrDnaPr2360wKCwA2s3Pd8y7M
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ZZAFRAxyb5ToA7OY2fYaS_PRayA(com.google.android.material.search.SearchView) -> $r8$lambda$ZZAFRAxyb5ToA7OY2fYaS_PRayA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$etD7ivt7iRzn1aPg5Bhd5CjkWyw(android.view.View,android.view.MotionEvent) -> $r8$lambda$etD7ivt7iRzn1aPg5Bhd5CjkWyw
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:androidx.core.view.WindowInsetsCompat $r8$lambda$xkENgK0o8NkI6sYdug3w2nASPuk(android.view.ViewGroup$MarginLayoutParams,int,int,android.view.View,androidx.core.view.WindowInsetsCompat) -> $r8$lambda$xkENgK0o8NkI6sYdug3w2nASPuk
      # {"id":"com.android.tools.r8.synthesized"}
    124:124:void <clinit>() -> <clinit>
    156:156:void <init>(android.content.Context) -> <init>
    160:160:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    143:214:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    493:494:void addHeaderView(android.view.View) -> addHeaderView
    219:222:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    810:810:void clearFocusAndHideKeyboard() -> clearFocusAndHideKeyboard
    644:644:void clearText() -> clearText
    255:256:android.view.Window getActivityWindow() -> getActivityWindow
    250:250:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    705:705:com.google.android.material.search.SearchView$TransitionState getCurrentTransitionState() -> getCurrentTransitionState
    621:621:android.widget.EditText getEditText() -> getEditText
    650:650:java.lang.CharSequence getHint() -> getHint
    278:281:float getOverlayElevation() -> getOverlayElevation
    597:597:android.widget.TextView getSearchPrefix() -> getSearchPrefix
    609:609:java.lang.CharSequence getSearchPrefixText() -> getSearchPrefixText
    666:666:int getSoftInputMode() -> getSoftInputMode
    362:364:int getStatusBarHeight() -> getStatusBarHeight
    628:628:android.text.Editable getText() -> getText
    615:615:androidx.appcompat.widget.Toolbar getToolbar() -> getToolbar
    749:754:void hide() -> hide
    821:821:boolean isAdjustNothingSoftInputMode() -> isAdjustNothingSoftInputMode
    524:524:boolean isAnimatedNavigationIcon() -> isAnimatedNavigationIcon
    540:540:boolean isMenuItemsAnimated() -> isMenuItemsAnimated
    400:400:boolean isNavigationIconDrawerArrowDrawable(androidx.appcompat.widget.Toolbar) -> isNavigationIconDrawerArrowDrawable
    466:466:boolean isSetupWithSearchBar() -> isSetupWithSearchBar
    812:816:void lambda$clearFocusAndHideKeyboard$9() -> lambda$clearFocusAndHideKeyboard$9
    799:803:void lambda$requestFocusAndShowKeyboard$8() -> lambda$requestFocusAndShowKeyboard$8
    307:307:void lambda$setUpBackButton$1(android.view.View) -> lambda$setUpBackButton$1
    319:320:void lambda$setUpClearButton$2(android.view.View) -> lambda$setUpClearButton$2
    342:343:boolean lambda$setUpContentOnTouchListener$3(android.view.View,android.view.MotionEvent) -> lambda$setUpContentOnTouchListener$3
    458:459:androidx.core.view.WindowInsetsCompat lambda$setUpDividerInsetListener$6(android.view.ViewGroup$MarginLayoutParams,int,int,android.view.View,androidx.core.view.WindowInsetsCompat) -> lambda$setUpDividerInsetListener$6
    0:0:boolean lambda$setUpRootView$0(android.view.View,android.view.MotionEvent) -> lambda$setUpRootView$0
    442:445:androidx.core.view.WindowInsetsCompat lambda$setUpStatusBarSpacerInsetListener$5(android.view.View,androidx.core.view.WindowInsetsCompat) -> lambda$setUpStatusBarSpacerInsetListener$5
    424:429:androidx.core.view.WindowInsetsCompat lambda$setUpToolbarInsetListener$4(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> lambda$setUpToolbarInsetListener$4
    479:479:void lambda$setupWithSearchBar$7(android.view.View) -> lambda$setupWithSearchBar$7
    242:244:void onAttachedToWindow() -> onAttachedToWindow
    228:230:void onFinishInflate() -> onFinishInflate
    935:943:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    926:929:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    797:797:void requestFocusAndShowKeyboard() -> requestFocusAndShowKeyboard
    789:790:void requestFocusAndShowKeyboardIfNeeded() -> requestFocusAndShowKeyboardIfNeeded
    516:516:void setAnimatedNavigationIcon(boolean) -> setAnimatedNavigationIcon
    545:545:void setAutoShowKeyboard(boolean) -> setAutoShowKeyboard
    236:237:void setElevation(float) -> setElevation
    655:655:void setHint(java.lang.CharSequence) -> setHint
    660:660:void setHint(int) -> setHint
    532:532:void setMenuItemsAnimated(boolean) -> setMenuItemsAnimated
    829:838:void setModalForAccessibility(boolean) -> setModalForAccessibility
    591:591:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    602:603:void setSearchPrefixText(java.lang.CharSequence) -> setSearchPrefixText
    694:695:void setStatusBarSpacerEnabled(boolean) -> setStatusBarSpacerEnabled
    699:699:void setStatusBarSpacerEnabledInternal(boolean) -> setStatusBarSpacerEnabledInternal
    634:634:void setText(java.lang.CharSequence) -> setText
    639:639:void setText(int) -> setText
    849:849:void setToolbarTouchscreenBlocksFocus(boolean) -> setToolbarTouchscreenBlocksFocus
    709:717:void setTransitionState(com.google.android.material.search.SearchView$TransitionState) -> setTransitionState
    303:312:void setUpBackButton(boolean,boolean) -> setUpBackButton
    265:265:void setUpBackgroundViewElevationOverlay() -> setUpBackgroundViewElevationOverlay
    269:274:void setUpBackgroundViewElevationOverlay(float) -> setUpBackgroundViewElevationOverlay
    317:323:void setUpClearButton() -> setUpClearButton
    340:340:void setUpContentOnTouchListener() -> setUpContentOnTouchListener
    452:455:void setUpDividerInsetListener() -> setUpDividerInsetListener
    295:298:void setUpEditText(int,java.lang.String,java.lang.String) -> setUpEditText
    288:289:void setUpHeaderLayout(int) -> setUpHeaderLayout
    415:417:void setUpInsetListeners() -> setUpInsetListeners
    261:261:void setUpRootView() -> setUpRootView
    350:352:void setUpStatusBarSpacer(int) -> setUpStatusBarSpacer
    436:439:void setUpStatusBarSpacerInsetListener() -> setUpStatusBarSpacerInsetListener
    421:421:void setUpToolbarInsetListener() -> setUpToolbarInsetListener
    560:560:void setUseWindowInsetsController(boolean) -> setUseWindowInsetsController
    759:765:void setVisible(boolean) -> setVisible
    476:482:void setupWithSearchBar(com.google.android.material.search.SearchBar) -> setupWithSearchBar
    734:739:void show() -> show
    855:880:void updateChildImportantForAccessibility(android.view.ViewGroup,boolean) -> updateChildImportantForAccessibility
    375:395:void updateNavigationIconIfNeeded() -> updateNavigationIconIfNeeded
    769:780:void updateNavigationIconProgressIfNeeded() -> updateNavigationIconProgressIfNeeded
    678:680:void updateSoftInputMode() -> updateSoftInputMode
com.google.android.material.search.SearchView$$ExternalSyntheticLambda0 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchView com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$2968bb8605fa897f5a2eb3a8e925f694c838347b1857f197aea988a67e758c65$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$2968bb8605fa897f5a2eb3a8e925f694c838347b1857f197aea988a67e758c65$0.<init>(com.google.android.material.search.SearchView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$2968bb8605fa897f5a2eb3a8e925f694c838347b1857f197aea988a67e758c65$0.onTouch(android.view.View,android.view.MotionEvent) -> onTouch
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$$ExternalSyntheticLambda1 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$36e64d7372b921eee84d36e881434d93baae07b036d9cf7c6ecc4384f0117c71$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$36e64d7372b921eee84d36e881434d93baae07b036d9cf7c6ecc4384f0117c71$0.onTouch(android.view.View,android.view.MotionEvent) -> onTouch
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$$ExternalSyntheticLambda2 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchView com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$373270df27ef5972210997592ecbb06fe75a45248e194a1918ecea6f0f66b273$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$373270df27ef5972210997592ecbb06fe75a45248e194a1918ecea6f0f66b273$0.<init>(com.google.android.material.search.SearchView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$373270df27ef5972210997592ecbb06fe75a45248e194a1918ecea6f0f66b273$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$$ExternalSyntheticLambda3 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.ViewGroup$MarginLayoutParams com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$39cc1f895c4fbfea2136752ba98aeaf5227d7bbe367a3ea500308bf89e9a1998$0.f$0 -> f$0
    int com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$39cc1f895c4fbfea2136752ba98aeaf5227d7bbe367a3ea500308bf89e9a1998$0.f$1 -> f$1
    int com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$39cc1f895c4fbfea2136752ba98aeaf5227d7bbe367a3ea500308bf89e9a1998$0.f$2 -> f$2
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$39cc1f895c4fbfea2136752ba98aeaf5227d7bbe367a3ea500308bf89e9a1998$0.<init>(android.view.ViewGroup$MarginLayoutParams,int,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:androidx.core.view.WindowInsetsCompat com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$39cc1f895c4fbfea2136752ba98aeaf5227d7bbe367a3ea500308bf89e9a1998$0.onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$$ExternalSyntheticLambda4 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchView com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$422c1daa4f655774d8b39ae1a6b64995669de6f5c0f2b92e3faf778123a6477c$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$422c1daa4f655774d8b39ae1a6b64995669de6f5c0f2b92e3faf778123a6477c$0.<init>(com.google.android.material.search.SearchView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:androidx.core.view.WindowInsetsCompat com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$422c1daa4f655774d8b39ae1a6b64995669de6f5c0f2b92e3faf778123a6477c$0.onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$$ExternalSyntheticLambda5 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchView com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$af79fbd4ce5fe3e5e4a0f6d3df8c2bbbfbad0b5e03b9e486382a21e33f1675e7$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$af79fbd4ce5fe3e5e4a0f6d3df8c2bbbfbad0b5e03b9e486382a21e33f1675e7$0.<init>(com.google.android.material.search.SearchView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$af79fbd4ce5fe3e5e4a0f6d3df8c2bbbfbad0b5e03b9e486382a21e33f1675e7$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$$ExternalSyntheticLambda6 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchView com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$bdfdc38fd4412c53a66182816b5dd182c68bdd6f1d3b0f5b424e52f61d6af3f5$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$bdfdc38fd4412c53a66182816b5dd182c68bdd6f1d3b0f5b424e52f61d6af3f5$0.<init>(com.google.android.material.search.SearchView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$bdfdc38fd4412c53a66182816b5dd182c68bdd6f1d3b0f5b424e52f61d6af3f5$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$$ExternalSyntheticLambda7 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchView com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$d7cb9741575eb4cde9063330ed922248f211eb969215efa1c31f0f47996762fd$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$d7cb9741575eb4cde9063330ed922248f211eb969215efa1c31f0f47996762fd$0.<init>(com.google.android.material.search.SearchView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:androidx.core.view.WindowInsetsCompat com.google.android.material.search.SearchView$$InternalSyntheticLambda$1$d7cb9741575eb4cde9063330ed922248f211eb969215efa1c31f0f47996762fd$0.onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$$ExternalSyntheticLambda8 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchView com.google.android.material.search.SearchView$$InternalSyntheticLambda$2$ad67c18bab5c92e127ddc78b73397727b570c8c800c5fa307ee4011b48055e2e$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$2$ad67c18bab5c92e127ddc78b73397727b570c8c800c5fa307ee4011b48055e2e$0.<init>(com.google.android.material.search.SearchView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$2$ad67c18bab5c92e127ddc78b73397727b570c8c800c5fa307ee4011b48055e2e$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$$ExternalSyntheticLambda9 -> com.google.android.material.search.SearchView$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchView com.google.android.material.search.SearchView$$InternalSyntheticLambda$2$e86ee9bbe9bf60b65e419c2f3139520fba70103a7a9ce6a9f0adb049de1f7773$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$2$e86ee9bbe9bf60b65e419c2f3139520fba70103a7a9ce6a9f0adb049de1f7773$0.<init>(com.google.android.material.search.SearchView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchView$$InternalSyntheticLambda$2$e86ee9bbe9bf60b65e419c2f3139520fba70103a7a9ce6a9f0adb049de1f7773$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchView$1 -> com.google.android.material.search.SearchView$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    324:324:void <init>(com.google.android.material.search.SearchView) -> <init>
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    330:330:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.search.SearchView$Behavior -> com.google.android.material.search.SearchView$Behavior:
# {"id":"sourceFile","fileName":"SearchView.java"}
    889:889:void <init>() -> <init>
    892:892:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    887:887:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    898:899:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.search.SearchView,android.view.View) -> onDependentViewChanged
com.google.android.material.search.SearchView$SavedState -> com.google.android.material.search.SearchView$SavedState:
# {"id":"sourceFile","fileName":"SearchView.java"}
    965:965:void <clinit>() -> <clinit>
    952:952:void <init>(android.os.Parcel) -> <init>
    956:958:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    962:962:void <init>(android.os.Parcelable) -> <init>
    986:988:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.search.SearchView$SavedState$1 -> com.google.android.material.search.SearchView$SavedState$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    966:966:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    970:970:com.google.android.material.search.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    975:975:com.google.android.material.search.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object[] newArray(int) -> newArray
    980:980:com.google.android.material.search.SearchView$SavedState[] newArray(int) -> newArray
com.google.android.material.search.SearchView$TransitionState -> com.google.android.material.search.SearchView$TransitionState:
# {"id":"sourceFile","fileName":"SearchView.java"}
    916:920:void <clinit>() -> <clinit>
    916:916:void <init>(java.lang.String,int) -> <init>
    916:916:com.google.android.material.search.SearchView$TransitionState valueOf(java.lang.String) -> valueOf
    916:916:com.google.android.material.search.SearchView$TransitionState[] values() -> values
com.google.android.material.search.SearchViewAnimationHelper -> com.google.android.material.search.SearchViewAnimationHelper:
# {"id":"sourceFile","fileName":"SearchViewAnimationHelper.java"}
    0:0:void $r8$lambda$Z1-IpSvBz1A0UFDUBqPbMGBVQYc(androidx.appcompat.graphics.drawable.DrawerArrowDrawable,android.animation.ValueAnimator) -> $r8$lambda$Z1-IpSvBz1A0UFDUBqPbMGBVQYc
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$av9zrSrr2s25eROn1dI8YE7LRaw(com.google.android.material.search.SearchViewAnimationHelper,float,android.graphics.Rect,android.animation.ValueAnimator) -> $r8$lambda$av9zrSrr2s25eROn1dI8YE7LRaw
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$dUmgJgHGRv_1TrnG_rLo7h18BfI(com.google.android.material.search.SearchViewAnimationHelper) -> $r8$lambda$dUmgJgHGRv_1TrnG_rLo7h18BfI
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$vIDpQzdq85GEYIUPmWfoi-QqvEQ(com.google.android.material.internal.FadeThroughDrawable,android.animation.ValueAnimator) -> $r8$lambda$vIDpQzdq85GEYIUPmWfoi-QqvEQ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$wybCWNxxo7ogggXT535_C5NdcUQ(com.google.android.material.search.SearchViewAnimationHelper) -> $r8$lambda$wybCWNxxo7ogggXT535_C5NdcUQ
      # {"id":"com.android.tools.r8.synthesized"}
    94:106:void <init>(com.google.android.material.search.SearchView) -> <init>
    52:52:com.google.android.material.search.SearchView access$000(com.google.android.material.search.SearchViewAnimationHelper) -> access$000
    52:52:com.google.android.material.internal.ClippableRoundedCornerLayout access$100(com.google.android.material.search.SearchViewAnimationHelper) -> access$100
    52:52:void access$200(com.google.android.material.search.SearchViewAnimationHelper,float) -> access$200
    52:52:com.google.android.material.search.SearchBar access$300(com.google.android.material.search.SearchViewAnimationHelper) -> access$300
    440:454:void addActionMenuViewAnimatorIfNeeded(android.animation.AnimatorSet) -> addActionMenuViewAnimatorIfNeeded
    396:406:void addBackButtonProgressAnimatorIfNeeded(android.animation.AnimatorSet) -> addBackButtonProgressAnimatorIfNeeded
    380:392:void addBackButtonTranslationAnimatorIfNeeded(android.animation.AnimatorSet) -> addBackButtonTranslationAnimatorIfNeeded
    411:416:void addDrawerArrowDrawableAnimatorIfNeeded(android.animation.AnimatorSet,android.graphics.drawable.Drawable) -> addDrawerArrowDrawableAnimatorIfNeeded
    421:426:void addFadeThroughDrawableAnimatorIfNeeded(android.animation.AnimatorSet,android.graphics.drawable.Drawable) -> addFadeThroughDrawableAnimatorIfNeeded
    338:353:android.graphics.Rect calculateFromClipBounds() -> calculateFromClipBounds
    466:474:android.animation.Animator getActionMenuViewsAlphaAnimator(boolean) -> getActionMenuViewsAlphaAnimator
    369:375:android.animation.Animator getButtonsAnimator(boolean) -> getButtonsAnimator
    357:364:android.animation.Animator getClearButtonAnimator(boolean) -> getClearButtonAnimator
    497:505:android.animation.Animator getContentAlphaAnimator(boolean) -> getContentAlphaAnimator
    490:492:android.animation.Animator getContentAnimator(boolean) -> getContentAnimator
    523:528:android.animation.Animator getContentScaleAnimator(boolean) -> getContentScaleAnimator
    510:518:android.animation.Animator getDividerAnimator(boolean) -> getDividerAnimator
    458:458:android.animation.Animator getDummyToolbarAnimator(boolean) -> getDummyToolbarAnimator
    486:486:android.animation.Animator getEditTextAnimator(boolean) -> getEditTextAnimator
    257:269:android.animation.AnimatorSet getExpandCollapseAnimatorSet(boolean) -> getExpandCollapseAnimatorSet
    559:562:int getFromTranslationXEnd(android.view.View) -> getFromTranslationXEnd
    550:554:int getFromTranslationXStart(android.view.View) -> getFromTranslationXStart
    566:567:int getFromTranslationY() -> getFromTranslationY
    462:462:android.animation.Animator getHeaderContainerAnimator(boolean) -> getHeaderContainerAnimator
    317:332:android.animation.Animator getRootViewAnimator(boolean) -> getRootViewAnimator
    307:312:android.animation.Animator getScrimAlphaAnimator(boolean) -> getScrimAlphaAnimator
    482:482:android.animation.Animator getSearchPrefixAnimator(boolean) -> getSearchPrefixAnimator
    241:246:android.animation.AnimatorSet getTranslateAnimatorSet(boolean) -> getTranslateAnimatorSet
    533:544:android.animation.Animator getTranslationAnimator(boolean,boolean,android.view.View) -> getTranslationAnimator
    251:252:android.animation.Animator getTranslationYAnimator() -> getTranslationYAnimator
    122:125:void hide() -> hide
    415:415:void lambda$addDrawerArrowDrawableAnimatorIfNeeded$3(androidx.appcompat.graphics.drawable.DrawerArrowDrawable,android.animation.ValueAnimator) -> lambda$addDrawerArrowDrawableAnimatorIfNeeded$3
    425:425:void lambda$addFadeThroughDrawableAnimatorIfNeeded$4(com.google.android.material.internal.FadeThroughDrawable,android.animation.ValueAnimator) -> lambda$addFadeThroughDrawableAnimatorIfNeeded$4
    327:328:void lambda$getRootViewAnimator$2(float,android.graphics.Rect,android.animation.ValueAnimator) -> lambda$getRootViewAnimator$2
    140:157:void lambda$startShowAnimationExpand$0() -> lambda$startShowAnimationExpand$0
    194:212:void lambda$startShowAnimationTranslate$1() -> lambda$startShowAnimationTranslate$1
    297:300:void setActionMenuViewAlphaIfNeeded(float) -> setActionMenuViewAlphaIfNeeded
    290:293:void setContentViewsAlpha(float) -> setContentViewsAlpha
    431:435:void setFullDrawableProgressIfNeeded(android.graphics.drawable.Drawable) -> setFullDrawableProgressIfNeeded
    586:592:void setMenuItemsNotClickable(androidx.appcompat.widget.Toolbar) -> setMenuItemsNotClickable
    110:110:void setSearchBar(com.google.android.material.search.SearchBar) -> setSearchBar
    572:581:void setUpDummyToolbarIfNeeded() -> setUpDummyToolbarIfNeeded
    114:117:void show() -> show
    162:182:void startHideAnimationCollapse() -> startHideAnimationCollapse
    217:237:void startHideAnimationTranslate() -> startHideAnimationTranslate
    130:138:void startShowAnimationExpand() -> startShowAnimationExpand
    186:192:void startShowAnimationTranslate() -> startShowAnimationTranslate
com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda0 -> com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.internal.FadeThroughDrawable com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$00a6d0d1d0329011396a6e6fa227831dabf4daf9ca2d6b5514026548ac297ea7$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$00a6d0d1d0329011396a6e6fa227831dabf4daf9ca2d6b5514026548ac297ea7$0.<init>(com.google.android.material.internal.FadeThroughDrawable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$00a6d0d1d0329011396a6e6fa227831dabf4daf9ca2d6b5514026548ac297ea7$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda1 -> com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.graphics.drawable.DrawerArrowDrawable com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$22bc94e41ff7687875e8318ecf572b56e70e804985bb1f88423e48233e52ba60$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$22bc94e41ff7687875e8318ecf572b56e70e804985bb1f88423e48233e52ba60$0.<init>(androidx.appcompat.graphics.drawable.DrawerArrowDrawable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$22bc94e41ff7687875e8318ecf572b56e70e804985bb1f88423e48233e52ba60$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda2 -> com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchViewAnimationHelper com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$6db7a855aa3b0d94098c3e3bf33b50580be6a8927be057447c9e7587cc9347da$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$6db7a855aa3b0d94098c3e3bf33b50580be6a8927be057447c9e7587cc9347da$0.<init>(com.google.android.material.search.SearchViewAnimationHelper) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$6db7a855aa3b0d94098c3e3bf33b50580be6a8927be057447c9e7587cc9347da$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda3 -> com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchView com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$768be47e69edeed48cf353ec0ce557ca24df1d535fda9009fff6b2f045c84c67$0.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$768be47e69edeed48cf353ec0ce557ca24df1d535fda9009fff6b2f045c84c67$0.<init>(com.google.android.material.search.SearchView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$768be47e69edeed48cf353ec0ce557ca24df1d535fda9009fff6b2f045c84c67$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda4 -> com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchViewAnimationHelper com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$768be47e69edeed48cf353ec0ce557ca24df1d535fda9009fff6b2f045c84c67$1.f$0 -> f$0
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$768be47e69edeed48cf353ec0ce557ca24df1d535fda9009fff6b2f045c84c67$1.<init>(com.google.android.material.search.SearchViewAnimationHelper) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$768be47e69edeed48cf353ec0ce557ca24df1d535fda9009fff6b2f045c84c67$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda5 -> com.google.android.material.search.SearchViewAnimationHelper$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.search.SearchViewAnimationHelper com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$f1744ce612bb081241c6f1a36fb88ec6dea4b955bfa1eef0dbc9141dc0f79281$0.f$0 -> f$0
    float com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$f1744ce612bb081241c6f1a36fb88ec6dea4b955bfa1eef0dbc9141dc0f79281$0.f$1 -> f$1
    android.graphics.Rect com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$f1744ce612bb081241c6f1a36fb88ec6dea4b955bfa1eef0dbc9141dc0f79281$0.f$2 -> f$2
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$f1744ce612bb081241c6f1a36fb88ec6dea4b955bfa1eef0dbc9141dc0f79281$0.<init>(com.google.android.material.search.SearchViewAnimationHelper,float,android.graphics.Rect) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.search.SearchViewAnimationHelper$$InternalSyntheticLambda$2$f1744ce612bb081241c6f1a36fb88ec6dea4b955bfa1eef0dbc9141dc0f79281$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.search.SearchViewAnimationHelper$1 -> com.google.android.material.search.SearchViewAnimationHelper$1:
# {"id":"sourceFile","fileName":"SearchViewAnimationHelper.java"}
    142:142:void <init>(com.google.android.material.search.SearchViewAnimationHelper) -> <init>
    151:154:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    145:146:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.search.SearchViewAnimationHelper$2 -> com.google.android.material.search.SearchViewAnimationHelper$2:
# {"id":"sourceFile","fileName":"SearchViewAnimationHelper.java"}
    167:167:void <init>(com.google.android.material.search.SearchViewAnimationHelper) -> <init>
    175:179:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    170:170:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.search.SearchViewAnimationHelper$3 -> com.google.android.material.search.SearchViewAnimationHelper$3:
# {"id":"sourceFile","fileName":"SearchViewAnimationHelper.java"}
    197:197:void <init>(com.google.android.material.search.SearchViewAnimationHelper) -> <init>
    206:209:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    200:201:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.search.SearchViewAnimationHelper$4 -> com.google.android.material.search.SearchViewAnimationHelper$4:
# {"id":"sourceFile","fileName":"SearchViewAnimationHelper.java"}
    222:222:void <init>(com.google.android.material.search.SearchViewAnimationHelper) -> <init>
    230:234:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    225:225:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.search.SearchViewAnimationHelper$5 -> com.google.android.material.search.SearchViewAnimationHelper$5:
# {"id":"sourceFile","fileName":"SearchViewAnimationHelper.java"}
    270:270:void <init>(com.google.android.material.search.SearchViewAnimationHelper,boolean) -> <init>
    278:282:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    273:273:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.shadow.ShadowRenderer -> com.google.android.material.shadow.ShadowRenderer:
# {"id":"sourceFile","fileName":"ShadowRenderer.java"}
    60:66:void <clinit>() -> <clinit>
    72:72:void <init>() -> <init>
    68:83:void <init>(int) -> <init>
    132:183:void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float) -> drawCornerShadow
    96:116:void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int) -> drawEdgeShadow
    218:218:android.graphics.Paint getShadowPaint() -> getShadowPaint
    87:90:void setShadowColor(int) -> setShadowColor
com.google.android.material.shadow.ShadowViewDelegate -> com.google.android.material.shadow.ShadowViewDelegate:
# {"id":"sourceFile","fileName":"ShadowViewDelegate.java"}
com.google.android.material.shape.AbsoluteCornerSize -> com.google.android.material.shape.AbsoluteCornerSize:
# {"id":"sourceFile","fileName":"AbsoluteCornerSize.java"}
    28:29:void <init>(float) -> <init>
    49:53:boolean equals(java.lang.Object) -> equals
    34:34:float getCornerSize(android.graphics.RectF) -> getCornerSize
    58:59:int hashCode() -> hashCode
com.google.android.material.shape.AdjustedCornerSize -> com.google.android.material.shape.AdjustedCornerSize:
# {"id":"sourceFile","fileName":"AdjustedCornerSize.java"}
    37:45:void <init>(float,com.google.android.material.shape.CornerSize) -> <init>
    58:62:boolean equals(java.lang.Object) -> equals
    50:50:float getCornerSize(android.graphics.RectF) -> getCornerSize
    67:68:int hashCode() -> hashCode
com.google.android.material.shape.CornerSize -> com.google.android.material.shape.CornerSize:
# {"id":"sourceFile","fileName":"CornerSize.java"}
com.google.android.material.shape.CornerTreatment -> com.google.android.material.shape.CornerTreatment:
# {"id":"sourceFile","fileName":"CornerTreatment.java"}
    98:98:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize) -> getCornerPath
com.google.android.material.shape.CutCornerTreatment -> com.google.android.material.shape.CutCornerTreatment:
# {"id":"sourceFile","fileName":"CutCornerTreatment.java"}
    24:26:void <init>() -> <init>
    47:52:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.shape.EdgeTreatment:
# {"id":"sourceFile","fileName":"EdgeTreatment.java"}
    0:0:boolean forceIntersection() -> forceIntersection
    64:64:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.MarkerEdgeTreatment -> com.google.android.material.shape.MarkerEdgeTreatment:
# {"id":"sourceFile","fileName":"MarkerEdgeTreatment.java"}
    32:33:void <init>(float) -> <init>
    0:0:boolean forceIntersection() -> forceIntersection
    39:43:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.shape.MaterialShapeDrawable:
# {"id":"sourceFile","fileName":"MaterialShapeDrawable.java"}
    110:113:void <clinit>() -> <clinit>
    76:76:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1) -> <init>
    187:187:void <init>() -> <init>
    195:195:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    208:208:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    119:218:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    76:76:java.util.BitSet access$000(com.google.android.material.shape.MaterialShapeDrawable) -> access$000
    76:76:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable) -> access$100
    76:76:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$200(com.google.android.material.shape.MaterialShapeDrawable) -> access$200
    76:76:boolean access$402(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> access$402
    1271:1275:android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean) -> calculatePaintColorTintFilter
    1220:1230:void calculatePath(android.graphics.RectF,android.graphics.Path) -> calculatePath
    1166:1166:void calculatePathForSize(android.graphics.RectF,android.graphics.Path) -> calculatePathForSize
    1178:1197:void calculateStrokePath() -> calculateStrokePath
    1286:1291:android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> calculateTintColorTintFilter
    1263:1264:android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean) -> calculateTintFilter
    623:625:int compositeElevationOverlayIfNeeded(int) -> compositeElevationOverlayIfNeeded
    176:182:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float) -> createWithElevationOverlay
    959:984:void draw(android.graphics.Canvas) -> draw
    1113:1135:void drawCompatShadow(android.graphics.Canvas) -> drawCompatShadow
    1066:1066:void drawFillShape(android.graphics.Canvas) -> drawFillShape
    1045:1045:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF) -> drawShape
    1055:1061:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> drawShape
    1079:1080:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
    461:461:int getAlpha() -> getAlpha
    1372:1375:float getBottomLeftCornerResolvedSize() -> getBottomLeftCornerResolvedSize
    1380:1383:float getBottomRightCornerResolvedSize() -> getBottomRightCornerResolvedSize
    490:491:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    1348:1351:android.graphics.RectF getBoundsInsetByStroke() -> getBoundsInsetByStroke
    238:238:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    674:674:float getElevation() -> getElevation
    321:321:android.content.res.ColorStateList getFillColor() -> getFillColor
    637:637:float getInterpolation() -> getInterpolation
    0:0:int getOpacity() -> getOpacity
    1204:1216:void getOutline(android.graphics.Outline) -> getOutline
    524:528:boolean getPadding(android.graphics.Rect) -> getPadding
    657:657:float getParentAbsoluteElevation() -> getParentAbsoluteElevation
    449:449:int getResolvedTintColor() -> getResolvedTintColor
    1141:1143:int getShadowOffsetX() -> getShadowOffsetX
    1148:1150:int getShadowOffsetY() -> getShadowOffsetY
    825:825:int getShadowRadius() -> getShadowRadius
    275:275:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    343:343:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    1340:1341:float getStrokeInsetLength() -> getStrokeInsetLength
    431:431:float getStrokeWidth() -> getStrokeWidth
    365:365:android.content.res.ColorStateList getTintList() -> getTintList
    1356:1359:float getTopLeftCornerResolvedSize() -> getTopLeftCornerResolvedSize
    1364:1367:float getTopRightCornerResolvedSize() -> getTopRightCornerResolvedSize
    695:695:float getTranslationZ() -> getTranslationZ
    480:485:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    716:716:float getZ() -> getZ
    933:935:boolean hasCompatShadow() -> hasCompatShadow
    940:940:boolean hasFill() -> hasFill
    946:948:boolean hasStroke() -> hasStroke
    616:617:void initializeElevationOverlay(android.content.Context) -> initializeElevationOverlay
    871:872:void invalidateSelf() -> invalidateSelf
    880:880:void invalidateSelfIgnoreShape() -> invalidateSelfIgnoreShape
    600:601:boolean isElevationOverlayEnabled() -> isElevationOverlayEnabled
    1394:1394:boolean isRoundRect() -> isRoundRect
    1296:1300:boolean isStateful() -> isStateful
    988:1031:void maybeDrawCompatShadow(android.graphics.Canvas) -> maybeDrawCompatShadow
    0:0:int modulateAlpha(int,int) -> modulateAlpha
    244:245:android.graphics.drawable.Drawable mutate() -> mutate
    953:954:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1305:1309:boolean onStateChange(int[]) -> onStateChange
    1085:1102:void prepareCanvasForShadow(android.graphics.Canvas) -> prepareCanvasForShadow
    844:845:boolean requiresCompatShadow() -> requiresCompatShadow
    466:468:void setAlpha(int) -> setAlpha
    474:475:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    496:496:void setCornerSize(float) -> setCornerSize
    501:501:void setCornerSize(com.google.android.material.shape.CornerSize) -> setCornerSize
    683:685:void setElevation(float) -> setElevation
    308:310:void setFillColor(android.content.res.ColorStateList) -> setFillColor
    648:651:void setInterpolation(float) -> setInterpolation
    541:546:void setPadding(int,int,int,int) -> setPadding
    927:928:void setPaintStyle(android.graphics.Paint$Style) -> setPaintStyle
    662:664:void setParentAbsoluteElevation(float) -> setParentAbsoluteElevation
    771:771:void setShadowBitmapDrawingEnable(boolean) -> setShadowBitmapDrawingEnable
    907:909:void setShadowColor(int) -> setShadowColor
    560:562:void setShadowCompatibilityMode(int) -> setShadowCompatibilityMode
    262:263:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    410:411:void setStroke(float,int) -> setStroke
    421:422:void setStroke(float,android.content.res.ColorStateList) -> setStroke
    330:332:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    440:441:void setStrokeWidth(float) -> setStrokeWidth
    380:380:void setTint(int) -> setTint
    357:359:void setTintList(android.content.res.ColorStateList) -> setTintList
    348:351:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    1317:1331:boolean updateColorsForState(int[]) -> updateColorsForState
    1234:1253:boolean updateTintFilter() -> updateTintFilter
    729:734:void updateZ() -> updateZ
com.google.android.material.shape.MaterialShapeDrawable$1 -> com.google.android.material.shape.MaterialShapeDrawable$1:
# {"id":"sourceFile","fileName":"MaterialShapeDrawable.java"}
    219:219:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    223:224:void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onCornerPathCreated
    229:230:void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onEdgePathCreated
com.google.android.material.shape.MaterialShapeDrawable$2 -> com.google.android.material.shape.MaterialShapeDrawable$2:
# {"id":"sourceFile","fileName":"MaterialShapeDrawable.java"}
    1182:1182:void <init>(com.google.android.material.shape.MaterialShapeDrawable,float) -> <init>
    1188:1190:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState -> com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState:
# {"id":"sourceFile","fileName":"MaterialShapeDrawable.java"}
    1403:1431:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider) -> <init>
    1403:1457:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    0:0:int getChangingConfigurations() -> getChangingConfigurations
    1464:1466:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.shape.MaterialShapeUtils -> com.google.android.material.shape.MaterialShapeUtils:
# {"id":"sourceFile","fileName":"MaterialShapeUtils.java"}
    33:37:com.google.android.material.shape.CornerTreatment createCornerTreatment(int) -> createCornerTreatment
    43:43:com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment() -> createDefaultCornerTreatment
    48:48:com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment() -> createDefaultEdgeTreatment
    57:59:void setElevation(android.view.View,float) -> setElevation
    70:72:void setParentAbsoluteElevation(android.view.View) -> setParentAbsoluteElevation
    83:84:void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable) -> setParentAbsoluteElevation
com.google.android.material.shape.OffsetEdgeTreatment -> com.google.android.material.shape.OffsetEdgeTreatment:
# {"id":"sourceFile","fileName":"OffsetEdgeTreatment.java"}
    27:29:void <init>(com.google.android.material.shape.EdgeTreatment,float) -> <init>
    40:40:boolean forceIntersection() -> forceIntersection
    35:35:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.RelativeCornerSize -> com.google.android.material.shape.RelativeCornerSize:
# {"id":"sourceFile","fileName":"RelativeCornerSize.java"}
    58:59:void <init>(float) -> <init>
    78:82:boolean equals(java.lang.Object) -> equals
    70:70:float getCornerSize(android.graphics.RectF) -> getCornerSize
    51:51:float getMaxCornerSize(android.graphics.RectF) -> getMaxCornerSize
    87:88:int hashCode() -> hashCode
com.google.android.material.shape.RoundedCornerTreatment -> com.google.android.material.shape.RoundedCornerTreatment:
# {"id":"sourceFile","fileName":"RoundedCornerTreatment.java"}
    24:26:void <init>() -> <init>
    43:44:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.ShapeAppearanceModel -> com.google.android.material.shape.ShapeAppearanceModel:
# {"id":"sourceFile","fileName":"ShapeAppearanceModel.java"}
    593:593:void <clinit>() -> <clinit>
    42:42:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1) -> <init>
    608:622:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> <init>
    626:640:void <init>() -> <init>
    465:465:com.google.android.material.shape.ShapeAppearanceModel$Builder builder() -> builder
    474:474:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int) -> builder
    484:484:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int) -> builder
    495:502:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize) -> builder
    510:510:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int) -> builder
    519:519:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int) -> builder
    533:569:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize) -> builder
    760:760:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> getBottomEdge
    680:680:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> getBottomLeftCorner
    720:720:com.google.android.material.shape.CornerSize getBottomLeftCornerSize() -> getBottomLeftCornerSize
    670:670:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> getBottomRightCorner
    710:710:com.google.android.material.shape.CornerSize getBottomRightCornerSize() -> getBottomRightCornerSize
    575:586:com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize) -> getCornerSize
    730:730:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> getLeftEdge
    750:750:com.google.android.material.shape.EdgeTreatment getRightEdge() -> getRightEdge
    740:740:com.google.android.material.shape.EdgeTreatment getTopEdge() -> getTopEdge
    650:650:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> getTopLeftCorner
    690:690:com.google.android.material.shape.CornerSize getTopLeftCornerSize() -> getTopLeftCornerSize
    660:660:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> getTopRightCorner
    700:700:com.google.android.material.shape.CornerSize getTopRightCornerSize() -> getTopRightCornerSize
    819:832:boolean isRoundRect(android.graphics.RectF) -> isRoundRect
    766:766:com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder() -> toBuilder
    775:775:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float) -> withCornerSize
    780:780:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize) -> withCornerSize
    803:808:com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator) -> withTransformedCornerSizes
com.google.android.material.shape.ShapeAppearanceModel$1 -> com.google.android.material.shape.ShapeAppearanceModel$1:
# {"id":"sourceFile","fileName":"ShapeAppearanceModel.java"}
com.google.android.material.shape.ShapeAppearanceModel$Builder -> com.google.android.material.shape.ShapeAppearanceModel$Builder:
# {"id":"sourceFile","fileName":"ShapeAppearanceModel.java"}
    48:69:void <init>() -> <init>
    48:85:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    45:45:com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$100
    45:45:com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1000
    45:45:com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1100
    45:45:com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1200
    45:45:com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$200
    45:45:com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$300
    45:45:com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$400
    45:45:com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$500
    45:45:com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$600
    45:45:com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$700
    45:45:com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$800
    45:45:com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$900
    459:459:com.google.android.material.shape.ShapeAppearanceModel build() -> build
    448:451:float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment) -> compatCornerTreatmentSize
    126:129:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize) -> setAllCornerSizes
    136:139:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float) -> setAllCornerSizes
    100:101:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(int,float) -> setAllCorners
    112:115:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(com.google.android.material.shape.CornerTreatment) -> setAllCorners
    442:442:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomEdge(com.google.android.material.shape.EdgeTreatment) -> setBottomEdge
    363:364:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize) -> setBottomLeftCorner
    375:379:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    194:194:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float) -> setBottomLeftCornerSize
    202:202:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize) -> setBottomLeftCornerSize
    318:319:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize) -> setBottomRightCorner
    330:334:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    178:178:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float) -> setBottomRightCornerSize
    186:186:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize) -> setBottomRightCornerSize
    418:418:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopEdge(com.google.android.material.shape.EdgeTreatment) -> setTopEdge
    229:230:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize) -> setTopLeftCorner
    241:245:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    146:146:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float) -> setTopLeftCornerSize
    154:154:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize) -> setTopLeftCornerSize
    273:274:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize) -> setTopRightCorner
    285:289:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
    162:162:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float) -> setTopRightCornerSize
    170:170:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize) -> setTopRightCornerSize
com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator -> com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator:
# {"id":"sourceFile","fileName":"ShapeAppearanceModel.java"}
com.google.android.material.shape.ShapeAppearancePathProvider -> com.google.android.material.shape.ShapeAppearancePathProvider:
# {"id":"sourceFile","fileName":"ShapeAppearancePathProvider.java"}
    55:75:void <init>() -> <init>
    325:325:float angleOfEdge(int) -> angleOfEdge
    170:180:void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendCornerPath
    185:228:void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendEdgePath
    99:99:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path) -> calculatePath
    118:143:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> calculatePath
    309:319:void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF) -> getCoordinatesOfCorner
    280:287:com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerSizeForIndex
    265:272:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerTreatmentForIndex
    247:257:float getEdgeCenterForIndex(android.graphics.RectF,int) -> getEdgeCenterForIndex
    295:302:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getEdgeTreatmentForIndex
    83:83:com.google.android.material.shape.ShapeAppearancePathProvider getInstance() -> getInstance
    234:243:boolean pathOverlapsCorner(android.graphics.Path,int) -> pathOverlapsCorner
    148:156:void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> setCornerPathAndTransform
    160:166:void setEdgePathAndTransform(int) -> setEdgePathAndTransform
com.google.android.material.shape.ShapeAppearancePathProvider$Lazy -> com.google.android.material.shape.ShapeAppearancePathProvider$Lazy:
# {"id":"sourceFile","fileName":"ShapeAppearancePathProvider.java"}
    39:39:void <clinit>() -> <clinit>
com.google.android.material.shape.ShapeAppearancePathProvider$PathListener -> com.google.android.material.shape.ShapeAppearancePathProvider$PathListener:
# {"id":"sourceFile","fileName":"ShapeAppearancePathProvider.java"}
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec -> com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec:
# {"id":"sourceFile","fileName":"ShapeAppearancePathProvider.java"}
    348:353:void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> <init>
com.google.android.material.shape.ShapePath -> com.google.android.material.shape.ShapePath:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    92:97:void <init>() -> <init>
    253:274:void addArc(float,float,float,float,float,float) -> addArc
    335:349:void addConnectingShadowIfNecessary(float) -> addConnectingShadowIfNecessary
    317:319:void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float) -> addShadowCompatOperation
    284:286:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    327:327:boolean containsIncompatibleShadowOp() -> containsIncompatibleShadowOp
    297:300:com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix) -> createShadowCompatOperation
    369:369:float getCurrentShadowAngle() -> getCurrentShadowAngle
    373:373:float getEndShadowAngle() -> getEndShadowAngle
    361:361:float getEndX() -> getEndX
    365:365:float getEndY() -> getEndY
    353:353:float getStartX() -> getStartX
    357:357:float getStartY() -> getStartY
    132:146:void lineTo(float,float) -> lineTo
    109:109:void reset(float,float) -> reset
    114:122:void reset(float,float,float,float) -> reset
    393:393:void setCurrentShadowAngle(float) -> setCurrentShadowAngle
    397:397:void setEndShadowAngle(float) -> setEndShadowAngle
    385:385:void setEndX(float) -> setEndX
    389:389:void setEndY(float) -> setEndY
    377:377:void setStartX(float) -> setStartX
    381:381:void setStartY(float) -> setStartY
com.google.android.material.shape.ShapePath$1 -> com.google.android.material.shape.ShapePath$1:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    300:300:void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix) -> <init>
    304:305:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$ArcShadowOperation -> com.google.android.material.shape.ShapePath$ArcShadowOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    547:548:void <init>(com.google.android.material.shape.ShapePath$PathArcOperation) -> <init>
    557:562:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$LineShadowOperation -> com.google.android.material.shape.ShapePath$LineShadowOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    426:429:void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float) -> <init>
    438:445:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
    449:449:float getAngle() -> getAngle
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.shape.ShapePath$PathArcOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    659:659:void <clinit>() -> <clinit>
    692:696:void <init>(float,float,float,float) -> <init>
    658:658:float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1000
    658:658:float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1100
    658:658:float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1200
    658:658:float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1300
    658:658:void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$600
    658:658:void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$700
    658:658:float access$800(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$800
    658:658:float access$900(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$900
    701:706:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    722:722:float getBottom() -> getBottom
    710:710:float getLeft() -> getLeft
    718:718:float getRight() -> getRight
    742:742:float getStartAngle() -> getStartAngle
    746:746:float getSweepAngle() -> getSweepAngle
    714:714:float getTop() -> getTop
    738:738:void setBottom(float) -> setBottom
    726:726:void setLeft(float) -> setLeft
    734:734:void setRight(float) -> setRight
    750:750:void setStartAngle(float) -> setStartAngle
    754:754:void setSweepAngle(float) -> setSweepAngle
    730:730:void setTop(float) -> setTop
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.shape.ShapePath$PathLineOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    578:578:void <init>() -> <init>
    578:578:float access$000(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$000
    578:578:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$002
    578:578:float access$100(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$100
    578:578:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$102
    584:588:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.shape.ShapePath$PathOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    568:571:void <init>() -> <init>
com.google.android.material.shape.ShapePath$ShadowCompatOperation -> com.google.android.material.shape.ShapePath$ShadowCompatOperation:
# {"id":"sourceFile","fileName":"ShapePath.java"}
    406:406:void <clinit>() -> <clinit>
    404:407:void <init>() -> <init>
    411:411:void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.Shapeable -> com.google.android.material.shape.Shapeable:
# {"id":"sourceFile","fileName":"Shapeable.java"}
com.google.android.material.sidesheet.RightSheetDelegate -> com.google.android.material.sidesheet.RightSheetDelegate:
# {"id":"sourceFile","fileName":"RightSheetDelegate.java"}
    38:39:void <init>(com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    129:130:float calculateSlideOffsetBasedOnOutwardEdge(int) -> calculateSlideOffsetBasedOnOutwardEdge
    78:90:int calculateTargetStateOnViewReleased(android.view.View,float,float) -> calculateTargetStateOnViewReleased
    60:60:int getExpandedOffset() -> getExpandedOffset
    53:53:int getHiddenOffset() -> getHiddenOffset
    124:124:int getOutwardEdge(android.view.View) -> getOutwardEdge
    0:0:int getSheetEdge() -> getSheetEdge
    67:67:boolean isReleasedCloseToOriginEdge(android.view.View) -> isReleasedCloseToOriginEdge
    114:119:boolean isSettling(android.view.View,int,boolean) -> isSettling
    102:103:boolean isSwipeSignificant(float,float) -> isSwipeSignificant
    108:109:boolean shouldHide(android.view.View,float) -> shouldHide
    138:143:void updateCoplanarSiblingLayoutParams(android.view.ViewGroup$MarginLayoutParams,int,int) -> updateCoplanarSiblingLayoutParams
com.google.android.material.sidesheet.SheetDelegate -> com.google.android.material.sidesheet.SheetDelegate:
# {"id":"sourceFile","fileName":"SheetDelegate.java"}
com.google.android.material.sidesheet.SheetUtils -> com.google.android.material.sidesheet.SheetUtils:
# {"id":"sourceFile","fileName":"SheetUtils.java"}
    33:33:boolean isSwipeMostlyHorizontal(float,float) -> isSwipeMostlyHorizontal
com.google.android.material.sidesheet.SideSheetBehavior -> com.google.android.material.sidesheet.SideSheetBehavior:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    0:0:void $r8$lambda$BqwTUDu32X3pYkD_jSNGWG9fjsM(com.google.android.material.sidesheet.SideSheetBehavior,int) -> $r8$lambda$BqwTUDu32X3pYkD_jSNGWG9fjsM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$tYSQPZMO83x5k0C9LPAWDL-Rmyo(com.google.android.material.sidesheet.SideSheetBehavior,int,android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> $r8$lambda$tYSQPZMO83x5k0C9LPAWDL-Rmyo
      # {"id":"com.android.tools.r8.synthesized"}
    66:90:void <clinit>() -> <clinit>
    88:685:void <init>() -> <init>
    88:685:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:63:int access$000(com.google.android.material.sidesheet.SideSheetBehavior) -> access$000
    63:63:java.lang.ref.WeakReference access$100(com.google.android.material.sidesheet.SideSheetBehavior) -> access$100
    63:63:com.google.android.material.sidesheet.SheetDelegate access$200(com.google.android.material.sidesheet.SideSheetBehavior) -> access$200
    63:63:void access$300(com.google.android.material.sidesheet.SideSheetBehavior,android.view.View,int) -> access$300
    63:63:boolean access$400(com.google.android.material.sidesheet.SideSheetBehavior) -> access$400
    63:63:void access$500(com.google.android.material.sidesheet.SideSheetBehavior,android.view.View,int,boolean) -> access$500
    63:63:int access$600(com.google.android.material.sidesheet.SideSheetBehavior) -> access$600
    63:63:androidx.customview.widget.ViewDragHelper access$700(com.google.android.material.sidesheet.SideSheetBehavior) -> access$700
    365:377:int calculateCurrentOffset(int,android.view.View) -> calculateCurrentOffset
    465:465:float calculateDragDistance(float,float) -> calculateDragDistance
    804:807:void clearCoplanarSiblingView() -> clearCoplanarSiblingView
    955:955:androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int) -> createAccessibilityViewCommandForState
    634:647:void createMaterialShapeDrawableIfNeeded(android.content.Context) -> createMaterialShapeDrawableIfNeeded
    745:748:void dispatchOnSlide(android.view.View,int) -> dispatchOnSlide
    339:341:void ensureAccessibilityPaneTitleIsSet(android.view.View) -> ensureAccessibilityPaneTitleIsSet
    255:268:int getChildMeasureSpec(int,int,int,int) -> getChildMeasureSpec
    355:355:int getChildWidth() -> getChildWidth
    800:800:android.view.View getCoplanarSiblingView() -> getCoplanarSiblingView
    0:0:int getDefaultSheetEdge() -> getDefaultSheetEdge
    473:473:int getExpandedOffset() -> getExpandedOffset
    508:508:float getHideFriction() -> getHideFriction
    0:0:float getHideThreshold() -> getHideThreshold
    672:676:int getOutwardEdgeOffsetForState(int) -> getOutwardEdgeOffsetForState
    359:359:int getParentWidth() -> getParentWidth
    0:0:int getSignificantVelocityThreshold() -> getSignificantVelocityThreshold
    682:682:androidx.customview.widget.ViewDragHelper getViewDragHelper() -> getViewDragHelper
    457:461:boolean isDraggedFarEnough(android.view.MotionEvent) -> isDraggedFarEnough
    573:574:boolean isLayingOut(android.view.View) -> isLayingOut
    956:956:boolean lambda$createAccessibilityViewCommandForState$1(int,android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> lambda$createAccessibilityViewCommandForState$1
    556:558:void lambda$setState$0(int) -> lambda$setState$0
    346:349:void maybeAssignCoplanarSiblingViewBasedId(androidx.coordinatorlayout.widget.CoordinatorLayout) -> maybeAssignCoplanarSiblingViewBasedId
    205:209:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    214:217:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    385:414:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    276:319:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    228:249:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    194:200:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    188:188:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    428:453:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    949:950:void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> replaceAccessibilityActionForState
    617:619:void resetVelocity() -> resetVelocity
    565:568:void runAfterLayout(android.view.View,java.lang.Runnable) -> runAfterLayout
    761:769:void setCoplanarSiblingViewId(int) -> setCoplanarSiblingViewId
    484:484:void setDraggable(boolean) -> setDraggable
    152:159:void setSheetEdge(int) -> setSheetEdge
    543:554:void setState(int) -> setState
    590:613:void setStateInternal(int) -> setStateInternal
    630:630:boolean shouldHandleDraggingWithHelper() -> shouldHandleDraggingWithHelper
    418:418:boolean shouldInterceptTouchEvent(android.view.View) -> shouldInterceptTouchEvent
    0:0:boolean shouldSkipSmoothAnimation() -> shouldSkipSmoothAnimation
    660:665:void startSettling(android.view.View,int,boolean) -> startSettling
    927:942:void updateAccessibilityActions() -> updateAccessibilityActions
    331:333:void updateSheetVisibility(android.view.View) -> updateSheetVisibility
com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda0 -> com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.sidesheet.SideSheetBehavior com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.f$0 -> f$0
    int com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.f$1 -> f$1
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.<init>(com.google.android.material.sidesheet.SideSheetBehavior,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$1$fa1244d46eae0795a60b9fc62a1245804a9f64a9fac94559c274504bbca5d4b6$0.perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda1 -> com.google.android.material.sidesheet.SideSheetBehavior$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.sidesheet.SideSheetBehavior com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.f$0 -> f$0
    int com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.f$1 -> f$1
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.<init>(com.google.android.material.sidesheet.SideSheetBehavior,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$$InternalSyntheticLambda$2$d3cacd97ad6fa5b54fa0e7242a348c40ec6030be8bf0a83cb679ff7f75e87731$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.sidesheet.SideSheetBehavior$1 -> com.google.android.material.sidesheet.SideSheetBehavior$1:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    686:686:void <init>(com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    735:735:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    730:730:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    740:740:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    715:716:void onViewDragStateChanged(int) -> onViewDragStateChanged
    699:710:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    723:725:void onViewReleased(android.view.View,float,float) -> onViewReleased
    690:693:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.sidesheet.SideSheetBehavior$SavedState -> com.google.android.material.sidesheet.SideSheetBehavior$SavedState:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    884:884:void <clinit>() -> <clinit>
    868:870:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    874:875:void <init>(android.os.Parcelable,com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    880:881:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.sidesheet.SideSheetBehavior$SavedState$1 -> com.google.android.material.sidesheet.SideSheetBehavior$SavedState$1:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    885:885:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    885:885:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    889:889:com.google.android.material.sidesheet.SideSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    895:895:com.google.android.material.sidesheet.SideSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    885:885:java.lang.Object[] newArray(int) -> newArray
    901:901:com.google.android.material.sidesheet.SideSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker -> com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker:
# {"id":"sourceFile","fileName":"SideSheetBehavior.java"}
    0:0:void $r8$lambda$cX4rrUBRviTi9l99dj1EmckVARg(com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker) -> $r8$lambda$cX4rrUBRviTi9l99dj1EmckVARg
      # {"id":"com.android.tools.r8.synthesized"}
    832:836:void <init>(com.google.android.material.sidesheet.SideSheetBehavior) -> <init>
    848:854:void continueSettlingToState(int) -> continueSettlingToState
    838:842:void lambda$new$0() -> lambda$new$0
com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$ExternalSyntheticLambda0 -> com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$InternalSyntheticLambda$1$e0d76f536e2711a7e2f829fd7b69be01c71a320b0aec14b05669b9ddd9797109$0.f$0 -> f$0
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$InternalSyntheticLambda$1$e0d76f536e2711a7e2f829fd7b69be01c71a320b0aec14b05669b9ddd9797109$0.<init>(com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.sidesheet.SideSheetBehavior$StateSettlingTracker$$InternalSyntheticLambda$1$e0d76f536e2711a7e2f829fd7b69be01c71a320b0aec14b05669b9ddd9797109$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.slider.BaseSlider -> com.google.android.material.slider.BaseSlider:
# {"id":"sourceFile","fileName":"BaseSlider.java"}
    233:243:void <clinit>() -> <clinit>
    346:346:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    259:394:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    198:198:java.util.List access$000(com.google.android.material.slider.BaseSlider) -> access$000
    198:198:com.google.android.material.slider.BaseSlider$AccessibilityHelper access$200(com.google.android.material.slider.BaseSlider) -> access$200
    198:198:java.lang.String access$400(com.google.android.material.slider.BaseSlider,float) -> access$400
    198:198:boolean access$500(com.google.android.material.slider.BaseSlider,int,float) -> access$500
    198:198:void access$600(com.google.android.material.slider.BaseSlider) -> access$600
    198:198:float access$700(com.google.android.material.slider.BaseSlider,int) -> access$700
    896:903:void adjustCustomThumbDrawableBounds(android.graphics.drawable.Drawable) -> adjustCustomThumbDrawableBounds
    1611:1611:void attachLabelToContentView(com.google.android.material.tooltip.TooltipDrawable) -> attachLabelToContentView
    2490:2501:java.lang.Float calculateIncrementForKey(int) -> calculateIncrementForKey
    2509:2509:float calculateStepIncrement() -> calculateStepIncrement
    2517:2523:float calculateStepIncrement(int) -> calculateStepIncrement
    1697:1699:int calculateTrackCenter() -> calculateTrackCenter
    2128:2159:android.animation.ValueAnimator createLabelAnimator(boolean) -> createLabelAnimator
    746:771:void createLabelPool() -> createLabelPool
    1629:1632:void detachLabelFromContentView(com.google.android.material.tooltip.TooltipDrawable) -> detachLabelFromContentView
    2072:2072:float dimenToValue(float) -> dimenToValue
    2573:2573:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    2580:2580:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2298:2302:void dispatchOnChangedFromUser(int) -> dispatchOnChangedFromUser
    2289:2291:void dispatchOnChangedProgrammatically() -> dispatchOnChangedProgrammatically
    1778:1781:void drawActiveTrack(android.graphics.Canvas,int,int) -> drawActiveTrack
    1752:1761:void drawInactiveTrack(android.graphics.Canvas,int,int) -> drawInactiveTrack
    1832:1839:void drawThumbDrawable(android.graphics.Canvas,int,int,float,android.graphics.drawable.Drawable) -> drawThumbDrawable
    1812:1825:void drawThumbs(android.graphics.Canvas,int,int) -> drawThumbs
    2322:2337:void drawableStateChanged() -> drawableStateChanged
    2197:2230:void ensureLabelsAdded() -> ensureLabelsAdded
    2177:2192:void ensureLabelsRemoved() -> ensureLabelsRemoved
    2542:2551:void focusThumbOnFocusGained(int) -> focusThumbOnFocusGained
    2234:2238:java.lang.String formatValue(float) -> formatValue
    2568:2568:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    2562:2562:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    1742:1748:float[] getActiveRange() -> getActiveRange
    929:929:int getActiveThumbIndex() -> getActiveThumbIndex
    2107:2109:float getAnimatorCurrentValueOrDefault(android.animation.ValueAnimator,float) -> getAnimatorCurrentValueOrDefault
    2057:2065:float getClampedValue(int,float) -> getClampedValue
    2342:2342:int getColorForState(android.content.res.ColorStateList) -> getColorForState
    910:910:int getFocusedThumbIndex() -> getFocusedThumbIndex
    1178:1178:int getHaloRadius() -> getHaloRadius
    1316:1316:android.content.res.ColorStateList getHaloTintList() -> getHaloTintList
    1220:1220:int getLabelBehavior() -> getLabelBehavior
    0:0:float getMinSeparation() -> getMinSeparation
    785:785:float getStepSize() -> getStepSize
    1005:1005:float getThumbElevation() -> getThumbElevation
    1040:1040:int getThumbRadius() -> getThumbRadius
    1125:1125:android.content.res.ColorStateList getThumbStrokeColor() -> getThumbStrokeColor
    1166:1166:float getThumbStrokeWidth() -> getThumbStrokeWidth
    1350:1350:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    1413:1413:android.content.res.ColorStateList getTickActiveTintList() -> getTickActiveTintList
    1442:1442:android.content.res.ColorStateList getTickInactiveTintList() -> getTickInactiveTintList
    1382:1387:android.content.res.ColorStateList getTickTintList() -> getTickTintList
    1529:1529:android.content.res.ColorStateList getTrackActiveTintList() -> getTrackActiveTintList
    1267:1267:int getTrackHeight() -> getTrackHeight
    1558:1558:android.content.res.ColorStateList getTrackInactiveTintList() -> getTrackInactiveTintList
    1250:1250:int getTrackSidePadding() -> getTrackSidePadding
    1498:1503:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    1256:1256:int getTrackWidth() -> getTrackWidth
    627:627:float getValueFrom() -> getValueFrom
    2086:2092:float getValueOfTouchPosition() -> getValueOfTouchPosition
    2018:2022:float getValueOfTouchPositionAbsolute() -> getValueOfTouchPositionAbsolute
    653:653:float getValueTo() -> getValueTo
    674:674:java.util.List getValues() -> getValues
    0:0:boolean hasLabelFormatter() -> hasLabelFormatter
    890:891:android.graphics.drawable.Drawable initializeCustomThumbDrawable(android.graphics.drawable.Drawable) -> initializeCustomThumbDrawable
    2261:2264:void invalidateTrack() -> invalidateTrack
    2275:2282:boolean isInVerticalScrollingContainer() -> isInVerticalScrollingContainer
    540:546:boolean isMultipleOfStepSize(float) -> isMultipleOfStepSize
    2443:2443:boolean isRtl() -> isRtl
    398:406:void loadResources(android.content.res.Resources) -> loadResources
    1655:1671:void maybeCalculateTicksCoordinates() -> maybeCalculateTicksCoordinates
    1844:1855:void maybeDrawCompatHalo(android.graphics.Canvas,int,int) -> maybeDrawCompatHalo
    1785:1804:void maybeDrawTicks(android.graphics.Canvas) -> maybeDrawTicks
    505:514:boolean maybeIncreaseTrackSidePadding() -> maybeIncreaseTrackSidePadding
    1295:1304:boolean maybeIncreaseWidgetHeight() -> maybeIncreaseWidgetHeight
    2455:2467:boolean moveFocus(int) -> moveFocus
    2479:2483:boolean moveFocusInAbsoluteDirection(int) -> moveFocusInAbsoluteDirection
    1770:1771:float normalizeValue(float) -> normalizeValue
    1603:1606:void onAttachedToWindow() -> onAttachedToWindow
    1616:1625:void onDetachedFromWindow() -> onDetachedFromWindow
    1705:1734:void onDraw(android.graphics.Canvas) -> onDraw
    2529:2535:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    2352:2395:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2402:2428:java.lang.Boolean onKeyDownNoActiveThumb(int,android.view.KeyEvent) -> onKeyDownNoActiveThumb
    2438:2439:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1638:1643:void onMeasure(int,int) -> onMeasure
    2627:2635:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2615:2621:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1650:1651:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2308:2309:void onStartTrackingTouch() -> onStartTrackingTouch
    2315:2316:void onStopTrackingTouch() -> onStopTrackingTouch
    1867:1946:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1579:1588:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    1976:2014:boolean pickActiveThumb() -> pickActiveThumb
    1958:1958:int pivotIndex(float[],float) -> pivotIndex
    410:501:void processAttributes(android.content.Context,android.util.AttributeSet,int) -> processAttributes
    2589:2595:void scheduleAccessibilityEventSender(int) -> scheduleAccessibilityEventSender
    924:924:void setActiveThumbIndex(int) -> setActiveThumbIndex
    829:829:void setCustomThumbDrawable(int) -> setCustomThumbDrawable
    843:845:void setCustomThumbDrawable(android.graphics.drawable.Drawable) -> setCustomThumbDrawable
    861:865:void setCustomThumbDrawablesForValues(int[]) -> setCustomThumbDrawablesForValues
    881:886:void setCustomThumbDrawablesForValues(android.graphics.drawable.Drawable[]) -> setCustomThumbDrawablesForValues
    1595:1598:void setEnabled(boolean) -> setEnabled
    915:920:void setFocusedThumbIndex(int) -> setFocusedThumbIndex
    1188:1199:void setHaloRadius(int) -> setHaloRadius
    1209:1209:void setHaloRadiusResource(int) -> setHaloRadiusResource
    1326:1339:void setHaloTintList(android.content.res.ColorStateList) -> setHaloTintList
    1231:1233:void setLabelBehavior(int) -> setLabelBehavior
    0:0:void setLabelFormatter(com.google.android.material.slider.LabelFormatter) -> setLabelFormatter
    2076:2078:void setSeparationUnit(int) -> setSeparationUnit
    808:814:void setStepSize(float) -> setStepSize
    1015:1015:void setThumbElevation(float) -> setThumbElevation
    1025:1025:void setThumbElevationResource(int) -> setThumbElevationResource
    1053:1070:void setThumbRadius(int) -> setThumbRadius
    1083:1083:void setThumbRadiusResource(int) -> setThumbRadiusResource
    1096:1097:void setThumbStrokeColor(android.content.res.ColorStateList) -> setThumbStrokeColor
    1111:1112:void setThumbStrokeColorResource(int) -> setThumbStrokeColorResource
    1138:1139:void setThumbStrokeWidth(float) -> setThumbStrokeWidth
    1153:1153:void setThumbStrokeWidthResource(int) -> setThumbStrokeWidthResource
    1360:1365:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    1424:1429:void setTickActiveTintList(android.content.res.ColorStateList) -> setTickActiveTintList
    1453:1458:void setTickInactiveTintList(android.content.res.ColorStateList) -> setTickInactiveTintList
    1399:1400:void setTickTintList(android.content.res.ColorStateList) -> setTickTintList
    1478:1480:void setTickVisible(boolean) -> setTickVisible
    1540:1545:void setTrackActiveTintList(android.content.res.ColorStateList) -> setTrackActiveTintList
    1277:1280:void setTrackHeight(int) -> setTrackHeight
    1569:1574:void setTrackInactiveTintList(android.content.res.ColorStateList) -> setTrackInactiveTintList
    1515:1516:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    2242:2257:void setValueForLabel(com.google.android.material.tooltip.TooltipDrawable,float) -> setValueForLabel
    641:643:void setValueFrom(float) -> setValueFrom
    667:669:void setValueTo(float) -> setValueTo
    693:695:void setValues(java.lang.Float[]) -> setValues
    714:714:void setValues(java.util.List) -> setValues
    722:741:void setValuesInternal(java.util.ArrayList) -> setValuesInternal
    1244:1244:boolean shouldAlwaysShowLabel() -> shouldAlwaysShowLabel
    1860:1862:boolean shouldDrawCompatHalo() -> shouldDrawCompatHalo
    2036:2036:boolean snapActiveThumbToValue(float) -> snapActiveThumbToValue
    1962:1964:double snapPosition(float) -> snapPosition
    2040:2051:boolean snapThumbToValue(int,float) -> snapThumbToValue
    2032:2032:boolean snapTouchPosition() -> snapTouchPosition
    2691:2696:void updateBoundsForVirtualViewId(int,android.graphics.Rect) -> updateBoundsForVirtualViewId
    1685:1690:void updateHaloHotspot() -> updateHaloHotspot
    1677:1680:void updateTrackWidth(int) -> updateTrackWidth
    1285:1290:void updateWidgetLayout() -> updateWidgetLayout
    609:616:void validateConfigurationIfDirty() -> validateConfigurationIfDirty
    570:584:void validateMinSeparation() -> validateMinSeparation
    550:552:void validateStepSize() -> validateStepSize
    520:522:void validateValueFrom() -> validateValueFrom
    527:529:void validateValueTo() -> validateValueTo
    557:564:void validateValues() -> validateValues
    535:535:boolean valueLandsOnTick(float) -> valueLandsOnTick
    2096:2096:float valueToX(float) -> valueToX
    590:604:void warnAboutFloatingPointError() -> warnAboutFloatingPointError
com.google.android.material.slider.BaseSlider$1 -> com.google.android.material.slider.BaseSlider$1:
# {"id":"sourceFile","fileName":"BaseSlider.java"}
    2160:2160:void <init>(com.google.android.material.slider.BaseSlider) -> <init>
    2163:2168:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.slider.BaseSlider$2 -> com.google.android.material.slider.BaseSlider$2:
# {"id":"sourceFile","fileName":"BaseSlider.java"}
    2182:2182:void <init>(com.google.android.material.slider.BaseSlider) -> <init>
    2185:2188:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.slider.BaseSlider$AccessibilityEventSender -> com.google.android.material.slider.BaseSlider$AccessibilityEventSender:
# {"id":"sourceFile","fileName":"BaseSlider.java"}
    2599:2600:void <init>(com.google.android.material.slider.BaseSlider) -> <init>
    2599:2599:void <init>(com.google.android.material.slider.BaseSlider,com.google.android.material.slider.BaseSlider$1) -> <init>
    2608:2608:void run() -> run
    2603:2603:void setVirtualViewId(int) -> setVirtualViewId
com.google.android.material.slider.BaseSlider$AccessibilityHelper -> com.google.android.material.slider.BaseSlider$AccessibilityHelper:
# {"id":"sourceFile","fileName":"BaseSlider.java"}
    2703:2707:void <init>(com.google.android.material.slider.BaseSlider) -> <init>
    2712:2714:int getVirtualViewAt(float,float) -> getVirtualViewAt
    2724:2725:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    2786:2830:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    2733:2766:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    2771:2777:java.lang.String startOrEndDescription(int) -> startOrEndDescription
com.google.android.material.slider.BaseSlider$SliderState -> com.google.android.material.slider.BaseSlider$SliderState:
# {"id":"sourceFile","fileName":"BaseSlider.java"}
    2647:2647:void <clinit>() -> <clinit>
    2639:2639:void <init>(android.os.Parcel,com.google.android.material.slider.BaseSlider$1) -> <init>
    2664:2664:void <init>(android.os.Parcelable) -> <init>
    2668:2674:void <init>(android.os.Parcel) -> <init>
    2679:2686:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.slider.BaseSlider$SliderState$1 -> com.google.android.material.slider.BaseSlider$SliderState$1:
# {"id":"sourceFile","fileName":"BaseSlider.java"}
    2648:2648:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2653:2653:com.google.android.material.slider.BaseSlider$SliderState createFromParcel(android.os.Parcel) -> createFromParcel
    2648:2648:java.lang.Object[] newArray(int) -> newArray
    2659:2659:com.google.android.material.slider.BaseSlider$SliderState[] newArray(int) -> newArray
com.google.android.material.slider.LabelFormatter -> com.google.android.material.slider.LabelFormatter:
# {"id":"sourceFile","fileName":"LabelFormatter.java"}
com.google.android.material.slider.RangeSlider -> com.google.android.material.slider.RangeSlider:
# {"id":"sourceFile","fileName":"RangeSlider.java"}
    59:59:void <init>(android.content.Context) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:163:java.util.List convertToFloat(android.content.res.TypedArray) -> convertToFloat
    53:53:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    53:53:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    53:53:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    53:53:int getActiveThumbIndex() -> getActiveThumbIndex
    53:53:int getFocusedThumbIndex() -> getFocusedThumbIndex
    53:53:int getHaloRadius() -> getHaloRadius
    53:53:android.content.res.ColorStateList getHaloTintList() -> getHaloTintList
    53:53:int getLabelBehavior() -> getLabelBehavior
    176:176:float getMinSeparation() -> getMinSeparation
    53:53:float getStepSize() -> getStepSize
    53:53:float getThumbElevation() -> getThumbElevation
    53:53:int getThumbRadius() -> getThumbRadius
    53:53:android.content.res.ColorStateList getThumbStrokeColor() -> getThumbStrokeColor
    53:53:float getThumbStrokeWidth() -> getThumbStrokeWidth
    53:53:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    53:53:android.content.res.ColorStateList getTickActiveTintList() -> getTickActiveTintList
    53:53:android.content.res.ColorStateList getTickInactiveTintList() -> getTickInactiveTintList
    53:53:android.content.res.ColorStateList getTickTintList() -> getTickTintList
    53:53:android.content.res.ColorStateList getTrackActiveTintList() -> getTrackActiveTintList
    53:53:int getTrackHeight() -> getTrackHeight
    53:53:android.content.res.ColorStateList getTrackInactiveTintList() -> getTrackInactiveTintList
    53:53:int getTrackSidePadding() -> getTrackSidePadding
    53:53:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    53:53:int getTrackWidth() -> getTrackWidth
    53:53:float getValueFrom() -> getValueFrom
    53:53:float getValueTo() -> getValueTo
    125:125:java.util.List getValues() -> getValues
    53:53:boolean hasLabelFormatter() -> hasLabelFormatter
    53:53:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    53:53:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    221:226:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    210:214:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    53:53:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    133:133:void setCustomThumbDrawable(int) -> setCustomThumbDrawable
    141:141:void setCustomThumbDrawable(android.graphics.drawable.Drawable) -> setCustomThumbDrawable
    149:149:void setCustomThumbDrawablesForValues(int[]) -> setCustomThumbDrawablesForValues
    157:157:void setCustomThumbDrawablesForValues(android.graphics.drawable.Drawable[]) -> setCustomThumbDrawablesForValues
    53:53:void setEnabled(boolean) -> setEnabled
    53:53:void setFocusedThumbIndex(int) -> setFocusedThumbIndex
    53:53:void setHaloRadius(int) -> setHaloRadius
    53:53:void setHaloRadiusResource(int) -> setHaloRadiusResource
    53:53:void setHaloTintList(android.content.res.ColorStateList) -> setHaloTintList
    53:53:void setLabelBehavior(int) -> setLabelBehavior
    53:53:void setLabelFormatter(com.google.android.material.slider.LabelFormatter) -> setLabelFormatter
    188:190:void setMinSeparation(float) -> setMinSeparation
    202:204:void setMinSeparationValue(float) -> setMinSeparationValue
    53:53:void setStepSize(float) -> setStepSize
    53:53:void setThumbElevation(float) -> setThumbElevation
    53:53:void setThumbElevationResource(int) -> setThumbElevationResource
    53:53:void setThumbRadius(int) -> setThumbRadius
    53:53:void setThumbRadiusResource(int) -> setThumbRadiusResource
    53:53:void setThumbStrokeColor(android.content.res.ColorStateList) -> setThumbStrokeColor
    53:53:void setThumbStrokeColorResource(int) -> setThumbStrokeColorResource
    53:53:void setThumbStrokeWidth(float) -> setThumbStrokeWidth
    53:53:void setThumbStrokeWidthResource(int) -> setThumbStrokeWidthResource
    53:53:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    53:53:void setTickActiveTintList(android.content.res.ColorStateList) -> setTickActiveTintList
    53:53:void setTickInactiveTintList(android.content.res.ColorStateList) -> setTickInactiveTintList
    53:53:void setTickTintList(android.content.res.ColorStateList) -> setTickTintList
    53:53:void setTickVisible(boolean) -> setTickVisible
    53:53:void setTrackActiveTintList(android.content.res.ColorStateList) -> setTrackActiveTintList
    53:53:void setTrackHeight(int) -> setTrackHeight
    53:53:void setTrackInactiveTintList(android.content.res.ColorStateList) -> setTrackInactiveTintList
    53:53:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    53:53:void setValueFrom(float) -> setValueFrom
    53:53:void setValueTo(float) -> setValueTo
    108:108:void setValues(java.lang.Float[]) -> setValues
    118:118:void setValues(java.util.List) -> setValues
com.google.android.material.slider.RangeSlider$1 -> com.google.android.material.slider.RangeSlider$1:
# {"id":"sourceFile","fileName":"RangeSlider.java"}
com.google.android.material.slider.RangeSlider$RangeSliderState -> com.google.android.material.slider.RangeSlider$RangeSliderState:
# {"id":"sourceFile","fileName":"RangeSlider.java"}
    251:251:void <clinit>() -> <clinit>
    229:229:void <init>(android.os.Parcel,com.google.android.material.slider.RangeSlider$1) -> <init>
    235:235:void <init>(android.os.Parcelable) -> <init>
    239:241:void <init>(android.os.Parcel) -> <init>
    229:229:float access$000(com.google.android.material.slider.RangeSlider$RangeSliderState) -> access$000
    229:229:float access$002(com.google.android.material.slider.RangeSlider$RangeSliderState,float) -> access$002
    229:229:int access$100(com.google.android.material.slider.RangeSlider$RangeSliderState) -> access$100
    229:229:int access$102(com.google.android.material.slider.RangeSlider$RangeSliderState,int) -> access$102
    246:248:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.slider.RangeSlider$RangeSliderState$1 -> com.google.android.material.slider.RangeSlider$RangeSliderState$1:
# {"id":"sourceFile","fileName":"RangeSlider.java"}
    252:252:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    255:255:com.google.android.material.slider.RangeSlider$RangeSliderState createFromParcel(android.os.Parcel) -> createFromParcel
    252:252:java.lang.Object[] newArray(int) -> newArray
    260:260:com.google.android.material.slider.RangeSlider$RangeSliderState[] newArray(int) -> newArray
com.google.android.material.slider.Slider -> com.google.android.material.slider.Slider:
# {"id":"sourceFile","fileName":"Slider.java"}
    63:63:void <init>(android.content.Context) -> <init>
    67:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:76:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    42:42:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    42:42:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    42:42:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    42:42:int getActiveThumbIndex() -> getActiveThumbIndex
    42:42:int getFocusedThumbIndex() -> getFocusedThumbIndex
    42:42:int getHaloRadius() -> getHaloRadius
    42:42:android.content.res.ColorStateList getHaloTintList() -> getHaloTintList
    42:42:int getLabelBehavior() -> getLabelBehavior
    42:42:float getStepSize() -> getStepSize
    42:42:float getThumbElevation() -> getThumbElevation
    42:42:int getThumbRadius() -> getThumbRadius
    42:42:android.content.res.ColorStateList getThumbStrokeColor() -> getThumbStrokeColor
    42:42:float getThumbStrokeWidth() -> getThumbStrokeWidth
    42:42:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    42:42:android.content.res.ColorStateList getTickActiveTintList() -> getTickActiveTintList
    42:42:android.content.res.ColorStateList getTickInactiveTintList() -> getTickInactiveTintList
    42:42:android.content.res.ColorStateList getTickTintList() -> getTickTintList
    42:42:android.content.res.ColorStateList getTrackActiveTintList() -> getTrackActiveTintList
    42:42:int getTrackHeight() -> getTrackHeight
    42:42:android.content.res.ColorStateList getTrackInactiveTintList() -> getTrackInactiveTintList
    42:42:int getTrackSidePadding() -> getTrackSidePadding
    42:42:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    42:42:int getTrackWidth() -> getTrackWidth
    86:86:float getValue() -> getValue
    42:42:float getValueFrom() -> getValueFrom
    42:42:float getValueTo() -> getValueTo
    42:42:boolean hasLabelFormatter() -> hasLabelFormatter
    42:42:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    42:42:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    42:42:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    127:131:boolean pickActiveThumb() -> pickActiveThumb
    114:114:void setCustomThumbDrawable(int) -> setCustomThumbDrawable
    122:122:void setCustomThumbDrawable(android.graphics.drawable.Drawable) -> setCustomThumbDrawable
    42:42:void setEnabled(boolean) -> setEnabled
    42:42:void setFocusedThumbIndex(int) -> setFocusedThumbIndex
    42:42:void setHaloRadius(int) -> setHaloRadius
    42:42:void setHaloRadiusResource(int) -> setHaloRadiusResource
    42:42:void setHaloTintList(android.content.res.ColorStateList) -> setHaloTintList
    42:42:void setLabelBehavior(int) -> setLabelBehavior
    42:42:void setLabelFormatter(com.google.android.material.slider.LabelFormatter) -> setLabelFormatter
    42:42:void setStepSize(float) -> setStepSize
    42:42:void setThumbElevation(float) -> setThumbElevation
    42:42:void setThumbElevationResource(int) -> setThumbElevationResource
    42:42:void setThumbRadius(int) -> setThumbRadius
    42:42:void setThumbRadiusResource(int) -> setThumbRadiusResource
    42:42:void setThumbStrokeColor(android.content.res.ColorStateList) -> setThumbStrokeColor
    42:42:void setThumbStrokeColorResource(int) -> setThumbStrokeColorResource
    42:42:void setThumbStrokeWidth(float) -> setThumbStrokeWidth
    42:42:void setThumbStrokeWidthResource(int) -> setThumbStrokeWidthResource
    42:42:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    42:42:void setTickActiveTintList(android.content.res.ColorStateList) -> setTickActiveTintList
    42:42:void setTickInactiveTintList(android.content.res.ColorStateList) -> setTickInactiveTintList
    42:42:void setTickTintList(android.content.res.ColorStateList) -> setTickTintList
    42:42:void setTickVisible(boolean) -> setTickVisible
    42:42:void setTrackActiveTintList(android.content.res.ColorStateList) -> setTrackActiveTintList
    42:42:void setTrackHeight(int) -> setTrackHeight
    42:42:void setTrackInactiveTintList(android.content.res.ColorStateList) -> setTrackInactiveTintList
    42:42:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    106:106:void setValue(float) -> setValue
    42:42:void setValueFrom(float) -> setValueFrom
    42:42:void setValueTo(float) -> setValueTo
com.google.android.material.snackbar.BaseTransientBottomBar -> com.google.android.material.snackbar.BaseTransientBottomBar:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    221:257:void <clinit>() -> <clinit>
    102:102:com.google.android.material.shape.MaterialShapeDrawable access$1900(int,com.google.android.material.shape.ShapeAppearanceModel) -> access$1900
    102:102:android.graphics.drawable.GradientDrawable access$2000(int,android.content.res.Resources) -> access$2000
    1375:1379:android.graphics.drawable.GradientDrawable createGradientDrawableBackground(int,android.content.res.Resources) -> createGradientDrawableBackground
    1367:1368:com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(int,com.google.android.material.shape.ShapeAppearanceModel) -> createMaterialShapeDrawableBackground
com.google.android.material.snackbar.BaseTransientBottomBar$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$1:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    261:266:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    1387:1388:void <init>() -> <init>
    1398:1398:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1404:1405:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    1415:1418:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    1427:1427:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1432:1442:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    1141:1141:void <clinit>() -> <clinit>
    1165:1165:void <init>(android.content.Context) -> <init>
    1169:1204:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1345:1359:android.graphics.drawable.Drawable createThemedBackground() -> createThemedBackground
    1317:1317:float getActionTextColorAlpha() -> getActionTextColorAlpha
    1305:1305:int getAnimationMode() -> getAnimationMode
    1313:1313:float getBackgroundOverlayColorAlpha() -> getBackgroundOverlayColorAlpha
    1325:1325:int getMaxInlineActionWidth() -> getMaxInlineActionWidth
    1321:1321:int getMaxWidth() -> getMaxWidth
    1274:1278:void onAttachedToWindow() -> onAttachedToWindow
    1283:1283:void onDetachedFromWindow() -> onDetachedFromWindow
    1266:1266:void onLayout(boolean,int,int,int,int) -> onLayout
    1257:1260:void onMeasure(int,int) -> onMeasure
    1309:1309:void setAnimationMode(int) -> setAnimationMode
    1210:1210:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    1215:1220:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1225:1231:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    1238:1243:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    0:0:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
    1291:1296:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    1251:1252:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1339:1339:void updateOriginalMargins(android.view.ViewGroup$MarginLayoutParams) -> updateOriginalMargins
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    0:0:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
# {"id":"sourceFile","fileName":"Snackbar.java"}
    504:504:void <init>(android.content.Context) -> <init>
    508:508:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    513:525:void onMeasure(int,int) -> onMeasure
    501:501:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    501:501:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    501:501:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    501:501:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    501:501:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    501:501:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
# {"id":"sourceFile","fileName":"SnackbarContentLayout.java"}
    48:48:void <init>(android.content.Context) -> <init>
    52:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:72:android.widget.Button getActionView() -> getActionView
    68:68:android.widget.TextView getMessageView() -> getMessageView
    62:64:void onFinishInflate() -> onFinishInflate
    87:118:void onMeasure(int,int) -> onMeasure
    178:178:void setMaxInlineActionWidth(int) -> setMaxInlineActionWidth
    139:147:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    125:131:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
# {"id":"sourceFile","fileName":"SnackbarManager.java"}
    49:53:void <init>() -> <init>
    205:205:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    37:40:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    240:244:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    0:0:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    145:150:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    150:150:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    154:159:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    159:159:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
# {"id":"sourceFile","fileName":"SnackbarManager.java"}
    54:54:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    57:59:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$Callback -> com.google.android.material.snackbar.SnackbarManager$Callback:
# {"id":"sourceFile","fileName":"SnackbarManager.java"}
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
# {"id":"sourceFile","fileName":"SnackbarManager.java"}
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
# {"id":"sourceFile","fileName":"ExtendableSavedState.java"}
    91:91:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    41:42:void <init>(android.os.Parcelable) -> <init>
    46:58:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    84:85:java.lang.String toString() -> toString
    64:78:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
# {"id":"sourceFile","fileName":"ExtendableSavedState.java"}
    92:92:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    97:97:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    103:103:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object[] newArray(int) -> newArray
    109:109:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.switchmaterial.SwitchMaterial -> com.google.android.material.switchmaterial.SwitchMaterial:
# {"id":"sourceFile","fileName":"SwitchMaterial.java"}
    46:47:void <clinit>() -> <clinit>
    62:62:void <init>(android.content.Context) -> <init>
    66:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    70:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    121:141:android.content.res.ColorStateList getMaterialThemeColorsThumbTintList() -> getMaterialThemeColorsThumbTintList
    145:162:android.content.res.ColorStateList getMaterialThemeColorsTrackTintList() -> getMaterialThemeColorsTrackTintList
    88:94:void onAttachedToWindow() -> onAttachedToWindow
    105:111:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.tabs.ElasticTabIndicatorInterpolator -> com.google.android.material.tabs.ElasticTabIndicatorInterpolator:
# {"id":"sourceFile","fileName":"ElasticTabIndicatorInterpolator.java"}
    32:32:void <init>() -> <init>
    43:43:float accInterp(float) -> accInterp
    37:37:float decInterp(float) -> decInterp
    55:77:void updateIndicatorForOffset(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable) -> updateIndicatorForOffset
com.google.android.material.tabs.FadeTabIndicatorInterpolator -> com.google.android.material.tabs.FadeTabIndicatorInterpolator:
# {"id":"sourceFile","fileName":"FadeTabIndicatorInterpolator.java"}
    30:30:void <init>() -> <init>
    44:55:void updateIndicatorForOffset(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable) -> updateIndicatorForOffset
com.google.android.material.tabs.TabIndicatorInterpolator -> com.google.android.material.tabs.TabIndicatorInterpolator:
# {"id":"sourceFile","fileName":"TabIndicatorInterpolator.java"}
    105:114:android.graphics.RectF calculateIndicatorWidthForTab(com.google.android.material.tabs.TabLayout,android.view.View) -> calculateIndicatorWidthForTab
    72:87:android.graphics.RectF calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,int) -> calculateTabViewContentBounds
    129:134:void setIndicatorBoundsForTab(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable) -> setIndicatorBoundsForTab
    161:169:void updateIndicatorForOffset(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable) -> updateIndicatorForOffset
com.google.android.material.tabs.TabItem -> com.google.android.material.tabs.TabItem:
# {"id":"sourceFile","fileName":"TabItem.java"}
    48:48:void <init>(android.content.Context) -> <init>
    52:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.tabs.TabLayout -> com.google.android.material.tabs.TabLayout:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    182:205:void <clinit>() -> <clinit>
    512:512:void <init>(android.content.Context) -> <init>
    516:516:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    300:685:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    180:180:int access$1100(com.google.android.material.tabs.TabLayout) -> access$1100
    180:180:int access$1200(com.google.android.material.tabs.TabLayout) -> access$1200
    180:180:int access$1300(com.google.android.material.tabs.TabLayout) -> access$1300
    180:180:int access$1600(com.google.android.material.tabs.TabLayout) -> access$1600
    180:180:com.google.android.material.tabs.TabIndicatorInterpolator access$1700(com.google.android.material.tabs.TabLayout) -> access$1700
    180:180:android.animation.TimeInterpolator access$1900(com.google.android.material.tabs.TabLayout) -> access$1900
    913:914:void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> addOnTabSelectedListener
    780:780:void addTab(com.google.android.material.tabs.TabLayout$Tab) -> addTab
    801:801:void addTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> addTab
    812:819:void addTab(com.google.android.material.tabs.TabLayout$Tab,int,boolean) -> addTab
    824:837:void addTabFromItemView(com.google.android.material.tabs.TabItem) -> addTabFromItemView
    1702:1705:void addTabView(com.google.android.material.tabs.TabLayout$Tab) -> addTabView
    1710:1710:void addView(android.view.View) -> addView
    1715:1715:void addView(android.view.View,int) -> addView
    1720:1720:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    1725:1725:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1729:1732:void addViewInternal(android.view.View) -> addViewInternal
    1869:1889:void animateToTab(int) -> animateToTab
    2064:2073:void applyGravityForModeScrollable(int) -> applyGravityForModeScrollable
    2036:2058:void applyModeAndGravity() -> applyModeAndGravity
    2010:2027:int calculateScrollXForTab(int,float) -> calculateScrollXForTab
    1685:1698:void configureTab(com.google.android.material.tabs.TabLayout$Tab,int) -> configureTab
    3440:3449:android.content.res.ColorStateList createColorStateList(int,int) -> createColorStateList
    1738:1740:android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs() -> createLayoutParamsForTabs
    966:968:com.google.android.material.tabs.TabLayout$Tab createTabFromPool() -> createTabFromPool
    1669:1679:com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab) -> createTabView
    2004:2005:void dispatchTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabReselected
    1992:1993:void dispatchTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabSelected
    1998:1999:void dispatchTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabUnselected
    1893:1897:void ensureScrollAnimator() -> ensureScrollAnimator
    179:179:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    3480:3480:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    3455:3462:int getDefaultHeight() -> getDefaultHeight
    999:999:int getSelectedTabPosition() -> getSelectedTabPosition
    990:990:com.google.android.material.tabs.TabLayout$Tab getTabAt(int) -> getTabAt
    984:984:int getTabCount() -> getTabCount
    1119:1119:int getTabGravity() -> getTabGravity
    1372:1372:android.content.res.ColorStateList getTabIconTint() -> getTabIconTint
    1196:1196:int getTabIndicatorAnimationMode() -> getTabIndicatorAnimationMode
    1152:1152:int getTabIndicatorGravity() -> getTabIndicatorGravity
    3484:3484:int getTabMaxWidth() -> getTabMaxWidth
    3466:3471:int getTabMinWidth() -> getTabMinWidth
    1096:1096:int getTabMode() -> getTabMode
    1383:1383:android.content.res.ColorStateList getTabRippleColor() -> getTabRippleColor
    1618:1619:int getTabScrollRange() -> getTabScrollRange
    1430:1430:android.graphics.drawable.Drawable getTabSelectedIndicator() -> getTabSelectedIndicator
    1334:1334:android.content.res.ColorStateList getTabTextColors() -> getTabTextColors
    841:841:boolean isScrollingEnabled() -> isScrollingEnabled
    1229:1229:boolean isTabIndicatorFullWidth() -> isTabIndicatorFullWidth
    954:958:com.google.android.material.tabs.TabLayout$Tab newTab() -> newTab
    1590:1601:void onAttachedToWindow() -> onAttachedToWindow
    1608:1613:void onDetachedFromWindow() -> onDetachedFromWindow
    1777:1784:void onDraw(android.graphics.Canvas) -> onDraw
    1764:1769:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    849:849:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1791:1849:void onMeasure(int,int) -> onMeasure
    855:858:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1643:1655:void populateFromPagerAdapter() -> populateFromPagerAdapter
    975:975:boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab) -> releaseFromTabPool
    1053:1064:void removeAllTabs() -> removeAllTabs
    937:937:void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> removeOnTabSelectedListener
    1855:1861:void removeTabViewAt(int) -> removeTabViewAt
    1945:1945:void selectTab(com.google.android.material.tabs.TabLayout$Tab) -> selectTab
    1957:1986:void selectTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> selectTab
    1757:1759:void setElevation(float) -> setElevation
    1240:1248:void setInlineLabel(boolean) -> setInlineLabel
    1261:1261:void setInlineLabelResource(int) -> setInlineLabelResource
    867:867:void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> setOnTabSelectedListener
    878:885:void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> setOnTabSelectedListener
    1623:1639:void setPagerAdapter(androidx.viewpager.widget.PagerAdapter,boolean) -> setPagerAdapter
    1908:1909:void setScrollAnimatorListener(android.animation.Animator$AnimatorListener) -> setScrollAnimatorListener
    731:731:void setScrollPosition(int,float,boolean) -> setScrollPosition
    751:769:void setScrollPosition(int,float,boolean,boolean) -> setScrollPosition
    1448:1456:void setSelectedTabIndicator(android.graphics.drawable.Drawable) -> setSelectedTabIndicator
    1471:1474:void setSelectedTabIndicator(int) -> setSelectedTabIndicator
    700:702:void setSelectedTabIndicatorColor(int) -> setSelectedTabIndicatorColor
    1137:1139:void setSelectedTabIndicatorGravity(int) -> setSelectedTabIndicatorGravity
    715:716:void setSelectedTabIndicatorHeight(int) -> setSelectedTabIndicatorHeight
    1918:1933:void setSelectedTabView(int) -> setSelectedTabView
    1106:1108:void setTabGravity(int) -> setTabGravity
    1353:1355:void setTabIconTint(android.content.res.ColorStateList) -> setTabIconTint
    1366:1366:void setTabIconTintResource(int) -> setTabIconTintResource
    1168:1180:void setTabIndicatorAnimationMode(int) -> setTabIndicatorAnimationMode
    1215:1217:void setTabIndicatorFullWidth(boolean) -> setTabIndicatorFullWidth
    1083:1085:void setTabMode(int) -> setTabMode
    1397:1402:void setTabRippleColor(android.content.res.ColorStateList) -> setTabRippleColor
    1418:1418:void setTabRippleColorResource(int) -> setTabRippleColorResource
    1325:1327:void setTabTextColors(android.content.res.ColorStateList) -> setTabTextColors
    1344:1344:void setTabTextColors(int,int) -> setTabTextColors
    1575:1575:void setTabsFromPagerAdapter(androidx.viewpager.widget.PagerAdapter) -> setTabsFromPagerAdapter
    1285:1290:void setUnboundedRipple(boolean) -> setUnboundedRipple
    1305:1305:void setUnboundedRippleResource(int) -> setUnboundedRippleResource
    1487:1487:void setupWithViewPager(androidx.viewpager.widget.ViewPager) -> setupWithViewPager
    1507:1507:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean) -> setupWithViewPager
    1512:1565:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean,boolean) -> setupWithViewPager
    1585:1585:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1662:1663:void updateAllTabs() -> updateAllTabs
    1745:1750:void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams) -> updateTabViewLayoutParams
    2081:2086:void updateTabViews(boolean) -> updateTabViews
    1579:1579:void updateViewPagerScrollState(int) -> updateViewPagerScrollState
com.google.android.material.tabs.TabLayout$1 -> com.google.android.material.tabs.TabLayout$1:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    1898:1898:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    1901:1901:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$AdapterChangeListener -> com.google.android.material.tabs.TabLayout$AdapterChangeListener:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    3598:3598:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3605:3606:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    3611:3611:void setAutoRefresh(boolean) -> setAutoRefresh
com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener -> com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener:
# {"id":"sourceFile","fileName":"TabLayout.java"}
com.google.android.material.tabs.TabLayout$OnTabSelectedListener -> com.google.android.material.tabs.TabLayout$OnTabSelectedListener:
# {"id":"sourceFile","fileName":"TabLayout.java"}
com.google.android.material.tabs.TabLayout$PagerAdapterObserver -> com.google.android.material.tabs.TabLayout$PagerAdapterObserver:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    3582:3582:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3586:3586:void onChanged() -> onChanged
    3591:3591:void onInvalidated() -> onInvalidated
com.google.android.material.tabs.TabLayout$SlidingTabIndicator -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    3125:3129:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    3122:3122:void access$100(com.google.android.material.tabs.TabLayout$SlidingTabIndicator) -> access$100
    3122:3122:void access$1800(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,android.view.View,android.view.View,float) -> access$1800
    3330:3336:void animateIndicatorToPosition(int,int) -> animateIndicatorToPosition
    3139:3141:boolean childrenNeedLayout() -> childrenNeedLayout
    3390:3430:void draw(android.graphics.Canvas) -> draw
    3285:3288:void jumpIndicatorToIndicatorPosition() -> jumpIndicatorToIndicatorPosition
    3268:3274:void jumpIndicatorToPosition(int) -> jumpIndicatorToPosition
    3279:3279:void jumpIndicatorToSelectedPosition() -> jumpIndicatorToSelectedPosition
    3247:3258:void onLayout(boolean,int,int,int,int) -> onLayout
    3187:3240:void onMeasure(int,int) -> onMeasure
    3173:3180:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    3158:3168:void setIndicatorPositionFromTabPosition(int,float) -> setIndicatorPositionFromTabPosition
    3133:3135:void setSelectedIndicatorHeight(int) -> setSelectedIndicatorHeight
    3307:3317:void tweenIndicatorPosition(android.view.View,android.view.View,float) -> tweenIndicatorPosition
    3351:3384:void updateOrRecreateIndicatorAnimation(boolean,int,int) -> updateOrRecreateIndicatorAnimation
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1 -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    3366:3366:void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,android.view.View,android.view.View) -> <init>
    3369:3369:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$Tab -> com.google.android.material.tabs.TabLayout$Tab:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    2109:2120:void <init>() -> <init>
    2093:2093:int access$000(com.google.android.material.tabs.TabLayout$Tab) -> access$000
    2093:2093:int access$1500(com.google.android.material.tabs.TabLayout$Tab) -> access$1500
    2093:2093:java.lang.CharSequence access$300(com.google.android.material.tabs.TabLayout$Tab) -> access$300
    2093:2093:java.lang.CharSequence access$400(com.google.android.material.tabs.TabLayout$Tab) -> access$400
    2173:2173:android.view.View getCustomView() -> getCustomView
    2221:2221:android.graphics.drawable.Drawable getIcon() -> getIcon
    2231:2231:int getPosition() -> getPosition
    2390:2390:int getTabLabelVisibility() -> getTabLabelVisibility
    2245:2245:java.lang.CharSequence getText() -> getText
    2403:2407:boolean isSelected() -> isSelected
    2466:2474:void reset() -> reset
    2395:2398:void select() -> select
    2440:2441:com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    2190:2191:com.google.android.material.tabs.TabLayout$Tab setCustomView(android.view.View) -> setCustomView
    2210:2211:com.google.android.material.tabs.TabLayout$Tab setCustomView(int) -> setCustomView
    2257:2266:com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    2235:2235:void setPosition(int) -> setPosition
    2296:2303:com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence) -> setText
    2460:2461:void updateView() -> updateView
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener -> com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    3501:3502:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3507:3511:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    3518:3529:void onPageScrolled(int,float,int) -> onPageScrolled
    3535:3545:void onPageSelected(int) -> onPageSelected
    3550:3550:void reset() -> reset
com.google.android.material.tabs.TabLayout$TabView -> com.google.android.material.tabs.TabLayout$TabView:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    2491:2502:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    2479:2479:void access$1400(com.google.android.material.tabs.TabLayout$TabView,android.view.View) -> access$1400
    2479:2479:void access$200(com.google.android.material.tabs.TabLayout$TabView,android.content.Context) -> access$200
    2479:2479:void access$500(com.google.android.material.tabs.TabLayout$TabView,android.graphics.Canvas) -> access$500
    2479:2479:boolean access$600(com.google.android.material.tabs.TabLayout$TabView) -> access$600
    2479:2479:com.google.android.material.badge.BadgeDrawable access$700(com.google.android.material.tabs.TabLayout$TabView) -> access$700
    2877:2877:void addOnLayoutChangeListener(android.view.View) -> addOnLayoutChangeListener
    3118:3118:float approximateLineWidth(android.text.Layout,int,float) -> approximateLineWidth
    2955:2960:void clipViewToPaddingForBadge(boolean) -> clipViewToPaddingForBadge
    2834:2838:android.widget.FrameLayout createPreApi18BadgeAnchorRoot() -> createPreApi18BadgeAnchorRoot
    2561:2563:void drawBackground(android.graphics.Canvas) -> drawBackground
    2569:2578:void drawableStateChanged() -> drawableStateChanged
    2863:2863:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    3100:3103:int getContentHeight() -> getContentHeight
    3078:3081:int getContentWidth() -> getContentWidth
    3061:3064:android.widget.FrameLayout getCustomParentForBadge(android.view.View) -> getCustomParentForBadge
    2851:2856:com.google.android.material.badge.BadgeDrawable getOrCreateBadge() -> getOrCreateBadge
    3113:3113:com.google.android.material.tabs.TabLayout$Tab getTab() -> getTab
    3056:3056:boolean hasBadgeDrawable() -> hasBadgeDrawable
    2808:2816:void inflateAndAddDefaultIconView() -> inflateAndAddDefaultIconView
    2821:2829:void inflateAndAddDefaultTextView() -> inflateAndAddDefaultTextView
    2623:2642:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    2647:2704:void onMeasure(int,int) -> onMeasure
    2584:2590:boolean performClick() -> performClick
    2718:2719:void reset() -> reset
    2599:2617:void setSelected(boolean) -> setSelected
    2711:2713:void setTab(com.google.android.material.tabs.TabLayout$Tab) -> setTab
    2930:2937:void tryAttachBadgeToAnchor(android.view.View) -> tryAttachBadgeToAnchor
    2942:2948:void tryRemoveBadgeFromAnchor() -> tryRemoveBadgeFromAnchor
    2898:2924:void tryUpdateBadgeAnchor() -> tryUpdateBadgeAnchor
    3050:3051:void tryUpdateBadgeDrawableBounds(android.view.View) -> tryUpdateBadgeDrawableBounds
    2801:2803:void update() -> update
    2506:2547:void updateBackgroundDrawable(android.content.Context) -> updateBackgroundDrawable
    2965:2969:void updateOrientation() -> updateOrientation
    2723:2796:void updateTab() -> updateTab
    2978:3044:void updateTextAndIcon(android.widget.TextView,android.widget.ImageView,boolean) -> updateTextAndIcon
com.google.android.material.tabs.TabLayout$TabView$1 -> com.google.android.material.tabs.TabLayout$TabView$1:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    2878:2878:void <init>(com.google.android.material.tabs.TabLayout$TabView,android.view.View) -> <init>
    2890:2891:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener -> com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    3561:3562:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    0:0:void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabReselected
    3567:3567:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
    0:0:void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabUnselected
com.google.android.material.textfield.ClearTextEndIconDelegate -> com.google.android.material.textfield.ClearTextEndIconDelegate:
# {"id":"sourceFile","fileName":"ClearTextEndIconDelegate.java"}
    0:0:void $r8$lambda$Abvjkt9KmYeJvJ7_vHGwZ-xlmVA(com.google.android.material.textfield.ClearTextEndIconDelegate,android.animation.ValueAnimator) -> $r8$lambda$Abvjkt9KmYeJvJ7_vHGwZ-xlmVA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$nI62G89ozUOuRnvjwrP0IYYoGyA(com.google.android.material.textfield.ClearTextEndIconDelegate,android.view.View) -> $r8$lambda$nI62G89ozUOuRnvjwrP0IYYoGyA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$tQahUbi3HJfsEhbpmdlHLxzqxv4(com.google.android.material.textfield.ClearTextEndIconDelegate,android.animation.ValueAnimator) -> $r8$lambda$tQahUbi3HJfsEhbpmdlHLxzqxv4
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ycpHjhDocuatJlJAPKZepsuRHG8(com.google.android.material.textfield.ClearTextEndIconDelegate,android.view.View,boolean) -> $r8$lambda$ycpHjhDocuatJlJAPKZepsuRHG8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ypc1RVfDDE8vNgAyrsAm7Dre9Zs(com.google.android.material.textfield.ClearTextEndIconDelegate) -> $r8$lambda$ypc1RVfDDE8vNgAyrsAm7Dre9Zs
      # {"id":"com.android.tools.r8.synthesized"}
    49:81:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    131:134:void afterEditTextChanged(android.text.Editable) -> afterEditTextChanged
    148:159:void animateIcon(boolean) -> animateIcon
    187:190:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    107:107:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    102:102:int getIconDrawableResId() -> getIconDrawableResId
    139:139:android.view.View$OnFocusChangeListener getOnEditTextFocusChangeListener() -> getOnEditTextFocusChangeListener
    120:120:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    144:144:android.view.View$OnFocusChangeListener getOnIconViewFocusChangeListener() -> getOnIconViewFocusChangeListener
    199:202:android.animation.ValueAnimator getScaleAnimator() -> getScaleAnimator
    165:177:void initAnimators() -> initAnimators
    191:192:void lambda$getAlphaAnimator$3(android.animation.ValueAnimator) -> lambda$getAlphaAnimator$3
    203:205:void lambda$getScaleAnimator$4(android.animation.ValueAnimator) -> lambda$getScaleAnimator$4
    50:57:void lambda$new$0(android.view.View) -> lambda$new$0
    61:61:void lambda$new$1(android.view.View,boolean) -> lambda$new$1
    96:96:void lambda$tearDown$2() -> lambda$tearDown$2
    125:126:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    112:115:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
    88:88:void setUp() -> setUp
    211:213:boolean shouldBeVisible() -> shouldBeVisible
    93:94:void tearDown() -> tearDown
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda0 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$17ccb35e90256e2a790b98fb0f29fcb9f71fa2758edf36e22295aec0d2f06296$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$17ccb35e90256e2a790b98fb0f29fcb9f71fa2758edf36e22295aec0d2f06296$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$17ccb35e90256e2a790b98fb0f29fcb9f71fa2758edf36e22295aec0d2f06296$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$767bc18c2a341de5b202a8fdeb001f518750b20b4c8359fb95e76366595254a4$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$767bc18c2a341de5b202a8fdeb001f518750b20b4c8359fb95e76366595254a4$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$767bc18c2a341de5b202a8fdeb001f518750b20b4c8359fb95e76366595254a4$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$88b8d40c43e34dcb614afd396cecd928e90873c960f200febc85ef2ae10b66ab$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$88b8d40c43e34dcb614afd396cecd928e90873c960f200febc85ef2ae10b66ab$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$88b8d40c43e34dcb614afd396cecd928e90873c960f200febc85ef2ae10b66ab$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda3 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$0.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda4 -> com.google.android.material.textfield.ClearTextEndIconDelegate$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.ClearTextEndIconDelegate com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$1.f$0 -> f$0
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$1.<init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.ClearTextEndIconDelegate$$InternalSyntheticLambda$2$b01fc8933ceb300a93c892a20cf8d831db7c88c6a1b23a8fb1a09bdb1b6fc74c$1.onFocusChange(android.view.View,boolean) -> onFocusChange
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.ClearTextEndIconDelegate$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$1:
# {"id":"sourceFile","fileName":"ClearTextEndIconDelegate.java"}
    170:170:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    173:173:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.ClearTextEndIconDelegate$2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$2:
# {"id":"sourceFile","fileName":"ClearTextEndIconDelegate.java"}
    178:178:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    181:181:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.CustomEndIconDelegate -> com.google.android.material.textfield.CustomEndIconDelegate:
# {"id":"sourceFile","fileName":"CustomEndIconDelegate.java"}
    31:31:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    36:36:void setUp() -> setUp
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.CutoutDrawable:
# {"id":"sourceFile","fileName":"CutoutDrawable.java"}
    40:40:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.textfield.CutoutDrawable$1) -> <init>
    50:51:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    45:45:com.google.android.material.textfield.CutoutDrawable create(com.google.android.material.shape.ShapeAppearanceModel) -> create
    55:55:boolean hasCutout() -> hasCutout
    76:76:void removeCutout() -> removeCutout
    61:66:void setCutout(float,float,float,float) -> setCutout
    71:71:void setCutout(android.graphics.RectF) -> setCutout
com.google.android.material.textfield.CutoutDrawable$1 -> com.google.android.material.textfield.CutoutDrawable$1:
# {"id":"sourceFile","fileName":"CutoutDrawable.java"}
com.google.android.material.textfield.CutoutDrawable$ImplApi18 -> com.google.android.material.textfield.CutoutDrawable$ImplApi18:
# {"id":"sourceFile","fileName":"CutoutDrawable.java"}
    82:82:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    87:98:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
com.google.android.material.textfield.CutoutDrawable$ImplApi18$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.textfield.CutoutDrawable$ImplApi18$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.textfield.CutoutDrawable$ImplApi18$$InternalSyntheticApiModelOutline$1$2611763f8cf470311a6a386efd258456b5d1bb74791eddafc6e3a57231bb4d5e$0.m(android.graphics.Canvas,android.graphics.RectF) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate -> com.google.android.material.textfield.DropdownMenuEndIconDelegate:
# {"id":"sourceFile","fileName":"DropdownMenuEndIconDelegate.java"}
    0:0:void $r8$lambda$4SBpO57tjhDSopV0DemkySdxojY(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.animation.ValueAnimator) -> $r8$lambda$4SBpO57tjhDSopV0DemkySdxojY
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$BqmxB1OD2-UBtyLLYrjkb1pVKko(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.view.View,android.view.MotionEvent) -> $r8$lambda$BqmxB1OD2-UBtyLLYrjkb1pVKko
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$CCm9KkEwkNKH7i3YuOdE94QyO7w(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> $r8$lambda$CCm9KkEwkNKH7i3YuOdE94QyO7w
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$GC4Z4aSLx1o4GNefaOGyXn6tdak(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.view.View) -> $r8$lambda$GC4Z4aSLx1o4GNefaOGyXn6tdak
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$Gy89nJjcMrMnAKlMjFZkWRzwff0(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> $r8$lambda$Gy89nJjcMrMnAKlMjFZkWRzwff0
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$az2bGAstjYQVJ0xTZU5to9JFwf8(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> $r8$lambda$az2bGAstjYQVJ0xTZU5to9JFwf8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$s0Go8aDJW6wdKEyjtVLy3FzDAsw(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.view.View,boolean) -> $r8$lambda$s0Go8aDJW6wdKEyjtVLy3FzDAsw
      # {"id":"com.android.tools.r8.synthesized"}
    58:58:void <clinit>() -> <clinit>
    69:111:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    55:55:android.animation.ValueAnimator access$000(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$000
    202:207:void afterEditTextChanged(android.text.Editable) -> afterEditTextChanged
    300:306:android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText) -> castAutoCompleteTextViewOrThrow
    336:339:android.animation.ValueAnimator getAlphaAnimator(int,float[]) -> getAlphaAnimator
    150:150:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    145:145:int getIconDrawableResId() -> getIconDrawableResId
    216:216:android.view.View$OnFocusChangeListener getOnEditTextFocusChangeListener() -> getOnEditTextFocusChangeListener
    185:185:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    138:138:androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener getTouchExplorationStateChangeListener() -> getTouchExplorationStateChangeListener
    323:325:void initAnimators() -> initAnimators
    0:0:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    294:294:boolean isDropdownPopupActive() -> isDropdownPopupActive
    0:0:boolean isIconActivable() -> isIconActivable
    170:170:boolean isIconActivated() -> isIconActivated
    0:0:boolean isIconCheckable() -> isIconCheckable
    160:160:boolean isIconChecked() -> isIconChecked
    208:210:void lambda$afterEditTextChanged$3() -> lambda$afterEditTextChanged$3
    340:341:void lambda$getAlphaAnimator$6(android.animation.ValueAnimator) -> lambda$getAlphaAnimator$6
    69:69:void lambda$new$0(android.view.View) -> lambda$new$0
    72:76:void lambda$new$1(android.view.View,boolean) -> lambda$new$1
    82:83:void lambda$new$2(boolean) -> lambda$new$2
    275:280:boolean lambda$setUpDropdownShowHideBehavior$4(android.view.View,android.view.MotionEvent) -> lambda$setUpDropdownShowHideBehavior$4
    286:287:void lambda$setUpDropdownShowHideBehavior$5() -> lambda$setUpDropdownShowHideBehavior$5
    190:196:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    223:229:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    237:241:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    315:318:void setEndIconChecked(boolean) -> setEndIconChecked
    118:120:void setUp() -> setUp
    274:290:void setUpDropdownShowHideBehavior() -> setUpDropdownShowHideBehavior
    0:0:boolean shouldTintIconOnError() -> shouldTintIconOnError
    246:266:void showHideDropdown() -> showHideDropdown
    127:131:void tearDown() -> tearDown
    310:311:void updateDropdownPopupDirty() -> updateDropdownPopupDirty
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda0 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$1.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$1.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$1.onFocusChange(android.view.View,boolean) -> onFocusChange
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda2 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$2.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$2.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$424e68cea38bf38d5b555e49338463efe58e97016155fefcd446e70c1ca874a9$2.onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda3 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$6a6dc61376018444d49e0ec726ac9e955707ce81eb61dcb389eb38bf30d0f5ae$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$6a6dc61376018444d49e0ec726ac9e955707ce81eb61dcb389eb38bf30d0f5ae$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$6a6dc61376018444d49e0ec726ac9e955707ce81eb61dcb389eb38bf30d0f5ae$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda4 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$d62d3ecde1df87ec317ef0dcf916bf354e324992921381eb10236d3be87a69e3$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$d62d3ecde1df87ec317ef0dcf916bf354e324992921381eb10236d3be87a69e3$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$d62d3ecde1df87ec317ef0dcf916bf354e324992921381eb10236d3be87a69e3$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda5 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$0.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$0.onTouch(android.view.View,android.view.MotionEvent) -> onTouch
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda6 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.DropdownMenuEndIconDelegate com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$1.f$0 -> f$0
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$1.<init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.DropdownMenuEndIconDelegate$$InternalSyntheticLambda$2$daa5b0f51703359aef8ae32ed8be140469a8a95e04886ce893dea4b8762fad43$1.onDismiss() -> onDismiss
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1:
# {"id":"sourceFile","fileName":"DropdownMenuEndIconDelegate.java"}
    326:326:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    329:330:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.EditTextUtils -> com.google.android.material.textfield.EditTextUtils:
# {"id":"sourceFile","fileName":"EditTextUtils.java"}
    27:27:boolean isEditable(android.widget.EditText) -> isEditable
com.google.android.material.textfield.EndCompoundLayout -> com.google.android.material.textfield.EndCompoundLayout:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    96:189:void <init>(com.google.android.material.textfield.TextInputLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    84:84:android.widget.EditText access$000(com.google.android.material.textfield.EndCompoundLayout) -> access$000
    84:84:android.widget.EditText access$002(com.google.android.material.textfield.EndCompoundLayout,android.widget.EditText) -> access$002
    84:84:android.text.TextWatcher access$100(com.google.android.material.textfield.EndCompoundLayout) -> access$100
    84:84:void access$200(com.google.android.material.textfield.EndCompoundLayout,com.google.android.material.textfield.EndIconDelegate) -> access$200
    84:84:void access$300(com.google.android.material.textfield.EndCompoundLayout) -> access$300
    84:84:void access$400(com.google.android.material.textfield.EndCompoundLayout) -> access$400
    426:429:void addTouchExplorationStateChangeListenerIfNeeded() -> addTouchExplorationStateChangeListenerIfNeeded
    512:514:void checkEndIcon() -> checkEndIcon
    205:213:com.google.android.material.internal.CheckableImageButton createIconView(android.view.ViewGroup,android.view.LayoutInflater,int) -> createIconView
    780:781:void dispatchOnEndIconChanged(int) -> dispatchOnEndIconChanged
    742:745:com.google.android.material.internal.CheckableImageButton getCurrentEndIconView() -> getCurrentEndIconView
    546:546:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    351:351:com.google.android.material.textfield.EndIconDelegate getEndIconDelegate() -> getEndIconDelegate
    531:531:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    575:575:int getEndIconMinSize() -> getEndIconMinSize
    356:356:int getEndIconMode() -> getEndIconMode
    585:585:android.widget.ImageView$ScaleType getEndIconScaleType() -> getEndIconScaleType
    347:347:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    325:325:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    442:443:int getIconResId(com.google.android.material.textfield.EndIconDelegate) -> getIconResId
    657:657:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    652:652:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    616:616:java.lang.CharSequence getSuffixText() -> getSuffixText
    629:629:android.content.res.ColorStateList getSuffixTextColor() -> getSuffixTextColor
    605:605:android.widget.TextView getSuffixTextView() -> getSuffixTextView
    601:601:boolean hasEndIcon() -> hasEndIcon
    243:289:void initEndIconView(androidx.appcompat.widget.TintTypedArray) -> initEndIconView
    219:238:void initErrorIconView(androidx.appcompat.widget.TintTypedArray) -> initErrorIconView
    295:310:void initSuffixTextView(androidx.appcompat.widget.TintTypedArray) -> initSuffixTextView
    508:508:boolean isEndIconChecked() -> isEndIconChecked
    488:488:boolean isEndIconVisible() -> isEndIconVisible
    752:752:boolean isErrorIconVisible() -> isErrorIconVisible
    694:695:void onHintStateChanged(boolean) -> onHintStateChanged
    699:706:void onTextInputBoxStateUpdated() -> onTextInputBoxStateUpdated
    496:496:void refreshEndIconDrawableState() -> refreshEndIconDrawableState
    475:475:void refreshErrorIconDrawableState() -> refreshErrorIconDrawableState
    392:408:void refreshIconState(boolean) -> refreshIconState
    435:436:void removeTouchExplorationStateChangeListenerIfNeeded() -> removeTouchExplorationStateChangeListenerIfNeeded
    492:492:void setEndIconActivated(boolean) -> setEndIconActivated
    500:500:void setEndIconCheckable(boolean) -> setEndIconCheckable
    535:535:void setEndIconContentDescription(int) -> setEndIconContentDescription
    539:540:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    518:518:void setEndIconDrawable(int) -> setEndIconDrawable
    522:525:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    565:570:void setEndIconMinSize(int) -> setEndIconMinSize
    360:387:void setEndIconMode(int) -> setEndIconMode
    447:447:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    452:453:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    579:581:void setEndIconScaleType(android.widget.ImageView$ScaleType) -> setEndIconScaleType
    550:552:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    557:559:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    479:483:void setEndIconVisible(boolean) -> setEndIconVisible
    314:315:void setErrorIconDrawable(int) -> setErrorIconDrawable
    319:321:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    343:343:void setErrorIconOnClickListener(android.view.View$OnClickListener) -> setErrorIconOnClickListener
    458:459:void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener) -> setErrorIconOnLongClickListener
    329:331:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    336:338:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    463:470:void setOnFocusChangeListenersIfNeeded(com.google.android.material.textfield.EndIconDelegate) -> setOnFocusChangeListenersIfNeeded
    642:643:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    647:647:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    633:634:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    638:638:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    665:670:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    675:676:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    680:681:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    609:611:void setSuffixText(java.lang.CharSequence) -> setSuffixText
    620:620:void setSuffixTextAppearance(int) -> setSuffixTextAppearance
    624:624:void setSuffixTextColor(android.content.res.ColorStateList) -> setSuffixTextColor
    413:416:void setUpDelegate(com.google.android.material.textfield.EndIconDelegate) -> setUpDelegate
    420:422:void tearDownDelegate(com.google.android.material.textfield.EndIconDelegate) -> tearDownDelegate
    786:794:void tintEndIconOnError(boolean) -> tintEndIconOnError
    770:776:void updateEndLayoutVisibility() -> updateEndLayoutVisibility
    757:764:void updateErrorIconVisibility() -> updateErrorIconVisibility
    724:737:void updateSuffixTextViewPadding() -> updateSuffixTextViewPadding
    711:720:void updateSuffixTextVisibility() -> updateSuffixTextVisibility
com.google.android.material.textfield.EndCompoundLayout$1 -> com.google.android.material.textfield.EndCompoundLayout$1:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    115:115:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    123:123:void afterTextChanged(android.text.Editable) -> afterTextChanged
    118:118:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.google.android.material.textfield.EndCompoundLayout$2 -> com.google.android.material.textfield.EndCompoundLayout$2:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    128:128:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    131:146:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.EndCompoundLayout$3 -> com.google.android.material.textfield.EndCompoundLayout$3:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    190:190:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    193:193:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    198:198:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.textfield.EndCompoundLayout$EndIconDelegates -> com.google.android.material.textfield.EndCompoundLayout$EndIconDelegates:
# {"id":"sourceFile","fileName":"EndCompoundLayout.java"}
    799:809:void <init>(com.google.android.material.textfield.EndCompoundLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    798:798:int access$500(com.google.android.material.textfield.EndCompoundLayout$EndIconDelegates) -> access$500
    824:834:com.google.android.material.textfield.EndIconDelegate create(int) -> create
    813:816:com.google.android.material.textfield.EndIconDelegate get(int) -> get
com.google.android.material.textfield.EndIconDelegate -> com.google.android.material.textfield.EndIconDelegate:
# {"id":"sourceFile","fileName":"EndIconDelegate.java"}
    48:52:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
    0:0:void afterEditTextChanged(android.text.Editable) -> afterEditTextChanged
    0:0:void beforeEditTextChanged(java.lang.CharSequence,int,int,int) -> beforeEditTextChanged
    0:0:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    0:0:int getIconDrawableResId() -> getIconDrawableResId
    0:0:android.view.View$OnFocusChangeListener getOnEditTextFocusChangeListener() -> getOnEditTextFocusChangeListener
    0:0:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    0:0:android.view.View$OnFocusChangeListener getOnIconViewFocusChangeListener() -> getOnIconViewFocusChangeListener
    0:0:androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener getTouchExplorationStateChangeListener() -> getTouchExplorationStateChangeListener
    0:0:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    0:0:boolean isIconActivable() -> isIconActivable
    0:0:boolean isIconActivated() -> isIconActivated
    0:0:boolean isIconCheckable() -> isIconCheckable
    0:0:boolean isIconChecked() -> isIconChecked
    0:0:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    0:0:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    0:0:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    0:0:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
    195:195:void refreshIconState() -> refreshIconState
    0:0:void setUp() -> setUp
    0:0:boolean shouldTintIconOnError() -> shouldTintIconOnError
    0:0:void tearDown() -> tearDown
com.google.android.material.textfield.IconHelper -> com.google.android.material.textfield.IconHelper:
# {"id":"sourceFile","fileName":"IconHelper.java"}
    81:99:void applyIconTint(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> applyIconTint
    163:175:android.widget.ImageView$ScaleType convertScaleType(int) -> convertScaleType
    127:133:int[] mergeIconState(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton) -> mergeIconState
    110:121:void refreshIconDrawableState(com.google.android.material.textfield.TextInputLayout,com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList) -> refreshIconDrawableState
    139:145:void setCompatRippleBackgroundIfNeeded(com.google.android.material.internal.CheckableImageButton) -> setCompatRippleBackgroundIfNeeded
    58:65:void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconClickable
    151:152:void setIconMinSize(com.google.android.material.internal.CheckableImageButton,int) -> setIconMinSize
    46:47:void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> setIconOnClickListener
    52:53:void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconOnLongClickListener
    157:157:void setIconScaleType(com.google.android.material.internal.CheckableImageButton,android.widget.ImageView$ScaleType) -> setIconScaleType
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.IndicatorViewController:
# {"id":"sourceFile","fileName":"IndicatorViewController.java"}
    134:159:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    67:67:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> access$002
    67:67:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> access$102
    67:67:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> access$200
    67:67:com.google.android.material.textfield.TextInputLayout access$300(com.google.android.material.textfield.IndicatorViewController) -> access$300
    437:461:void addIndicator(android.widget.TextView,int) -> addIndicator
    402:420:void adjustIndicatorPadding() -> adjustIndicatorPadding
    426:426:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    379:380:void cancelCaptionAnimator() -> cancelCaptionAnimator
    345:355:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    362:366:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    371:374:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    584:584:boolean errorShouldBeShown() -> errorShouldBeShown
    392:394:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    675:675:int getErrorAccessibilityLiveRegion() -> getErrorAccessibilityLiveRegion
    671:671:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    609:609:java.lang.CharSequence getErrorText() -> getErrorText
    633:633:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    638:638:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    613:613:java.lang.CharSequence getHelperText() -> getHelperText
    576:576:android.view.View getHelperTextView() -> getHelperTextView
    680:680:int getHelperTextViewCurrentTextColor() -> getHelperTextViewCurrentTextColor
    432:432:int getIndicatorPadding(boolean,int,int) -> getIndicatorPadding
    201:214:void hideError() -> hideError
    177:184:void hideHelperText() -> hideHelperText
    588:590:boolean isCaptionStateError(int) -> isCaptionStateError
    0:0:boolean isCaptionView(int) -> isCaptionView
    519:519:boolean isErrorEnabled() -> isErrorEnabled
    523:523:boolean isHelperTextEnabled() -> isHelperTextEnabled
    465:475:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    311:328:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    663:665:void setErrorAccessibilityLiveRegion(int) -> setErrorAccessibilityLiveRegion
    656:658:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    486:515:void setErrorEnabled(boolean) -> setErrorEnabled
    649:651:void setErrorTextAppearance(int) -> setErrorTextAppearance
    642:644:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    696:698:void setHelperTextAppearance(int) -> setHelperTextAppearance
    528:571:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    689:691:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    627:627:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> setTextViewTypeface
    618:621:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    480:480:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    227:231:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    188:197:void showError(java.lang.CharSequence) -> showError
    164:173:void showHelper(java.lang.CharSequence) -> showHelper
    244:301:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.IndicatorViewController$1:
# {"id":"sourceFile","fileName":"IndicatorViewController.java"}
    269:269:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    272:283:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    289:291:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.IndicatorViewController$2 -> com.google.android.material.textfield.IndicatorViewController$2:
# {"id":"sourceFile","fileName":"IndicatorViewController.java"}
    552:552:void <init>(com.google.android.material.textfield.IndicatorViewController) -> <init>
    556:559:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.google.android.material.textfield.MaterialAutoCompleteTextView -> com.google.android.material.textfield.MaterialAutoCompleteTextView:
# {"id":"sourceFile","fileName":"MaterialAutoCompleteTextView.java"}
    84:84:void <init>(android.content.Context) -> <init>
    89:89:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    77:172:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:71:androidx.appcompat.widget.ListPopupWindow access$000(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$000
    71:71:void access$100(com.google.android.material.textfield.MaterialAutoCompleteTextView,java.lang.Object) -> access$100
    71:71:int access$200(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$200
    71:71:android.content.res.ColorStateList access$300(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$300
    186:189:void dismissDropDown() -> dismissDropDown
    431:436:com.google.android.material.textfield.TextInputLayout findTextInputLayoutAncestor() -> findTextInputLayoutAncestor
    352:356:java.lang.CharSequence getHint() -> getHint
    322:322:float getPopupElevation() -> getPopupElevation
    274:274:int getSimpleItemSelectedColor() -> getSimpleItemSelectedColor
    304:304:android.content.res.ColorStateList getSimpleItemSelectedRippleColor() -> getSimpleItemSelectedRippleColor
    204:204:boolean isTouchExplorationEnabled() -> isTouchExplorationEnabled
    376:416:int measureContentWidth() -> measureContentWidth
    327:337:void onAttachedToWindow() -> onAttachedToWindow
    343:344:void onDetachedFromWindow() -> onDetachedFromWindow
    423:425:void onInputTypeChanged() -> onInputTypeChanged
    361:371:void onMeasure(int,int) -> onMeasure
    195:200:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    209:210:void setAdapter(android.widget.ListAdapter) -> setAdapter
    309:311:void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable) -> setDropDownBackgroundDrawable
    221:222:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    215:216:void setRawInputType(int) -> setRawInputType
    260:262:void setSimpleItemSelectedColor(int) -> setSimpleItemSelectedColor
    289:291:void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList) -> setSimpleItemSelectedRippleColor
    234:234:void setSimpleItems(int) -> setSimpleItems
    246:246:void setSimpleItems(java.lang.String[]) -> setSimpleItems
    177:180:void showDropDown() -> showDropDown
    444:444:void updateText(java.lang.Object) -> updateText
com.google.android.material.textfield.MaterialAutoCompleteTextView$1 -> com.google.android.material.textfield.MaterialAutoCompleteTextView$1:
# {"id":"sourceFile","fileName":"MaterialAutoCompleteTextView.java"}
    144:144:void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> <init>
    148:163:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.textfield.MaterialAutoCompleteTextView$MaterialArrayAdapter -> com.google.android.material.textfield.MaterialAutoCompleteTextView$MaterialArrayAdapter:
# {"id":"sourceFile","fileName":"MaterialAutoCompleteTextView.java"}
    460:462:void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView,android.content.Context,int,java.lang.String[]) -> <init>
    509:530:android.content.res.ColorStateList createItemSelectedColorStateList() -> createItemSelectedColorStateList
    485:501:android.graphics.drawable.Drawable getSelectedItemDrawable() -> getSelectedItemDrawable
    472:477:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    551:551:boolean hasSelectedColor() -> hasSelectedColor
    555:555:boolean hasSelectedRippleColor() -> hasSelectedRippleColor
    534:547:android.content.res.ColorStateList sanitizeDropdownItemSelectedRippleColor() -> sanitizeDropdownItemSelectedRippleColor
    466:467:void updateSelectedItemColorStateList() -> updateSelectedItemColorStateList
com.google.android.material.textfield.NoEndIconDelegate -> com.google.android.material.textfield.NoEndIconDelegate:
# {"id":"sourceFile","fileName":"NoEndIconDelegate.java"}
    26:26:void <init>(com.google.android.material.textfield.EndCompoundLayout) -> <init>
com.google.android.material.textfield.PasswordToggleEndIconDelegate -> com.google.android.material.textfield.PasswordToggleEndIconDelegate:
# {"id":"sourceFile","fileName":"PasswordToggleEndIconDelegate.java"}
    0:0:void $r8$lambda$twlq6SYcv_LydKclcBcdQZ6NHKY(com.google.android.material.textfield.PasswordToggleEndIconDelegate,android.view.View) -> $r8$lambda$twlq6SYcv_LydKclcBcdQZ6NHKY
      # {"id":"com.android.tools.r8.synthesized"}
    32:59:void <init>(com.google.android.material.textfield.EndCompoundLayout,int) -> <init>
    115:115:void beforeEditTextChanged(java.lang.CharSequence,int,int,int) -> beforeEditTextChanged
    88:88:int getIconContentDescriptionResId() -> getIconContentDescriptionResId
    82:82:int getIconDrawableResId() -> getIconDrawableResId
    104:104:android.view.View$OnClickListener getOnIconClickListener() -> getOnIconClickListener
    119:120:boolean hasPasswordTransformation() -> hasPasswordTransformation
    0:0:boolean isIconCheckable() -> isIconCheckable
    99:99:boolean isIconChecked() -> isIconChecked
    125:128:boolean isInputTypePassword(android.widget.EditText) -> isInputTypePassword
    38:52:void lambda$new$0(android.view.View) -> lambda$new$0
    109:110:void onEditTextAttached(android.widget.EditText) -> onEditTextAttached
    65:67:void setUp() -> setUp
    73:75:void tearDown() -> tearDown
com.google.android.material.textfield.PasswordToggleEndIconDelegate$$ExternalSyntheticLambda0 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.textfield.PasswordToggleEndIconDelegate com.google.android.material.textfield.PasswordToggleEndIconDelegate$$InternalSyntheticLambda$2$decc8f0b3b822bf7eef5cd7a798db439e744c3f9e22c4ce2f9722e0826ecd2aa$0.f$0 -> f$0
    0:0:void com.google.android.material.textfield.PasswordToggleEndIconDelegate$$InternalSyntheticLambda$2$decc8f0b3b822bf7eef5cd7a798db439e744c3f9e22c4ce2f9722e0826ecd2aa$0.<init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.PasswordToggleEndIconDelegate$$InternalSyntheticLambda$2$decc8f0b3b822bf7eef5cd7a798db439e744c3f9e22c4ce2f9722e0826ecd2aa$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.StartCompoundLayout -> com.google.android.material.textfield.StartCompoundLayout:
# {"id":"sourceFile","fileName":"StartCompoundLayout.java"}
    80:104:void <init>(com.google.android.material.textfield.TextInputLayout,androidx.appcompat.widget.TintTypedArray) -> <init>
    188:188:java.lang.CharSequence getPrefixText() -> getPrefixText
    197:197:android.content.res.ColorStateList getPrefixTextColor() -> getPrefixTextColor
    171:171:android.widget.TextView getPrefixTextView() -> getPrefixTextView
    265:265:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    220:220:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    293:293:int getStartIconMinSize() -> getStartIconMinSize
    303:303:android.widget.ImageView$ScaleType getStartIconScaleType() -> getStartIconScaleType
    148:160:void initPrefixTextView(androidx.appcompat.widget.TintTypedArray) -> initPrefixTextView
    109:143:void initStartIconView(androidx.appcompat.widget.TintTypedArray) -> initStartIconView
    242:242:boolean isStartIconVisible() -> isStartIconVisible
    332:333:void onHintStateChanged(boolean) -> onHintStateChanged
    165:166:void onMeasure(int,int) -> onMeasure
    246:246:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    175:177:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    201:201:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    192:192:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    250:250:void setStartIconCheckable(boolean) -> setStartIconCheckable
    258:259:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    205:214:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    284:288:void setStartIconMinSize(int) -> setStartIconMinSize
    224:224:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    229:230:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    297:298:void setStartIconScaleType(android.widget.ImageView$ScaleType) -> setStartIconScaleType
    269:271:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    276:278:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    234:237:void setStartIconVisible(boolean) -> setStartIconVisible
    307:311:void setupAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> setupAccessibilityNodeInfo
    316:328:void updatePrefixTextViewPadding() -> updatePrefixTextViewPadding
    338:345:void updateVisibility() -> updateVisibility
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
# {"id":"sourceFile","fileName":"TextInputEditText.java"}
    59:59:void <init>(android.content.Context) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    207:216:java.lang.String getAccessibilityNodeInfoText(com.google.android.material.textfield.TextInputLayout) -> getAccessibilityNodeInfoText
    161:165:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    171:174:boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point) -> getGlobalVisibleRect
    104:108:java.lang.CharSequence getHint() -> getHint
    137:138:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    125:130:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    85:95:void onAttachedToWindow() -> onAttachedToWindow
    114:118:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    195:201:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    179:189:boolean requestRectangleOnScreen(android.graphics.Rect) -> requestRectangleOnScreen
    145:145:void setTextInputLayoutFocusedRectEnabled(boolean) -> setTextInputLayoutFocusedRectEnabled
    156:156:boolean shouldUseTextInputLayoutFocusedRect(com.google.android.material.textfield.TextInputLayout) -> shouldUseTextInputLayoutFocusedRect
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    0:0:int $r8$lambda$ae-b_REtQE9J8sctylgQBMSu39c(android.text.Editable) -> $r8$lambda$ae-b_REtQE9J8sctylgQBMSu39c
      # {"id":"com.android.tools.r8.synthesized"}
    196:207:void <clinit>() -> <clinit>
    447:447:void <init>(android.content.Context) -> <init>
    451:451:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    220:703:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    194:194:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> access$000
    194:194:boolean access$100(com.google.android.material.textfield.TextInputLayout) -> access$100
    194:194:void access$200(com.google.android.material.textfield.TextInputLayout,android.text.Editable) -> access$200
    194:194:com.google.android.material.textfield.EndCompoundLayout access$300(com.google.android.material.textfield.TextInputLayout) -> access$300
    194:194:com.google.android.material.textfield.StartCompoundLayout access$400(com.google.android.material.textfield.TextInputLayout) -> access$400
    194:194:com.google.android.material.textfield.IndicatorViewController access$500(com.google.android.material.textfield.TextInputLayout) -> access$500
    3741:3743:void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> addOnEditTextAttachedListener
    2474:2476:void addPlaceholderTextView() -> addPlaceholderTextView
    709:724:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    967:988:void adjustFilledEditTextPaddingForLargeFont() -> adjustFilledEditTextPaddingForLargeFont
    4358:4379:void animateToExpansionFraction(float) -> animateToExpansionFraction
    2860:2876:void applyBoxAttributes() -> applyBoxAttributes
    2881:2894:void applyBoxUnderlineAttributes() -> applyBoxUnderlineAttributes
    4183:4184:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    785:806:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    2851:2854:int calculateBoxBackgroundColor() -> calculateBoxBackgroundColor
    2758:2780:android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect) -> calculateCollapsedTextBounds
    2830:2836:int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float) -> calculateExpandedLabelBottom
    2822:2825:int calculateExpandedLabelTop(android.graphics.Rect,float) -> calculateExpandedLabelTop
    2805:2816:android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect) -> calculateExpandedTextBounds
    2741:2749:int calculateLabelMarginTop() -> calculateLabelMarginTop
    2898:2898:boolean canDrawOutlineStroke() -> canDrawOutlineStroke
    2902:2902:boolean canDrawStroke() -> canDrawStroke
    4177:4178:void closeCutout() -> closeCutout
    4127:4142:void collapseHint(boolean) -> collapseHint
    2432:2435:androidx.transition.Fade createPlaceholderFadeTransition() -> createPlaceholderFadeTransition
    4146:4146:boolean cutoutEnabled() -> cutoutEnabled
    3944:3945:void dispatchOnEditTextAttached() -> dispatchOnEditTextAttached
    1429:1446:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    1446:1461:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    3032:3034:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    4084:4086:void draw(android.graphics.Canvas) -> draw
    4102:4121:void drawBoxUnderline(android.graphics.Canvas) -> drawBoxUnderline
    4096:4097:void drawHint(android.graphics.Canvas) -> drawHint
    4194:4223:void drawableStateChanged() -> drawableStateChanged
    4338:4353:void expandHint(boolean) -> expandHint
    1583:1586:int getBaseline() -> getBaseline
    730:733:com.google.android.material.shape.MaterialShapeDrawable getBoxBackground() -> getBoxBackground
    1227:1227:int getBoxBackgroundColor() -> getBoxBackgroundColor
    769:769:int getBoxBackgroundMode() -> getBoxBackgroundMode
    1012:1012:int getBoxCollapsedPaddingTop() -> getBoxCollapsedPaddingTop
    1364:1366:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    1376:1378:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    1352:1354:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    1340:1342:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    1110:1110:int getBoxStrokeColor() -> getBoxStrokeColor
    1160:1160:android.content.res.ColorStateList getBoxStrokeErrorColor() -> getBoxStrokeErrorColor
    1048:1048:int getBoxStrokeWidth() -> getBoxStrokeWidth
    1085:1085:int getBoxStrokeWidthFocused() -> getBoxStrokeWidthFocused
    2686:2686:int getCounterMaxLength() -> getCounterMaxLength
    2695:2696:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    2286:2286:android.content.res.ColorStateList getCounterOverflowTextColor() -> getCounterOverflowTextColor
    2243:2243:android.content.res.ColorStateList getCounterTextColor() -> getCounterTextColor
    1944:1944:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    927:948:com.google.android.material.shape.MaterialShapeDrawable getDropDownMaterialShapeDrawable(boolean) -> getDropDownMaterialShapeDrawable
    1638:1638:android.widget.EditText getEditText() -> getEditText
    825:834:android.graphics.drawable.Drawable getEditTextBoxBackground() -> getEditTextBoxBackground
    3673:3673:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    3567:3567:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    3589:3589:int getEndIconMinSize() -> getEndIconMinSize
    3416:3416:int getEndIconMode() -> getEndIconMode
    3635:3635:android.widget.ImageView$ScaleType getEndIconScaleType() -> getEndIconScaleType
    3940:3940:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    3045:3045:java.lang.CharSequence getError() -> getError
    2095:2095:int getErrorAccessibilityLiveRegion() -> getErrorAccessibilityLiveRegion
    2076:2076:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    1975:1975:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    2153:2153:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    873:879:android.graphics.drawable.Drawable getFilledBoxBackgroundWithRipple(com.google.android.material.shape.MaterialShapeDrawable,int,int,int[][]) -> getFilledBoxBackgroundWithRipple
    3057:3058:java.lang.CharSequence getHelperText() -> getHelperText
    2052:2052:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    1816:1816:java.lang.CharSequence getHint() -> getHint
    4398:4398:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    4393:4393:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1925:1925:android.content.res.ColorStateList getHintTextColor() -> getHintTextColor
    2786:2789:int getLabelLeftBoundAlightWithPrefix(int,boolean) -> getLabelLeftBoundAlightWithPrefix
    2795:2798:int getLabelRightBoundAlignedWithSuffix(int,boolean) -> getLabelRightBoundAlignedWithSuffix
    1423:1423:com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter() -> getLengthCounter
    1688:1688:int getMaxEms() -> getMaxEms
    1770:1770:int getMaxWidth() -> getMaxWidth
    1663:1663:int getMinEms() -> getMinEms
    1729:1729:int getMinWidth() -> getMinWidth
    915:922:android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground() -> getOrCreateFilledDropDownMenuBackground
    908:911:android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground() -> getOrCreateOutlinedDropDownMenuBackground
    844:860:android.graphics.drawable.Drawable getOutlinedBoxBackgroundWithRipple(android.content.Context,com.google.android.material.shape.MaterialShapeDrawable,int,int[][]) -> getOutlinedBoxBackgroundWithRipple
    3848:3848:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    3834:3834:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    2412:2412:java.lang.CharSequence getPlaceholderText() -> getPlaceholderText
    2530:2530:int getPlaceholderTextAppearance() -> getPlaceholderTextAppearance
    2507:2507:android.content.res.ColorStateList getPlaceholderTextColor() -> getPlaceholderTextColor
    2553:2553:java.lang.CharSequence getPrefixText() -> getPrefixText
    2585:2585:android.content.res.ColorStateList getPrefixTextColor() -> getPrefixTextColor
    2566:2566:android.widget.TextView getPrefixTextView() -> getPrefixTextView
    1250:1250:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    3364:3364:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    3231:3231:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    3253:3253:int getStartIconMinSize() -> getStartIconMinSize
    3612:3612:android.widget.ImageView$ScaleType getStartIconScaleType() -> getStartIconScaleType
    2617:2617:java.lang.CharSequence getSuffixText() -> getSuffixText
    2649:2649:android.content.res.ColorStateList getSuffixTextColor() -> getSuffixTextColor
    2630:2630:android.widget.TextView getSuffixTextView() -> getSuffixTextView
    1405:1405:android.graphics.Typeface getTypeface() -> getTypeface
    2466:2469:void hidePlaceholderText() -> hidePlaceholderText
    3488:3488:boolean isEndIconVisible() -> isEndIconVisible
    1999:1999:boolean isErrorEnabled() -> isErrorEnabled
    2046:2046:boolean isHelperTextEnabled() -> isHelperTextEnabled
    4383:4383:boolean isHintExpanded() -> isHintExpanded
    1881:1881:boolean isProvidingHint() -> isProvidingHint
    2840:2841:boolean isSingleLineFilledTextField() -> isSingleLineFilledTextField
    244:244:int lambda$new$0(android.text.Editable) -> lambda$new$0
    773:781:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    4091:4092:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    4045:4065:void onLayout(boolean,int,int,int,int) -> onLayout
    3148:3162:void onMeasure(int,int) -> onMeasure
    3010:3027:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3109:3142:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2999:3004:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4150:4166:void openCutout() -> openCutout
    4170:4172:void recalculateCutout() -> recalculateCutout
    2671:2675:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    3303:3303:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    2481:2482:void removePlaceholderTextView() -> removePlaceholderTextView
    1188:1193:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    1173:1173:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    1207:1217:void setBoxBackgroundColorStateList(android.content.res.ColorStateList) -> setBoxBackgroundColorStateList
    752:757:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    1002:1002:void setBoxCollapsedPaddingTop(int) -> setBoxCollapsedPaddingTop
    1260:1267:void setBoxCornerFamily(int) -> setBoxCornerFamily
    1308:1329:void setBoxCornerRadii(float,float,float,float) -> setBoxCornerRadii
    1284:1288:void setBoxCornerRadiiResources(int,int,int,int) -> setBoxCornerRadiiResources
    1097:1099:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1119:1134:void setBoxStrokeColorStateList(android.content.res.ColorStateList) -> setBoxStrokeColorStateList
    1146:1148:void setBoxStrokeErrorColor(android.content.res.ColorStateList) -> setBoxStrokeErrorColor
    1037:1038:void setBoxStrokeWidth(int) -> setBoxStrokeWidth
    1074:1075:void setBoxStrokeWidthFocused(int) -> setBoxStrokeWidthFocused
    1062:1062:void setBoxStrokeWidthFocusedResource(int) -> setBoxStrokeWidthFocusedResource
    1025:1025:void setBoxStrokeWidthResource(int) -> setBoxStrokeWidthResource
    2183:2201:void setCounterEnabled(boolean) -> setCounterEnabled
    2306:2313:void setCounterMaxLength(int) -> setCounterMaxLength
    2254:2256:void setCounterOverflowTextAppearance(int) -> setCounterOverflowTextAppearance
    2270:2272:void setCounterOverflowTextColor(android.content.res.ColorStateList) -> setCounterOverflowTextColor
    2213:2215:void setCounterTextAppearance(int) -> setCounterTextAppearance
    2228:2230:void setCounterTextColor(android.content.res.ColorStateList) -> setCounterTextColor
    1930:1934:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    891:902:void setDropDownMenuBackgroundIfNeeded() -> setDropDownMenuBackgroundIfNeeded
    1469:1564:void setEditText(android.widget.EditText) -> setEditText
    2666:2667:void setEnabled(boolean) -> setEnabled
    3497:3497:void setEndIconActivated(boolean) -> setEndIconActivated
    3519:3519:void setEndIconCheckable(boolean) -> setEndIconCheckable
    3648:3648:void setEndIconContentDescription(int) -> setEndIconContentDescription
    3662:3662:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    3542:3542:void setEndIconDrawable(int) -> setEndIconDrawable
    3556:3556:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    3578:3578:void setEndIconMinSize(int) -> setEndIconMinSize
    3404:3404:void setEndIconMode(int) -> setEndIconMode
    3427:3427:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    3450:3450:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    3623:3623:void setEndIconScaleType(android.widget.ImageView$ScaleType) -> setEndIconScaleType
    3688:3688:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    3700:3700:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    3479:3479:void setEndIconVisible(boolean) -> setEndIconVisible
    2109:2121:void setError(java.lang.CharSequence) -> setError
    2086:2086:void setErrorAccessibilityLiveRegion(int) -> setErrorAccessibilityLiveRegion
    2066:2066:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    1955:1955:void setErrorEnabled(boolean) -> setErrorEnabled
    2132:2132:void setErrorIconDrawable(int) -> setErrorIconDrawable
    2142:2142:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    3438:3438:void setErrorIconOnClickListener(android.view.View$OnClickListener) -> setErrorIconOnClickListener
    3462:3462:void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener) -> setErrorIconOnLongClickListener
    2163:2163:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    2174:2174:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    1964:1964:void setErrorTextAppearance(int) -> setErrorTextAppearance
    1969:1969:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    3101:3103:void setExpandedHintEnabled(boolean) -> setExpandedHintEnabled
    2027:2035:void setHelperText(java.lang.CharSequence) -> setHelperText
    1989:1989:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    2010:2010:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    1984:1984:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    1780:1782:void setHint(java.lang.CharSequence) -> setHint
    1794:1794:void setHint(int) -> setHint
    3079:3079:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    1831:1857:void setHintEnabled(boolean) -> setHintEnabled
    1798:1803:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    1890:1896:void setHintTextAppearance(int) -> setHintTextAppearance
    1905:1913:void setHintTextColor(android.content.res.ColorStateList) -> setHintTextColor
    1414:1414:void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter) -> setLengthCounter
    1675:1677:void setMaxEms(int) -> setMaxEms
    1742:1744:void setMaxWidth(int) -> setMaxWidth
    1758:1758:void setMaxWidthResource(int) -> setMaxWidthResource
    1650:1652:void setMinEms(int) -> setMinEms
    1701:1703:void setMinWidth(int) -> setMinWidth
    1717:1717:void setMinWidthResource(int) -> setMinWidthResource
    3805:3805:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    3821:3821:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    3774:3774:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    3789:3789:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    3874:3874:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    3891:3891:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    3905:3905:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    2377:2401:void setPlaceholderText(java.lang.CharSequence) -> setPlaceholderText
    2517:2519:void setPlaceholderTextAppearance(int) -> setPlaceholderTextAppearance
    2492:2495:void setPlaceholderTextColor(android.content.res.ColorStateList) -> setPlaceholderTextColor
    2417:2428:void setPlaceholderTextEnabled(boolean) -> setPlaceholderTextEnabled
    2542:2542:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    2594:2594:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    2575:2575:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    1237:1239:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    3317:3317:void setStartIconCheckable(boolean) -> setStartIconCheckable
    3339:3339:void setStartIconContentDescription(int) -> setStartIconContentDescription
    3353:3353:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    3206:3206:void setStartIconDrawable(int) -> setStartIconDrawable
    3219:3219:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    3242:3242:void setStartIconMinSize(int) -> setStartIconMinSize
    3265:3265:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    3277:3277:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    3600:3600:void setStartIconScaleType(android.widget.ImageView$ScaleType) -> setStartIconScaleType
    3379:3379:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    3391:3391:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    3286:3286:void setStartIconVisible(boolean) -> setStartIconVisible
    2606:2606:void setSuffixText(java.lang.CharSequence) -> setSuffixText
    2658:2658:void setSuffixTextAppearance(int) -> setSuffixTextAppearance
    2639:2639:void setSuffixTextColor(android.content.res.ColorStateList) -> setSuffixTextColor
    2718:2736:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    3933:3934:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    1388:1395:void setTypeface(android.graphics.Typeface) -> setTypeface
    2940:2940:boolean shouldShowError() -> shouldShowError
    4037:4040:boolean shouldUpdateEndDummyDrawable() -> shouldUpdateEndDummyDrawable
    4031:4033:boolean shouldUpdateStartDummyDrawable() -> shouldUpdateStartDummyDrawable
    2454:2460:void showPlaceholderText() -> showPlaceholderText
    953:961:void updateBoxCollapsedPaddingTop() -> updateBoxCollapsedPaddingTop
    4072:4078:void updateBoxUnderlineBounds(android.graphics.Rect) -> updateBoxUnderlineBounds
    2319:2320:void updateCounter() -> updateCounter
    2325:2349:void updateCounter(android.text.Editable) -> updateCounter
    2359:2365:void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean) -> updateCounterContentDescription
    2702:2709:void updateCounterTextAppearanceAndColor() -> updateCounterTextAppearanceAndColor
    4321:4334:void updateCursorColor(boolean) -> updateCursorColor
    3954:4024:boolean updateDummyDrawables() -> updateDummyDrawables
    2908:2935:void updateEditTextBackground() -> updateEditTextBackground
    812:820:void updateEditTextBoxBackgroundIfNeeded() -> updateEditTextBoxBackgroundIfNeeded
    3166:3175:boolean updateEditTextHeightBasedOnIcon() -> updateEditTextHeightBasedOnIcon
    1570:1576:void updateInputLayoutMargins() -> updateInputLayoutMargins
    1591:1591:void updateLabelState(boolean) -> updateLabelState
    1595:1630:void updateLabelState(boolean,boolean) -> updateLabelState
    3183:3192:void updatePlaceholderMeasurementsBasedOnEditText() -> updatePlaceholderMeasurementsBasedOnEditText
    2441:2441:void updatePlaceholderText() -> updatePlaceholderText
    2445:2449:void updatePlaceholderText(android.text.Editable) -> updatePlaceholderText
    4300:4314:void updateStrokeErrorColor(boolean,boolean) -> updateStrokeErrorColor
    4227:4296:void updateTextInputBoxState() -> updateTextInputBoxState
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.autofill.AutofillId com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$0.m(com.google.android.material.textfield.TextInputLayout) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline1 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$1.m(android.view.ViewStructure,android.view.autofill.AutofillId) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline2 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$2.m(com.google.android.material.textfield.TextInputLayout,android.view.ViewStructure,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline3 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$3.m(com.google.android.material.textfield.TextInputLayout,android.view.ViewStructure,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline4 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$4.m(android.view.ViewStructure,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline5 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.view.ViewStructure com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$5.m(android.view.ViewStructure,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline6 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$6.m(android.view.View,android.view.ViewStructure,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline7 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$210c7beff28088e63fa64bf9b17c0261d59c8af6f2ebf8dd5c9590290991e314$7.m(android.view.ViewStructure,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline8 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.graphics.drawable.Drawable com.google.android.material.textfield.TextInputLayout$$InternalSyntheticApiModelOutline$1$22849781a358ecdf99b482e731626670766b7de8875852c491a4db41de870f96$0.m(android.widget.EditText) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticLambda9 -> com.google.android.material.textfield.TextInputLayout$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.android.material.textfield.TextInputLayout$$InternalSyntheticLambda$1$c731f40b0043b1db8be68c13833421f1a22aba3e352b73c80e80778290593594$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.google.android.material.textfield.TextInputLayout$$InternalSyntheticLambda$1$c731f40b0043b1db8be68c13833421f1a22aba3e352b73c80e80778290593594$0.countLength(android.text.Editable) -> countLength
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$1:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    1509:1509:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1512:1517:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    0:0:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$2:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    3020:3020:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3023:3023:void run() -> run
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$3:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    3154:3154:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3157:3157:void run() -> run
com.google.android.material.textfield.TextInputLayout$4 -> com.google.android.material.textfield.TextInputLayout$4:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    4371:4371:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4374:4374:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    4410:4411:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4417:4474:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    4480:4481:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.textfield.TextInputLayout$LengthCounter -> com.google.android.material.textfield.TextInputLayout$LengthCounter:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener -> com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    2974:2974:void <clinit>() -> <clinit>
    2948:2948:void <init>(android.os.Parcelable) -> <init>
    2952:2954:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2967:2968:java.lang.String toString() -> toString
    2959:2961:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$1:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    2975:2975:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2975:2975:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2979:2979:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2985:2985:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2975:2975:java.lang.Object[] newArray(int) -> newArray
    2991:2991:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.textview.MaterialTextView -> com.google.android.material.textview.MaterialTextView:
# {"id":"sourceFile","fileName":"MaterialTextView.java"}
    79:79:void <init>(android.content.Context) -> <init>
    83:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    130:140:void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int) -> applyLineHeightFromViewAppearance
    145:145:boolean canApplyTextAppearanceLineHeight(android.content.Context) -> canApplyTextAppearanceLineHeight
    183:188:int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> findViewAppearanceResourceId
    115:123:void initialize(android.util.AttributeSet,int,int) -> initialize
    154:155:int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[]) -> readFirstAvailableDimension
    106:109:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    167:176:boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> viewAttrsHasLineHeight
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
# {"id":"sourceFile","fileName":"MaterialComponentsViewInflater.java"}
    39:39:void <init>() -> <init>
    68:68:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    43:43:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    49:49:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    55:55:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    61:61:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
com.google.android.material.theme.overlay.MaterialThemeOverlay -> com.google.android.material.theme.overlay.MaterialThemeOverlay:
# {"id":"sourceFile","fileName":"MaterialThemeOverlay.java"}
    48:51:void <clinit>() -> <clinit>
    94:97:int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet) -> obtainAndroidThemeOverlayId
    112:116:int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int) -> obtainMaterialThemeOverlayId
    67:81:android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int) -> wrap
com.google.android.material.timepicker.ChipTextInputComboView -> com.google.android.material.timepicker.ChipTextInputComboView:
# {"id":"sourceFile","fileName":"ChipTextInputComboView.java"}
    66:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:java.lang.String access$100(com.google.android.material.timepicker.ChipTextInputComboView,java.lang.CharSequence) -> access$100
    53:53:com.google.android.material.chip.Chip access$200(com.google.android.material.timepicker.ChipTextInputComboView) -> access$200
    134:134:java.lang.String formatText(java.lang.CharSequence) -> formatText
    100:100:boolean isChecked() -> isChecked
    187:188:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    105:109:void setChecked(boolean) -> setChecked
    139:139:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    144:144:void setTag(int,java.lang.Object) -> setTag
    115:115:void toggle() -> toggle
    91:94:void updateHintLocales() -> updateHintLocales
com.google.android.material.timepicker.ChipTextInputComboView$$ExternalSyntheticApiModelOutline0 -> com.google.android.material.timepicker.ChipTextInputComboView$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.timepicker.ChipTextInputComboView$$InternalSyntheticApiModelOutline$1$6b706387be15cfe16698c80a6a67869c9e53bd6a6ca94d3d964d28159159f2b4$1.m(android.widget.EditText,android.os.LocaleList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.ChipTextInputComboView$1 -> com.google.android.material.timepicker.ChipTextInputComboView$1:
# {"id":"sourceFile","fileName":"ChipTextInputComboView.java"}
com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter -> com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter:
# {"id":"sourceFile","fileName":"ChipTextInputComboView.java"}
    170:170:void <init>(com.google.android.material.timepicker.ChipTextInputComboView) -> <init>
    170:170:void <init>(com.google.android.material.timepicker.ChipTextInputComboView,com.google.android.material.timepicker.ChipTextInputComboView$1) -> <init>
    176:181:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.timepicker.ClockFaceView -> com.google.android.material.timepicker.ClockFaceView:
# {"id":"sourceFile","fileName":"ClockFaceView.java"}
    100:100:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:201:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    68:68:com.google.android.material.timepicker.ClockHandView access$000(com.google.android.material.timepicker.ClockFaceView) -> access$000
    68:68:int access$100(com.google.android.material.timepicker.ClockFaceView) -> access$100
    68:68:android.util.SparseArray access$200(com.google.android.material.timepicker.ClockFaceView) -> access$200
    68:68:android.graphics.Rect access$300(com.google.android.material.timepicker.ClockFaceView) -> access$300
    293:307:void findIntersectingTextView() -> findIntersectingTextView
    336:347:android.graphics.RadialGradient getGradientForTextView(android.graphics.RectF,android.widget.TextView) -> getGradientForTextView
    316:324:android.widget.TextView getSelectedTextView(android.graphics.RectF) -> getSelectedTextView
    379:379:float max3(float,float,float) -> max3
    263:266:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    283:284:void onLayout(boolean,int,int,int,int) -> onLayout
    363:375:void onMeasure(int,int) -> onMeasure
    355:357:void onRotate(float,boolean) -> onRotate
    275:277:void setRadius(int) -> setRadius
    209:210:void setValues(java.lang.String[],int) -> setValues
    255:257:void updateLayoutParams() -> updateLayoutParams
    216:250:void updateTextViews(int) -> updateTextViews
com.google.android.material.timepicker.ClockFaceView$1 -> com.google.android.material.timepicker.ClockFaceView$1:
# {"id":"sourceFile","fileName":"ClockFaceView.java"}
    139:139:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    142:148:boolean onPreDraw() -> onPreDraw
com.google.android.material.timepicker.ClockFaceView$2 -> com.google.android.material.timepicker.ClockFaceView$2:
# {"id":"sourceFile","fileName":"ClockFaceView.java"}
    156:156:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    160:176:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    182:190:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.timepicker.ClockHandView -> com.google.android.material.timepicker.ClockHandView:
# {"id":"sourceFile","fileName":"ClockHandView.java"}
    0:0:void $r8$lambda$wCFWOEU6-eiQJxdycea1a-JE7mk(com.google.android.material.timepicker.ClockHandView,android.animation.ValueAnimator) -> $r8$lambda$wCFWOEU6-eiQJxdycea1a-JE7mk
      # {"id":"com.android.tools.r8.synthesized"}
    104:104:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:136:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    232:232:void addOnRotateListener(com.google.android.material.timepicker.ClockHandView$OnRotateListener) -> addOnRotateListener
    344:349:void adjustLevel(float,float) -> adjustLevel
    252:275:void drawSelector(android.graphics.Canvas) -> drawSelector
    280:280:android.graphics.RectF getCurrentSelectorBox() -> getCurrentSelectorBox
    369:373:int getDegreesFromXY(float,float) -> getDegreesFromXY
    241:241:float getHandRotation() -> getHandRotation
    400:400:int getLeveledCircleRadius(int) -> getLeveledCircleRadius
    285:285:int getSelectorRadius() -> getSelectorRadius
    183:198:android.util.Pair getValuesForAnimation(float) -> getValuesForAnimation
    354:361:boolean handleTouchInput(float,float,boolean,boolean,boolean) -> handleTouchInput
    168:169:void lambda$setHandRotation$0(android.animation.ValueAnimator) -> lambda$setHandRotation$0
    246:248:void onDraw(android.graphics.Canvas) -> onDraw
    141:144:void onLayout(boolean,int,int,int,int) -> onLayout
    300:335:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    293:294:void setCircleRadius(int) -> setCircleRadius
    149:149:void setHandRotation(float) -> setHandRotation
    153:179:void setHandRotation(float,boolean) -> setHandRotation
    204:224:void setHandRotationInternal(float,boolean) -> setHandRotationInternal
    391:395:void setMultiLevel(boolean) -> setMultiLevel
com.google.android.material.timepicker.ClockHandView$$ExternalSyntheticLambda0 -> com.google.android.material.timepicker.ClockHandView$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.timepicker.ClockHandView com.google.android.material.timepicker.ClockHandView$$InternalSyntheticLambda$1$d093ea0b239bae6cbf76d576282e0c438274ef62aab2c670570a8783bbe9a178$0.f$0 -> f$0
    0:0:void com.google.android.material.timepicker.ClockHandView$$InternalSyntheticLambda$1$d093ea0b239bae6cbf76d576282e0c438274ef62aab2c670570a8783bbe9a178$0.<init>(com.google.android.material.timepicker.ClockHandView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.timepicker.ClockHandView$$InternalSyntheticLambda$1$d093ea0b239bae6cbf76d576282e0c438274ef62aab2c670570a8783bbe9a178$0.onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.ClockHandView$1 -> com.google.android.material.timepicker.ClockHandView$1:
# {"id":"sourceFile","fileName":"ClockHandView.java"}
    172:172:void <init>(com.google.android.material.timepicker.ClockHandView) -> <init>
    175:175:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.google.android.material.timepicker.ClockHandView$OnRotateListener -> com.google.android.material.timepicker.ClockHandView$OnRotateListener:
# {"id":"sourceFile","fileName":"ClockHandView.java"}
com.google.android.material.timepicker.MaxInputValidator -> com.google.android.material.timepicker.MaxInputValidator:
# {"id":"sourceFile","fileName":"MaxInputValidator.java"}
    26:27:void <init>(int) -> <init>
    42:46:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.google.android.material.timepicker.RadialViewGroup -> com.google.android.material.timepicker.RadialViewGroup:
# {"id":"sourceFile","fileName":"RadialViewGroup.java"}
    77:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    166:168:void addConstraints(java.util.List,androidx.constraintlayout.widget.ConstraintSet,int) -> addConstraints
    107:111:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    93:96:android.graphics.drawable.Drawable createBackground() -> createBackground
    184:184:int getLeveledRadius(int) -> getLeveledRadius
    179:179:int getRadius() -> getRadius
    132:133:void onFinishInflate() -> onFinishInflate
    116:118:void onViewRemoved(android.view.View) -> onViewRemoved
    102:102:void setBackgroundColor(int) -> setBackgroundColor
    173:174:void setRadius(int) -> setRadius
    188:188:boolean shouldSkipView(android.view.View) -> shouldSkipView
    137:160:void updateLayoutParams() -> updateLayoutParams
    123:126:void updateLayoutParamsAsync() -> updateLayoutParamsAsync
com.google.android.material.timepicker.RadialViewGroup$$ExternalSyntheticLambda0 -> com.google.android.material.timepicker.RadialViewGroup$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.timepicker.RadialViewGroup com.google.android.material.timepicker.RadialViewGroup$$InternalSyntheticLambda$1$7bbc437f301ed8da93e8173b46d2379836a9dc5506bd0cafbf404eb130a29a06$0.f$0 -> f$0
    0:0:void com.google.android.material.timepicker.RadialViewGroup$$InternalSyntheticLambda$1$7bbc437f301ed8da93e8173b46d2379836a9dc5506bd0cafbf404eb130a29a06$0.<init>(com.google.android.material.timepicker.RadialViewGroup) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.timepicker.RadialViewGroup$$InternalSyntheticLambda$1$7bbc437f301ed8da93e8173b46d2379836a9dc5506bd0cafbf404eb130a29a06$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.TimeModel -> com.google.android.material.timepicker.TimeModel:
# {"id":"sourceFile","fileName":"TimeModel.java"}
    167:167:void <clinit>() -> <clinit>
    62:69:void <init>(int,int,int,int) -> <init>
    73:73:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    142:147:boolean equals(java.lang.Object) -> equals
    192:192:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence) -> formatText
    198:199:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence,java.lang.String) -> formatText
    0:0:int getPeriod(int) -> getPeriod
    132:133:int hashCode() -> hashCode
    160:163:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.timepicker.TimeModel$1 -> com.google.android.material.timepicker.TimeModel$1:
# {"id":"sourceFile","fileName":"TimeModel.java"}
    167:167:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:com.google.android.material.timepicker.TimeModel createFromParcel(android.os.Parcel) -> createFromParcel
    167:167:java.lang.Object[] newArray(int) -> newArray
    175:175:com.google.android.material.timepicker.TimeModel[] newArray(int) -> newArray
com.google.android.material.timepicker.TimePickerView -> com.google.android.material.timepicker.TimePickerView:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
    0:0:void $r8$lambda$qcr5SAw_DiQbOm3iFiOG_eXPQ9M(com.google.android.material.timepicker.TimePickerView,com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> $r8$lambda$qcr5SAw_DiQbOm3iFiOG_eXPQ9M
      # {"id":"com.android.tools.r8.synthesized"}
    98:98:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:124:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:com.google.android.material.timepicker.TimePickerView$OnSelectionChange access$000(com.google.android.material.timepicker.TimePickerView) -> access$000
    56:56:com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener access$100(com.google.android.material.timepicker.TimePickerView) -> access$100
    0:0:void lambda$new$0(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> lambda$new$0
    257:259:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    169:176:void setUpDisplay() -> setUpDisplay
    129:157:void setupDoubleTap() -> setupDoubleTap
com.google.android.material.timepicker.TimePickerView$$ExternalSyntheticLambda0 -> com.google.android.material.timepicker.TimePickerView$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.android.material.timepicker.TimePickerView com.google.android.material.timepicker.TimePickerView$$InternalSyntheticLambda$1$5feadb3ca702c7e36ca9a0f418cbec5bee822000d4298df1eb25a795110daf22$0.f$0 -> f$0
    0:0:void com.google.android.material.timepicker.TimePickerView$$InternalSyntheticLambda$1$5feadb3ca702c7e36ca9a0f418cbec5bee822000d4298df1eb25a795110daf22$0.<init>(com.google.android.material.timepicker.TimePickerView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.google.android.material.timepicker.TimePickerView$$InternalSyntheticLambda$1$5feadb3ca702c7e36ca9a0f418cbec5bee822000d4298df1eb25a795110daf22$0.onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> onButtonChecked
      # {"id":"com.android.tools.r8.synthesized"}
com.google.android.material.timepicker.TimePickerView$1 -> com.google.android.material.timepicker.TimePickerView$1:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
    80:80:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    83:83:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.TimePickerView$2 -> com.google.android.material.timepicker.TimePickerView$2:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
    132:132:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    135:135:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.google.android.material.timepicker.TimePickerView$3 -> com.google.android.material.timepicker.TimePickerView$3:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
    145:145:void <init>(com.google.android.material.timepicker.TimePickerView,android.view.GestureDetector) -> <init>
    148:149:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener -> com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
com.google.android.material.timepicker.TimePickerView$OnSelectionChange -> com.google.android.material.timepicker.TimePickerView$OnSelectionChange:
# {"id":"sourceFile","fileName":"TimePickerView.java"}
com.google.android.material.tooltip.TooltipDrawable -> com.google.android.material.tooltip.TooltipDrawable:
# {"id":"sourceFile","fileName":"TooltipDrawable.java"}
    69:70:void <clinit>() -> <clinit>
    74:146:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    67:67:void access$000(com.google.android.material.tooltip.TooltipDrawable,android.view.View) -> access$000
    470:473:float calculatePointerOffset() -> calculatePointerOffset
    530:531:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    514:514:float calculateTextOriginAndAlignment(android.graphics.Rect) -> calculateTextOriginAndAlignment
    120:121:com.google.android.material.tooltip.TooltipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    479:484:com.google.android.material.shape.EdgeTreatment createMarkerEdge() -> createMarkerEdge
    396:396:void detachView(android.view.View) -> detachView
    411:437:void draw(android.graphics.Canvas) -> draw
    488:502:void drawText(android.graphics.Canvas) -> drawText
    406:406:int getIntrinsicHeight() -> getIntrinsicHeight
    401:401:int getIntrinsicWidth() -> getIntrinsicWidth
    506:509:float getTextWidth() -> getTextWidth
    151:193:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    442:447:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    453:453:boolean onStateChange(int[]) -> onStateChange
    458:458:void onTextSizeChange() -> onTextSizeChange
    382:384:void setRelativeToView(android.view.View) -> setRelativeToView
    365:369:void setRevealFraction(float) -> setRevealFraction
    225:228:void setText(java.lang.CharSequence) -> setText
    259:259:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    463:465:void updateLocationOnScreen(android.view.View) -> updateLocationOnScreen
com.google.android.material.tooltip.TooltipDrawable$1 -> com.google.android.material.tooltip.TooltipDrawable$1:
# {"id":"sourceFile","fileName":"TooltipDrawable.java"}
    82:82:void <init>(com.google.android.material.tooltip.TooltipDrawable) -> <init>
    94:94:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
# {"id":"sourceFile","fileName":"ExpandableBehavior.java"}
    65:67:void <init>() -> <init>
    65:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:43:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    152:155:boolean didStateChange(boolean) -> didStateChange
    139:143:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    126:130:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    98:105:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
# {"id":"sourceFile","fileName":"ExpandableBehavior.java"}
    106:106:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    109:112:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
# {"id":"sourceFile","fileName":"ExpandableTransformationBehavior.java"}
    46:46:void <init>() -> <init>
    49:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    75:94:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
# {"id":"sourceFile","fileName":"ExpandableTransformationBehavior.java"}
    83:83:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    86:86:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
# {"id":"sourceFile","fileName":"FabTransformationBehavior.java"}
    79:89:void <init>() -> <init>
    79:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    710:722:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    669:685:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    626:627:void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF) -> calculateDependencyWindowBounds
    544:556:android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) -> calculateMotionTiming
    632:641:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterX
    646:655:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterY
    561:581:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    587:607:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    690:703:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    613:622:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    502:531:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    462:491:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    230:255:void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List) -> createDependencyTranslationAnimation
    207:221:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    377:451:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    315:352:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    778:782:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    755:759:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    267:304:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    735:737:int getBackgroundTint(android.view.View) -> getBackgroundTint
    99:107:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    115:118:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    129:191:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    727:728:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
# {"id":"sourceFile","fileName":"FabTransformationBehavior.java"}
    169:169:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    182:186:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    172:176:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$2:
# {"id":"sourceFile","fileName":"FabTransformationBehavior.java"}
    342:342:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    345:345:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$3:
# {"id":"sourceFile","fileName":"FabTransformationBehavior.java"}
    353:353:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    362:362:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    357:357:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$4:
# {"id":"sourceFile","fileName":"FabTransformationBehavior.java"}
    405:405:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    410:412:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
# {"id":"sourceFile","fileName":"FabTransformationBehavior.java"}
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
# {"id":"sourceFile","fileName":"FabTransformationScrimBehavior.java"}
    52:55:void <init>() -> <init>
    52:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    112:125:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    63:63:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    80:87:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    70:70:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
# {"id":"sourceFile","fileName":"FabTransformationScrimBehavior.java"}
    88:88:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    98:99:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    91:92:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
# {"id":"sourceFile","fileName":"FabTransformationSheetBehavior.java"}
    53:53:void <init>() -> <init>
    56:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:71:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    79:80:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    84:125:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
com.google.android.material.transformation.TransformationChildCard -> com.google.android.material.transformation.TransformationChildCard:
# {"id":"sourceFile","fileName":"TransformationChildCard.java"}
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.transformation.TransformationChildLayout -> com.google.android.material.transformation.TransformationChildLayout:
# {"id":"sourceFile","fileName":"TransformationChildLayout.java"}
    42:42:void <init>(android.content.Context) -> <init>
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.errorprone.annotations.Modifier -> com.google.errorprone.annotations.Modifier:
# {"id":"sourceFile","fileName":"Modifier.java"}
    29:41:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int) -> <init>
    29:29:com.google.errorprone.annotations.Modifier valueOf(java.lang.String) -> valueOf
    29:29:com.google.errorprone.annotations.Modifier[] values() -> values
com.tencent.bugly.BuglyStrategy -> com.tencent.bugly.BuglyStrategy:
# {"id":"sourceFile","fileName":"BUGLY"}
    13:39:void <init>() -> <init>
    134:134:java.lang.String getAppChannel() -> getAppChannel
    154:154:java.lang.String getAppPackageName() -> getAppPackageName
    170:170:long getAppReportDelay() -> getAppReportDelay
    94:94:java.lang.String getAppVersion() -> getAppVersion
    372:372:int getCallBackType() -> getCallBackType
    389:389:boolean getCloseErrorCallback() -> getCloseErrorCallback
    341:341:com.tencent.bugly.BuglyStrategy$a getCrashHandleCallback() -> getCrashHandleCallback
    210:210:java.lang.String getDeviceID() -> getDeviceID
    230:230:java.lang.String getDeviceModel() -> getDeviceModel
    190:190:java.lang.String getLibBuglySOFilePath() -> getLibBuglySOFilePath
    125:125:java.lang.Class getUserInfoActivity() -> getUserInfoActivity
    73:73:boolean isBuglyLogUpload() -> isBuglyLogUpload
    324:324:boolean isEnableANRCrashMonitor() -> isEnableANRCrashMonitor
    290:290:boolean isEnableCatchAnrTrace() -> isEnableCatchAnrTrace
    250:250:boolean isEnableNativeCrashMonitor() -> isEnableNativeCrashMonitor
    315:315:boolean isEnableRecordAnrMainStack() -> isEnableRecordAnrMainStack
    281:281:boolean isEnableUserInfo() -> isEnableUserInfo
    398:398:boolean isMerged() -> isMerged
    81:81:boolean isReplaceOldChannel() -> isReplaceOldChannel
    69:69:boolean isUploadProcess() -> isUploadProcess
    425:425:boolean isUploadSpotCrash() -> isUploadSpotCrash
    77:77:boolean recordUserInfoOnceADay() -> recordUserInfoOnceADay
    144:145:com.tencent.bugly.BuglyStrategy setAppChannel(java.lang.String) -> setAppChannel
    164:165:com.tencent.bugly.BuglyStrategy setAppPackageName(java.lang.String) -> setAppPackageName
    180:181:com.tencent.bugly.BuglyStrategy setAppReportDelay(long) -> setAppReportDelay
    104:105:com.tencent.bugly.BuglyStrategy setAppVersion(java.lang.String) -> setAppVersion
    48:49:com.tencent.bugly.BuglyStrategy setBuglyLogUpload(boolean) -> setBuglyLogUpload
    364:365:void setCallBackType(int) -> setCallBackType
    381:382:void setCloseErrorCallback(boolean) -> setCloseErrorCallback
    351:352:com.tencent.bugly.BuglyStrategy setCrashHandleCallback(com.tencent.bugly.BuglyStrategy$a) -> setCrashHandleCallback
    220:221:com.tencent.bugly.BuglyStrategy setDeviceID(java.lang.String) -> setDeviceID
    240:241:com.tencent.bugly.BuglyStrategy setDeviceModel(java.lang.String) -> setDeviceModel
    331:332:com.tencent.bugly.BuglyStrategy setEnableANRCrashMonitor(boolean) -> setEnableANRCrashMonitor
    297:297:void setEnableCatchAnrTrace(boolean) -> setEnableCatchAnrTrace
    260:261:com.tencent.bugly.BuglyStrategy setEnableNativeCrashMonitor(boolean) -> setEnableNativeCrashMonitor
    306:306:void setEnableRecordAnrMainStack(boolean) -> setEnableRecordAnrMainStack
    271:272:com.tencent.bugly.BuglyStrategy setEnableUserInfo(boolean) -> setEnableUserInfo
    200:201:com.tencent.bugly.BuglyStrategy setLibBuglySOFilePath(java.lang.String) -> setLibBuglySOFilePath
    409:409:void setMerged(boolean) -> setMerged
    59:60:com.tencent.bugly.BuglyStrategy setRecordUserInfoOnceADay(boolean) -> setRecordUserInfoOnceADay
    85:85:void setReplaceOldChannel(boolean) -> setReplaceOldChannel
    64:65:com.tencent.bugly.BuglyStrategy setUploadProcess(boolean) -> setUploadProcess
    418:419:void setUploadSpotCrash(boolean) -> setUploadSpotCrash
    115:116:com.tencent.bugly.BuglyStrategy setUserInfoActivity(java.lang.Class) -> setUserInfoActivity
com.tencent.bugly.BuglyStrategy$a -> com.tencent.bugly.BuglyStrategy$a:
# {"id":"sourceFile","fileName":"BUGLY"}
    457:457:java.util.Map onCrashHandleStart(int,java.lang.String,java.lang.String,java.lang.String) -> onCrashHandleStart
    471:471:byte[] onCrashHandleStart2GetExtraDatas(int,java.lang.String,java.lang.String,java.lang.String) -> onCrashHandleStart2GetExtraDatas
com.tencent.bugly.CrashModule -> com.tencent.bugly.CrashModule:
# {"id":"sourceFile","fileName":"BUGLY"}
    30:30:void <clinit>() -> <clinit>
    22:28:void <init>() -> <init>
    111:129:void a(android.content.Context,com.tencent.bugly.BuglyStrategy) -> a
    33:33:com.tencent.bugly.CrashModule getInstance() -> getInstance
    146:146:java.lang.String[] getTables() -> getTables
    38:38:boolean hasInitialized() -> hasInitialized
    48:6424:void init(android.content.Context,boolean,com.tencent.bugly.BuglyStrategy) -> init
    136:7173:void onServerStrategyChanged(com.tencent.bugly.crashreport.common.strategy.StrategyBean) -> onServerStrategyChanged
com.tencent.bugly.crashreport.BuglyHintException -> com.tencent.bugly.crashreport.BuglyHintException:
# {"id":"sourceFile","fileName":"BUGLY"}
    18:18:void <init>(java.lang.String) -> <init>
com.tencent.bugly.crashreport.BuglyLog -> com.tencent.bugly.crashreport.BuglyLog:
# {"id":"sourceFile","fileName":"BUGLY"}
    38:41:void d(java.lang.String,java.lang.String) -> d
    83:86:void e(java.lang.String,java.lang.String) -> e
    98:101:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    53:56:void i(java.lang.String,java.lang.String) -> i
    110:110:void setCache(int) -> setCache
    23:26:void v(java.lang.String,java.lang.String) -> v
    68:71:void w(java.lang.String,java.lang.String) -> w
com.tencent.bugly.crashreport.CrashReport -> com.tencent.bugly.crashreport.CrashReport:
# {"id":"sourceFile","fileName":"BUGLY"}
    349:373:void closeBugly() -> closeBugly
    333:342:void closeCrashReport() -> closeCrashReport
    300:310:void closeNativeReport() -> closeNativeReport
    52:52:void enableBugly(boolean) -> enableBugly
    1059:1059:void enableObtainId(android.content.Context,boolean) -> enableObtainId
    544:553:java.util.Set getAllUserDataKeys(android.content.Context) -> getAllUserDataKeys
    736:746:java.lang.String getAppChannel() -> getAppChannel
    581:591:java.lang.String getAppID() -> getAppID
    717:727:java.lang.String getAppVer() -> getAppVer
    127:1305:java.lang.String getBuglyVersion(android.content.Context) -> getBuglyVersion
    116:116:android.content.Context getContext() -> getContext
    708:708:java.lang.String getDeviceID(android.content.Context) -> getDeviceID
    6052:6052:java.net.Proxy getHttpProxy() -> getHttpProxy
    796:805:java.util.Map getSdkExtraData() -> getSdkExtraData
    814:822:java.util.Map getSdkExtraData(android.content.Context) -> getSdkExtraData
    426:439:java.lang.String getUserData(android.content.Context,java.lang.String) -> getUserData
    563:572:int getUserDatasSize(android.content.Context) -> getUserDatasSize
    665:675:java.lang.String getUserId() -> getUserId
    406:415:int getUserSceneTagId(android.content.Context) -> getUserSceneTagId
    65:67:void initCrashReport(android.content.Context) -> initCrashReport
    80:82:void initCrashReport(android.content.Context,com.tencent.bugly.crashreport.CrashReport$UserStrategy) -> initCrashReport
    94:94:void initCrashReport(android.content.Context,java.lang.String,boolean) -> initCrashReport
    110:112:void initCrashReport(android.content.Context,java.lang.String,boolean,com.tencent.bugly.crashreport.CrashReport$UserStrategy) -> initCrashReport
    759:4203:boolean isLastSessionCrash() -> isLastSessionCrash
    243:243:void postCatchedException(java.lang.Throwable) -> postCatchedException
    252:252:void postCatchedException(java.lang.Throwable,java.lang.Thread) -> postCatchedException
    263:2330:void postCatchedException(java.lang.Throwable,java.lang.Thread,boolean) -> postCatchedException
    213:222:void postException(java.lang.Thread,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> postException
    236:236:void postException(int,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> postException
    827:843:void putSdkData(android.content.Context,java.lang.String,java.lang.String) -> putSdkData
    451:510:void putUserData(android.content.Context,java.lang.String,java.lang.String) -> putUserData
    520:534:java.lang.String removeUserData(android.content.Context,java.lang.String) -> removeUserData
    293:2385:void setAllThreadStackEnable(android.content.Context,boolean,boolean) -> setAllThreadStackEnable
    947:963:void setAppChannel(android.content.Context,java.lang.String) -> setAppChannel
    974:990:void setAppPackage(android.content.Context,java.lang.String) -> setAppPackage
    920:936:void setAppVersion(android.content.Context,java.lang.String) -> setAppVersion
    1045:1050:void setBuglyDbName(java.lang.String) -> setBuglyDbName
    1068:5379:void setCollectPrivacyInfo(android.content.Context,boolean) -> setCollectPrivacyInfo
    750:750:void setContext(android.content.Context) -> setContext
    1000:1005:void setCrashFilter(java.lang.String) -> setCrashFilter
    1014:1019:void setCrashRegularFilter(java.lang.String) -> setCrashRegularFilter
    685:686:void setDeviceId(android.content.Context,java.lang.String) -> setDeviceId
    697:698:void setDeviceModel(android.content.Context,java.lang.String) -> setDeviceModel
    896:910:void setDumpFilePath(android.content.Context,java.lang.String) -> setDumpFilePath
    1029:1036:void setHandleNativeCrashInJava(boolean) -> setHandleNativeCrashInJava
    6025:6030:void setHttpProxy(java.lang.String,int) -> setHttpProxy
    6041:6045:void setHttpProxy(java.net.InetAddress,int) -> setHttpProxy
    853:853:void setIsAppForeground(android.content.Context,boolean) -> setIsAppForeground
    860:873:void setIsDevelopmentDevice(android.content.Context,boolean) -> setIsDevelopmentDevice
    1125:1125:boolean setJavascriptMonitor(android.webkit.WebView,boolean) -> setJavascriptMonitor
    1146:1180:boolean setJavascriptMonitor(android.webkit.WebView,boolean,boolean) -> setJavascriptMonitor
    1198:1198:boolean setJavascriptMonitor(com.tencent.bugly.crashreport.CrashReport$a,boolean) -> setJavascriptMonitor
    1220:1259:boolean setJavascriptMonitor(com.tencent.bugly.crashreport.CrashReport$a,boolean,boolean) -> setJavascriptMonitor
    780:4650:void setSdkExtraData(android.content.Context,java.lang.String,java.lang.String) -> setSdkExtraData
    1086:1092:void setServerUrl(java.lang.String) -> setServerUrl
    882:886:void setSessionIntervalMills(long) -> setSessionIntervalMills
    600:609:void setUserId(java.lang.String) -> setUserId
    618:3375:void setUserId(android.content.Context,java.lang.String) -> setUserId
    3375:3375:void setUserId(android.content.Context,java.lang.String) -> setUserId
    383:2965:void setUserSceneTag(android.content.Context,int) -> setUserSceneTag
    2965:2965:void setUserSceneTag(android.content.Context,int) -> setUserSceneTag
    317:326:void startCrashReport() -> startCrashReport
    188:198:void testANRCrash() -> testANRCrash
    138:1986:void testJavaCrash() -> testJavaCrash
    159:159:void testNativeCrash() -> testNativeCrash
    171:181:void testNativeCrash(boolean,boolean,boolean) -> testNativeCrash
    1099:1107:void uploadUserInfo() -> uploadUserInfo
com.tencent.bugly.crashreport.CrashReport$1 -> com.tencent.bugly.crashreport.CrashReport$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    1151:1151:void <init>(android.webkit.WebView) -> <init>
    1154:1154:java.lang.String a() -> a
    1167:1167:void a(java.lang.String) -> a
    1172:1172:void a(com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface,java.lang.String) -> a
    1159:1161:void b() -> b
    1177:1177:java.lang.CharSequence c() -> c
com.tencent.bugly.crashreport.CrashReport$CrashHandleCallback -> com.tencent.bugly.crashreport.CrashReport$CrashHandleCallback:
# {"id":"sourceFile","fileName":"BUGLY"}
    1362:1362:void <init>() -> <init>
com.tencent.bugly.crashreport.CrashReport$UserStrategy -> com.tencent.bugly.crashreport.CrashReport$UserStrategy:
# {"id":"sourceFile","fileName":"BUGLY"}
    1298:1298:void <init>(android.content.Context) -> <init>
    1318:1318:int getCallBackType() -> getCallBackType
    1335:1335:boolean getCloseErrorCallback() -> getCloseErrorCallback
    1294:1294:com.tencent.bugly.BuglyStrategy$a getCrashHandleCallback() -> getCrashHandleCallback
    1345:1345:com.tencent.bugly.crashreport.CrashReport$CrashHandleCallback getCrashHandleCallback() -> getCrashHandleCallback
    1310:1311:void setCallBackType(int) -> setCallBackType
    1327:1328:void setCloseErrorCallback(boolean) -> setCloseErrorCallback
    1355:1356:void setCrashHandleCallback(com.tencent.bugly.crashreport.CrashReport$CrashHandleCallback) -> setCrashHandleCallback
com.tencent.bugly.crashreport.CrashReport$a -> com.tencent.bugly.crashreport.CrashReport$a:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.crashreport.biz.UserInfoBean -> com.tencent.bugly.crashreport.biz.UserInfoBean:
# {"id":"sourceFile","fileName":"BUGLY"}
    137:137:void <clinit>() -> <clinit>
    53:69:void <init>() -> <init>
    53:101:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    111:134:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.bugly.crashreport.biz.UserInfoBean$1 -> com.tencent.bugly.crashreport.biz.UserInfoBean$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    2139:2139:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1143:1143:java.lang.Object[] newArray(int) -> newArray
com.tencent.bugly.crashreport.common.info.PlugInBean -> com.tencent.bugly.crashreport.common.info.PlugInBean:
# {"id":"sourceFile","fileName":"BUGLY"}
    62:62:void <clinit>() -> <clinit>
    28:31:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    44:47:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    36:36:java.lang.String toString() -> toString
    57:59:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.bugly.crashreport.common.info.PlugInBean$1 -> com.tencent.bugly.crashreport.common.info.PlugInBean$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    2065:2065:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1069:1069:java.lang.Object[] newArray(int) -> newArray
com.tencent.bugly.crashreport.common.strategy.StrategyBean -> com.tencent.bugly.crashreport.common.strategy.StrategyBean:
# {"id":"sourceFile","fileName":"BUGLY"}
    130:130:void <clinit>() -> <clinit>
    28:62:void <init>() -> <init>
    28:98:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    109:127:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.bugly.crashreport.common.strategy.StrategyBean$1 -> com.tencent.bugly.crashreport.common.strategy.StrategyBean$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    2132:2132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1136:1136:java.lang.Object[] newArray(int) -> newArray
com.tencent.bugly.crashreport.crash.CrashDetailBean -> com.tencent.bugly.crashreport.crash.CrashDetailBean:
# {"id":"sourceFile","fileName":"BUGLY"}
    221:221:void <clinit>() -> <clinit>
    29:95:void <init>() -> <init>
    29:156:void <init>(android.os.Parcel) -> <init>
    17:1237:int compareTo(java.lang.Object) -> compareTo
    0:0:int describeContents() -> describeContents
    166:218:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.bugly.crashreport.crash.CrashDetailBean$1 -> com.tencent.bugly.crashreport.crash.CrashDetailBean$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    2223:2223:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1227:1227:java.lang.Object[] newArray(int) -> newArray
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper -> com.tencent.bugly.crashreport.crash.anr.TraceFileHelper:
# {"id":"sourceFile","fileName":"BUGLY"}
    321:324:java.lang.Object[] a(java.io.BufferedReader,java.util.regex.Pattern[]) -> a
    337:347:java.lang.String a(java.io.BufferedReader) -> a
    354:364:java.lang.String b(java.io.BufferedReader) -> b
    144:191:com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a readFirstDumpInfo(java.lang.String,boolean) -> readFirstDumpInfo
    72:128:com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a readTargetDumpInfo(java.lang.String,java.lang.String,boolean) -> readTargetDumpInfo
    206:301:void readTraceFile(java.lang.String,com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b) -> readTraceFile
    251:301:void readTraceFile(java.lang.String,com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b) -> readTraceFile
    298:301:void readTraceFile(java.lang.String,com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b) -> readTraceFile
    291:301:void readTraceFile(java.lang.String,com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b) -> readTraceFile
    298:301:void readTraceFile(java.lang.String,com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b) -> readTraceFile
    301:305:void readTraceFile(java.lang.String,com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b) -> readTraceFile
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$1 -> com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    73:73:void <init>(com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a,java.lang.String,boolean) -> <init>
    83:93:boolean a(java.lang.String,int,java.lang.String,java.lang.String) -> a
    99:107:boolean a(long,long,java.lang.String) -> a
    116:118:boolean a(long) -> a
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$2 -> com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    148:148:void <init>(com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a,boolean) -> <init>
    158:162:boolean a(java.lang.String,int,java.lang.String,java.lang.String) -> a
    168:172:boolean a(long,long,java.lang.String) -> a
    181:181:boolean a(long) -> a
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a -> com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$a:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b -> com.tencent.bugly.crashreport.crash.anr.TraceFileHelper$b:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface -> com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface:
# {"id":"sourceFile","fileName":"BUGLY"}
    25:25:void <clinit>() -> <clinit>
    27:32:void <init>() -> <init>
    77:150:com.tencent.bugly.proguard.bb a(java.lang.String) -> a
    42:1072:com.tencent.bugly.crashreport.crash.h5.H5JavaScriptInterface getInstance(com.tencent.bugly.crashreport.CrashReport$a) -> getInstance
    173:173:void printLog(java.lang.String) -> printLog
    184:2162:void reportJSException(java.lang.String) -> reportJSException
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler -> com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    52:112:void <init>(android.content.Context,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.as,com.tencent.bugly.proguard.ak,boolean,java.lang.String) -> <init>
    34:34:android.content.Context a(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler) -> a
    34:34:boolean a() -> a
    34:34:boolean a(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler,java.lang.String) -> a
    279:342:void a(boolean) -> a
    430:440:boolean a(java.lang.String,boolean) -> a
    759:769:boolean a(int,java.lang.String) -> a
    664:684:boolean appendLogToNative(java.lang.String,java.lang.String,java.lang.String) -> appendLogToNative
    34:34:com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler b(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler) -> b
    34:34:java.lang.String b() -> b
    594:598:void b(boolean) -> b
    34:34:com.tencent.bugly.proguard.as c(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler) -> c
    449:476:void c() -> c
    611:615:void c(boolean) -> c
    391:391:void checkUploadRecordCrash() -> checkUploadRecordCrash
    863:863:void disableCatchAnrTrace() -> disableCatchAnrTrace
    504:504:void dumpAnrNativeStack() -> dumpAnrNativeStack
    857:857:void enableCatchAnrTrace() -> enableCatchAnrTrace
    781:781:boolean filterSigabrtSysLog() -> filterSigabrtSysLog
    143:143:java.lang.String getDumpFilePath() -> getDumpFilePath
    131:135:com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler getInstance(android.content.Context,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.as,com.tencent.bugly.proguard.ac,com.tencent.bugly.proguard.ak,boolean,java.lang.String) -> getInstance
    139:139:com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler getInstance() -> getInstance
    696:712:java.lang.String getLogFromNative() -> getLogFromNative
    521:521:com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler getNativeExceptionHandler() -> getNativeExceptionHandler
    266:268:java.lang.String getRunningCpuAbi() -> getRunningCpuAbi
    875:876:java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    871:871:boolean isEnableCatchAnrTrace() -> isEnableCatchAnrTrace
    168:168:boolean isShouldHandleInJava() -> isShouldHandleInJava
    604:604:boolean isUserOpened() -> isUserOpened
    642:653:void onStrategyChanged(com.tencent.bugly.crashreport.common.strategy.StrategyBean) -> onStrategyChanged
    726:745:boolean putKeyValueToNative(java.lang.String,java.lang.String) -> putKeyValueToNative
    576:576:void removeEmptyNativeRecordFiles() -> removeEmptyNativeRecordFiles
    509:509:void resendSigquit() -> resendSigquit
    147:148:void setDumpFilePath(java.lang.String) -> setDumpFilePath
    801:801:boolean setNativeAppChannel(java.lang.String) -> setNativeAppChannel
    811:811:boolean setNativeAppPackage(java.lang.String) -> setNativeAppPackage
    791:791:boolean setNativeAppVersion(java.lang.String) -> setNativeAppVersion
    832:832:boolean setNativeIsAppForeground(boolean) -> setNativeIsAppForeground
    843:846:boolean setNativeLaunchTime(long) -> setNativeLaunchTime
    821:821:boolean setNativeUserId(java.lang.String) -> setNativeUserId
    156:158:void setShouldHandleInJava(boolean) -> setShouldHandleInJava
    622:634:void setUserOpened(boolean) -> setUserOpened
    348:385:void startNativeMonitor() -> startNativeMonitor
    482:487:void testNativeCrash() -> testNativeCrash
    494:497:void testNativeCrash(boolean,boolean,boolean) -> testNativeCrash
    514:516:void unBlockSigquit(boolean) -> unBlockSigquit
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler$1 -> com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    391:391:void <init>(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler) -> <init>
    395:1567:void run() -> run
com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler$2 -> com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    538:538:void <init>(com.tencent.bugly.crashreport.crash.jni.NativeCrashHandler) -> <init>
    538:1541:int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler -> com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.crashreport.inner.InnerApi -> com.tencent.bugly.crashreport.inner.InnerApi:
# {"id":"sourceFile","fileName":"BUGLY"}
    49:59:void postCocos2dxCrashAsync(int,java.lang.String,java.lang.String,java.lang.String) -> postCocos2dxCrashAsync
    76:81:void postH5CrashAsync(java.lang.Thread,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> postH5CrashAsync
    30:34:void postU3dCrashAsync(java.lang.String,java.lang.String,java.lang.String) -> postU3dCrashAsync
com.tencent.bugly.proguard.a -> com.tencent.bugly.proguard.a:
# {"id":"sourceFile","fileName":"BUGLY"}
    86:1228:java.lang.String a(java.util.ArrayList) -> a
com.tencent.bugly.proguard.aa -> com.tencent.bugly.proguard.aa:
# {"id":"sourceFile","fileName":"BUGLY"}
    27:79:void <clinit>() -> <clinit>
    37:1242:void <init>(android.content.Context) -> <init>
    1032:1036:java.util.Map A() -> A
    1046:1046:int B() -> B
    1057:1057:boolean C() -> C
    1069:1069:boolean D() -> D
    163:174:void E() -> E
    438:442:java.lang.String F() -> F
    451:453:java.lang.String G() -> G
    253:254:boolean a() -> a
    265:273:void a(int,boolean) -> a
    284:287:com.tencent.bugly.proguard.aa a(android.content.Context) -> a
    465:471:void a(java.lang.String) -> a
    854:860:void a(java.lang.String,java.lang.String) -> a
    892:907:void a(java.lang.String,java.lang.String,boolean) -> a
    296:296:com.tencent.bugly.proguard.aa b() -> b
    507:510:void b(java.lang.String) -> b
    928:935:void b(java.lang.String,java.lang.String) -> b
    312:314:void c() -> c
    529:530:void c(java.lang.String) -> c
    323:328:java.lang.String d() -> d
    547:548:void d(java.lang.String) -> d
    337:340:java.lang.String e() -> e
    622:623:void e(java.lang.String) -> e
    359:361:java.lang.String f() -> f
    813:819:java.lang.String f(java.lang.String) -> f
    410:427:java.lang.String g() -> g
    838:844:java.lang.String g(java.lang.String) -> g
    480:498:java.lang.String h() -> h
    538:538:java.lang.String i() -> i
    556:559:long j() -> j
    568:571:long k() -> k
    580:583:long l() -> l
    605:611:java.lang.String m() -> m
    0:0:java.lang.String n() -> n
    658:687:java.lang.String o() -> o
    698:704:java.util.Map p() -> p
    743:746:java.lang.String q() -> q
    764:767:java.lang.Boolean r() -> r
    785:789:java.lang.String s() -> s
    798:803:java.util.Map t() -> t
    826:828:void u() -> u
    869:871:int v() -> v
    880:882:java.util.Set w() -> w
    916:921:java.util.Map x() -> x
    944:949:java.util.Map y() -> y
    974:976:int z() -> z
com.tencent.bugly.proguard.ab -> com.tencent.bugly.proguard.ab:
# {"id":"sourceFile","fileName":"BUGLY"}
    35:73:void <clinit>() -> <clinit>
    104:107:java.lang.String a() -> a
    205:218:java.lang.String a(android.content.Context) -> a
    120:123:java.lang.String b() -> b
    272:279:long b(android.content.Context) -> b
    136:139:int c() -> c
    507:527:java.lang.String c(android.content.Context) -> c
    186:191:java.lang.String d() -> d
    231:238:long e() -> e
    251:258:long f() -> f
    293:310:long g() -> g
    310:313:long g() -> g
    323:323:long h() -> h
    334:365:long i() -> i
    346:365:long i() -> i
    353:365:long i() -> i
    365:370:long i() -> i
    382:434:long j() -> j
    399:434:long j() -> j
    408:434:long j() -> j
    415:434:long j() -> j
    422:434:long j() -> j
    434:439:long j() -> j
    450:461:long k() -> k
    474:485:long l() -> l
    0:0:java.lang.String m() -> m
    537:539:java.lang.String n() -> n
    553:554:boolean o() -> o
    567:568:boolean p() -> p
    581:587:boolean q() -> q
    597:602:boolean r() -> r
    152:157:boolean s() -> s
com.tencent.bugly.proguard.ab$1 -> com.tencent.bugly.proguard.ab$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    36:49:void <init>() -> <init>
com.tencent.bugly.proguard.ab$2 -> com.tencent.bugly.proguard.ab$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    53:69:void <init>() -> <init>
com.tencent.bugly.proguard.ab$a -> com.tencent.bugly.proguard.ab$a:
# {"id":"sourceFile","fileName":"BUGLY"}
    609:609:void <init>(byte) -> <init>
com.tencent.bugly.proguard.ab$b -> com.tencent.bugly.proguard.ab$b:
# {"id":"sourceFile","fileName":"BUGLY"}
    737:737:void <init>() -> <init>
    737:737:void <init>(byte) -> <init>
    742:744:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$c -> com.tencent.bugly.proguard.ab$c:
# {"id":"sourceFile","fileName":"BUGLY"}
    763:763:void <init>() -> <init>
    763:763:void <init>(byte) -> <init>
    767:768:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$d -> com.tencent.bugly.proguard.ab$d:
# {"id":"sourceFile","fileName":"BUGLY"}
    750:750:void <init>() -> <init>
    750:750:void <init>(byte) -> <init>
    755:757:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$e -> com.tencent.bugly.proguard.ab$e:
# {"id":"sourceFile","fileName":"BUGLY"}
    712:712:void <init>() -> <init>
    712:712:void <init>(byte) -> <init>
    716:718:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$f -> com.tencent.bugly.proguard.ab$f:
# {"id":"sourceFile","fileName":"BUGLY"}
    632:632:void <init>() -> <init>
    632:632:void <init>(byte) -> <init>
    637:639:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$g -> com.tencent.bugly.proguard.ab$g:
# {"id":"sourceFile","fileName":"BUGLY"}
    645:645:void <init>() -> <init>
    645:645:void <init>(byte) -> <init>
    651:654:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$h -> com.tencent.bugly.proguard.ab$h:
# {"id":"sourceFile","fileName":"BUGLY"}
    674:674:void <init>() -> <init>
    674:674:void <init>(byte) -> <init>
    680:682:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$i -> com.tencent.bugly.proguard.ab$i:
# {"id":"sourceFile","fileName":"BUGLY"}
    688:688:void <init>() -> <init>
    688:688:void <init>(byte) -> <init>
    692:694:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$j -> com.tencent.bugly.proguard.ab$j:
# {"id":"sourceFile","fileName":"BUGLY"}
    724:724:void <init>() -> <init>
    724:724:void <init>(byte) -> <init>
    729:731:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$k -> com.tencent.bugly.proguard.ab$k:
# {"id":"sourceFile","fileName":"BUGLY"}
    700:700:void <init>() -> <init>
    700:700:void <init>(byte) -> <init>
    704:706:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$l -> com.tencent.bugly.proguard.ab$l:
# {"id":"sourceFile","fileName":"BUGLY"}
    619:619:void <init>() -> <init>
    619:619:void <init>(byte) -> <init>
    624:626:java.lang.String a() -> a
com.tencent.bugly.proguard.ab$m -> com.tencent.bugly.proguard.ab$m:
# {"id":"sourceFile","fileName":"BUGLY"}
    660:660:void <init>() -> <init>
    660:660:void <init>(byte) -> <init>
    665:668:java.lang.String a() -> a
com.tencent.bugly.proguard.ac -> com.tencent.bugly.proguard.ac:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    55:1347:void <init>(android.content.Context,java.util.List) -> <init>
    32:32:android.content.Context a(com.tencent.bugly.proguard.ac) -> a
    32:32:com.tencent.bugly.crashreport.common.strategy.StrategyBean a(com.tencent.bugly.proguard.ac,com.tencent.bugly.crashreport.common.strategy.StrategyBean) -> a
    72:75:com.tencent.bugly.proguard.ac a(android.content.Context,java.util.List) -> a
    125:125:com.tencent.bugly.proguard.ac a() -> a
    158:166:void a(com.tencent.bugly.crashreport.common.strategy.StrategyBean,boolean) -> a
    178:182:void a(java.lang.String) -> a
    192:2319:void a(com.tencent.bugly.proguard.bt) -> a
    32:32:com.tencent.bugly.crashreport.common.strategy.StrategyBean b(com.tencent.bugly.proguard.ac) -> b
    129:129:boolean b() -> b
    136:150:com.tencent.bugly.crashreport.common.strategy.StrategyBean c() -> c
    327:331:com.tencent.bugly.crashreport.common.strategy.StrategyBean d() -> d
    32:32:java.lang.String e() -> e
com.tencent.bugly.proguard.ac$1 -> com.tencent.bugly.proguard.ac$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    85:85:void <init>(com.tencent.bugly.proguard.ac) -> <init>
    90:1270:void run() -> run
com.tencent.bugly.proguard.ad -> com.tencent.bugly.proguard.ad:
# {"id":"sourceFile","fileName":"BUGLY"}
    33:45:android.util.Pair a(java.util.List) -> a
    57:98:android.util.Pair a(java.lang.String,java.lang.String,java.util.Map) -> a
    95:101:android.util.Pair a(java.lang.String,java.lang.String,java.util.Map) -> a
    105:109:void a(java.net.HttpURLConnection,java.util.Map) -> a
    133:135:void a(java.io.Closeable) -> a
com.tencent.bugly.proguard.ae -> com.tencent.bugly.proguard.ae:
# {"id":"sourceFile","fileName":"BUGLY"}
    50:127:com.tencent.bugly.proguard.bu a(com.tencent.bugly.crashreport.biz.UserInfoBean) -> a
    203:215:com.tencent.bugly.proguard.m a(byte[],java.lang.Class) -> a
    228:313:com.tencent.bugly.proguard.bq a(android.content.Context,int,byte[]) -> a
    324:334:byte[] a(java.lang.Object) -> a
    345:360:com.tencent.bugly.proguard.br a(byte[]) -> a
    373:1037:byte[] a(com.tencent.bugly.proguard.m) -> a
com.tencent.bugly.proguard.af -> com.tencent.bugly.proguard.af:
# {"id":"sourceFile","fileName":"BUGLY"}
    56:59:void <init>(android.content.Context) -> <init>
    86:163:byte[] a(java.lang.String,byte[],com.tencent.bugly.proguard.aj,java.util.Map) -> a
    147:163:byte[] a(java.lang.String,byte[],com.tencent.bugly.proguard.aj,java.util.Map) -> a
    155:163:byte[] a(java.lang.String,byte[],com.tencent.bugly.proguard.aj,java.util.Map) -> a
    163:170:byte[] a(java.lang.String,byte[],com.tencent.bugly.proguard.aj,java.util.Map) -> a
    183:193:java.util.Map a(java.net.HttpURLConnection) -> a
    246:283:java.net.HttpURLConnection a(java.lang.String,byte[],java.lang.String,java.util.Map) -> a
    297:2052:java.net.HttpURLConnection a(java.lang.String,java.lang.String) -> a
    211:230:byte[] b(java.net.HttpURLConnection) -> b
    227:230:byte[] b(java.net.HttpURLConnection) -> b
    230:232:byte[] b(java.net.HttpURLConnection) -> b
com.tencent.bugly.proguard.ag -> com.tencent.bugly.proguard.ag:
# {"id":"sourceFile","fileName":"BUGLY"}
    27:27:void <init>(byte) -> <init>
    42:47:void <init>() -> <init>
    103:116:void a(java.util.List) -> a
    233:14364:java.lang.String a(java.lang.String,java.lang.Iterable) -> a
    247:14390:java.util.List a() -> a
    89:1312:void a(com.tencent.bugly.proguard.ag$c) -> a
    160:168:void b(java.util.List) -> b
    120:9390:com.tencent.bugly.proguard.ag$b b(com.tencent.bugly.proguard.ag$c) -> b
    173:10386:void c(java.util.List) -> c
    218:228:void d(java.util.List) -> d
    193:13074:void e(java.util.List) -> e
com.tencent.bugly.proguard.ag$1 -> com.tencent.bugly.proguard.ag$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    161:161:void <init>(com.tencent.bugly.proguard.ag,java.util.List) -> <init>
    164:1027:void run() -> run
com.tencent.bugly.proguard.ag$a -> com.tencent.bugly.proguard.ag$a:
# {"id":"sourceFile","fileName":"BUGLY"}
    404:404:void <clinit>() -> <clinit>
    403:403:com.tencent.bugly.proguard.ag a() -> a
com.tencent.bugly.proguard.ag$b -> com.tencent.bugly.proguard.ag$b:
# {"id":"sourceFile","fileName":"BUGLY"}
    395:395:java.lang.String toString() -> toString
com.tencent.bugly.proguard.ag$c -> com.tencent.bugly.proguard.ag$c:
# {"id":"sourceFile","fileName":"BUGLY"}
    290:297:void <init>(java.lang.String,java.lang.String,long,boolean,long,java.lang.String,java.lang.String) -> <init>
    300:300:void <init>() -> <init>
com.tencent.bugly.proguard.ah -> com.tencent.bugly.proguard.ah:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.proguard.ai -> com.tencent.bugly.proguard.ai:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    64:96:void <init>(android.content.Context) -> <init>
    30:30:java.lang.Object a(com.tencent.bugly.proguard.ai) -> a
    103:106:com.tencent.bugly.proguard.ai a(android.content.Context) -> a
    110:110:com.tencent.bugly.proguard.ai a() -> a
    152:1134:void a(int,com.tencent.bugly.proguard.bq,java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,long,boolean) -> a
    173:179:void a(int,int,byte[],java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,boolean) -> a
    214:214:void a(int,com.tencent.bugly.proguard.bq,java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,boolean) -> a
    225:250:long a(boolean) -> a
    291:305:void a(long,boolean) -> a
    312:326:void a(int,long) -> a
    334:341:long a(int) -> a
    452:461:void a(java.util.concurrent.LinkedBlockingQueue,java.util.concurrent.LinkedBlockingQueue,int) -> a
    472:514:void a(int,java.util.concurrent.LinkedBlockingQueue) -> a
    558:575:boolean a(java.lang.Runnable,boolean) -> a
    588:610:void a(java.lang.Runnable,long) -> a
    627:634:void a(java.lang.Runnable,boolean,boolean,long) -> a
    30:30:int b(com.tencent.bugly.proguard.ai) -> b
    351:360:boolean b(int) -> b
    401:1534:void b() -> b
com.tencent.bugly.proguard.ai$1 -> com.tencent.bugly.proguard.ai$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    496:496:void <init>(com.tencent.bugly.proguard.ai,java.lang.Runnable) -> <init>
    499:503:void run() -> run
com.tencent.bugly.proguard.ai$2 -> com.tencent.bugly.proguard.ai$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    534:534:void <init>(com.tencent.bugly.proguard.ai,int,java.util.concurrent.LinkedBlockingQueue) -> <init>
    537:542:void run() -> run
com.tencent.bugly.proguard.aj -> com.tencent.bugly.proguard.aj:
# {"id":"sourceFile","fileName":"BUGLY"}
    84:84:void <init>(android.content.Context,int,int,byte[],java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,boolean) -> <init>
    43:1072:void <init>(android.content.Context,int,int,byte[],java.lang.String,java.lang.String,com.tencent.bugly.proguard.ah,int,int,boolean) -> <init>
    148:148:void a(java.lang.String) -> a
    157:185:void a(boolean,int,java.lang.String) -> a
    195:228:boolean a(com.tencent.bugly.proguard.br,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.ac) -> a
    305:324:android.util.Pair a(byte[],java.util.Map) -> a
    432:433:void a(long) -> a
    336:4471:android.util.Pair a(java.util.Map) -> a
    437:437:void b(long) -> b
    441:447:java.lang.String b(java.lang.String) -> b
    237:4403:void run() -> run
com.tencent.bugly.proguard.ak -> com.tencent.bugly.proguard.ak:
# {"id":"sourceFile","fileName":"BUGLY"}
    18:18:void <clinit>() -> <clinit>
    20:40:void <init>() -> <init>
    54:57:com.tencent.bugly.proguard.ak a() -> a
    95:115:boolean a(java.lang.Runnable,long) -> a
    123:141:boolean a(java.lang.Runnable) -> a
    177:189:void b() -> b
    197:197:boolean c() -> c
    16:16:java.util.concurrent.atomic.AtomicInteger d() -> d
com.tencent.bugly.proguard.ak$1 -> com.tencent.bugly.proguard.ak$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    23:23:void <init>(com.tencent.bugly.proguard.ak) -> <init>
    26:27:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.tencent.bugly.proguard.al -> com.tencent.bugly.proguard.al:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    38:1034:boolean a(int,java.lang.String,java.lang.Object[]) -> a
    69:73:boolean a(int,java.lang.Throwable) -> a
    77:77:boolean a(java.lang.String,java.lang.Object[]) -> a
    81:82:boolean a(java.lang.Class,java.lang.String,java.lang.Object[]) -> a
    108:108:boolean a(java.lang.Throwable) -> a
    86:86:boolean b(java.lang.String,java.lang.Object[]) -> b
    121:121:boolean b(java.lang.Throwable) -> b
    90:90:boolean c(java.lang.String,java.lang.Object[]) -> c
    99:99:boolean d(java.lang.String,java.lang.Object[]) -> d
    112:112:boolean e(java.lang.String,java.lang.Object[]) -> e
com.tencent.bugly.proguard.am -> com.tencent.bugly.proguard.am:
# {"id":"sourceFile","fileName":"BUGLY"}
    35:1054:boolean a(java.io.File,java.lang.String,long,boolean) -> a
    74:83:boolean a(java.io.Writer,char[],int,long,long) -> a
    98:111:void a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    184:192:java.util.List a(java.io.File[],java.lang.String,java.lang.String,long) -> a
    208:219:long a(java.lang.String,java.lang.String,java.lang.String) -> a
    232:247:boolean a(java.lang.String,java.lang.String,int) -> a
    128:164:java.util.List b(java.lang.String,java.lang.String,java.lang.String,long) -> b
com.tencent.bugly.proguard.am$1 -> com.tencent.bugly.proguard.am$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    140:140:void <init>(java.lang.String,java.lang.String) -> <init>
    146:146:boolean accept(java.io.File,java.lang.String) -> accept
com.tencent.bugly.proguard.an -> com.tencent.bugly.proguard.an:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.proguard.ao -> com.tencent.bugly.proguard.ao:
# {"id":"sourceFile","fileName":"BUGLY"}
    47:53:void <clinit>() -> <clinit>
    105:124:void a(android.content.Context) -> a
    132:139:void a(int) -> a
    163:166:void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    177:203:void a(java.lang.String,java.lang.String,java.lang.String) -> a
    268:282:java.lang.String a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    304:5295:byte[] a() -> a
    21:21:boolean b(java.lang.String,java.lang.String,java.lang.String) -> b
    86:92:java.lang.String b() -> b
    21:21:void c(java.lang.String,java.lang.String,java.lang.String) -> c
    318:8348:byte[] c() -> c
    67:73:boolean d(java.lang.String,java.lang.String,java.lang.String) -> d
    206:211:void e(java.lang.String,java.lang.String,java.lang.String) -> e
    214:228:void f(java.lang.String,java.lang.String,java.lang.String) -> f
    232:4348:void g(java.lang.String,java.lang.String,java.lang.String) -> g
com.tencent.bugly.proguard.ao$1 -> com.tencent.bugly.proguard.ao$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    182:182:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    185:185:void run() -> run
com.tencent.bugly.proguard.ao$2 -> com.tencent.bugly.proguard.ao$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    192:192:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    195:195:void run() -> run
com.tencent.bugly.proguard.ao$a -> com.tencent.bugly.proguard.ao$a:
# {"id":"sourceFile","fileName":"BUGLY"}
    353:365:void <init>(java.lang.String) -> <init>
    375:390:boolean a() -> a
    405:424:boolean a(java.lang.String) -> a
    424:429:boolean a(java.lang.String) -> a
com.tencent.bugly.proguard.ap -> com.tencent.bugly.proguard.ap:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    72:77:java.lang.String a(java.lang.Throwable) -> a
    90:90:java.lang.String a() -> a
    100:103:java.lang.String a(long) -> a
    118:121:java.lang.String a(java.util.Date) -> a
    194:248:byte[] a(java.lang.String,java.lang.String) -> a
    243:248:byte[] a(java.lang.String,java.lang.String) -> a
    248:249:byte[] a(java.lang.String,java.lang.String) -> a
    265:282:byte[] a(byte[]) -> a
    491:535:boolean a(java.io.File,java.io.File) -> a
    522:535:boolean a(java.io.File,java.io.File) -> a
    535:536:boolean a(java.io.File,java.io.File) -> a
    629:648:java.lang.String a(java.lang.String) -> a
    731:731:android.content.Context a(android.content.Context) -> a
    788:790:void a(java.lang.Class,java.lang.String,java.lang.Object) -> a
    809:812:java.lang.Object a(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    825:846:void a(android.os.Parcel,java.util.Map) -> a
    856:880:java.util.Map a(android.os.Parcel) -> a
    947:950:byte[] a(android.os.Parcelable) -> a
    1043:1081:java.lang.String a(int,java.lang.String) -> a
    1069:1081:java.lang.String a(int,java.lang.String) -> a
    1081:1084:java.lang.String a(int,java.lang.String) -> a
    1097:1102:java.util.Map a(boolean,int) -> a
    1114:1147:java.util.Map a(int) -> a
    1162:1167:java.lang.String a(java.lang.Thread) -> a
    1176:1204:boolean a(android.content.Context,java.lang.String) -> a
    1248:1279:java.lang.String a(java.io.File,int,boolean) -> a
    1276:1279:java.lang.String a(java.io.File,int,boolean) -> a
    1279:1282:java.lang.String a(java.io.File,int,boolean) -> a
    1292:1302:java.io.BufferedReader a(java.io.File) -> a
    1340:1346:java.lang.Thread a(java.lang.Runnable,java.lang.String) -> a
    1359:1364:boolean a(java.lang.Runnable) -> a
    1401:1401:android.content.SharedPreferences a(java.lang.String,android.content.Context) -> a
    978:2963:java.lang.Object a(byte[],android.os.Parcelable$Creator) -> a
    300:320:byte[] b(byte[]) -> b
    384:390:long b() -> b
    546:570:boolean b(java.io.File,java.io.File) -> b
    658:660:void b(long) -> b
    671:671:boolean b(java.lang.String) -> b
    747:751:java.lang.String b(java.lang.Throwable) -> b
    893:909:void b(android.os.Parcel,java.util.Map) -> b
    919:934:java.util.Map b(android.os.Parcel) -> b
    1215:1234:boolean b(android.content.Context,java.lang.String) -> b
    1319:1326:java.io.BufferedReader b(java.lang.String,java.lang.String) -> b
    423:2413:java.lang.String c(byte[]) -> c
    687:689:void c(java.lang.String) -> c
    698:700:byte[] c(long) -> c
    1413:1414:void c(java.lang.String,java.lang.String) -> c
    717:719:long d(byte[]) -> d
    1379:1387:boolean d(java.lang.String) -> d
    1426:1427:java.lang.String d(java.lang.String,java.lang.String) -> d
com.tencent.bugly.proguard.aq -> com.tencent.bugly.proguard.aq:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    33:48:void <init>() -> <init>
    27:27:android.content.IntentFilter a(com.tencent.bugly.proguard.aq) -> a
    41:44:com.tencent.bugly.proguard.aq a() -> a
    58:62:void a(java.lang.String) -> a
    70:87:void a(android.content.Context) -> a
    127:178:boolean a(android.content.Context,android.content.Intent) -> a
    27:27:android.content.Context b(com.tencent.bugly.proguard.aq) -> b
    27:27:com.tencent.bugly.proguard.aq b() -> b
    97:105:void b(android.content.Context) -> b
    110:113:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.bugly.proguard.aq$1 -> com.tencent.bugly.proguard.aq$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    72:72:void <init>(com.tencent.bugly.proguard.aq,com.tencent.bugly.proguard.aq) -> <init>
    77:83:void run() -> run
com.tencent.bugly.proguard.ar -> com.tencent.bugly.proguard.ar:
# {"id":"sourceFile","fileName":"BUGLY"}
    13:19:void <init>() -> <init>
    13:1027:int compareTo(java.lang.Object) -> compareTo
com.tencent.bugly.proguard.as -> com.tencent.bugly.proguard.as:
# {"id":"sourceFile","fileName":"BUGLY"}
    67:123:void <clinit>() -> <clinit>
    144:151:void <init>(android.content.Context,com.tencent.bugly.proguard.ai,com.tencent.bugly.proguard.w,com.tencent.bugly.proguard.ac,com.tencent.bugly.BuglyStrategy$a) -> <init>
    160:172:java.util.List a(java.util.List) -> a
    185:2295:com.tencent.bugly.crashreport.crash.CrashDetailBean a(java.util.List,com.tencent.bugly.crashreport.crash.CrashDetailBean) -> a
    227:248:void a(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.List) -> a
    310:6051:boolean a(com.tencent.bugly.crashreport.crash.CrashDetailBean,boolean) -> a
    387:397:boolean a(java.lang.String) -> a
    433:438:boolean a(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.List,java.util.List) -> a
    509:592:java.util.List a() -> a
    624:643:void a(com.tencent.bugly.crashreport.crash.CrashDetailBean) -> a
    680:751:void a(java.util.List,long,boolean,boolean,boolean) -> a
    780:799:void a(boolean,java.util.List) -> a
    886:898:com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.database.Cursor) -> a
    1172:8221:com.tencent.bugly.proguard.bo a(android.content.Context,com.tencent.bugly.crashreport.crash.CrashDetailBean,com.tencent.bugly.proguard.aa) -> a
    1229:1238:com.tencent.bugly.proguard.bp a(android.content.Context,java.util.List,com.tencent.bugly.proguard.aa) -> a
    1254:1297:com.tencent.bugly.proguard.bn a(java.lang.String,android.content.Context,java.lang.String) -> a
    1287:1297:com.tencent.bugly.proguard.bn a(java.lang.String,android.content.Context,java.lang.String) -> a
    1249:1299:com.tencent.bugly.proguard.bn a(java.lang.String,android.content.Context,java.lang.String) -> a
    1404:1440:void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.bugly.crashreport.crash.CrashDetailBean) -> a
    1541:1569:void a(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.Map) -> a
    1647:1657:void a(java.util.ArrayList,com.tencent.bugly.crashreport.crash.CrashDetailBean) -> a
    1670:1674:void a(java.util.ArrayList,java.lang.String) -> a
    1728:1734:void a(java.util.ArrayList,java.lang.String,android.content.Context) -> a
    1746:1752:void a(java.util.ArrayList,byte[]) -> a
    1764:1793:void a(java.util.ArrayList,com.tencent.bugly.crashreport.crash.CrashDetailBean,android.content.Context) -> a
    1829:1839:void a(java.util.ArrayList,java.util.List) -> a
    1862:1919:java.util.Map a(com.tencent.bugly.crashreport.crash.CrashDetailBean,com.tencent.bugly.proguard.aa) -> a
    1932:1948:void a(java.util.Map,com.tencent.bugly.crashreport.crash.CrashDetailBean) -> a
    8758:9051:void a(java.util.List,boolean,long,java.lang.String,java.lang.String) -> a
    274:282:void b(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.List) -> b
    599:7051:void b(java.util.List) -> b
    656:665:void b(com.tencent.bugly.crashreport.crash.CrashDetailBean,boolean) -> b
    911:7074:void b(com.tencent.bugly.crashreport.crash.CrashDetailBean) -> b
    1004:1016:com.tencent.bugly.proguard.ar b(android.database.Cursor) -> b
    1027:1076:java.util.List b() -> b
    1039:1076:java.util.List b() -> b
    1071:1076:java.util.List b() -> b
    1076:1078:java.util.List b() -> b
    1687:1691:void b(java.util.ArrayList,java.lang.String) -> b
    1805:1817:void b(java.util.ArrayList,com.tencent.bugly.crashreport.crash.CrashDetailBean,android.content.Context) -> b
    1850:1856:void b(java.util.ArrayList,byte[]) -> b
    458:6497:boolean b(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.util.List,java.util.List) -> b
    859:872:android.content.ContentValues c(com.tencent.bugly.crashreport.crash.CrashDetailBean) -> c
    928:988:java.util.List c(java.util.List) -> c
    983:988:java.util.List c(java.util.List) -> c
    988:990:java.util.List c(java.util.List) -> c
    1703:1711:void c(java.util.ArrayList,java.lang.String) -> c
    1087:1106:void d(java.util.List) -> d
    1312:1348:boolean d(com.tencent.bugly.crashreport.crash.CrashDetailBean) -> d
    1142:1161:void e(java.util.List) -> e
    1580:1591:java.lang.String e(com.tencent.bugly.crashreport.crash.CrashDetailBean) -> e
com.tencent.bugly.proguard.as$1 -> com.tencent.bugly.proguard.as$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    68:83:void <init>() -> <init>
com.tencent.bugly.proguard.as$2 -> com.tencent.bugly.proguard.as$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    89:97:void <init>() -> <init>
com.tencent.bugly.proguard.as$3 -> com.tencent.bugly.proguard.as$3:
# {"id":"sourceFile","fileName":"BUGLY"}
    101:109:void <init>() -> <init>
com.tencent.bugly.proguard.as$4 -> com.tencent.bugly.proguard.as$4:
# {"id":"sourceFile","fileName":"BUGLY"}
    114:118:void <init>() -> <init>
com.tencent.bugly.proguard.as$5 -> com.tencent.bugly.proguard.as$5:
# {"id":"sourceFile","fileName":"BUGLY"}
    123:127:void <init>() -> <init>
com.tencent.bugly.proguard.as$6 -> com.tencent.bugly.proguard.as$6:
# {"id":"sourceFile","fileName":"BUGLY"}
    727:727:void <init>(com.tencent.bugly.proguard.as,long,java.util.List,boolean) -> <init>
    736:739:void a(boolean,java.lang.String) -> a
com.tencent.bugly.proguard.as$a -> com.tencent.bugly.proguard.as$a:
# {"id":"sourceFile","fileName":"BUGLY"}
    1967:1967:void <init>(int,byte) -> <init>
    1974:1975:void <init>(int) -> <init>
com.tencent.bugly.proguard.as$b -> com.tencent.bugly.proguard.as$b:
# {"id":"sourceFile","fileName":"BUGLY"}
    1990:1990:void <init>(byte) -> <init>
    1993:1993:void <init>() -> <init>
    1998:1998:boolean a() -> a
com.tencent.bugly.proguard.as$c -> com.tencent.bugly.proguard.as$c:
# {"id":"sourceFile","fileName":"BUGLY"}
    2002:2002:void <init>(byte) -> <init>
    2005:2005:void <init>() -> <init>
    0:0:boolean a() -> a
com.tencent.bugly.proguard.as$d -> com.tencent.bugly.proguard.as$d:
# {"id":"sourceFile","fileName":"BUGLY"}
    2014:2014:void <init>(byte) -> <init>
    2017:2017:void <init>() -> <init>
    0:0:boolean a() -> a
com.tencent.bugly.proguard.as$e -> com.tencent.bugly.proguard.as$e:
# {"id":"sourceFile","fileName":"BUGLY"}
    2026:2026:void <init>(byte) -> <init>
    2029:2029:void <init>() -> <init>
    2034:2034:boolean a() -> a
com.tencent.bugly.proguard.as$f -> com.tencent.bugly.proguard.as$f:
# {"id":"sourceFile","fileName":"BUGLY"}
    2062:2062:void <init>(byte) -> <init>
    2065:2065:void <init>() -> <init>
    2070:2512:boolean a() -> a
com.tencent.bugly.proguard.as$g -> com.tencent.bugly.proguard.as$g:
# {"id":"sourceFile","fileName":"BUGLY"}
    2074:2074:void <init>(byte) -> <init>
    2077:2077:void <init>() -> <init>
    2082:2521:boolean a() -> a
com.tencent.bugly.proguard.as$h -> com.tencent.bugly.proguard.as$h:
# {"id":"sourceFile","fileName":"BUGLY"}
    2038:2038:void <init>(byte) -> <init>
    2041:2041:void <init>() -> <init>
    2046:2046:boolean a() -> a
com.tencent.bugly.proguard.as$i -> com.tencent.bugly.proguard.as$i:
# {"id":"sourceFile","fileName":"BUGLY"}
    2050:2050:void <init>(byte) -> <init>
    2053:2053:void <init>() -> <init>
    2058:2503:boolean a() -> a
com.tencent.bugly.proguard.at -> com.tencent.bugly.proguard.at:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    91:1095:void <init>(android.content.Context,com.tencent.bugly.proguard.ak,boolean,com.tencent.bugly.BuglyStrategy$a) -> <init>
    38:38:com.tencent.bugly.proguard.av a(com.tencent.bugly.proguard.at) -> a
    142:146:com.tencent.bugly.proguard.at a(android.content.Context,boolean,com.tencent.bugly.BuglyStrategy$a) -> a
    162:162:com.tencent.bugly.proguard.at a() -> a
    307:308:void a(boolean,boolean,boolean) -> a
    353:353:void a(com.tencent.bugly.crashreport.crash.CrashDetailBean) -> a
    362:362:void a(long) -> a
    38:38:android.content.Context b(com.tencent.bugly.proguard.at) -> b
    212:1236:void b() -> b
    221:2229:void c() -> c
    243:243:void d() -> d
    250:250:void e() -> e
    257:264:void f() -> f
    271:278:void g() -> g
    315:2622:void h() -> h
    321:3263:boolean i() -> i
    485:485:boolean j() -> j
    494:494:boolean k() -> k
com.tencent.bugly.proguard.at$1 -> com.tencent.bugly.proguard.at$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    258:258:void <init>(com.tencent.bugly.proguard.at) -> <init>
    261:261:void run() -> run
com.tencent.bugly.proguard.at$2 -> com.tencent.bugly.proguard.at$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    272:272:void <init>(com.tencent.bugly.proguard.at) -> <init>
    275:275:void run() -> run
com.tencent.bugly.proguard.at$3 -> com.tencent.bugly.proguard.at$3:
# {"id":"sourceFile","fileName":"BUGLY"}
    330:330:void <init>(com.tencent.bugly.proguard.at,java.lang.Thread,java.lang.Throwable,boolean) -> <init>
    335:346:void run() -> run
com.tencent.bugly.proguard.at$4 -> com.tencent.bugly.proguard.at$4:
# {"id":"sourceFile","fileName":"BUGLY"}
    362:362:void <init>(com.tencent.bugly.proguard.at) -> <init>
    366:2386:void run() -> run
com.tencent.bugly.proguard.au -> com.tencent.bugly.proguard.au:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    34:45:void <init>(android.content.Context) -> <init>
    22:22:com.tencent.bugly.proguard.au a() -> a
    60:63:com.tencent.bugly.proguard.au a(android.content.Context) -> a
    72:72:void a(java.lang.Thread,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> a
    1095:1107:void a(com.tencent.bugly.proguard.au) -> a
    1200:1276:void a(com.tencent.bugly.proguard.au,java.lang.Thread,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> a
    1238:1276:void a(com.tencent.bugly.proguard.au,java.lang.Thread,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> a
    1266:4300:void a(com.tencent.bugly.proguard.au,java.lang.Thread,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> a
com.tencent.bugly.proguard.au$1 -> com.tencent.bugly.proguard.au$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    45:45:void <init>(com.tencent.bugly.proguard.au) -> <init>
    49:49:void run() -> run
com.tencent.bugly.proguard.au$2 -> com.tencent.bugly.proguard.au$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    72:72:void <init>(java.lang.Thread,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> <init>
    76:87:void run() -> run
com.tencent.bugly.proguard.av -> com.tencent.bugly.proguard.av:
# {"id":"sourceFile","fileName":"BUGLY"}
    37:37:void <clinit>() -> <clinit>
    34:52:void <init>(android.content.Context,com.tencent.bugly.proguard.as,com.tencent.bugly.proguard.ac,com.tencent.bugly.proguard.aa) -> <init>
    59:89:void a() -> a
    206:257:void a(com.tencent.bugly.crashreport.crash.CrashDetailBean,java.lang.Throwable,boolean) -> a
    294:302:boolean a(java.lang.Thread) -> a
    316:382:void a(java.lang.Thread,java.lang.Throwable,boolean,java.lang.String,byte[],boolean) -> a
    351:382:void a(java.lang.Thread,java.lang.Throwable,boolean,java.lang.String,byte[],boolean) -> a
    357:2300:void a(java.lang.Thread,java.lang.Throwable,boolean,java.lang.String,byte[],boolean) -> a
    399:405:boolean a(java.lang.Thread$UncaughtExceptionHandler) -> a
    417:425:void a(com.tencent.bugly.crashreport.common.strategy.StrategyBean) -> a
    435:451:java.lang.String a(java.lang.Throwable,int) -> a
    460:468:java.lang.String a(java.lang.Throwable) -> a
    95:103:void b() -> b
    141:1996:com.tencent.bugly.crashreport.crash.CrashDetailBean b(java.lang.Thread,java.lang.Throwable,boolean,java.lang.String,byte[],boolean) -> b
    130:132:void c() -> c
    390:2393:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.tencent.bugly.proguard.aw -> com.tencent.bugly.proguard.aw:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.proguard.ax -> com.tencent.bugly.proguard.ax:
# {"id":"sourceFile","fileName":"BUGLY"}
    15:22:void <init>() -> <init>
com.tencent.bugly.proguard.ay -> com.tencent.bugly.proguard.ay:
# {"id":"sourceFile","fileName":"BUGLY"}
    46:128:void <init>(android.content.Context,com.tencent.bugly.proguard.ac,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.ak,com.tencent.bugly.proguard.as) -> <init>
    45:45:void a(com.tencent.bugly.proguard.ay,long,java.lang.String) -> a
    99:99:com.tencent.bugly.proguard.ay a() -> a
    163:1996:com.tencent.bugly.crashreport.crash.CrashDetailBean a(com.tencent.bugly.proguard.ax) -> a
    231:256:boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
    360:3042:java.lang.String a(java.util.List,long) -> a
    432:433:boolean a(boolean) -> a
    632:6300:void a(long,java.lang.String) -> a
    811:816:boolean a(long) -> a
    9584:9592:void a(com.tencent.bugly.proguard.ay) -> a
    565:575:void b(boolean) -> b
    603:604:void b() -> b
    442:489:void c() -> c
    535:541:void c(boolean) -> c
    495:512:void d() -> d
    554:558:void d(boolean) -> d
    518:518:boolean e() -> e
    547:547:boolean f() -> f
    736:8036:void g() -> g
    824:8716:void h() -> h
    8716:8716:void h() -> h
com.tencent.bugly.proguard.ay$1 -> com.tencent.bugly.proguard.ay$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    447:447:void <init>(com.tencent.bugly.proguard.ay,java.lang.String) -> <init>
    454:1045:void onEvent(int,java.lang.String) -> onEvent
com.tencent.bugly.proguard.ay$1$1 -> com.tencent.bugly.proguard.ay$1$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    461:461:void <init>(com.tencent.bugly.proguard.ay$1,java.lang.String) -> <init>
    465:1421:void run() -> run
com.tencent.bugly.proguard.ay$2 -> com.tencent.bugly.proguard.ay$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    474:474:void <init>(com.tencent.bugly.proguard.ay) -> <init>
    478:478:void run() -> run
com.tencent.bugly.proguard.ay$3 -> com.tencent.bugly.proguard.ay$3:
# {"id":"sourceFile","fileName":"BUGLY"}
    745:745:void <init>(com.tencent.bugly.proguard.ay,java.lang.String) -> <init>
    752:6045:void onEvent(int,java.lang.String) -> onEvent
com.tencent.bugly.proguard.ay$4 -> com.tencent.bugly.proguard.ay$4:
# {"id":"sourceFile","fileName":"BUGLY"}
    787:787:void <init>(com.tencent.bugly.proguard.ay) -> <init>
    791:791:void run() -> run
com.tencent.bugly.proguard.az -> com.tencent.bugly.proguard.az:
# {"id":"sourceFile","fileName":"BUGLY"}
    53:84:android.app.ActivityManager$ProcessErrorStateInfo a(android.app.ActivityManager,long) -> a
    94:111:android.app.ActivityManager$ProcessErrorStateInfo a(java.util.List) -> a
    116:119:android.app.ActivityManager$ProcessErrorStateInfo a(java.lang.String) -> a
com.tencent.bugly.proguard.b -> com.tencent.bugly.proguard.b:
# {"id":"sourceFile","fileName":"BUGLY"}
    7:7:void <init>(java.lang.Exception) -> <init>
com.tencent.bugly.proguard.ba -> com.tencent.bugly.proguard.ba:
# {"id":"sourceFile","fileName":"BUGLY"}
    9:1114:void <init>(java.lang.String,long) -> <init>
com.tencent.bugly.proguard.bb -> com.tencent.bugly.proguard.bb:
# {"id":"sourceFile","fileName":"BUGLY"}
    15:26:void <init>() -> <init>
com.tencent.bugly.proguard.bc -> com.tencent.bugly.proguard.bc:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    121:124:java.lang.String a() -> a
    136:136:java.lang.String b() -> b
com.tencent.bugly.proguard.bd -> com.tencent.bugly.proguard.bd:
# {"id":"sourceFile","fileName":"BUGLY"}
    45:49:void <init>(android.content.Context,com.tencent.bugly.proguard.aa,com.tencent.bugly.proguard.as,com.tencent.bugly.proguard.ac) -> <init>
    312:327:java.util.Map a(java.lang.String[]) -> a
    184:4029:boolean getAndUpdateAnrState() -> getAndUpdateAnrState
    195:196:void handleNativeException(int,int,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,int,java.lang.String,java.lang.String) -> handleNativeException
    207:6229:void handleNativeException2(int,int,long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String[]) -> handleNativeException2
    62:1996:com.tencent.bugly.crashreport.crash.CrashDetailBean packageCrashDatas(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],java.util.Map,boolean,boolean) -> packageCrashDatas
com.tencent.bugly.proguard.be -> com.tencent.bugly.proguard.be:
# {"id":"sourceFile","fileName":"BUGLY"}
    42:42:void <clinit>() -> <clinit>
    79:90:java.lang.String a(java.lang.String) -> a
    200:205:java.lang.Object a(java.util.Map,java.lang.Object,java.lang.Object) -> a
    219:231:java.lang.String a(java.io.BufferedInputStream) -> a
    231:233:java.lang.String a(java.io.BufferedInputStream) -> a
    248:287:com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.content.Context,java.lang.String,com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler) -> a
    258:287:com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.content.Context,java.lang.String,com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler) -> a
    280:287:com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.content.Context,java.lang.String,com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler) -> a
    285:287:com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.content.Context,java.lang.String,com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler) -> a
    244:290:com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.content.Context,java.lang.String,com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler) -> a
    386:403:java.lang.String a(java.lang.String,java.lang.String) -> a
    458:471:void a(boolean,java.lang.String) -> a
    490:534:java.lang.String a(java.lang.String,int,java.lang.String,boolean) -> a
    534:537:java.lang.String a(java.lang.String,int,java.lang.String,boolean) -> a
    645:653:java.util.Map a(java.util.Map) -> a
    103:1671:com.tencent.bugly.crashreport.crash.CrashDetailBean a(android.content.Context,java.util.Map,com.tencent.bugly.crashreport.crash.jni.NativeExceptionHandler) -> a
    294:336:java.lang.String b(java.lang.String,java.lang.String) -> b
    328:336:java.lang.String b(java.lang.String,java.lang.String) -> b
    333:336:java.lang.String b(java.lang.String,java.lang.String) -> b
    336:339:java.lang.String b(java.lang.String,java.lang.String) -> b
    416:418:java.lang.String b(java.lang.String) -> b
    682:689:long b(java.util.Map) -> b
    343:369:java.lang.String c(java.lang.String,java.lang.String) -> c
    361:369:java.lang.String c(java.lang.String,java.lang.String) -> c
    366:369:java.lang.String c(java.lang.String,java.lang.String) -> c
    369:372:java.lang.String c(java.lang.String,java.lang.String) -> c
    433:446:void c(java.lang.String) -> c
    53:69:java.util.Map d(java.lang.String) -> d
com.tencent.bugly.proguard.bf -> com.tencent.bugly.proguard.bf:
# {"id":"sourceFile","fileName":"BUGLY"}
    24:38:void <init>(android.os.Handler,java.lang.String) -> <init>
    57:57:boolean a() -> a
    120:120:long b() -> b
    129:3114:java.util.List c() -> c
    150:5051:void d() -> d
    78:78:java.lang.Thread e() -> e
    91:1111:void run() -> run
com.tencent.bugly.proguard.bg -> com.tencent.bugly.proguard.bg:
# {"id":"sourceFile","fileName":"BUGLY"}
    18:32:void <init>() -> <init>
    43:1102:boolean a() -> a
    189:198:void a(com.tencent.bugly.proguard.bf) -> a
    62:2100:boolean b() -> b
    204:206:void c() -> c
    214:215:void d() -> d
    107:3167:void run() -> run
com.tencent.bugly.proguard.bg$a -> com.tencent.bugly.proguard.bg$a:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.proguard.bh -> com.tencent.bugly.proguard.bh:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    2030:2030:com.tencent.bugly.proguard.bi a() -> a
com.tencent.bugly.proguard.bi -> com.tencent.bugly.proguard.bi:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.proguard.bj -> com.tencent.bugly.proguard.bj:
# {"id":"sourceFile","fileName":"BUGLY"}
    14:20:byte[] a(byte[]) -> a
    27:40:byte[] b(byte[]) -> b
com.tencent.bugly.proguard.bk -> com.tencent.bugly.proguard.bk:
# {"id":"sourceFile","fileName":"BUGLY"}
    15:24:byte[] a(byte[]) -> a
    31:47:byte[] b(byte[]) -> b
com.tencent.bugly.proguard.bl -> com.tencent.bugly.proguard.bl:
# {"id":"sourceFile","fileName":"BUGLY"}
    12:24:void <init>() -> <init>
    0:0:void a(java.lang.StringBuilder,int) -> a
    38:53:void a(com.tencent.bugly.proguard.l) -> a
    60:64:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.bm -> com.tencent.bugly.proguard.bm:
# {"id":"sourceFile","fileName":"BUGLY"}
    12:17:void <init>() -> <init>
    0:0:void a(java.lang.StringBuilder,int) -> a
    29:32:void a(com.tencent.bugly.proguard.l) -> a
    40:47:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.bn -> com.tencent.bugly.proguard.bn:
# {"id":"sourceFile","fileName":"BUGLY"}
    11:19:void <init>() -> <init>
    23:26:void <init>(byte,java.lang.String,byte[]) -> <init>
    0:0:void a(java.lang.StringBuilder,int) -> a
    32:36:void a(com.tencent.bugly.proguard.l) -> a
    44:52:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.bo -> com.tencent.bugly.proguard.bo:
# {"id":"sourceFile","fileName":"BUGLY"}
    157:200:void <clinit>() -> <clinit>
    11:54:void <init>() -> <init>
    84:152:void a(com.tencent.bugly.proguard.l) -> a
    205:225:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.bp -> com.tencent.bugly.proguard.bp:
# {"id":"sourceFile","fileName":"BUGLY"}
    12:16:void <init>() -> <init>
    0:0:void a(java.lang.StringBuilder,int) -> a
    27:27:void a(com.tencent.bugly.proguard.l) -> a
    34:40:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.bq -> com.tencent.bugly.proguard.bq:
# {"id":"sourceFile","fileName":"BUGLY"}
    168:175:void <clinit>() -> <clinit>
    11:60:void <init>() -> <init>
    93:160:void a(com.tencent.bugly.proguard.l) -> a
    180:203:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.br -> com.tencent.bugly.proguard.br:
# {"id":"sourceFile","fileName":"BUGLY"}
    74:81:void <clinit>() -> <clinit>
    11:28:void <init>() -> <init>
    45:66:void a(com.tencent.bugly.proguard.l) -> a
    86:93:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.bs -> com.tencent.bugly.proguard.bs:
# {"id":"sourceFile","fileName":"BUGLY"}
    12:18:void <init>() -> <init>
    0:0:void a(java.lang.StringBuilder,int) -> a
    30:31:void a(com.tencent.bugly.proguard.l) -> a
    37:38:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.bt -> com.tencent.bugly.proguard.bt:
# {"id":"sourceFile","fileName":"BUGLY"}
    270:277:void <clinit>() -> <clinit>
    21:166:void <init>() -> <init>
    236:265:void a(com.tencent.bugly.proguard.l) -> a
    282:293:void a(com.tencent.bugly.proguard.k) -> a
    298:310:void a(java.lang.StringBuilder,int) -> a
    225:229:java.lang.Object clone() -> clone
    192:205:boolean equals(java.lang.Object) -> equals
    212:216:int hashCode() -> hashCode
com.tencent.bugly.proguard.bu -> com.tencent.bugly.proguard.bu:
# {"id":"sourceFile","fileName":"BUGLY"}
    72:75:void <clinit>() -> <clinit>
    11:28:void <init>() -> <init>
    45:67:void a(com.tencent.bugly.proguard.l) -> a
    80:87:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.bv -> com.tencent.bugly.proguard.bv:
# {"id":"sourceFile","fileName":"BUGLY"}
    12:24:void <init>() -> <init>
    0:0:void a(java.lang.StringBuilder,int) -> a
    38:53:void a(com.tencent.bugly.proguard.l) -> a
    62:79:void a(com.tencent.bugly.proguard.k) -> a
com.tencent.bugly.proguard.c -> com.tencent.bugly.proguard.c:
# {"id":"sourceFile","fileName":"BUGLY"}
    18:34:void <init>() -> <init>
    49:49:void a(java.lang.String) -> a
    87:1032:void a(java.lang.String,java.lang.Object) -> a
    278:316:void a(java.util.ArrayList,java.lang.Object) -> a
    321:2032:byte[] a() -> a
    328:334:void a(byte[]) -> a
com.tencent.bugly.proguard.d -> com.tencent.bugly.proguard.d:
# {"id":"sourceFile","fileName":"BUGLY"}
    13:23:void <init>() -> <init>
    13:13:void a(java.lang.String) -> a
    79:1032:void a(java.lang.String,java.lang.Object) -> a
    365:2032:byte[] a() -> a
    400:407:void a(byte[]) -> a
    29:29:void b() -> b
    138:1260:java.lang.Object b(java.lang.String,java.lang.Object) -> b
    266:266:void c(java.lang.String,java.lang.Object) -> c
com.tencent.bugly.proguard.e -> com.tencent.bugly.proguard.e:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    14:259:void <init>() -> <init>
    32:35:void a(java.lang.String,java.lang.Object) -> a
    50:2032:byte[] a() -> a
    144:2238:void a(byte[]) -> a
    42:43:void b() -> b
    194:194:void b(java.lang.String) -> b
    212:212:void c(java.lang.String) -> c
    230:230:void c() -> c
com.tencent.bugly.proguard.f -> com.tencent.bugly.proguard.f:
# {"id":"sourceFile","fileName":"BUGLY"}
    12:17:void <clinit>() -> <clinit>
    53:66:java.lang.String a(byte[]) -> a
com.tencent.bugly.proguard.g -> com.tencent.bugly.proguard.g:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    7:28:void <init>() -> <init>
    77:86:void a(com.tencent.bugly.proguard.l) -> a
    96:120:void a(com.tencent.bugly.proguard.k) -> a
    128:138:void a(java.lang.StringBuilder,int) -> a
    66:70:java.lang.Object clone() -> clone
    47:48:boolean equals(java.lang.Object) -> equals
com.tencent.bugly.proguard.h -> com.tencent.bugly.proguard.h:
# {"id":"sourceFile","fileName":"BUGLY"}
    8:8:void <init>(java.lang.String) -> <init>
com.tencent.bugly.proguard.i -> com.tencent.bugly.proguard.i:
# {"id":"sourceFile","fileName":"BUGLY"}
    27:29:void <init>(java.lang.StringBuilder,int) -> <init>
    20:23:void a(java.lang.String) -> a
    39:40:com.tencent.bugly.proguard.i a(boolean,java.lang.String) -> a
    46:47:com.tencent.bugly.proguard.i a(byte,java.lang.String) -> a
    53:54:com.tencent.bugly.proguard.i a(char,java.lang.String) -> a
    60:61:com.tencent.bugly.proguard.i a(short,java.lang.String) -> a
    67:68:com.tencent.bugly.proguard.i a(int,java.lang.String) -> a
    74:75:com.tencent.bugly.proguard.i a(long,java.lang.String) -> a
    81:82:com.tencent.bugly.proguard.i a(float,java.lang.String) -> a
    88:89:com.tencent.bugly.proguard.i a(double,java.lang.String) -> a
    95:99:com.tencent.bugly.proguard.i a(java.lang.String,java.lang.String) -> a
    107:120:com.tencent.bugly.proguard.i a(byte[],java.lang.String) -> a
    145:158:com.tencent.bugly.proguard.i a(short[],java.lang.String) -> a
    164:177:com.tencent.bugly.proguard.i a(int[],java.lang.String) -> a
    183:196:com.tencent.bugly.proguard.i a(long[],java.lang.String) -> a
    202:215:com.tencent.bugly.proguard.i a(float[],java.lang.String) -> a
    221:234:com.tencent.bugly.proguard.i a(double[],java.lang.String) -> a
    240:258:com.tencent.bugly.proguard.i a(java.util.Map,java.lang.String) -> a
    264:277:com.tencent.bugly.proguard.i a(java.lang.Object[],java.lang.String) -> a
    284:288:com.tencent.bugly.proguard.i a(java.util.Collection,java.lang.String) -> a
    310:350:com.tencent.bugly.proguard.i a(java.lang.Object,java.lang.String) -> a
    357:364:com.tencent.bugly.proguard.i a(com.tencent.bugly.proguard.m,java.lang.String) -> a
com.tencent.bugly.proguard.j -> com.tencent.bugly.proguard.j:
# {"id":"sourceFile","fileName":"BUGLY"}
    6:6:void <init>(java.lang.String) -> <init>
com.tencent.bugly.proguard.k -> com.tencent.bugly.proguard.k:
# {"id":"sourceFile","fileName":"BUGLY"}
    40:991:void <init>() -> <init>
    49:991:void <init>(byte[]) -> <init>
    53:991:void <init>(byte[],byte) -> <init>
    60:63:void a(byte[]) -> a
    73:77:int a(com.tencent.bugly.proguard.k$a,java.nio.ByteBuffer) -> a
    84:84:void a(com.tencent.bugly.proguard.k$a) -> a
    94:94:void a(int) -> a
    116:120:void a() -> a
    133:190:void a(byte) -> a
    195:195:boolean a(int,boolean) -> a
    200:214:byte a(byte,int,boolean) -> a
    220:237:short a(short,int,boolean) -> a
    243:263:int a(int,int,boolean) -> a
    269:292:long a(long,int,boolean) -> a
    298:312:float a(float,int,boolean) -> a
    318:335:double a(double,int,boolean) -> a
    488:488:java.util.HashMap a(java.util.Map,int,boolean) -> a
    493:524:java.util.Map a(java.util.Map,java.util.Map,int,boolean) -> a
    797:799:java.lang.Object[] a(java.lang.Object[],int,boolean) -> a
    804:812:java.util.List a(java.util.List,int,boolean) -> a
    920:934:com.tencent.bugly.proguard.m a(com.tencent.bugly.proguard.m,int,boolean) -> a
    945:987:java.lang.Object a(java.lang.Object,int,boolean) -> a
    993:993:int a(java.lang.String) -> a
    100:1089:boolean b(int) -> b
    125:127:void b() -> b
    416:452:java.lang.String b(int,boolean) -> b
    818:837:java.lang.Object[] b(java.lang.Object,int,boolean) -> b
    640:670:byte[] c(int,boolean) -> c
    616:633:boolean[] d(int,boolean) -> d
    677:694:short[] e(int,boolean) -> e
    701:718:int[] f(int,boolean) -> f
    725:742:long[] g(int,boolean) -> g
    749:766:float[] h(int,boolean) -> h
    773:790:double[] i(int,boolean) -> i
com.tencent.bugly.proguard.k$a -> com.tencent.bugly.proguard.k$a:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.proguard.l -> com.tencent.bugly.proguard.l:
# {"id":"sourceFile","fileName":"BUGLY"}
    21:379:void <init>(int) -> <init>
    27:27:void <init>() -> <init>
    43:47:void a(int) -> a
    70:70:void a(boolean,int) -> a
    75:80:void a(byte,int) -> a
    86:91:void a(short,int) -> a
    97:102:void a(int,int) -> a
    108:113:void a(long,int) -> a
    119:121:void a(float,int) -> a
    126:128:void a(double,int) -> a
    168:182:void a(java.lang.String,int) -> a
    188:194:void a(java.util.Map,int) -> a
    201:205:void a(boolean[],int) -> a
    210:214:void a(byte[],int) -> a
    219:223:void a(short[],int) -> a
    228:232:void a(int[],int) -> a
    237:241:void a(long[],int) -> a
    246:250:void a(float[],int) -> a
    255:259:void a(double[],int) -> a
    269:273:void a(java.lang.Object[],int) -> a
    278:283:void a(java.util.Collection,int) -> a
    289:293:void a(com.tencent.bugly.proguard.m,int) -> a
    333:374:void a(java.lang.Object,int) -> a
    381:381:int a(java.lang.String) -> a
    57:63:void b(byte,int) -> b
com.tencent.bugly.proguard.m -> com.tencent.bugly.proguard.m:
# {"id":"sourceFile","fileName":"BUGLY"}
    74:76:java.lang.String toString() -> toString
com.tencent.bugly.proguard.n -> com.tencent.bugly.proguard.n:
# {"id":"sourceFile","fileName":"BUGLY"}
    370:382:void <clinit>() -> <clinit>
    0:0:boolean a(int,int) -> a
    0:0:boolean a(long,long) -> a
    0:0:boolean a(boolean,boolean) -> a
    52:52:boolean a(java.lang.Object,java.lang.Object) -> a
    359:360:byte[] a(java.nio.ByteBuffer) -> a
com.tencent.bugly.proguard.o -> com.tencent.bugly.proguard.o:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void onDbCreate(android.database.sqlite.SQLiteDatabase) -> onDbCreate
    69:78:void onDbDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDbDowngrade
    47:56:void onDbUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDbUpgrade
    0:0:void onServerStrategyChanged(com.tencent.bugly.crashreport.common.strategy.StrategyBean) -> onServerStrategyChanged
com.tencent.bugly.proguard.p -> com.tencent.bugly.proguard.p:
# {"id":"sourceFile","fileName":"BUGLY"}
    34:34:void <clinit>() -> <clinit>
    48:50:boolean a(com.tencent.bugly.proguard.aa) -> a
    57:58:void a(android.content.Context) -> a
    67:91:void a(android.content.Context,com.tencent.bugly.BuglyStrategy) -> a
    103:4085:void a(android.content.Context,java.lang.String,boolean,com.tencent.bugly.BuglyStrategy) -> a
    286:289:void a(com.tencent.bugly.proguard.o) -> a
com.tencent.bugly.proguard.q -> com.tencent.bugly.proguard.q:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.proguard.r -> com.tencent.bugly.proguard.r:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    54:56:void <init>(android.content.Context,boolean) -> <init>
    39:39:void a(com.tencent.bugly.proguard.r,com.tencent.bugly.crashreport.biz.UserInfoBean,boolean) -> a
    39:39:void a(com.tencent.bugly.proguard.r,boolean) -> a
    39:39:boolean a(com.tencent.bugly.proguard.r) -> a
    101:1996:void a(int,boolean) -> a
    146:146:void a(long) -> a
    154:156:void a() -> a
    282:299:void a(java.util.List,java.util.List) -> a
    333:336:int a(java.util.List) -> a
    403:4188:void a(java.util.List,boolean) -> a
    524:5074:void a(com.tencent.bugly.crashreport.biz.UserInfoBean,boolean) -> a
    550:590:java.util.List a(java.lang.String) -> a
    585:590:java.util.List a(java.lang.String) -> a
    590:592:java.util.List a(java.lang.String) -> a
    660:672:com.tencent.bugly.crashreport.biz.UserInfoBean a(android.database.Cursor) -> a
    232:2220:void a(boolean) -> a
    5163:5167:void a(com.tencent.bugly.crashreport.biz.UserInfoBean) -> a
    39:39:long b(com.tencent.bugly.proguard.r) -> b
    310:319:void b(java.util.List,java.util.List) -> b
    471:473:void b() -> b
    600:620:void b(java.util.List) -> b
    634:646:android.content.ContentValues b(com.tencent.bugly.crashreport.biz.UserInfoBean) -> b
    359:3064:boolean b(boolean) -> b
com.tencent.bugly.proguard.r$1 -> com.tencent.bugly.proguard.r$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    438:438:void <init>(com.tencent.bugly.proguard.r,java.util.List) -> <init>
    449:453:void a(boolean,java.lang.String) -> a
com.tencent.bugly.proguard.r$2 -> com.tencent.bugly.proguard.r$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    473:473:void <init>(com.tencent.bugly.proguard.r) -> <init>
    477:479:void run() -> run
com.tencent.bugly.proguard.r$a -> com.tencent.bugly.proguard.r$a:
# {"id":"sourceFile","fileName":"BUGLY"}
    175:177:void <init>(com.tencent.bugly.proguard.r,com.tencent.bugly.crashreport.biz.UserInfoBean,boolean) -> <init>
    182:197:void run() -> run
com.tencent.bugly.proguard.r$b -> com.tencent.bugly.proguard.r$b:
# {"id":"sourceFile","fileName":"BUGLY"}
    487:487:void <init>(com.tencent.bugly.proguard.r) -> <init>
    490:498:void run() -> run
com.tencent.bugly.proguard.r$c -> com.tencent.bugly.proguard.r$c:
# {"id":"sourceFile","fileName":"BUGLY"}
    508:509:void <init>(com.tencent.bugly.proguard.r,long) -> <init>
    514:515:void run() -> run
com.tencent.bugly.proguard.s -> com.tencent.bugly.proguard.s:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    169:189:void a(android.content.Context,com.tencent.bugly.BuglyStrategy) -> a
    207:209:void a(long) -> a
    218:231:void a(com.tencent.bugly.crashreport.common.strategy.StrategyBean,boolean) -> a
    247:248:void a() -> a
    324:2313:void a(android.content.Context) -> a
    3253:3260:java.lang.String a(java.lang.String,java.lang.String) -> a
    28:28:long b(long) -> b
    28:28:java.lang.Class b() -> b
    28:28:void b(android.content.Context,com.tencent.bugly.BuglyStrategy) -> b
    28:28:long c() -> c
    28:28:long c(long) -> c
    123:2240:void c(android.content.Context,com.tencent.bugly.BuglyStrategy) -> c
    28:28:long d() -> d
    28:28:long e() -> e
    28:28:long f() -> f
    28:28:int g() -> g
    28:28:int h() -> h
    28:28:int i() -> i
    28:28:boolean j() -> j
    28:28:long k() -> k
    28:28:long l() -> l
com.tencent.bugly.proguard.s$1 -> com.tencent.bugly.proguard.s$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    189:189:void <init>(android.content.Context,com.tencent.bugly.BuglyStrategy) -> <init>
    193:193:void run() -> run
com.tencent.bugly.proguard.s$a -> com.tencent.bugly.proguard.s$a:
# {"id":"sourceFile","fileName":"BUGLY"}
    452:463:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    435:446:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    407:430:void onActivityPaused(android.app.Activity) -> onActivityPaused
    354:1142:void onActivityResumed(android.app.Activity) -> onActivityResumed
    0:0:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    342:344:void onActivityStarted(android.app.Activity) -> onActivityStarted
    335:337:void onActivityStopped(android.app.Activity) -> onActivityStopped
com.tencent.bugly.proguard.t -> com.tencent.bugly.proguard.t:
# {"id":"sourceFile","fileName":"BUGLY"}
    10:1031:int compareTo(java.lang.Object) -> compareTo
com.tencent.bugly.proguard.u -> com.tencent.bugly.proguard.u:
# {"id":"sourceFile","fileName":"BUGLY"}
    40:40:void <clinit>() -> <clinit>
    54:58:void <init>(android.content.Context) -> <init>
    29:29:java.lang.String a(com.tencent.bugly.proguard.u) -> a
    29:29:java.util.List a(com.tencent.bugly.proguard.u,int) -> a
    29:29:void a(com.tencent.bugly.proguard.u,int,java.util.List) -> a
    68:71:com.tencent.bugly.proguard.u a(android.content.Context) -> a
    75:75:com.tencent.bugly.proguard.u a() -> a
    135:135:void a(int) -> a
    245:257:void a(int,java.util.List) -> a
    257:263:void a(int,java.util.List) -> a
    1199:1200:boolean a(com.tencent.bugly.proguard.t,com.tencent.bugly.proguard.t) -> a
    29:29:java.util.Map b(com.tencent.bugly.proguard.u) -> b
    29:29:boolean b(com.tencent.bugly.proguard.u,int) -> b
    274:286:boolean b(int) -> b
    1210:1211:boolean b(com.tencent.bugly.proguard.t,com.tencent.bugly.proguard.t) -> b
    29:29:android.content.SharedPreferences c(com.tencent.bugly.proguard.u) -> c
    87:124:boolean c(int) -> c
    217:232:java.util.List d(int) -> d
    227:232:java.util.List d(int) -> d
    232:238:java.util.List d(int) -> d
com.tencent.bugly.proguard.u$1 -> com.tencent.bugly.proguard.u$1:
# {"id":"sourceFile","fileName":"BUGLY"}
    135:135:void <init>(com.tencent.bugly.proguard.u,int) -> <init>
    139:186:void run() -> run
com.tencent.bugly.proguard.u$2 -> com.tencent.bugly.proguard.u$2:
# {"id":"sourceFile","fileName":"BUGLY"}
    275:275:void <init>(com.tencent.bugly.proguard.u,int) -> <init>
    278:279:void run() -> run
com.tencent.bugly.proguard.v -> com.tencent.bugly.proguard.v:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.proguard.w -> com.tencent.bugly.proguard.w:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    34:35:void <init>(android.content.Context,java.util.List) -> <init>
    28:28:int a(com.tencent.bugly.proguard.w,java.lang.String,java.lang.String,java.lang.String[],com.tencent.bugly.proguard.v) -> a
    28:28:long a(com.tencent.bugly.proguard.w,java.lang.String,android.content.ContentValues,com.tencent.bugly.proguard.v) -> a
    28:28:android.database.Cursor a(com.tencent.bugly.proguard.w,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.bugly.proguard.v) -> a
    28:28:java.util.Map a(com.tencent.bugly.proguard.w,int,com.tencent.bugly.proguard.v) -> a
    28:28:boolean a(com.tencent.bugly.proguard.w,int,java.lang.String,com.tencent.bugly.proguard.v) -> a
    28:28:boolean a(com.tencent.bugly.proguard.w,int,java.lang.String,byte[],com.tencent.bugly.proguard.v) -> a
    47:50:com.tencent.bugly.proguard.w a(android.content.Context,java.util.List) -> a
    54:54:com.tencent.bugly.proguard.w a() -> a
    91:91:android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String) -> a
    122:122:android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String) -> a
    145:145:int a(java.lang.String,java.lang.String) -> a
    160:182:long a(java.lang.String,android.content.ContentValues,com.tencent.bugly.proguard.v) -> a
    191:206:android.database.Cursor a(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.bugly.proguard.v) -> a
    215:231:int a(java.lang.String,java.lang.String,java.lang.String[],com.tencent.bugly.proguard.v) -> a
    244:249:boolean a(int,java.lang.String,byte[],boolean) -> a
    298:306:boolean a(int,java.lang.String,byte[],com.tencent.bugly.proguard.v) -> a
    319:331:java.util.Map a(int,com.tencent.bugly.proguard.v) -> a
    352:374:boolean a(com.tencent.bugly.proguard.y) -> a
    362:374:boolean a(com.tencent.bugly.proguard.y) -> a
    366:374:boolean a(com.tencent.bugly.proguard.y) -> a
    371:374:boolean a(com.tencent.bugly.proguard.y) -> a
    374:376:boolean a(com.tencent.bugly.proguard.y) -> a
    423:470:java.util.List a(int) -> a
    460:470:java.util.List a(int) -> a
    467:470:java.util.List a(int) -> a
    470:475:java.util.List a(int) -> a
    483:507:void a(java.util.List) -> a
    506:507:void a(java.util.List) -> a
    484:511:void a(java.util.List) -> a
    575:585:com.tencent.bugly.proguard.y a(android.database.Cursor) -> a
    661:684:boolean a(int,java.lang.String,com.tencent.bugly.proguard.v) -> a
    683:687:boolean a(int,java.lang.String,com.tencent.bugly.proguard.v) -> a
    390:412:boolean b(com.tencent.bugly.proguard.y) -> b
    400:412:boolean b(com.tencent.bugly.proguard.y) -> b
    404:412:boolean b(com.tencent.bugly.proguard.y) -> b
    409:412:boolean b(com.tencent.bugly.proguard.y) -> b
    412:414:boolean b(com.tencent.bugly.proguard.y) -> b
    519:531:void b(int) -> b
    530:531:void b(int) -> b
    531:535:void b(int) -> b
    725:733:com.tencent.bugly.proguard.y b(android.database.Cursor) -> b
    547:561:android.content.ContentValues c(com.tencent.bugly.proguard.y) -> c
    601:645:java.util.List c(int) -> c
    634:645:java.util.List c(int) -> c
    637:648:java.util.List c(int) -> c
    694:711:android.content.ContentValues d(com.tencent.bugly.proguard.y) -> d
com.tencent.bugly.proguard.w$a -> com.tencent.bugly.proguard.w$a:
# {"id":"sourceFile","fileName":"BUGLY"}
    764:766:void <init>(com.tencent.bugly.proguard.w) -> <init>
    795:797:void a(int,java.lang.String,byte[]) -> a
    811:832:void run() -> run
com.tencent.bugly.proguard.x -> com.tencent.bugly.proguard.x:
# {"id":"sourceFile","fileName":"BUGLY"}
    0:0:void <clinit>() -> <clinit>
    68:71:void <init>(android.content.Context,java.util.List) -> <init>
    197:205:boolean a(android.database.sqlite.SQLiteDatabase) -> a
    269:282:android.database.sqlite.SQLiteDatabase getReadableDatabase() -> getReadableDatabase
    293:311:android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    79:184:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    237:260:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    211:232:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.bugly.proguard.y -> com.tencent.bugly.proguard.y:
# {"id":"sourceFile","fileName":"BUGLY"}
com.tencent.bugly.proguard.z -> com.tencent.bugly.proguard.z:
# {"id":"sourceFile","fileName":"BUGLY"}
    54:55:void <clinit>() -> <clinit>
    70:73:java.lang.String a(android.content.Context) -> a
    136:156:java.lang.String a(int) -> a
    156:161:java.lang.String a(int) -> a
    200:232:boolean a() -> a
    245:261:boolean a(android.app.ActivityManager) -> a
    343:354:java.util.List a(java.util.Map) -> a
    87:91:android.content.pm.PackageInfo b(android.content.Context) -> b
    176:186:java.lang.String c(android.content.Context) -> c
    277:326:java.util.Map d(android.content.Context) -> d
jxl.BooleanCell -> jxl.BooleanCell:
# {"id":"sourceFile","fileName":"BooleanCell.java"}
jxl.BooleanFormulaCell -> jxl.BooleanFormulaCell:
# {"id":"sourceFile","fileName":"BooleanFormulaCell.java"}
jxl.Cell -> jxl.Cell:
# {"id":"sourceFile","fileName":"Cell.java"}
jxl.CellFeatures -> jxl.CellFeatures:
# {"id":"sourceFile","fileName":"CellFeatures.java"}
    34:34:void <init>() -> <init>
    44:44:void <init>(jxl.CellFeatures) -> <init>
    55:55:java.lang.String getComment() -> getComment
jxl.CellReferenceHelper -> jxl.CellReferenceHelper:
# {"id":"sourceFile","fileName":"CellReferenceHelper.java"}
    46:46:void getCellReference(int,int,java.lang.StringBuffer) -> getCellReference
    79:79:java.lang.String getCellReference(int,int) -> getCellReference
    256:256:java.lang.String getCellReference(jxl.Cell) -> getCellReference
jxl.CellType -> jxl.CellType:
# {"id":"sourceFile","fileName":"CellType.java"}
    55:87:void <clinit>() -> <clinit>
    38:39:void <init>(java.lang.String) -> <init>
    49:49:java.lang.String toString() -> toString
jxl.CellView -> jxl.CellView:
# {"id":"sourceFile","fileName":"CellView.java"}
    69:74:void <init>() -> <init>
    186:186:boolean depUsed() -> depUsed
    143:143:int getDimension() -> getDimension
    175:175:jxl.format.CellFormat getFormat() -> getFormat
    154:154:int getSize() -> getSize
    208:208:boolean isAutosize() -> isAutosize
    106:106:boolean isHidden() -> isHidden
    96:96:void setHidden(boolean) -> setHidden
    130:131:void setSize(int) -> setSize
jxl.DateCell -> jxl.DateCell:
# {"id":"sourceFile","fileName":"DateCell.java"}
jxl.DateFormulaCell -> jxl.DateFormulaCell:
# {"id":"sourceFile","fileName":"DateFormulaCell.java"}
jxl.ErrorCell -> jxl.ErrorCell:
# {"id":"sourceFile","fileName":"ErrorCell.java"}
jxl.ErrorFormulaCell -> jxl.ErrorFormulaCell:
# {"id":"sourceFile","fileName":"ErrorFormulaCell.java"}
jxl.HeaderFooter -> jxl.HeaderFooter:
# {"id":"sourceFile","fileName":"HeaderFooter.java"}
    275:275:void <init>() -> <init>
    285:285:void <init>(jxl.HeaderFooter) -> <init>
    296:296:void <init>(java.lang.String) -> <init>
    355:355:jxl.biff.HeaderFooter$Contents createContents() -> createContents
    366:366:jxl.biff.HeaderFooter$Contents createContents(java.lang.String) -> createContents
    378:378:jxl.biff.HeaderFooter$Contents createContents(jxl.biff.HeaderFooter$Contents) -> createContents
    307:307:java.lang.String toString() -> toString
jxl.HeaderFooter$Contents -> jxl.HeaderFooter$Contents:
# {"id":"sourceFile","fileName":"HeaderFooter.java"}
    37:37:void <init>() -> <init>
    48:48:void <init>(java.lang.String) -> <init>
    58:58:void <init>(jxl.HeaderFooter$Contents) -> <init>
    266:266:boolean empty() -> empty
jxl.Hyperlink -> jxl.Hyperlink:
# {"id":"sourceFile","fileName":"Hyperlink.java"}
jxl.JXLException -> jxl.JXLException:
# {"id":"sourceFile","fileName":"JXLException.java"}
    34:34:void <init>(java.lang.String) -> <init>
jxl.LabelCell -> jxl.LabelCell:
# {"id":"sourceFile","fileName":"LabelCell.java"}
jxl.NumberCell -> jxl.NumberCell:
# {"id":"sourceFile","fileName":"NumberCell.java"}
jxl.NumberFormulaCell -> jxl.NumberFormulaCell:
# {"id":"sourceFile","fileName":"NumberFormulaCell.java"}
jxl.Range -> jxl.Range:
# {"id":"sourceFile","fileName":"Range.java"}
jxl.Sheet -> jxl.Sheet:
# {"id":"sourceFile","fileName":"Sheet.java"}
jxl.SheetSettings -> jxl.SheetSettings:
# {"id":"sourceFile","fileName":"SheetSettings.java"}
    264:268:void <clinit>() -> <clinit>
    290:323:void <init>(jxl.Sheet) -> <init>
    331:396:void <init>(jxl.SheetSettings,jxl.Sheet) -> <init>
    1229:1229:boolean getAutomaticFormulaCalculation() -> getAutomaticFormulaCalculation
    778:778:double getBottomMargin() -> getBottomMargin
    1127:1127:int getCopies() -> getCopies
    866:866:int getDefaultColumnWidth() -> getDefaultColumnWidth
    0:0:double getDefaultHeightMargin() -> getDefaultHeightMargin
    886:886:int getDefaultRowHeight() -> getDefaultRowHeight
    0:0:double getDefaultWidthMargin() -> getDefaultWidthMargin
    975:975:boolean getDisplayZeroValues() -> getDisplayZeroValues
    658:658:int getFitHeight() -> getFitHeight
    807:807:boolean getFitToPages() -> getFitToPages
    637:637:int getFitWidth() -> getFitWidth
    1167:1167:jxl.HeaderFooter getFooter() -> getFooter
    522:522:double getFooterMargin() -> getFooterMargin
    1137:1137:jxl.HeaderFooter getHeader() -> getHeader
    502:502:double getHeaderMargin() -> getHeaderMargin
    1076:1076:int getHorizontalFreeze() -> getHorizontalFreeze
    678:678:int getHorizontalPrintResolution() -> getHorizontalPrintResolution
    738:738:double getLeftMargin() -> getLeftMargin
    953:953:int getNormalMagnification() -> getNormalMagnification
    422:422:jxl.format.PageOrientation getOrientation() -> getOrientation
    931:931:int getPageBreakPreviewMagnification() -> getPageBreakPreviewMagnification
    1015:1015:boolean getPageBreakPreviewMode() -> getPageBreakPreviewMode
    432:432:jxl.format.PageOrder getPageOrder() -> getPageOrder
    615:615:int getPageStart() -> getPageStart
    462:462:jxl.format.PaperSize getPaperSize() -> getPaperSize
    826:826:java.lang.String getPassword() -> getPassword
    846:846:int getPasswordHash() -> getPasswordHash
    1278:1278:jxl.Range getPrintArea() -> getPrintArea
    1035:1035:boolean getPrintGridLines() -> getPrintGridLines
    1055:1055:boolean getPrintHeaders() -> getPrintHeaders
    1342:1342:jxl.Range getPrintTitlesCol() -> getPrintTitlesCol
    1331:1331:jxl.Range getPrintTitlesRow() -> getPrintTitlesRow
    1251:1251:boolean getRecalculateFormulasBeforeSave() -> getRecalculateFormulasBeforeSave
    718:718:double getRightMargin() -> getRightMargin
    595:595:int getScaleFactor() -> getScaleFactor
    995:995:boolean getShowGridLines() -> getShowGridLines
    758:758:double getTopMargin() -> getTopMargin
    1097:1097:int getVerticalFreeze() -> getVerticalFreeze
    698:698:int getVerticalPrintResolution() -> getVerticalPrintResolution
    908:908:int getZoomFactor() -> getZoomFactor
    542:542:boolean isHidden() -> isHidden
    1177:1177:boolean isHorizontalCentre() -> isHorizontalCentre
    472:472:boolean isProtected() -> isProtected
    572:572:boolean isSelected() -> isSelected
    1197:1197:boolean isVerticalCentre() -> isVerticalCentre
    1218:1218:void setAutomaticFormulaCalculation(boolean) -> setAutomaticFormulaCalculation
    768:768:void setBottomMargin(double) -> setBottomMargin
    1117:1117:void setCopies(int) -> setCopies
    876:876:void setDefaultColumnWidth(int) -> setDefaultColumnWidth
    896:896:void setDefaultRowHeight(int) -> setDefaultRowHeight
    985:985:void setDisplayZeroValues(boolean) -> setDisplayZeroValues
    647:648:void setFitHeight(int) -> setFitHeight
    816:816:void setFitToPages(boolean) -> setFitToPages
    626:627:void setFitWidth(int) -> setFitWidth
    1157:1157:void setFooter(jxl.HeaderFooter) -> setFooter
    512:512:void setFooterMargin(double) -> setFooterMargin
    1147:1147:void setHeader(jxl.HeaderFooter) -> setHeader
    492:492:void setHeaderMargin(double) -> setHeaderMargin
    532:532:void setHidden(boolean) -> setHidden
    1187:1187:void setHorizontalCentre(boolean) -> setHorizontalCentre
    1086:1086:void setHorizontalFreeze(int) -> setHorizontalFreeze
    668:668:void setHorizontalPrintResolution(int) -> setHorizontalPrintResolution
    728:728:void setLeftMargin(double) -> setLeftMargin
    412:412:void setOrientation(jxl.format.PageOrientation) -> setOrientation
    1025:1025:void setPageBreakPreviewMode(boolean) -> setPageBreakPreviewMode
    442:442:void setPageOrder(jxl.format.PageOrder) -> setPageOrder
    605:605:void setPageStart(int) -> setPageStart
    452:452:void setPaperSize(jxl.format.PaperSize) -> setPaperSize
    856:856:void setPasswordHash(int) -> setPasswordHash
    1267:1267:void setPrintArea(int,int,int,int) -> setPrintArea
    1045:1045:void setPrintGridLines(boolean) -> setPrintGridLines
    1065:1065:void setPrintHeaders(boolean) -> setPrintHeaders
    1320:1320:void setPrintTitlesCol(int,int) -> setPrintTitlesCol
    1307:1307:void setPrintTitlesRow(int,int) -> setPrintTitlesRow
    482:482:void setProtected(boolean) -> setProtected
    1240:1240:void setRecalculateFormulasBeforeSave(boolean) -> setRecalculateFormulasBeforeSave
    708:708:void setRightMargin(double) -> setRightMargin
    584:585:void setScaleFactor(int) -> setScaleFactor
    562:562:void setSelected(boolean) -> setSelected
    1005:1005:void setShowGridLines(boolean) -> setShowGridLines
    748:748:void setTopMargin(double) -> setTopMargin
    1207:1207:void setVerticalCentre(boolean) -> setVerticalCentre
    1107:1107:void setVerticalFreeze(int) -> setVerticalFreeze
    688:688:void setVerticalPrintResolution(int) -> setVerticalPrintResolution
    920:920:void setZoomFactor(int) -> setZoomFactor
jxl.StringFormulaCell -> jxl.StringFormulaCell:
# {"id":"sourceFile","fileName":"StringFormulaCell.java"}
jxl.Workbook -> jxl.Workbook:
# {"id":"sourceFile","fileName":"Workbook.java"}
    50:50:void <init>() -> <init>
    286:286:jxl.write.WritableWorkbook createWorkbook(java.io.File) -> createWorkbook
    301:302:jxl.write.WritableWorkbook createWorkbook(java.io.File,jxl.WorkbookSettings) -> createWorkbook
    320:320:jxl.write.WritableWorkbook createWorkbook(java.io.File,jxl.Workbook) -> createWorkbook
    338:339:jxl.write.WritableWorkbook createWorkbook(java.io.File,jxl.Workbook,jxl.WorkbookSettings) -> createWorkbook
    0:0:java.lang.String getVersion() -> getVersion
    253:253:jxl.Workbook getWorkbook(java.io.InputStream) -> getWorkbook
    268:271:jxl.Workbook getWorkbook(java.io.InputStream,jxl.WorkbookSettings) -> getWorkbook
jxl.WorkbookSettings -> jxl.WorkbookSettings:
# {"id":"sourceFile","fileName":"WorkbookSettings.java"}
    42:42:void <clinit>() -> <clinit>
    207:322:void <init>() -> <init>
    347:347:int getArrayGrowSize() -> getArrayGrowSize
    706:706:boolean getAutoFilterDisabled() -> getAutoFilterDisabled
    656:656:boolean getCellValidationDisabled() -> getCellValidationDisabled
    380:380:boolean getDrawingsDisabled() -> getDrawingsDisabled
    549:549:java.lang.String getEncoding() -> getEncoding
    825:825:boolean getExcel9File() -> getExcel9File
    666:666:java.lang.String getExcelDisplayLanguage() -> getExcelDisplayLanguage
    676:676:java.lang.String getExcelRegionalSettings() -> getExcelRegionalSettings
    571:584:jxl.biff.formula.FunctionNames getFunctionNames() -> getFunctionNames
    390:390:boolean getGCDisabled() -> getGCDisabled
    861:861:int getHideobj() -> getHideobj
    636:636:boolean getIgnoreBlanks() -> getIgnoreBlanks
    370:370:int getInitialFileSize() -> getInitialFileSize
    539:539:java.util.Locale getLocale() -> getLocale
    451:451:boolean getMergedCellCheckingDisabled() -> getMergedCellCheckingDisabled
    400:400:boolean getNamesDisabled() -> getNamesDisabled
    484:484:boolean getPropertySetsDisabled() -> getPropertySetsDisabled
    441:441:boolean getRationalizationDisabled() -> getRationalizationDisabled
    797:797:boolean getRefreshAll() -> getRefreshAll
    806:806:boolean getTemplate() -> getTemplate
    774:774:java.io.File getTemporaryFileDuringWriteDirectory() -> getTemporaryFileDuringWriteDirectory
    731:731:boolean getUseTemporaryFileDuringWrite() -> getUseTemporaryFileDuringWrite
    841:841:boolean getWindowProtected() -> getWindowProtected
    881:881:java.lang.String getWriteAccess() -> getWriteAccess
    606:606:void setCharacterSet(int) -> setCharacterSet
    420:420:void setDrawingsDisabled(boolean) -> setDrawingsDisabled
    559:559:void setEncoding(java.lang.String) -> setEncoding
    833:833:void setExcel9File(boolean) -> setExcel9File
    873:873:void setHideobj(int) -> setHideobj
    786:786:void setRefreshAll(boolean) -> setRefreshAll
    496:496:void setSuppressWarnings(boolean) -> setSuppressWarnings
    815:815:void setTemplate(boolean) -> setTemplate
    849:849:void setWindowProtected(boolean) -> setWindowProtected
    889:889:void setWriteAccess(java.lang.String) -> setWriteAccess
jxl.biff.AutoFilter -> jxl.biff.AutoFilter:
# {"id":"sourceFile","fileName":"AutoFilter.java"}
    40:42:void <init>(jxl.biff.FilterModeRecord,jxl.biff.AutoFilterInfoRecord) -> <init>
    47:47:void add(jxl.biff.AutoFilterRecord) -> add
    58:70:void write(jxl.write.biff.File) -> write
jxl.biff.AutoFilterInfoRecord -> jxl.biff.AutoFilterInfoRecord:
# {"id":"sourceFile","fileName":"AutoFilterInfoRecord.java"}
    32:32:void <clinit>() -> <clinit>
    45:47:void <init>(jxl.read.biff.Record) -> <init>
    57:57:byte[] getData() -> getData
jxl.biff.AutoFilterRecord -> jxl.biff.AutoFilterRecord:
# {"id":"sourceFile","fileName":"AutoFilterRecord.java"}
    32:32:void <clinit>() -> <clinit>
    45:47:void <init>(jxl.read.biff.Record) -> <init>
    57:57:byte[] getData() -> getData
jxl.biff.BaseCellFeatures -> jxl.biff.BaseCellFeatures:
# {"id":"sourceFile","fileName":"BaseCellFeatures.java"}
    41:133:void <clinit>() -> <clinit>
    140:140:void <init>() -> <init>
    149:163:void <init>(jxl.biff.BaseCellFeatures) -> <init>
    460:464:void clearValidationSettings() -> clearValidationSettings
    172:172:java.lang.String getComment() -> getComment
    188:188:double getCommentHeight() -> getCommentHeight
    180:180:double getCommentWidth() -> getCommentWidth
    493:501:jxl.biff.DVParser getDVParser() -> getDVParser
    452:452:boolean hasDataValidation() -> hasDataValidation
    474:474:boolean hasDropDown() -> hasDropDown
    260:268:void removeComment() -> removeComment
    277:299:void removeDataValidation() -> removeDataValidation
    484:484:void setComboBox(jxl.biff.drawing.ComboBox) -> setComboBox
    324:324:void setCommentDrawing(jxl.biff.drawing.Comment) -> setCommentDrawing
    206:208:void setReadComment(java.lang.String,double,double) -> setReadComment
    216:219:void setValidationSettings(jxl.biff.DataValiditySettingsRecord) -> setValidationSettings
    198:198:void setWritableCell(jxl.write.biff.CellValue) -> setWritableCell
    515:527:void shareDataValidation(jxl.biff.BaseCellFeatures) -> shareDataValidation
jxl.biff.BaseCellFeatures$ValidationCondition -> jxl.biff.BaseCellFeatures$ValidationCondition:
# {"id":"sourceFile","fileName":"BaseCellFeatures.java"}
    102:102:void <clinit>() -> <clinit>
    105:110:void <init>(jxl.biff.DVParser$Condition) -> <init>
jxl.biff.BaseCompoundFile -> jxl.biff.BaseCompoundFile:
# {"id":"sourceFile","fileName":"BaseCompoundFile.java"}
    33:118:void <clinit>() -> <clinit>
    342:342:void <init>() -> <init>
    28:28:jxl.common.Logger access$000() -> access$000
jxl.biff.BaseCompoundFile$PropertyStorage -> jxl.biff.BaseCompoundFile$PropertyStorage:
# {"id":"sourceFile","fileName":"BaseCompoundFile.java"}
    182:234:void <init>(jxl.biff.BaseCompoundFile,byte[]) -> <init>
    243:255:void <init>(jxl.biff.BaseCompoundFile,java.lang.String) -> <init>
    321:322:void setChild(int) -> setChild
    332:333:void setColour(int) -> setColour
    310:311:void setNext(int) -> setNext
    299:300:void setPrevious(int) -> setPrevious
    288:289:void setSize(int) -> setSize
    277:278:void setStartBlock(int) -> setStartBlock
    266:267:void setType(int) -> setType
jxl.biff.BuiltInFormat -> jxl.biff.BuiltInFormat:
# {"id":"sourceFile","fileName":"BuiltInFormat.java"}
    129:173:void <clinit>() -> <clinit>
    51:53:void <init>(java.lang.String,int) -> <init>
    117:123:boolean equals(java.lang.Object) -> equals
    75:75:int getFormatIndex() -> getFormatIndex
    0:0:void initialize(int) -> initialize
    0:0:boolean isBuiltIn() -> isBuiltIn
    0:0:boolean isInitialized() -> isInitialized
jxl.biff.BuiltInName -> jxl.biff.BuiltInName:
# {"id":"sourceFile","fileName":"BuiltInName.java"}
    40:118:void <clinit>() -> <clinit>
    45:52:void <init>(java.lang.String,int) -> <init>
    80:85:jxl.biff.BuiltInName getBuiltInName(int) -> getBuiltInName
    62:62:java.lang.String getName() -> getName
    72:72:int getValue() -> getValue
jxl.biff.BuiltInStyle -> jxl.biff.BuiltInStyle:
# {"id":"sourceFile","fileName":"BuiltInStyle.java"}
    46:49:void <init>(int,int) -> <init>
    61:66:byte[] getData() -> getData
jxl.biff.ByteArray -> jxl.biff.ByteArray:
# {"id":"sourceFile","fileName":"ByteArray.java"}
    50:50:void <init>() -> <init>
    59:62:void <init>(int) -> <init>
    72:74:void add(byte) -> add
    84:86:void add(byte[]) -> add
    109:114:void checkSize(int) -> checkSize
    96:97:byte[] getBytes() -> getBytes
jxl.biff.ByteData -> jxl.biff.ByteData:
# {"id":"sourceFile","fileName":"ByteData.java"}
jxl.biff.CellReferenceHelper -> jxl.biff.CellReferenceHelper:
# {"id":"sourceFile","fileName":"CellReferenceHelper.java"}
    39:39:void <clinit>() -> <clinit>
    68:71:void getCellReference(int,int,java.lang.StringBuffer) -> getCellReference
    89:101:void getCellReference(int,boolean,int,boolean,java.lang.StringBuffer) -> getCellReference
    164:167:void getCellReference(int,int,int,jxl.biff.formula.ExternalSheet,java.lang.StringBuffer) -> getCellReference
    188:191:void getCellReference(int,int,boolean,int,boolean,jxl.biff.formula.ExternalSheet,java.lang.StringBuffer) -> getCellReference
    223:225:java.lang.String getCellReference(int,int) -> getCellReference
    237:260:int getColumn(java.lang.String) -> getColumn
    125:145:void getColumnReference(int,java.lang.StringBuffer) -> getColumnReference
    289:294:int getNumberIndex(java.lang.String) -> getNumberIndex
    273:277:int getRow(java.lang.String) -> getRow
    317:317:boolean isColumnRelative(java.lang.String) -> isColumnRelative
    328:328:boolean isRowRelative(java.lang.String) -> isRowRelative
jxl.biff.ConditionalFormat -> jxl.biff.ConditionalFormat:
# {"id":"sourceFile","fileName":"ConditionalFormat.java"}
    50:52:void <init>(jxl.biff.ConditionalFormatRangeRecord) -> <init>
    62:62:void addCondition(jxl.biff.ConditionalFormatRecord) -> addCondition
    117:122:void write(jxl.write.biff.File) -> write
jxl.biff.ConditionalFormatRangeRecord -> jxl.biff.ConditionalFormatRangeRecord:
# {"id":"sourceFile","fileName":"ConditionalFormatRangeRecord.java"}
    32:32:void <clinit>() -> <clinit>
    189:193:void <init>(jxl.read.biff.Record) -> <init>
    360:371:byte[] getData() -> getData
jxl.biff.ConditionalFormatRangeRecord$Range -> jxl.biff.ConditionalFormatRangeRecord$Range:
# {"id":"sourceFile","fileName":"ConditionalFormatRangeRecord.java"}
jxl.biff.ConditionalFormatRecord -> jxl.biff.ConditionalFormatRecord:
# {"id":"sourceFile","fileName":"ConditionalFormatRecord.java"}
    32:32:void <clinit>() -> <clinit>
    45:47:void <init>(jxl.read.biff.Record) -> <init>
    57:57:byte[] getData() -> getData
jxl.biff.ContinueRecord -> jxl.biff.ContinueRecord:
# {"id":"sourceFile","fileName":"ContinueRecord.java"}
    42:43:void <init>(jxl.read.biff.Record) -> <init>
    53:54:void <init>(byte[]) -> <init>
    64:64:byte[] getData() -> getData
    76:76:jxl.read.biff.Record getRecord() -> getRecord
jxl.biff.CountryCode -> jxl.biff.CountryCode:
# {"id":"sourceFile","fileName":"CountryCode.java"}
    32:165:void <clinit>() -> <clinit>
    58:66:void <init>(int,java.lang.String,java.lang.String) -> <init>
    97:97:java.lang.String getCode() -> getCode
    105:116:jxl.biff.CountryCode getCountryCode(java.lang.String) -> getCountryCode
    87:87:int getValue() -> getValue
jxl.biff.DVParser -> jxl.biff.DVParser:
# {"id":"sourceFile","fileName":"DVParser.java"}
    45:200:void <clinit>() -> <clinit>
    327:467:void <init>(byte[],jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> <init>
    638:675:void <init>(jxl.biff.DVParser) -> <init>
    1040:1040:boolean copied() -> copied
    1035:1035:boolean extendedCellsValidation() -> extendedCellsValidation
    687:803:byte[] getData() -> getData
    928:928:int getFirstColumn() -> getFirstColumn
    948:948:int getFirstRow() -> getFirstRow
    938:938:int getLastColumn() -> getLastColumn
    958:958:int getLastRow() -> getLastRow
    992:1012:void setCell(int,int,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> setCell
jxl.biff.DVParser$Condition -> jxl.biff.DVParser$Condition:
# {"id":"sourceFile","fileName":"DVParser.java"}
    130:130:void <clinit>() -> <clinit>
    133:139:void <init>(int,java.lang.String) -> <init>
    145:147:jxl.biff.DVParser$Condition getCondition(int) -> getCondition
    157:157:int getValue() -> getValue
jxl.biff.DVParser$DVType -> jxl.biff.DVParser$DVType:
# {"id":"sourceFile","fileName":"DVParser.java"}
    53:53:void <clinit>() -> <clinit>
    56:62:void <init>(int,java.lang.String) -> <init>
    68:70:jxl.biff.DVParser$DVType getType(int) -> getType
    80:80:int getValue() -> getValue
jxl.biff.DVParser$ErrorStyle -> jxl.biff.DVParser$ErrorStyle:
# {"id":"sourceFile","fileName":"DVParser.java"}
    94:94:void <clinit>() -> <clinit>
    97:102:void <init>(int) -> <init>
    108:110:jxl.biff.DVParser$ErrorStyle getErrorStyle(int) -> getErrorStyle
    120:120:int getValue() -> getValue
jxl.biff.DValParser -> jxl.biff.DValParser:
# {"id":"sourceFile","fileName":"DValParser.java"}
    35:40:void <clinit>() -> <clinit>
    71:79:void <init>(byte[]) -> <init>
    87:90:void <init>(int,int) -> <init>
    160:160:void dvAdded() -> dvAdded
    132:132:void dvRemoved() -> dvRemoved
    102:121:byte[] getData() -> getData
    142:142:int getNumberOfDVRecords() -> getNumberOfDVRecords
    152:152:int getObjectId() -> getObjectId
jxl.biff.DataValidation -> jxl.biff.DataValidation:
# {"id":"sourceFile","fileName":"DataValidation.java"}
    44:44:void <clinit>() -> <clinit>
    89:92:void <init>(jxl.biff.DataValidityListRecord) -> <init>
    102:108:void <init>(int,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> <init>
    118:130:void <init>(jxl.biff.DataValidation,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> <init>
    142:149:void add(jxl.biff.DataValiditySettingsRecord) -> add
    353:353:int getComboBoxObjectId() -> getComboBoxObjectId
    158:158:jxl.biff.DataValidityListRecord getDataValidityList() -> getDataValidityList
    167:167:jxl.biff.DataValiditySettingsRecord[] getDataValiditySettings() -> getDataValiditySettings
    290:298:void removeDataValidation(int,int) -> removeDataValidation
    178:204:void write(jxl.write.biff.File) -> write
jxl.biff.DataValidityListRecord -> jxl.biff.DataValidityListRecord:
# {"id":"sourceFile","fileName":"DataValidityListRecord.java"}
    30:30:void <clinit>() -> <clinit>
    58:62:void <init>(jxl.read.biff.Record) -> <init>
    70:72:void <init>(jxl.biff.DValParser) -> <init>
    82:84:void <init>(jxl.biff.DataValidityListRecord) -> <init>
    129:134:void dvAdded() -> dvAdded
    116:121:void dvRemoved() -> dvRemoved
    102:107:byte[] getData() -> getData
    92:92:int getNumberOfSettings() -> getNumberOfSettings
    159:164:int getObjectId() -> getObjectId
    144:149:boolean hasDVRecords() -> hasDVRecords
jxl.biff.DataValiditySettingsRecord -> jxl.biff.DataValiditySettingsRecord:
# {"id":"sourceFile","fileName":"DataValiditySettingsRecord.java"}
    40:40:void <clinit>() -> <clinit>
    81:86:void <init>(jxl.read.biff.Record,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> <init>
    109:119:void <init>(jxl.biff.DataValiditySettingsRecord,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> <init>
    129:130:void <init>(jxl.biff.DVParser) -> <init>
    296:296:jxl.biff.DVParser getDVParser() -> getDVParser
    152:157:byte[] getData() -> getData
    227:232:int getFirstColumn() -> getFirstColumn
    257:262:int getFirstRow() -> getFirstRow
    242:247:int getLastColumn() -> getLastColumn
    272:277:int getLastRow() -> getLastRow
    138:140:void initialize() -> initialize
    287:287:void setDataValidation(jxl.biff.DataValidation) -> setDataValidation
jxl.biff.DisplayFormat -> jxl.biff.DisplayFormat:
# {"id":"sourceFile","fileName":"DisplayFormat.java"}
jxl.biff.DoubleHelper -> jxl.biff.DoubleHelper:
# {"id":"sourceFile","fileName":"DoubleHelper.java"}
    76:84:void getIEEEBytes(double,byte[],int) -> getIEEEBytes
    43:56:double getIEEEDouble(byte[],int) -> getIEEEDouble
jxl.biff.EmptyCell -> jxl.biff.EmptyCell:
# {"id":"sourceFile","fileName":"EmptyCell.java"}
    54:56:void <init>(int,int) -> <init>
    0:0:jxl.CellFeatures getCellFeatures() -> getCellFeatures
    0:0:jxl.format.CellFormat getCellFormat() -> getCellFormat
    76:76:int getColumn() -> getColumn
    0:0:java.lang.String getContents() -> getContents
    66:66:int getRow() -> getRow
    86:86:jxl.CellType getType() -> getType
    0:0:jxl.write.WritableCellFeatures getWritableCellFeatures() -> getWritableCellFeatures
    0:0:void setCellFeatures(jxl.write.WritableCellFeatures) -> setCellFeatures
    0:0:void setCellFormat(jxl.format.CellFormat) -> setCellFormat
jxl.biff.EncodedURLHelper -> jxl.biff.EncodedURLHelper:
# {"id":"sourceFile","fileName":"EncodedURLHelper.java"}
    34:41:void <clinit>() -> <clinit>
    45:51:byte[] getEncodedURL(java.lang.String,jxl.WorkbookSettings) -> getEncodedURL
    57:131:byte[] getFile(java.lang.String,jxl.WorkbookSettings) -> getFile
    136:140:byte[] getURL(java.lang.String,jxl.WorkbookSettings) -> getURL
jxl.biff.FilterModeRecord -> jxl.biff.FilterModeRecord:
# {"id":"sourceFile","fileName":"FilterModeRecord.java"}
    32:32:void <clinit>() -> <clinit>
    45:47:void <init>(jxl.read.biff.Record) -> <init>
    57:57:byte[] getData() -> getData
jxl.biff.FontRecord -> jxl.biff.FontRecord:
# {"id":"sourceFile","fileName":"FontRecord.java"}
    40:98:void <clinit>() -> <clinit>
    119:128:void <init>(java.lang.String,int,int,boolean,int,int,int) -> <init>
    140:176:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings) -> <init>
    190:214:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings,jxl.biff.FontRecord$Biff7) -> <init>
    224:236:void <init>(jxl.format.Font) -> <init>
    502:509:boolean equals(java.lang.Object) -> equals
    376:376:int getBoldWeight() -> getBoldWeight
    445:445:jxl.format.Colour getColour() -> getColour
    246:289:byte[] getData() -> getData
    332:332:int getFontIndex() -> getFontIndex
    478:478:java.lang.String getName() -> getName
    354:354:int getPointSize() -> getPointSize
    468:468:jxl.format.ScriptStyle getScriptStyle() -> getScriptStyle
    422:422:jxl.format.UnderlineStyle getUnderlineStyle() -> getUnderlineStyle
    487:487:int hashCode() -> hashCode
    312:313:void initialize(int) -> initialize
    301:301:boolean isInitialized() -> isInitialized
    399:399:boolean isItalic() -> isItalic
    533:533:boolean isStruckout() -> isStruckout
    433:435:void setFontColour(int) -> setFontColour
    322:322:void uninitialize() -> uninitialize
jxl.biff.FontRecord$1 -> jxl.biff.FontRecord$1:
# {"id":"sourceFile","fileName":"FontRecord.java"}
jxl.biff.FontRecord$Biff7 -> jxl.biff.FontRecord$Biff7:
# {"id":"sourceFile","fileName":"FontRecord.java"}
    97:97:void <init>(jxl.biff.FontRecord$1) -> <init>
jxl.biff.Fonts -> jxl.biff.Fonts:
# {"id":"sourceFile","fileName":"Fonts.java"}
    49:50:void <init>() -> <init>
    63:74:void addFont(jxl.biff.FontRecord) -> addFont
    93:93:jxl.biff.FontRecord getFont(int) -> getFont
    121:177:jxl.biff.IndexMapping rationalize() -> rationalize
    104:110:void write(jxl.write.biff.File) -> write
jxl.biff.FormatRecord -> jxl.biff.FormatRecord:
# {"id":"sourceFile","fileName":"FormatRecord.java"}
    42:99:void <clinit>() -> <clinit>
    120:121:void <init>() -> <init>
    150:197:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings,jxl.biff.FormatRecord$BiffType) -> <init>
    613:634:boolean equals(java.lang.Object) -> equals
    209:216:byte[] getData() -> getData
    349:557:java.text.DateFormat getDateFormat() -> getDateFormat
    226:226:int getFormatIndex() -> getFormatIndex
    314:339:java.text.NumberFormat getNumberFormat() -> getNumberFormat
    596:596:int hashCode() -> hashCode
    248:249:void initialize(int) -> initialize
    0:0:boolean isBuiltIn() -> isBuiltIn
    294:294:boolean isDate() -> isDate
    236:236:boolean isInitialized() -> isInitialized
    304:304:boolean isNumber() -> isNumber
    264:271:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    284:284:void setFormatString(java.lang.String) -> setFormatString
jxl.biff.FormatRecord$1 -> jxl.biff.FormatRecord$1:
# {"id":"sourceFile","fileName":"FormatRecord.java"}
jxl.biff.FormatRecord$BiffType -> jxl.biff.FormatRecord$BiffType:
# {"id":"sourceFile","fileName":"FormatRecord.java"}
    94:94:void <init>(jxl.biff.FormatRecord$1) -> <init>
jxl.biff.FormattingRecords -> jxl.biff.FormattingRecords:
# {"id":"sourceFile","fileName":"FormattingRecords.java"}
    44:44:void <clinit>() -> <clinit>
    100:105:void <init>(jxl.biff.Fonts) -> <init>
    151:181:void addFormat(jxl.biff.DisplayFormat) -> addFormat
    120:133:void addStyle(jxl.biff.XFRecord) -> addStyle
    217:232:java.text.DateFormat getDateFormat(int) -> getDateFormat
    326:326:jxl.biff.Fonts getFonts() -> getFonts
    270:270:jxl.biff.FormatRecord getFormatRecord(int) -> getFormatRecord
    244:259:java.text.NumberFormat getNumberFormat(int) -> getNumberFormat
    529:529:jxl.biff.PaletteRecord getPalette() -> getPalette
    338:338:jxl.biff.XFRecord getXFRecord(int) -> getXFRecord
    195:205:boolean isDate(int) -> isDate
    379:447:jxl.biff.IndexMapping rationalize(jxl.biff.IndexMapping,jxl.biff.IndexMapping) -> rationalize
    462:516:jxl.biff.IndexMapping rationalizeDisplayFormats() -> rationalizeDisplayFormats
    360:360:jxl.biff.IndexMapping rationalizeFonts() -> rationalizeFonts
    539:539:void setPalette(jxl.biff.PaletteRecord) -> setPalette
    282:316:void write(jxl.write.biff.File) -> write
jxl.biff.FormulaData -> jxl.biff.FormulaData:
# {"id":"sourceFile","fileName":"FormulaData.java"}
jxl.biff.HeaderFooter -> jxl.biff.HeaderFooter:
# {"id":"sourceFile","fileName":"HeaderFooter.java"}
    38:38:void <clinit>() -> <clinit>
    472:475:void <init>() -> <init>
    484:487:void <init>(jxl.biff.HeaderFooter) -> <init>
    495:637:void <init>(java.lang.String) -> <init>
    649:668:java.lang.String toString() -> toString
jxl.biff.HeaderFooter$Contents -> jxl.biff.HeaderFooter$Contents:
# {"id":"sourceFile","fileName":"HeaderFooter.java"}
    148:149:void <init>() -> <init>
    159:160:void <init>(java.lang.String) -> <init>
    169:170:void <init>(jxl.biff.HeaderFooter$Contents) -> <init>
    442:442:boolean empty() -> empty
    181:181:java.lang.String getContents() -> getContents
jxl.biff.IndexMapping -> jxl.biff.IndexMapping:
# {"id":"sourceFile","fileName":"IndexMapping.java"}
    34:34:void <clinit>() -> <clinit>
    47:48:void <init>(int) -> <init>
    68:68:int getNewIndex(int) -> getNewIndex
    58:58:void setMapping(int,int) -> setMapping
jxl.biff.IntegerHelper -> jxl.biff.IntegerHelper:
# {"id":"sourceFile","fileName":"IntegerHelper.java"}
    112:113:byte[] getFourBytes(int) -> getFourBytes
    143:147:void getFourBytes(int,byte[],int) -> getFourBytes
    0:0:int getInt(byte,byte) -> getInt
    76:77:int getInt(byte,byte,byte,byte) -> getInt
    0:0:short getShort(byte,byte) -> getShort
    129:130:void getTwoBytes(int,byte[],int) -> getTwoBytes
jxl.biff.NameRangeException -> jxl.biff.NameRangeException:
# {"id":"sourceFile","fileName":"NameRangeException.java"}
    35:35:void <init>() -> <init>
jxl.biff.NumFormatRecordsException -> jxl.biff.NumFormatRecordsException:
# {"id":"sourceFile","fileName":"NumFormatRecordsException.java"}
    34:34:void <init>() -> <init>
jxl.biff.PaletteRecord -> jxl.biff.PaletteRecord:
# {"id":"sourceFile","fileName":"PaletteRecord.java"}
    34:68:void <init>(jxl.read.biff.Record) -> <init>
    103:120:byte[] getData() -> getData
jxl.biff.RecordData -> jxl.biff.RecordData:
# {"id":"sourceFile","fileName":"RecordData.java"}
    46:48:void <init>(jxl.read.biff.Record) -> <init>
    57:58:void <init>(jxl.biff.Type) -> <init>
    78:78:int getCode() -> getCode
    68:68:jxl.read.biff.Record getRecord() -> getRecord
jxl.biff.SheetRangeImpl -> jxl.biff.SheetRangeImpl:
# {"id":"sourceFile","fileName":"SheetRangeImpl.java"}
    69:74:void <init>(jxl.Sheet,int,int,int,int) -> <init>
    84:89:void <init>(jxl.biff.SheetRangeImpl,jxl.Sheet) -> <init>
    306:313:boolean equals(java.lang.Object) -> equals
    119:125:jxl.Cell getBottomRight() -> getBottomRight
    101:107:jxl.Cell getTopLeft() -> getTopLeft
    290:290:int hashCode() -> hashCode
    166:166:boolean intersects(jxl.biff.SheetRangeImpl) -> intersects
    184:188:java.lang.String toString() -> toString
jxl.biff.StringHelper -> jxl.biff.StringHelper:
# {"id":"sourceFile","fileName":"StringHelper.java"}
    37:44:void <clinit>() -> <clinit>
    63:63:byte[] getBytes(java.lang.String) -> getBytes
    77:77:byte[] getBytes(java.lang.String,jxl.WorkbookSettings) -> getBytes
    126:127:void getBytes(java.lang.String,byte[],int) -> getBytes
    164:171:java.lang.String getString(byte[],int,int,jxl.WorkbookSettings) -> getString
    96:103:byte[] getUnicodeBytes(java.lang.String) -> getUnicodeBytes
    140:141:void getUnicodeBytes(java.lang.String,byte[],int) -> getUnicodeBytes
    188:190:java.lang.String getUnicodeString(byte[],int,int) -> getUnicodeString
    214:221:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
jxl.biff.Type -> jxl.biff.Type:
# {"id":"sourceFile","fileName":"Type.java"}
    34:491:void <clinit>() -> <clinit>
    43:50:void <init>(int) -> <init>
    85:92:boolean equals(java.lang.Object) -> equals
    102:110:jxl.biff.Type getType(int) -> getType
    70:70:int hashCode() -> hashCode
jxl.biff.Type$1 -> jxl.biff.Type$1:
# {"id":"sourceFile","fileName":"Type.java"}
jxl.biff.Type$ArbitraryType -> jxl.biff.Type$ArbitraryType:
# {"id":"sourceFile","fileName":"Type.java"}
    53:53:void <init>(jxl.biff.Type$1) -> <init>
jxl.biff.WorkbookMethods -> jxl.biff.WorkbookMethods:
# {"id":"sourceFile","fileName":"WorkbookMethods.java"}
jxl.biff.WorkspaceInformationRecord -> jxl.biff.WorkspaceInformationRecord:
# {"id":"sourceFile","fileName":"WorkspaceInformationRecord.java"}
    31:31:void <clinit>() -> <clinit>
    68:74:void <init>(jxl.read.biff.Record) -> <init>
    82:83:void <init>() -> <init>
    131:146:byte[] getData() -> getData
    93:93:boolean getFitToPages() -> getFitToPages
    119:119:void setColumnOutlines(boolean) -> setColumnOutlines
    103:103:void setFitToPages(boolean) -> setFitToPages
    111:111:void setRowOutlines(boolean) -> setRowOutlines
jxl.biff.WritableRecordData -> jxl.biff.WritableRecordData:
# {"id":"sourceFile","fileName":"WritableRecordData.java"}
    36:36:void <clinit>() -> <clinit>
    49:49:void <init>(jxl.biff.Type) -> <init>
    59:59:void <init>(jxl.read.biff.Record) -> <init>
    71:90:byte[] getBytes() -> getBytes
    104:128:byte[] handleContinueRecords(byte[]) -> handleContinueRecords
jxl.biff.XCTRecord -> jxl.biff.XCTRecord:
# {"id":"sourceFile","fileName":"XCTRecord.java"}
    37:37:void <init>(jxl.read.biff.Record) -> <init>
    48:48:byte[] getData() -> getData
jxl.biff.XFRecord -> jxl.biff.XFRecord:
# {"id":"sourceFile","fileName":"XFRecord.java"}
    53:347:void <clinit>() -> <clinit>
    357:414:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings,jxl.biff.XFRecord$BiffType) -> <init>
    425:461:void <init>(jxl.biff.FontRecord,jxl.biff.DisplayFormat) -> <init>
    472:507:void <init>(jxl.biff.XFRecord) -> <init>
    1530:1605:boolean equals(java.lang.Object) -> equals
    1158:1186:jxl.format.Colour getBorderColour(jxl.format.Border) -> getBorderColour
    1116:1144:jxl.format.BorderLineStyle getBorderLine(jxl.format.Border) -> getBorderLine
    670:767:byte[] getData() -> getData
    614:614:java.text.DateFormat getDateFormat() -> getDateFormat
    1335:1339:jxl.format.Font getFont() -> getFont
    1632:1632:int getFontIndex() -> getFontIndex
    634:634:int getFormatRecord() -> getFormatRecord
    790:790:boolean getHidden() -> getHidden
    780:780:boolean getLocked() -> getLocked
    624:624:java.text.NumberFormat getNumberFormat() -> getNumberFormat
    1289:1289:int getXFIndex() -> getXFIndex
    1198:1203:boolean hasBorders() -> hasBorders
    1466:1511:int hashCode() -> hashCode
    1227:1253:void initialize(int,jxl.biff.FormattingRecords,jxl.biff.Fonts) -> initialize
    1348:1456:void initializeFormatInformation() -> initializeFormatInformation
    644:644:boolean isDate() -> isDate
    1299:1299:boolean isInitialized() -> isInitialized
    654:654:boolean isNumber() -> isNumber
    1311:1311:boolean isRead() -> isRead
    1663:1667:void rationalize(jxl.biff.IndexMapping) -> rationalize
    1684:1684:void setFont(jxl.biff.FontRecord) -> setFont
    1643:1643:void setFontIndex(int) -> setFontIndex
    1622:1622:void setFormatIndex(int) -> setFormatIndex
    823:825:void setXFAlignment(jxl.format.Alignment) -> setXFAlignment
    953:956:void setXFBackground(jxl.format.Colour,jxl.format.Pattern) -> setXFBackground
    1058:1086:void setXFBorder(jxl.format.Border,jxl.format.BorderLineStyle,jxl.format.Colour) -> setXFBorder
    811:811:void setXFCellOptions(int) -> setXFCellOptions
    1653:1654:void setXFDetails(jxl.biff.XFRecord$XFType,int) -> setXFDetails
    800:801:void setXFLocked(boolean) -> setXFLocked
    1264:1268:void uninitialize() -> uninitialize
jxl.biff.XFRecord$1 -> jxl.biff.XFRecord$1:
# {"id":"sourceFile","fileName":"XFRecord.java"}
jxl.biff.XFRecord$BiffType -> jxl.biff.XFRecord$BiffType:
# {"id":"sourceFile","fileName":"XFRecord.java"}
    332:332:void <init>(jxl.biff.XFRecord$1) -> <init>
jxl.biff.XFRecord$XFType -> jxl.biff.XFRecord$XFType:
# {"id":"sourceFile","fileName":"XFRecord.java"}
    343:343:void <init>(jxl.biff.XFRecord$1) -> <init>
jxl.biff.drawing.BStoreContainer -> jxl.biff.drawing.BStoreContainer:
# {"id":"sourceFile","fileName":"BStoreContainer.java"}
    32:32:void <clinit>() -> <clinit>
    47:48:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    56:56:void <init>() -> <init>
    77:77:int getNumBlips() -> getNumBlips
    66:67:void setNumBlips(int) -> setNumBlips
jxl.biff.drawing.BlipStoreEntry -> jxl.biff.drawing.BlipStoreEntry:
# {"id":"sourceFile","fileName":"BlipStoreEntry.java"}
    37:37:void <clinit>() -> <clinit>
    77:81:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    93:103:void <init>(jxl.biff.drawing.Drawing) -> <init>
    123:178:byte[] getData() -> getData
    208:210:byte[] getImageData() -> getImageData
jxl.biff.drawing.BlipType -> jxl.biff.drawing.BlipType:
# {"id":"sourceFile","fileName":"BlipType.java"}
    40:115:void <clinit>() -> <clinit>
    49:56:void <init>(int,java.lang.String) -> <init>
    87:90:jxl.biff.drawing.BlipType getType(int) -> getType
    76:76:int getValue() -> getValue
jxl.biff.drawing.Button -> jxl.biff.drawing.Button:
# {"id":"sourceFile","fileName":"Button.java"}
    42:42:void <clinit>() -> <clinit>
    183:197:void <init>(jxl.biff.drawing.MsoDrawingRecord,jxl.biff.drawing.ObjRecord,jxl.biff.drawing.DrawingData,jxl.biff.drawing.DrawingGroup,jxl.WorkbookSettings) -> <init>
    67:225:void <init>(jxl.biff.drawing.DrawingGroupObject,jxl.biff.drawing.DrawingGroup,jxl.WorkbookSettings) -> <init>
    687:688:void addMso(jxl.biff.drawing.MsoDrawingRecord) -> addMso
    676:676:java.lang.String getImageFilePath() -> getImageFilePath
    343:343:jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    298:303:int getObjectId() -> getObjectId
    423:423:jxl.biff.drawing.Origin getOrigin() -> getOrigin
    591:596:jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    313:318:int getShapeId() -> getShapeId
    353:392:jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    796:813:java.lang.String getText() -> getText
    823:823:int hashCode() -> hashCode
    233:267:void initialize() -> initialize
    850:850:boolean isFirst() -> isFirst
    0:0:boolean isFormObject() -> isFormObject
    403:403:void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    653:653:void setFormatting(jxl.biff.ContinueRecord) -> setFormatting
    281:287:void setObjectId(int,int,int) -> setObjectId
    643:643:void setText(jxl.biff.ContinueRecord) -> setText
    633:633:void setTextObject(jxl.biff.drawing.TextObjectRecord) -> setTextObject
    699:753:void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    0:0:void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
jxl.biff.drawing.Chart -> jxl.biff.drawing.Chart:
# {"id":"sourceFile","fileName":"Chart.java"}
    41:41:void <clinit>() -> <clinit>
    108:131:void <init>(jxl.biff.drawing.MsoDrawingRecord,jxl.biff.drawing.ObjRecord,jxl.biff.drawing.DrawingData,int,int,jxl.read.biff.File,jxl.WorkbookSettings) -> <init>
    142:147:byte[] getBytes() -> getBytes
    157:157:byte[] getData() -> getData
    253:253:jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    263:263:jxl.biff.drawing.ObjRecord getObjRecord() -> getObjRecord
    241:241:jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    165:166:void initialize() -> initialize
    179:224:void rationalize(jxl.biff.IndexMapping,jxl.biff.IndexMapping,jxl.biff.IndexMapping) -> rationalize
jxl.biff.drawing.CheckBox -> jxl.biff.drawing.CheckBox:
# {"id":"sourceFile","fileName":"CheckBox.java"}
    40:40:void <clinit>() -> <clinit>
    173:187:void <init>(jxl.biff.drawing.MsoDrawingRecord,jxl.biff.drawing.ObjRecord,jxl.biff.drawing.DrawingData,jxl.biff.drawing.DrawingGroup,jxl.WorkbookSettings) -> <init>
    65:215:void <init>(jxl.biff.drawing.DrawingGroupObject,jxl.biff.drawing.DrawingGroup,jxl.WorkbookSettings) -> <init>
    780:781:void addMso(jxl.biff.drawing.MsoDrawingRecord) -> addMso
    639:639:java.lang.String getImageFilePath() -> getImageFilePath
    344:344:jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    299:304:int getObjectId() -> getObjectId
    416:416:jxl.biff.drawing.Origin getOrigin() -> getOrigin
    584:589:jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    314:319:int getShapeId() -> getShapeId
    354:383:jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    716:716:int hashCode() -> hashCode
    234:268:void initialize() -> initialize
    728:728:boolean isFirst() -> isFirst
    0:0:boolean isFormObject() -> isFormObject
    396:396:void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    770:770:void setFormatting(jxl.biff.ContinueRecord) -> setFormatting
    282:288:void setObjectId(int,int,int) -> setObjectId
    760:760:void setText(jxl.biff.ContinueRecord) -> setText
    750:750:void setTextObject(jxl.biff.drawing.TextObjectRecord) -> setTextObject
    651:674:void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    0:0:void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
jxl.biff.drawing.ClientAnchor -> jxl.biff.drawing.ClientAnchor:
# {"id":"sourceFile","fileName":"ClientAnchor.java"}
    34:34:void <clinit>() -> <clinit>
    73:101:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    115:120:void <init>(double,double,double,double,int) -> <init>
    130:161:byte[] getData() -> getData
    209:209:int getProperties() -> getProperties
    171:171:double getX1() -> getX1
    191:191:double getX2() -> getX2
    181:181:double getY1() -> getY1
    201:201:double getY2() -> getY2
jxl.biff.drawing.ClientData -> jxl.biff.drawing.ClientData:
# {"id":"sourceFile","fileName":"ClientData.java"}
    32:32:void <clinit>() -> <clinit>
    46:46:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    54:54:void <init>() -> <init>
    64:65:byte[] getData() -> getData
jxl.biff.drawing.ClientTextBox -> jxl.biff.drawing.ClientTextBox:
# {"id":"sourceFile","fileName":"ClientTextBox.java"}
    32:32:void <clinit>() -> <clinit>
    46:46:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    54:54:void <init>() -> <init>
    64:65:byte[] getData() -> getData
jxl.biff.drawing.ComboBox -> jxl.biff.drawing.ComboBox:
# {"id":"sourceFile","fileName":"ComboBox.java"}
    39:39:void <clinit>() -> <clinit>
    152:166:void <init>(jxl.biff.drawing.MsoDrawingRecord,jxl.biff.drawing.ObjRecord,jxl.biff.drawing.DrawingData,jxl.biff.drawing.DrawingGroup,jxl.WorkbookSettings) -> <init>
    64:190:void <init>(jxl.biff.drawing.DrawingGroupObject,jxl.biff.drawing.DrawingGroup,jxl.WorkbookSettings) -> <init>
    197:201:void <init>() -> <init>
    614:614:java.lang.String getImageFilePath() -> getImageFilePath
    319:319:jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    274:279:int getObjectId() -> getObjectId
    391:391:jxl.biff.drawing.Origin getOrigin() -> getOrigin
    559:564:jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    289:294:int getShapeId() -> getShapeId
    329:358:jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    677:677:int hashCode() -> hashCode
    209:243:void initialize() -> initialize
    689:689:boolean isFirst() -> isFirst
    0:0:boolean isFormObject() -> isFormObject
    371:371:void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    257:263:void setObjectId(int,int,int) -> setObjectId
    626:636:void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    0:0:void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
jxl.biff.drawing.Comment -> jxl.biff.drawing.Comment:
# {"id":"sourceFile","fileName":"Comment.java"}
    42:42:void <clinit>() -> <clinit>
    185:201:void <init>(jxl.biff.drawing.MsoDrawingRecord,jxl.biff.drawing.ObjRecord,jxl.biff.drawing.DrawingData,jxl.biff.drawing.DrawingGroup,jxl.WorkbookSettings) -> <init>
    67:233:void <init>(jxl.biff.drawing.DrawingGroupObject,jxl.biff.drawing.DrawingGroup,jxl.WorkbookSettings) -> <init>
    244:253:void <init>(java.lang.String,int,int) -> <init>
    725:726:void addMso(jxl.biff.drawing.MsoDrawingRecord) -> addMso
    830:830:int getColumn() -> getColumn
    584:589:double getHeight() -> getHeight
    714:714:java.lang.String getImageFilePath() -> getImageFilePath
    373:373:jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    328:333:int getObjectId() -> getObjectId
    451:451:jxl.biff.drawing.Origin getOrigin() -> getOrigin
    619:624:jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    820:820:int getRow() -> getRow
    343:348:int getShapeId() -> getShapeId
    383:420:jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    840:857:java.lang.String getText() -> getText
    550:555:double getWidth() -> getWidth
    867:867:int hashCode() -> hashCode
    261:297:void initialize() -> initialize
    894:894:boolean isFirst() -> isFirst
    0:0:boolean isFormObject() -> isFormObject
    431:431:void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    691:691:void setFormatting(jxl.biff.ContinueRecord) -> setFormatting
    599:608:void setHeight(double) -> setHeight
    671:671:void setNote(jxl.biff.drawing.NoteRecord) -> setNote
    311:317:void setObjectId(int,int,int) -> setObjectId
    681:681:void setText(jxl.biff.ContinueRecord) -> setText
    661:661:void setTextObject(jxl.biff.drawing.TextObjectRecord) -> setTextObject
    565:574:void setWidth(double) -> setWidth
    737:789:void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    802:810:void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
jxl.biff.drawing.Dg -> jxl.biff.drawing.Dg:
# {"id":"sourceFile","fileName":"Dg.java"}
    56:61:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    71:75:void <init>(int) -> <init>
    105:109:byte[] getData() -> getData
jxl.biff.drawing.DgContainer -> jxl.biff.drawing.DgContainer:
# {"id":"sourceFile","fileName":"DgContainer.java"}
    32:32:void <init>() -> <init>
jxl.biff.drawing.Dgg -> jxl.biff.drawing.Dgg:
# {"id":"sourceFile","fileName":"Dgg.java"}
    36:36:void <clinit>() -> <clinit>
    103:121:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    134:137:void <init>(int,int) -> <init>
    148:149:void addCluster(int,int) -> addCluster
    215:215:jxl.biff.drawing.Dgg$Cluster getCluster(int) -> getCluster
    159:184:byte[] getData() -> getData
jxl.biff.drawing.Dgg$Cluster -> jxl.biff.drawing.Dgg$Cluster:
# {"id":"sourceFile","fileName":"Dgg.java"}
    90:92:void <init>(int,int) -> <init>
jxl.biff.drawing.DggContainer -> jxl.biff.drawing.DggContainer:
# {"id":"sourceFile","fileName":"DggContainer.java"}
    32:32:void <init>() -> <init>
jxl.biff.drawing.Drawing -> jxl.biff.drawing.Drawing:
# {"id":"sourceFile","fileName":"Drawing.java"}
    45:209:void <clinit>() -> <clinit>
    230:244:void <init>(jxl.biff.drawing.MsoDrawingRecord,jxl.biff.drawing.ObjRecord,jxl.biff.drawing.DrawingData,jxl.biff.drawing.DrawingGroup,jxl.Sheet) -> <init>
    65:264:void <init>(jxl.biff.drawing.DrawingGroupObject,jxl.biff.drawing.DrawingGroup) -> <init>
    477:482:int getBlipId() -> getBlipId
    764:780:byte[] getImageBytes() -> getImageBytes
    747:754:byte[] getImageData() -> getImageData
    411:417:java.lang.String getImageFilePath() -> getImageFilePath
    492:492:jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    447:452:int getObjectId() -> getObjectId
    565:565:jxl.biff.drawing.Origin getOrigin() -> getOrigin
    732:737:jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    575:575:int getReferenceCount() -> getReferenceCount
    462:467:int getShapeId() -> getShapeId
    502:532:jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    326:389:void initialize() -> initialize
    855:855:boolean isFirst() -> isFirst
    0:0:boolean isFormObject() -> isFormObject
    545:545:void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    430:436:void setObjectId(int,int,int) -> setObjectId
    585:585:void setReferenceCount(int) -> setReferenceCount
    802:811:void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    0:0:void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
jxl.biff.drawing.Drawing$ImageAnchorProperties -> jxl.biff.drawing.Drawing$ImageAnchorProperties:
# {"id":"sourceFile","fileName":"Drawing.java"}
    167:167:void <clinit>() -> <clinit>
    170:176:void <init>(int) -> <init>
    186:192:jxl.biff.drawing.Drawing$ImageAnchorProperties getImageAnchorProperties(int) -> getImageAnchorProperties
    181:181:int getValue() -> getValue
jxl.biff.drawing.Drawing2 -> jxl.biff.drawing.Drawing2:
# {"id":"sourceFile","fileName":"Drawing2.java"}
    41:41:void <clinit>() -> <clinit>
    149:161:void <init>(jxl.biff.drawing.MsoDrawingRecord,jxl.biff.drawing.DrawingData,jxl.biff.drawing.DrawingGroup) -> <init>
    684:684:java.lang.String getImageFilePath() -> getImageFilePath
    315:315:jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> getMsoDrawingRecord
    270:275:int getObjectId() -> getObjectId
    363:363:jxl.biff.drawing.Origin getOrigin() -> getOrigin
    530:535:jxl.biff.drawing.EscherContainer getReadSpContainer() -> getReadSpContainer
    285:290:int getShapeId() -> getShapeId
    325:332:jxl.biff.drawing.EscherContainer getSpContainer() -> getSpContainer
    240:240:void initialize() -> initialize
    647:647:boolean isFirst() -> isFirst
    0:0:boolean isFormObject() -> isFormObject
    343:343:void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> setDrawingGroup
    253:259:void setObjectId(int,int,int) -> setObjectId
    0:0:void writeAdditionalRecords(jxl.write.biff.File) -> writeAdditionalRecords
    0:0:void writeTailRecords(jxl.write.biff.File) -> writeTailRecords
jxl.biff.drawing.DrawingData -> jxl.biff.drawing.DrawingData:
# {"id":"sourceFile","fileName":"DrawingData.java"}
    36:36:void <clinit>() -> <clinit>
    62:65:void <init>() -> <init>
    158:159:void addData(byte[]) -> addData
    171:184:void addRawData(byte[]) -> addRawData
    230:230:byte[] getData() -> getData
    194:194:int getNumDrawings() -> getNumDrawings
    205:218:jxl.biff.drawing.EscherContainer getSpContainer(int) -> getSpContainer
    132:145:void getSpContainers(jxl.biff.drawing.EscherContainer,java.util.ArrayList) -> getSpContainers
    73:121:void initialize() -> initialize
jxl.biff.drawing.DrawingDataException -> jxl.biff.drawing.DrawingDataException:
# {"id":"sourceFile","fileName":"DrawingDataException.java"}
    0:0:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
jxl.biff.drawing.DrawingGroup -> jxl.biff.drawing.DrawingGroup:
# {"id":"sourceFile","fileName":"DrawingGroup.java"}
    42:42:void <clinit>() -> <clinit>
    117:124:void <init>(jxl.biff.drawing.Origin) -> <init>
    136:155:void <init>(jxl.biff.drawing.DrawingGroup) -> <init>
    169:169:void add(jxl.biff.drawing.MsoDrawingGroupRecord) -> add
    180:180:void add(jxl.read.biff.Record) -> add
    223:223:void add(jxl.biff.drawing.Chart) -> add
    233:289:void add(jxl.biff.drawing.DrawingGroupObject) -> add
    190:201:void addData(byte[]) -> addData
    211:213:void addDrawing(jxl.biff.drawing.DrawingGroupObject) -> addDrawing
    370:385:jxl.biff.drawing.BStoreContainer getBStoreContainer() -> getBStoreContainer
    395:395:byte[] getData() -> getData
    529:538:byte[] getImageData(int) -> getImageData
    565:565:boolean hasDrawingsOmitted() -> hasDrawingsOmitted
    351:360:void initialize() -> initialize
    550:554:void setDrawingsOmitted(jxl.biff.drawing.MsoDrawingRecord,jxl.biff.drawing.ObjRecord) -> setDrawingsOmitted
    580:582:void updateData(jxl.biff.drawing.DrawingGroup) -> updateData
    406:507:void write(jxl.write.biff.File) -> write
jxl.biff.drawing.DrawingGroupObject -> jxl.biff.drawing.DrawingGroupObject:
# {"id":"sourceFile","fileName":"DrawingGroupObject.java"}
jxl.biff.drawing.EscherAtom -> jxl.biff.drawing.EscherAtom:
# {"id":"sourceFile","fileName":"EscherAtom.java"}
    33:33:void <clinit>() -> <clinit>
    42:42:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    52:52:void <init>(jxl.biff.drawing.EscherRecordType) -> <init>
    62:62:byte[] getData() -> getData
jxl.biff.drawing.EscherContainer -> jxl.biff.drawing.EscherContainer:
# {"id":"sourceFile","fileName":"EscherContainer.java"}
    36:36:void <clinit>() -> <clinit>
    56:58:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    68:70:void <init>(jxl.biff.drawing.EscherRecordType) -> <init>
    97:97:void add(jxl.biff.drawing.EscherRecord) -> add
    80:87:jxl.biff.drawing.EscherRecord[] getChildren() -> getChildren
    196:216:byte[] getData() -> getData
    115:186:void initialize() -> initialize
jxl.biff.drawing.EscherRecord -> jxl.biff.drawing.EscherRecord:
# {"id":"sourceFile","fileName":"EscherRecord.java"}
    34:34:void <clinit>() -> <clinit>
    53:54:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    63:64:void <init>(jxl.biff.drawing.EscherRecordType) -> <init>
    174:174:byte[] getBytes() -> getBytes
    94:94:jxl.biff.drawing.EscherStream getEscherStream() -> getEscherStream
    114:114:int getInstance() -> getInstance
    84:84:int getLength() -> getLength
    104:104:int getPos() -> getPos
    184:184:int getStreamLength() -> getStreamLength
    144:144:jxl.biff.drawing.EscherRecordType getType() -> getType
    74:74:void setContainer(boolean) -> setContainer
    164:164:byte[] setHeaderData(byte[]) -> setHeaderData
    124:124:void setInstance(int) -> setInstance
    134:134:void setVersion(int) -> setVersion
jxl.biff.drawing.EscherRecordData -> jxl.biff.drawing.EscherRecordData:
# {"id":"sourceFile","fileName":"EscherRecordData.java"}
    36:36:void <clinit>() -> <clinit>
    91:120:void <init>(jxl.biff.drawing.EscherStream,int) -> <init>
    130:132:void <init>(jxl.biff.drawing.EscherRecordType) -> <init>
    299:300:byte[] getBytes() -> getBytes
    289:289:jxl.biff.drawing.EscherStream getEscherStream() -> getEscherStream
    207:207:int getInstance() -> getInstance
    152:152:int getLength() -> getLength
    182:182:int getPos() -> getPos
    311:311:int getStreamLength() -> getStreamLength
    192:197:jxl.biff.drawing.EscherRecordType getType() -> getType
    142:142:boolean isContainer() -> isContainer
    218:218:void setContainer(boolean) -> setContainer
    260:277:byte[] setHeaderData(byte[]) -> setHeaderData
    228:228:void setInstance(int) -> setInstance
    248:248:void setVersion(int) -> setVersion
jxl.biff.drawing.EscherRecordType -> jxl.biff.drawing.EscherRecordType:
# {"id":"sourceFile","fileName":"EscherRecordType.java"}
    35:109:void <clinit>() -> <clinit>
    43:49:void <init>(int) -> <init>
    71:75:jxl.biff.drawing.EscherRecordType getType(int) -> getType
    59:59:int getValue() -> getValue
jxl.biff.drawing.EscherStream -> jxl.biff.drawing.EscherStream:
# {"id":"sourceFile","fileName":"EscherStream.java"}
jxl.biff.drawing.MsoDrawingGroupRecord -> jxl.biff.drawing.MsoDrawingGroupRecord:
# {"id":"sourceFile","fileName":"MsoDrawingGroupRecord.java"}
    44:45:void <init>(jxl.read.biff.Record) -> <init>
    55:56:void <init>(byte[]) -> <init>
    66:66:byte[] getData() -> getData
jxl.biff.drawing.MsoDrawingRecord -> jxl.biff.drawing.MsoDrawingRecord:
# {"id":"sourceFile","fileName":"MsoDrawingRecord.java"}
    37:37:void <clinit>() -> <clinit>
    56:58:void <init>(jxl.read.biff.Record) -> <init>
    68:70:void <init>(byte[]) -> <init>
    80:80:byte[] getData() -> getData
    90:90:jxl.read.biff.Record getRecord() -> getRecord
    110:110:boolean isFirst() -> isFirst
    98:98:void setFirst() -> setFirst
jxl.biff.drawing.NoteRecord -> jxl.biff.drawing.NoteRecord:
# {"id":"sourceFile","fileName":"NoteRecord.java"}
    37:37:void <clinit>() -> <clinit>
    66:70:void <init>(jxl.read.biff.Record) -> <init>
    93:96:void <init>(int,int,int) -> <init>
    151:151:int getColumn() -> getColumn
    106:131:byte[] getData() -> getData
    161:161:int getObjectId() -> getObjectId
    141:141:int getRow() -> getRow
jxl.biff.drawing.ObjRecord -> jxl.biff.drawing.ObjRecord:
# {"id":"sourceFile","fileName":"ObjRecord.java"}
    39:124:void <clinit>() -> <clinit>
    141:152:void <init>(jxl.read.biff.Record) -> <init>
    163:165:void <init>(int,jxl.biff.drawing.ObjRecord$ObjType) -> <init>
    332:375:byte[] getComboBoxData() -> getComboBoxData
    175:194:byte[] getData() -> getData
    279:309:byte[] getNoteData() -> getNoteData
    411:411:int getObjectId() -> getObjectId
    215:256:byte[] getPictureData() -> getPictureData
    391:391:jxl.read.biff.Record getRecord() -> getRecord
    401:401:jxl.biff.drawing.ObjRecord$ObjType getType() -> getType
jxl.biff.drawing.ObjRecord$ObjType -> jxl.biff.drawing.ObjRecord$ObjType:
# {"id":"sourceFile","fileName":"ObjRecord.java"}
    64:64:void <clinit>() -> <clinit>
    67:74:void <init>(int,java.lang.String) -> <init>
    84:87:jxl.biff.drawing.ObjRecord$ObjType getType(int) -> getType
    79:79:java.lang.String toString() -> toString
jxl.biff.drawing.Opt -> jxl.biff.drawing.Opt:
# {"id":"sourceFile","fileName":"Opt.java"}
    38:38:void <clinit>() -> <clinit>
    108:110:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    153:155:void <init>() -> <init>
    220:221:void addProperty(int,boolean,boolean,int) -> addProperty
    235:236:void addProperty(int,boolean,boolean,int,java.lang.String) -> addProperty
    165:207:byte[] getData() -> getData
    249:252:jxl.biff.drawing.Opt$Property getProperty(int) -> getProperty
    118:143:void readProperties() -> readProperties
jxl.biff.drawing.Opt$Property -> jxl.biff.drawing.Opt$Property:
# {"id":"sourceFile","fileName":"Opt.java"}
    75:79:void <init>(int,boolean,boolean,int) -> <init>
    92:97:void <init>(int,boolean,boolean,int,java.lang.String) -> <init>
jxl.biff.drawing.Origin -> jxl.biff.drawing.Origin:
# {"id":"sourceFile","fileName":"Origin.java"}
    34:36:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
jxl.biff.drawing.ShapeType -> jxl.biff.drawing.ShapeType:
# {"id":"sourceFile","fileName":"ShapeType.java"}
    35:87:void <clinit>() -> <clinit>
    43:49:void <init>(int) -> <init>
    60:64:jxl.biff.drawing.ShapeType getType(int) -> getType
    80:80:int getValue() -> getValue
jxl.biff.drawing.SheetDrawingWriter -> jxl.biff.drawing.SheetDrawingWriter:
# {"id":"sourceFile","fileName":"SheetDrawingWriter.java"}
    41:41:void <clinit>() -> <clinit>
    69:70:void <init>(jxl.WorkbookSettings) -> <init>
    486:486:jxl.biff.drawing.Chart[] getCharts() -> getCharts
    476:476:void setCharts(jxl.biff.drawing.Chart[]) -> setCharts
    81:82:void setDrawings(java.util.ArrayList,boolean) -> setDrawings
    95:288:void write(jxl.write.biff.File) -> write
    300:465:void writeUnmodified(jxl.write.biff.File) -> writeUnmodified
jxl.biff.drawing.Sp -> jxl.biff.drawing.Sp:
# {"id":"sourceFile","fileName":"Sp.java"}
    34:34:void <clinit>() -> <clinit>
    63:67:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    80:85:void <init>(jxl.biff.drawing.ShapeType,int,int) -> <init>
    115:118:byte[] getData() -> getData
    95:95:int getShapeId() -> getShapeId
    105:105:int getShapeType() -> getShapeType
jxl.biff.drawing.SpContainer -> jxl.biff.drawing.SpContainer:
# {"id":"sourceFile","fileName":"SpContainer.java"}
    32:32:void <init>() -> <init>
    42:42:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
jxl.biff.drawing.Spgr -> jxl.biff.drawing.Spgr:
# {"id":"sourceFile","fileName":"Spgr.java"}
    39:39:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    47:49:void <init>() -> <init>
    59:59:byte[] getData() -> getData
jxl.biff.drawing.SpgrContainer -> jxl.biff.drawing.SpgrContainer:
# {"id":"sourceFile","fileName":"SpgrContainer.java"}
    32:32:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    49:49:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
jxl.biff.drawing.SplitMenuColors -> jxl.biff.drawing.SplitMenuColors:
# {"id":"sourceFile","fileName":"SplitMenuColors.java"}
    39:39:void <init>(jxl.biff.drawing.EscherRecordData) -> <init>
    47:51:void <init>() -> <init>
    65:65:byte[] getData() -> getData
jxl.biff.drawing.TextObjectRecord -> jxl.biff.drawing.TextObjectRecord:
# {"id":"sourceFile","fileName":"TextObjectRecord.java"}
    37:37:void <clinit>() -> <clinit>
    56:58:void <init>(java.lang.String) -> <init>
    68:70:void <init>(jxl.read.biff.Record) -> <init>
    102:125:byte[] getData() -> getData
    92:92:int getTextLength() -> getTextLength
jxl.biff.formula.Add -> jxl.biff.formula.Add:
# {"id":"sourceFile","fileName":"Add.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    51:51:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.Area -> jxl.biff.formula.Area:
# {"id":"sourceFile","fileName":"Area.java"}
    36:36:void <clinit>() -> <clinit>
    82:82:void <init>() -> <init>
    91:105:void <init>(java.lang.String) -> <init>
    191:225:byte[] getBytes() -> getBytes
    115:115:int getFirstColumn() -> getFirstColumn
    135:135:int getLastColumn() -> getLastColumn
    178:180:void getString(java.lang.StringBuffer) -> getString
    157:166:int read(byte[],int) -> read
    405:412:void setRangeData(int,int,int,int,boolean,boolean,boolean,boolean) -> setRangeData
jxl.biff.formula.Area3d -> jxl.biff.formula.Area3d:
# {"id":"sourceFile","fileName":"Area3d.java"}
    36:36:void <clinit>() -> <clinit>
    94:95:void <init>(jxl.biff.formula.ExternalSheet) -> <init>
    106:143:void <init>(java.lang.String,jxl.biff.formula.ExternalSheet) -> <init>
    231:266:byte[] getBytes() -> getBytes
    153:153:int getFirstColumn() -> getFirstColumn
    173:173:int getLastColumn() -> getLastColumn
    217:220:void getString(java.lang.StringBuffer) -> getString
    195:205:int read(byte[],int) -> read
    448:456:void setRangeData(int,int,int,int,int,boolean,boolean,boolean,boolean) -> setRangeData
jxl.biff.formula.ArgumentSeparator -> jxl.biff.formula.ArgumentSeparator:
# {"id":"sourceFile","fileName":"ArgumentSeparator.java"}
    32:32:void <init>() -> <init>
jxl.biff.formula.Attribute -> jxl.biff.formula.Attribute:
# {"id":"sourceFile","fileName":"Attribute.java"}
    38:38:void <clinit>() -> <clinit>
    71:72:void <init>(jxl.WorkbookSettings) -> <init>
    82:91:void <init>(jxl.biff.formula.StringFunction,jxl.WorkbookSettings) -> <init>
    243:269:byte[] getBytes() -> getBytes
    282:362:byte[] getIf() -> getIf
    188:196:void getOperands(java.util.Stack) -> getOperands
    0:0:int getPrecedence() -> getPrecedence
    207:229:void getString(java.lang.StringBuffer) -> getString
    178:178:boolean isChoose() -> isChoose
    158:158:boolean isIf() -> isIf
    148:148:boolean isSum() -> isSum
    118:128:int read(byte[],int) -> read
    102:106:void setIfConditions(jxl.biff.formula.VariableArgFunction) -> setIfConditions
jxl.biff.formula.BinaryOperator -> jxl.biff.formula.BinaryOperator:
# {"id":"sourceFile","fileName":"BinaryOperator.java"}
    32:32:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    170:188:byte[] getBytes() -> getBytes
    60:64:void getOperands(java.util.Stack) -> getOperands
    74:77:void getString(java.lang.StringBuffer) -> getString
    0:0:int read(byte[],int) -> read
jxl.biff.formula.BooleanValue -> jxl.biff.formula.BooleanValue:
# {"id":"sourceFile","fileName":"BooleanValue.java"}
    36:36:void <init>() -> <init>
    45:47:void <init>(java.lang.String) -> <init>
    72:73:byte[] getBytes() -> getBytes
    86:86:void getString(java.lang.StringBuffer) -> getString
    60:60:int read(byte[],int) -> read
jxl.biff.formula.BuiltInFunction -> jxl.biff.formula.BuiltInFunction:
# {"id":"sourceFile","fileName":"BuiltInFunction.java"}
    38:38:void <clinit>() -> <clinit>
    55:56:void <init>(jxl.WorkbookSettings) -> <init>
    66:68:void <init>(jxl.biff.formula.Function,jxl.WorkbookSettings) -> <init>
    254:273:byte[] getBytes() -> getBytes
    94:105:void getOperands(java.util.Stack) -> getOperands
    0:0:int getPrecedence() -> getPrecedence
    116:135:void getString(java.lang.StringBuffer) -> getString
    80:82:int read(byte[],int) -> read
jxl.biff.formula.CellReference -> jxl.biff.formula.CellReference:
# {"id":"sourceFile","fileName":"CellReference.java"}
    36:36:void <clinit>() -> <clinit>
    70:71:void <init>(jxl.Cell) -> <init>
    87:91:void <init>(java.lang.String) -> <init>
    152:170:byte[] getBytes() -> getBytes
    139:139:void getString(java.lang.StringBuffer) -> getString
    103:107:int read(byte[],int) -> read
jxl.biff.formula.CellReference3d -> jxl.biff.formula.CellReference3d:
# {"id":"sourceFile","fileName":"CellReference3d.java"}
    37:37:void <clinit>() -> <clinit>
    82:84:void <init>(jxl.Cell,jxl.biff.formula.ExternalSheet) -> <init>
    95:119:void <init>(java.lang.String,jxl.biff.formula.ExternalSheet) -> <init>
    183:201:byte[] getBytes() -> getBytes
    170:170:void getString(java.lang.StringBuffer) -> getString
    133:138:int read(byte[],int) -> read
jxl.biff.formula.CellReferenceError -> jxl.biff.formula.CellReferenceError:
# {"id":"sourceFile","fileName":"CellReferenceError.java"}
    32:32:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    73:73:byte[] getBytes() -> getBytes
    62:62:void getString(java.lang.StringBuffer) -> getString
    0:0:int read(byte[],int) -> read
jxl.biff.formula.CloseParentheses -> jxl.biff.formula.CloseParentheses:
# {"id":"sourceFile","fileName":"CloseParentheses.java"}
    31:31:void <init>() -> <init>
jxl.biff.formula.ColumnRange -> jxl.biff.formula.ColumnRange:
# {"id":"sourceFile","fileName":"ColumnRange.java"}
    35:35:void <clinit>() -> <clinit>
    51:68:void <init>(java.lang.String) -> <init>
    81:83:void getString(java.lang.StringBuffer) -> getString
jxl.biff.formula.ColumnRange3d -> jxl.biff.formula.ColumnRange3d:
# {"id":"sourceFile","fileName":"ColumnRange3d.java"}
    35:35:void <clinit>() -> <clinit>
    67:108:void <init>(java.lang.String,jxl.biff.formula.ExternalSheet) -> <init>
    120:127:void getString(java.lang.StringBuffer) -> getString
jxl.biff.formula.Concatenate -> jxl.biff.formula.Concatenate:
# {"id":"sourceFile","fileName":"Concatenate.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    51:51:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.Divide -> jxl.biff.formula.Divide:
# {"id":"sourceFile","fileName":"Divide.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    51:51:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.DoubleValue -> jxl.biff.formula.DoubleValue:
# {"id":"sourceFile","fileName":"DoubleValue.java"}
    34:34:void <clinit>() -> <clinit>
    45:45:void <init>() -> <init>
    55:56:void <init>(double) -> <init>
    65:73:void <init>(java.lang.String) -> <init>
    99:101:byte[] getBytes() -> getBytes
    113:113:double getValue() -> getValue
    86:86:int read(byte[],int) -> read
jxl.biff.formula.Equal -> jxl.biff.formula.Equal:
# {"id":"sourceFile","fileName":"Equal.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    52:52:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.ErrorConstant -> jxl.biff.formula.ErrorConstant:
# {"id":"sourceFile","fileName":"ErrorConstant.java"}
    38:38:void <init>() -> <init>
    47:48:void <init>(java.lang.String) -> <init>
    73:74:byte[] getBytes() -> getBytes
    87:87:void getString(java.lang.StringBuffer) -> getString
    60:61:int read(byte[],int) -> read
jxl.biff.formula.ExternalSheet -> jxl.biff.formula.ExternalSheet:
# {"id":"sourceFile","fileName":"ExternalSheet.java"}
jxl.biff.formula.FormulaErrorCode -> jxl.biff.formula.FormulaErrorCode:
# {"id":"sourceFile","fileName":"FormulaErrorCode.java"}
    40:140:void <clinit>() -> <clinit>
    49:55:void <init>(int,java.lang.String) -> <init>
    65:65:int getCode() -> getCode
    75:75:java.lang.String getDescription() -> getDescription
    87:90:jxl.biff.formula.FormulaErrorCode getErrorCode(int) -> getErrorCode
    108:120:jxl.biff.formula.FormulaErrorCode getErrorCode(java.lang.String) -> getErrorCode
jxl.biff.formula.FormulaException -> jxl.biff.formula.FormulaException:
# {"id":"sourceFile","fileName":"FormulaException.java"}
    62:92:void <clinit>() -> <clinit>
    103:103:void <init>(jxl.biff.formula.FormulaException$FormulaMessage) -> <init>
    114:114:void <init>(jxl.biff.formula.FormulaException$FormulaMessage,int) -> <init>
    125:125:void <init>(jxl.biff.formula.FormulaException$FormulaMessage,java.lang.String) -> <init>
jxl.biff.formula.FormulaException$FormulaMessage -> jxl.biff.formula.FormulaException$FormulaMessage:
# {"id":"sourceFile","fileName":"FormulaException.java"}
    45:46:void <init>(java.lang.String) -> <init>
    32:32:java.lang.String access$000(jxl.biff.formula.FormulaException$FormulaMessage) -> access$000
jxl.biff.formula.FormulaParser -> jxl.biff.formula.FormulaParser:
# {"id":"sourceFile","fileName":"FormulaParser.java"}
    38:38:void <clinit>() -> <clinit>
    63:72:void <init>(byte[],jxl.Cell,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> <init>
    94:103:void <init>(byte[],jxl.Cell,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings,jxl.biff.formula.ParseContext) -> <init>
    118:119:void <init>(java.lang.String,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> <init>
    137:138:void <init>(java.lang.String,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings,jxl.biff.formula.ParseContext) -> <init>
    183:183:byte[] getBytes() -> getBytes
    172:172:java.lang.String getFormula() -> getFormula
    161:161:void parse() -> parse
jxl.biff.formula.Function -> jxl.biff.formula.Function:
# {"id":"sourceFile","fileName":"Function.java"}
    34:715:void <clinit>() -> <clinit>
    67:76:void <init>(int,java.lang.String,int) -> <init>
    96:96:int getCode() -> getCode
    141:150:jxl.biff.formula.Function getFunction(int) -> getFunction
    162:164:jxl.biff.formula.Function getFunction(java.lang.String,jxl.WorkbookSettings) -> getFunction
    175:175:jxl.biff.formula.Function[] getFunctions() -> getFunctions
    117:118:java.lang.String getName(jxl.WorkbookSettings) -> getName
    128:128:int getNumArgs() -> getNumArgs
    107:107:java.lang.String getPropertyName() -> getPropertyName
    86:86:int hashCode() -> hashCode
jxl.biff.formula.FunctionNames -> jxl.biff.formula.FunctionNames:
# {"id":"sourceFile","fileName":"FunctionNames.java"}
    38:38:void <clinit>() -> <clinit>
    58:78:void <init>(java.util.Locale) -> <init>
    91:91:jxl.biff.formula.Function getFunction(java.lang.String) -> getFunction
    102:102:java.lang.String getName(jxl.biff.formula.Function) -> getName
jxl.biff.formula.GreaterEqual -> jxl.biff.formula.GreaterEqual:
# {"id":"sourceFile","fileName":"GreaterEqual.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    46:46:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.GreaterThan -> jxl.biff.formula.GreaterThan:
# {"id":"sourceFile","fileName":"GreaterThan.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    46:46:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.IntegerValue -> jxl.biff.formula.IntegerValue:
# {"id":"sourceFile","fileName":"IntegerValue.java"}
    34:34:void <clinit>() -> <clinit>
    50:51:void <init>() -> <init>
    58:70:void <init>(java.lang.String) -> <init>
    95:97:byte[] getBytes() -> getBytes
    109:109:double getValue() -> getValue
    119:119:boolean isOutOfRange() -> isOutOfRange
    82:82:int read(byte[],int) -> read
jxl.biff.formula.LessEqual -> jxl.biff.formula.LessEqual:
# {"id":"sourceFile","fileName":"LessEqual.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    46:46:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.LessThan -> jxl.biff.formula.LessThan:
# {"id":"sourceFile","fileName":"LessThan.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    46:46:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.MemArea -> jxl.biff.formula.MemArea:
# {"id":"sourceFile","fileName":"MemArea.java"}
    33:33:void <init>() -> <init>
    38:48:void getString(java.lang.StringBuffer) -> getString
    62:62:int read(byte[],int) -> read
jxl.biff.formula.MemFunc -> jxl.biff.formula.MemFunc:
# {"id":"sourceFile","fileName":"MemFunc.java"}
    35:35:void <init>() -> <init>
    0:0:void getString(java.lang.StringBuffer) -> getString
jxl.biff.formula.Minus -> jxl.biff.formula.Minus:
# {"id":"sourceFile","fileName":"Minus.java"}
    32:32:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    47:47:jxl.biff.formula.Operator getBinaryOperator() -> getBinaryOperator
    55:55:jxl.biff.formula.Operator getUnaryOperator() -> getUnaryOperator
jxl.biff.formula.MissingArg -> jxl.biff.formula.MissingArg:
# {"id":"sourceFile","fileName":"MissingArg.java"}
    31:31:void <init>() -> <init>
    55:55:byte[] getBytes() -> getBytes
    0:0:void getString(java.lang.StringBuffer) -> getString
    0:0:int read(byte[],int) -> read
jxl.biff.formula.Multiply -> jxl.biff.formula.Multiply:
# {"id":"sourceFile","fileName":"Multiply.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    46:46:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.Name -> jxl.biff.formula.Name:
# {"id":"sourceFile","fileName":"Name.java"}
    32:32:void <init>() -> <init>
    0:0:byte[] getBytes() -> getBytes
    67:67:void getString(java.lang.StringBuffer) -> getString
    0:0:int read(byte[],int) -> read
jxl.biff.formula.NameRange -> jxl.biff.formula.NameRange:
# {"id":"sourceFile","fileName":"NameRange.java"}
    37:37:void <clinit>() -> <clinit>
    58:60:void <init>(jxl.biff.WorkbookMethods) -> <init>
    70:81:void <init>(java.lang.String,jxl.biff.WorkbookMethods) -> <init>
    116:123:byte[] getBytes() -> getBytes
    136:136:void getString(java.lang.StringBuffer) -> getString
    95:103:int read(byte[],int) -> read
jxl.biff.formula.NotEqual -> jxl.biff.formula.NotEqual:
# {"id":"sourceFile","fileName":"NotEqual.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    47:47:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.NumberValue -> jxl.biff.formula.NumberValue:
# {"id":"sourceFile","fileName":"NumberValue.java"}
    28:28:void <init>() -> <init>
    35:35:void getString(java.lang.StringBuffer) -> getString
jxl.biff.formula.OpenParentheses -> jxl.biff.formula.OpenParentheses:
# {"id":"sourceFile","fileName":"OpenParentheses.java"}
    32:32:void <init>() -> <init>
jxl.biff.formula.Operand -> jxl.biff.formula.Operand:
# {"id":"sourceFile","fileName":"Operand.java"}
    33:33:void <init>() -> <init>
jxl.biff.formula.Operator -> jxl.biff.formula.Operator:
# {"id":"sourceFile","fileName":"Operator.java"}
    40:41:void <init>() -> <init>
    60:66:void add(jxl.biff.formula.ParseItem) -> add
    79:79:jxl.biff.formula.ParseItem[] getOperands() -> getOperands
    49:51:void setOperandAlternateCode() -> setOperandAlternateCode
jxl.biff.formula.Parenthesis -> jxl.biff.formula.Parenthesis:
# {"id":"sourceFile","fileName":"Parenthesis.java"}
    33:33:void <init>() -> <init>
    172:178:byte[] getBytes() -> getBytes
    53:55:void getOperands(java.util.Stack) -> getOperands
    0:0:int getPrecedence() -> getPrecedence
    60:63:void getString(java.lang.StringBuffer) -> getString
    161:161:jxl.biff.formula.Token getToken() -> getToken
    0:0:int read(byte[],int) -> read
jxl.biff.formula.ParseContext -> jxl.biff.formula.ParseContext:
# {"id":"sourceFile","fileName":"ParseContext.java"}
    27:28:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
jxl.biff.formula.ParseItem -> jxl.biff.formula.ParseItem:
# {"id":"sourceFile","fileName":"ParseItem.java"}
    30:30:void <clinit>() -> <clinit>
    63:67:void <init>() -> <init>
    236:236:jxl.biff.formula.ParseContext getParseContext() -> getParseContext
    109:109:boolean isVolatile() -> isVolatile
    205:205:void setAlternateCode() -> setAlternateCode
    75:75:void setParent(jxl.biff.formula.ParseItem) -> setParent
    226:226:void setParseContext(jxl.biff.formula.ParseContext) -> setParseContext
    83:86:void setVolatile() -> setVolatile
    216:216:boolean useAlternateCode() -> useAlternateCode
jxl.biff.formula.Parser -> jxl.biff.formula.Parser:
# {"id":"sourceFile","fileName":"Parser.java"}
jxl.biff.formula.Percent -> jxl.biff.formula.Percent:
# {"id":"sourceFile","fileName":"Percent.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    41:43:void getString(java.lang.StringBuffer) -> getString
    0:0:java.lang.String getSymbol() -> getSymbol
    64:64:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.Plus -> jxl.biff.formula.Plus:
# {"id":"sourceFile","fileName":"Plus.java"}
    35:35:void <init>() -> <init>
    43:43:jxl.biff.formula.Operator getBinaryOperator() -> getBinaryOperator
    51:51:jxl.biff.formula.Operator getUnaryOperator() -> getUnaryOperator
jxl.biff.formula.Power -> jxl.biff.formula.Power:
# {"id":"sourceFile","fileName":"Power.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    46:46:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.RangeSeparator -> jxl.biff.formula.RangeSeparator:
# {"id":"sourceFile","fileName":"RangeSeparator.java"}
    35:35:void <init>() -> <init>
    72:82:byte[] getBytes() -> getBytes
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    50:50:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.SharedFormulaArea -> jxl.biff.formula.SharedFormulaArea:
# {"id":"sourceFile","fileName":"SharedFormulaArea.java"}
    53:54:void <init>(jxl.Cell) -> <init>
    142:149:byte[] getBytes() -> getBytes
    129:131:void getString(java.lang.StringBuffer) -> getString
    89:120:int read(byte[],int) -> read
jxl.biff.formula.SharedFormulaCellReference -> jxl.biff.formula.SharedFormulaCellReference:
# {"id":"sourceFile","fileName":"SharedFormulaCellReference.java"}
    35:35:void <clinit>() -> <clinit>
    70:71:void <init>(jxl.Cell) -> <init>
    129:145:byte[] getBytes() -> getBytes
    118:118:void getString(java.lang.StringBuffer) -> getString
    85:100:int read(byte[],int) -> read
jxl.biff.formula.StringFormulaParser -> jxl.biff.formula.StringFormulaParser:
# {"id":"sourceFile","fileName":"StringFormulaParser.java"}
    41:41:void <clinit>() -> <clinit>
    94:99:void <init>(java.lang.String,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings,jxl.biff.formula.ParseContext) -> <init>
    323:330:byte[] getBytes() -> getBytes
    306:313:java.lang.String getFormula() -> getFormula
    272:293:java.util.ArrayList getTokens() -> getTokens
    349:459:void handleFunction(jxl.biff.formula.StringFunction,java.util.Iterator,java.util.Stack) -> handleFunction
    542:559:void handleOperand(jxl.biff.formula.Operand,java.util.Stack) -> handleOperand
    109:113:void parse() -> parse
    126:257:jxl.biff.formula.ParseItem parseCurrent(java.util.Iterator) -> parseCurrent
jxl.biff.formula.StringFunction -> jxl.biff.formula.StringFunction:
# {"id":"sourceFile","fileName":"StringFunction.java"}
    35:35:void <clinit>() -> <clinit>
    53:54:void <init>(java.lang.String) -> <init>
    65:69:jxl.biff.formula.Function getFunction(jxl.WorkbookSettings) -> getFunction
jxl.biff.formula.StringOperator -> jxl.biff.formula.StringOperator:
# {"id":"sourceFile","fileName":"StringOperator.java"}
    39:39:void <init>() -> <init>
    69:69:byte[] getBytes() -> getBytes
    48:48:void getOperands(java.util.Stack) -> getOperands
    58:58:int getPrecedence() -> getPrecedence
    78:78:void getString(java.lang.StringBuffer) -> getString
jxl.biff.formula.StringParseItem -> jxl.biff.formula.StringParseItem:
# {"id":"sourceFile","fileName":"StringParseItem.java"}
    33:33:void <init>() -> <init>
    0:0:byte[] getBytes() -> getBytes
    0:0:void getString(java.lang.StringBuffer) -> getString
jxl.biff.formula.StringValue -> jxl.biff.formula.StringValue:
# {"id":"sourceFile","fileName":"StringValue.java"}
    37:37:void <clinit>() -> <clinit>
    53:54:void <init>(jxl.WorkbookSettings) -> <init>
    63:65:void <init>(java.lang.String) -> <init>
    101:105:byte[] getBytes() -> getBytes
    118:120:void getString(java.lang.StringBuffer) -> getString
    77:87:int read(byte[],int) -> read
jxl.biff.formula.SubExpression -> jxl.biff.formula.SubExpression:
# {"id":"sourceFile","fileName":"SubExpression.java"}
    45:45:void <init>() -> <init>
    0:0:byte[] getBytes() -> getBytes
    99:99:int getLength() -> getLength
    114:114:jxl.biff.formula.ParseItem[] getSubExpression() -> getSubExpression
    57:57:int read(byte[],int) -> read
    104:104:void setLength(int) -> setLength
    109:109:void setSubExpression(jxl.biff.formula.ParseItem[]) -> setSubExpression
jxl.biff.formula.Subtract -> jxl.biff.formula.Subtract:
# {"id":"sourceFile","fileName":"Subtract.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    46:46:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.Token -> jxl.biff.formula.Token:
# {"id":"sourceFile","fileName":"Token.java"}
    38:218:void <clinit>() -> <clinit>
    47:50:void <init>(int) -> <init>
    60:64:void <init>(int,int) -> <init>
    74:79:void <init>(int,int,int) -> <init>
    122:122:byte getCode() -> getCode
    144:144:byte getCode2() -> getCode2
    133:133:byte getReferenceCode() -> getReferenceCode
    163:165:jxl.biff.formula.Token getToken(int) -> getToken
    155:155:byte getValueCode() -> getValueCode
jxl.biff.formula.TokenFormulaParser -> jxl.biff.formula.TokenFormulaParser:
# {"id":"sourceFile","fileName":"TokenFormulaParser.java"}
    39:39:void <clinit>() -> <clinit>
    97:107:void <init>(byte[],jxl.Cell,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings,jxl.biff.formula.ParseContext) -> <init>
    459:462:void addOperator(jxl.biff.formula.Operator) -> addOperator
    495:495:byte[] getBytes() -> getBytes
    470:472:java.lang.String getFormula() -> getFormula
    430:449:void handleMemoryFunction(jxl.biff.formula.SubExpression) -> handleMemoryFunction
    118:124:void parse() -> parse
    142:419:void parseSubExpression(int) -> parseSubExpression
jxl.biff.formula.UnaryMinus -> jxl.biff.formula.UnaryMinus:
# {"id":"sourceFile","fileName":"UnaryMinus.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    46:46:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.UnaryOperator -> jxl.biff.formula.UnaryOperator:
# {"id":"sourceFile","fileName":"UnaryOperator.java"}
    33:33:void <init>() -> <init>
    155:161:byte[] getBytes() -> getBytes
    53:55:void getOperands(java.util.Stack) -> getOperands
    65:67:void getString(java.lang.StringBuffer) -> getString
    0:0:int read(byte[],int) -> read
jxl.biff.formula.UnaryPlus -> jxl.biff.formula.UnaryPlus:
# {"id":"sourceFile","fileName":"UnaryPlus.java"}
    31:31:void <init>() -> <init>
    0:0:int getPrecedence() -> getPrecedence
    0:0:java.lang.String getSymbol() -> getSymbol
    46:46:jxl.biff.formula.Token getToken() -> getToken
jxl.biff.formula.VariableArgFunction -> jxl.biff.formula.VariableArgFunction:
# {"id":"sourceFile","fileName":"VariableArgFunction.java"}
    38:38:void <clinit>() -> <clinit>
    65:67:void <init>(jxl.WorkbookSettings) -> <init>
    77:81:void <init>(jxl.biff.formula.Function,int,jxl.WorkbookSettings) -> <init>
    286:309:byte[] getBytes() -> getBytes
    276:276:jxl.biff.formula.Function getFunction() -> getFunction
    113:124:void getOperands(java.util.Stack) -> getOperands
    0:0:int getPrecedence() -> getPrecedence
    130:161:void getString(java.lang.StringBuffer) -> getString
    332:341:void handleSpecialCases() -> handleSpecialCases
    94:100:int read(byte[],int) -> read
jxl.biff.formula.Yylex -> jxl.biff.formula.Yylex:
# {"id":"sourceFile","fileName":"Yylex.java"}
    63:247:void <clinit>() -> <clinit>
    284:350:void <init>(java.io.Reader) -> <init>
    327:327:int getPos() -> getPos
    334:334:void setExternalSheet(jxl.biff.formula.ExternalSheet) -> setExternalSheet
    339:339:void setNameTable(jxl.biff.WorkbookMethods) -> setNameTable
    474:474:void yybegin(int) -> yybegin
    568:806:jxl.biff.formula.ParseItem yylex() -> yylex
    482:482:java.lang.String yytext() -> yytext
    392:421:boolean zzRefill() -> zzRefill
    527:533:void zzScanError(int) -> zzScanError
    83:83:int[] zzUnpackAction() -> zzUnpackAction
    90:94:int zzUnpackAction(java.lang.String,int,int[]) -> zzUnpackAction
    261:261:int[] zzUnpackAttribute() -> zzUnpackAttribute
    268:272:int zzUnpackAttribute(java.lang.String,int,int[]) -> zzUnpackAttribute
    374:376:char[] zzUnpackCMap(java.lang.String) -> zzUnpackCMap
    122:122:int[] zzUnpackRowMap() -> zzUnpackRowMap
    129:132:int zzUnpackRowMap(java.lang.String,int,int[]) -> zzUnpackRowMap
    214:214:int[] zzUnpackTrans() -> zzUnpackTrans
    221:226:int zzUnpackTrans(java.lang.String,int,int[]) -> zzUnpackTrans
jxl.common.Assert -> jxl.common.Assert:
# {"id":"sourceFile","fileName":"Assert.java"}
    37:37:void verify(boolean) -> verify
    51:51:void verify(boolean,java.lang.String) -> verify
jxl.common.AssertionFailed -> jxl.common.AssertionFailed:
# {"id":"sourceFile","fileName":"AssertionFailed.java"}
    34:35:void <init>() -> <init>
    46:46:void <init>(java.lang.String) -> <init>
jxl.common.Logger -> jxl.common.Logger:
# {"id":"sourceFile","fileName":"Logger.java"}
    0:0:void <clinit>() -> <clinit>
    103:103:void <init>() -> <init>
    40:45:jxl.common.Logger getLogger(java.lang.Class) -> getLogger
    53:97:void initializeLogger() -> initializeLogger
jxl.common.log.LoggerName -> jxl.common.log.LoggerName:
# {"id":"sourceFile","fileName":"LoggerName.java"}
    29:29:void <clinit>() -> <clinit>
jxl.common.log.SimpleLogger -> jxl.common.log.SimpleLogger:
# {"id":"sourceFile","fileName":"SimpleLogger.java"}
    38:39:void <init>() -> <init>
    72:73:void error(java.lang.Object) -> error
    0:0:jxl.common.Logger getLoggerImpl(java.lang.Class) -> getLoggerImpl
    174:174:void setSuppressWarnings(boolean) -> setSuppressWarnings
    134:137:void warn(java.lang.Object) -> warn
    146:150:void warn(java.lang.Object,java.lang.Throwable) -> warn
jxl.format.Alignment -> jxl.format.Alignment:
# {"id":"sourceFile","fileName":"Alignment.java"}
    41:124:void <clinit>() -> <clinit>
    50:57:void <init>(int,java.lang.String) -> <init>
    89:97:jxl.format.Alignment getAlignment(int) -> getAlignment
    68:68:int getValue() -> getValue
jxl.format.Border -> jxl.format.Border:
# {"id":"sourceFile","fileName":"Border.java"}
    48:53:void <clinit>() -> <clinit>
    36:37:void <init>(java.lang.String) -> <init>
jxl.format.BorderLineStyle -> jxl.format.BorderLineStyle:
# {"id":"sourceFile","fileName":"BorderLineStyle.java"}
    40:120:void <clinit>() -> <clinit>
    47:54:void <init>(int,java.lang.String) -> <init>
    72:72:java.lang.String getDescription() -> getDescription
    83:91:jxl.format.BorderLineStyle getStyle(int) -> getStyle
    64:64:int getValue() -> getValue
jxl.format.CellFormat -> jxl.format.CellFormat:
# {"id":"sourceFile","fileName":"CellFormat.java"}
jxl.format.Colour -> jxl.format.Colour:
# {"id":"sourceFile","fileName":"Colour.java"}
    48:244:void <clinit>() -> <clinit>
    60:68:void <init>(int,java.lang.String,int,int,int) -> <init>
    146:154:jxl.format.Colour getInternalColour(int) -> getInternalColour
    79:79:int getValue() -> getValue
jxl.format.Font -> jxl.format.Font:
# {"id":"sourceFile","fileName":"Font.java"}
jxl.format.Format -> jxl.format.Format:
# {"id":"sourceFile","fileName":"Format.java"}
jxl.format.Orientation -> jxl.format.Orientation:
# {"id":"sourceFile","fileName":"Orientation.java"}
    40:128:void <clinit>() -> <clinit>
    48:54:void <init>(int,java.lang.String) -> <init>
    83:91:jxl.format.Orientation getOrientation(int) -> getOrientation
    64:64:int getValue() -> getValue
jxl.format.PageOrder -> jxl.format.PageOrder:
# {"id":"sourceFile","fileName":"PageOrder.java"}
    37:42:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
jxl.format.PageOrientation -> jxl.format.PageOrientation:
# {"id":"sourceFile","fileName":"PageOrientation.java"}
    38:42:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
jxl.format.PaperSize -> jxl.format.PaperSize:
# {"id":"sourceFile","fileName":"PaperSize.java"}
    37:333:void <clinit>() -> <clinit>
    43:55:void <init>(int,boolean) -> <init>
    64:64:void <init>(int) -> <init>
    85:86:jxl.format.PaperSize getPaperSize(int) -> getPaperSize
    74:74:int getValue() -> getValue
jxl.format.Pattern -> jxl.format.Pattern:
# {"id":"sourceFile","fileName":"Pattern.java"}
    42:121:void <clinit>() -> <clinit>
    51:58:void <init>(int,java.lang.String) -> <init>
    90:98:jxl.format.Pattern getPattern(int) -> getPattern
    69:69:int getValue() -> getValue
jxl.format.RGB -> jxl.format.RGB:
# {"id":"sourceFile","fileName":"RGB.java"}
    51:54:void <init>(int,int,int) -> <init>
    84:84:int getBlue() -> getBlue
    74:74:int getGreen() -> getGreen
    64:64:int getRed() -> getRed
jxl.format.ScriptStyle -> jxl.format.ScriptStyle:
# {"id":"sourceFile","fileName":"ScriptStyle.java"}
    43:106:void <clinit>() -> <clinit>
    53:60:void <init>(int,java.lang.String) -> <init>
    92:100:jxl.format.ScriptStyle getStyle(int) -> getStyle
    71:71:int getValue() -> getValue
jxl.format.UnderlineStyle -> jxl.format.UnderlineStyle:
# {"id":"sourceFile","fileName":"UnderlineStyle.java"}
    43:115:void <clinit>() -> <clinit>
    52:59:void <init>(int,java.lang.String) -> <init>
    91:99:jxl.format.UnderlineStyle getStyle(int) -> getStyle
    70:70:int getValue() -> getValue
jxl.format.VerticalAlignment -> jxl.format.VerticalAlignment:
# {"id":"sourceFile","fileName":"VerticalAlignment.java"}
    40:115:void <clinit>() -> <clinit>
    48:55:void <init>(int,java.lang.String) -> <init>
    84:92:jxl.format.VerticalAlignment getAlignment(int) -> getAlignment
    65:65:int getValue() -> getValue
jxl.read.biff.BOFRecord -> jxl.read.biff.BOFRecord:
# {"id":"sourceFile","fileName":"BOFRecord.java"}
    36:36:void <clinit>() -> <clinit>
    79:82:void <init>(jxl.read.biff.Record) -> <init>
    158:158:int getLength() -> getLength
    102:102:boolean isBiff7() -> isBiff7
    92:92:boolean isBiff8() -> isBiff8
    148:148:boolean isChart() -> isChart
    115:115:boolean isWorkbookGlobals() -> isWorkbookGlobals
    126:126:boolean isWorksheet() -> isWorksheet
jxl.read.biff.BaseSharedFormulaRecord -> jxl.read.biff.BaseSharedFormulaRecord:
# {"id":"sourceFile","fileName":"BaseSharedFormulaRecord.java"}
    78:81:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl,int) -> <init>
    132:132:jxl.biff.formula.ExternalSheet getExternalSheet() -> getExternalSheet
    163:163:int getFilePos() -> getFilePos
    142:142:jxl.biff.WorkbookMethods getNameTable() -> getNameTable
    153:153:jxl.read.biff.Record getRecord() -> getRecord
    122:122:byte[] getTokens() -> getTokens
    112:112:void setTokens(byte[]) -> setTokens
jxl.read.biff.BiffException -> jxl.read.biff.BiffException:
# {"id":"sourceFile","fileName":"BiffException.java"}
    51:86:void <clinit>() -> <clinit>
    96:96:void <init>(jxl.read.biff.BiffException$BiffMessage) -> <init>
jxl.read.biff.BiffException$BiffMessage -> jxl.read.biff.BiffException$BiffMessage:
# {"id":"sourceFile","fileName":"BiffException.java"}
    44:45:void <init>(java.lang.String) -> <init>
jxl.read.biff.BlankCell -> jxl.read.biff.BlankCell:
# {"id":"sourceFile","fileName":"BlankCell.java"}
    40:40:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl) -> <init>
    0:0:java.lang.String getContents() -> getContents
    60:60:jxl.CellType getType() -> getType
jxl.read.biff.BooleanFormulaRecord -> jxl.read.biff.BooleanFormulaRecord:
# {"id":"sourceFile","fileName":"BooleanFormulaRecord.java"}
    79:88:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl) -> <init>
    112:112:java.lang.String getContents() -> getContents
    133:140:byte[] getFormulaData() -> getFormulaData
    122:122:jxl.CellType getType() -> getType
    101:101:boolean getValue() -> getValue
jxl.read.biff.BooleanRecord -> jxl.read.biff.BooleanRecord:
# {"id":"sourceFile","fileName":"BooleanRecord.java"}
    53:63:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl) -> <init>
    98:101:java.lang.String getContents() -> getContents
    122:122:jxl.read.biff.Record getRecord() -> getRecord
    111:111:jxl.CellType getType() -> getType
    88:88:boolean getValue() -> getValue
    75:75:boolean isError() -> isError
jxl.read.biff.BottomMarginRecord -> jxl.read.biff.BottomMarginRecord:
# {"id":"sourceFile","fileName":"BottomMarginRecord.java"}
    36:36:void <init>(jxl.read.biff.Record) -> <init>
jxl.read.biff.BoundsheetRecord -> jxl.read.biff.BoundsheetRecord:
# {"id":"sourceFile","fileName":"BoundsheetRecord.java"}
    57:57:void <clinit>() -> <clinit>
    67:86:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings) -> <init>
    100:108:void <init>(jxl.read.biff.Record,jxl.read.biff.BoundsheetRecord$Biff7) -> <init>
    118:118:java.lang.String getName() -> getName
    149:149:boolean isChart() -> isChart
    128:128:boolean isHidden() -> isHidden
    139:139:boolean isSheet() -> isSheet
jxl.read.biff.BoundsheetRecord$1 -> jxl.read.biff.BoundsheetRecord$1:
# {"id":"sourceFile","fileName":"BoundsheetRecord.java"}
jxl.read.biff.BoundsheetRecord$Biff7 -> jxl.read.biff.BoundsheetRecord$Biff7:
# {"id":"sourceFile","fileName":"BoundsheetRecord.java"}
    56:56:void <init>(jxl.read.biff.BoundsheetRecord$1) -> <init>
jxl.read.biff.ButtonPropertySetRecord -> jxl.read.biff.ButtonPropertySetRecord:
# {"id":"sourceFile","fileName":"ButtonPropertySetRecord.java"}
    34:34:void <clinit>() -> <clinit>
    45:45:void <init>(jxl.read.biff.Record) -> <init>
    55:55:byte[] getData() -> getData
jxl.read.biff.CalcModeRecord -> jxl.read.biff.CalcModeRecord:
# {"id":"sourceFile","fileName":"CalcModeRecord.java"}
    35:35:void <clinit>() -> <clinit>
    49:52:void <init>(jxl.read.biff.Record) -> <init>
    62:62:boolean isAutomatic() -> isAutomatic
jxl.read.biff.CellFeaturesAccessor -> jxl.read.biff.CellFeaturesAccessor:
# {"id":"sourceFile","fileName":"CellFeaturesAccessor.java"}
jxl.read.biff.CellValue -> jxl.read.biff.CellValue:
# {"id":"sourceFile","fileName":"CellValue.java"}
    41:41:void <clinit>() -> <clinit>
    93:100:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl) -> <init>
    192:192:jxl.CellFeatures getCellFeatures() -> getCellFeatures
    142:148:jxl.format.CellFormat getCellFormat() -> getCellFormat
    120:120:int getColumn() -> getColumn
    110:110:int getRow() -> getRow
    182:182:jxl.read.biff.SheetImpl getSheet() -> getSheet
    131:131:int getXFIndex() -> getXFIndex
    202:207:void setCellFeatures(jxl.CellFeatures) -> setCellFeatures
jxl.read.biff.CentreRecord -> jxl.read.biff.CentreRecord:
# {"id":"sourceFile","fileName":"CentreRecord.java"}
    42:44:void <init>(jxl.read.biff.Record) -> <init>
    54:54:boolean isCentre() -> isCentre
jxl.read.biff.CodepageRecord -> jxl.read.biff.CodepageRecord:
# {"id":"sourceFile","fileName":"CodepageRecord.java"}
    35:35:void <clinit>() -> <clinit>
    49:51:void <init>(jxl.read.biff.Record) -> <init>
    61:61:int getCharacterSet() -> getCharacterSet
jxl.read.biff.ColumnInfoRecord -> jxl.read.biff.ColumnInfoRecord:
# {"id":"sourceFile","fileName":"ColumnInfoRecord.java"}
    78:90:void <init>(jxl.read.biff.Record) -> <init>
    140:140:boolean getCollapsed() -> getCollapsed
    110:110:int getEndColumn() -> getEndColumn
    160:160:boolean getHidden() -> getHidden
    130:130:int getOutlineLevel() -> getOutlineLevel
    100:100:int getStartColumn() -> getStartColumn
    150:150:int getWidth() -> getWidth
    120:120:int getXFIndex() -> getXFIndex
jxl.read.biff.CompoundFile -> jxl.read.biff.CompoundFile:
# {"id":"sourceFile","fileName":"CompoundFile.java"}
    40:40:void <clinit>() -> <clinit>
    107:190:void <init>(byte[],jxl.WorkbookSettings) -> <init>
    371:371:jxl.biff.BaseCompoundFile$PropertyStorage findPropertyStorage(java.lang.String) -> findPropertyStorage
    381:415:jxl.biff.BaseCompoundFile$PropertyStorage findPropertyStorage(java.lang.String,jxl.biff.BaseCompoundFile$PropertyStorage) -> findPropertyStorage
    475:498:byte[] getBigBlockStream(jxl.biff.BaseCompoundFile$PropertyStorage) -> getBigBlockStream
    596:596:int getNumberOfPropertySets() -> getNumberOfPropertySets
    608:608:jxl.biff.BaseCompoundFile$PropertyStorage getPropertySet(int) -> getPropertySet
    429:451:jxl.biff.BaseCompoundFile$PropertyStorage getPropertyStorage(java.lang.String) -> getPropertyStorage
    464:464:jxl.biff.BaseCompoundFile$PropertyStorage getPropertyStorage(int) -> getPropertyStorage
    513:544:byte[] getSmallBlockStream(jxl.biff.BaseCompoundFile$PropertyStorage) -> getSmallBlockStream
    319:336:byte[] getStream(java.lang.String) -> getStream
    350:359:byte[] getStream(int) -> getStream
    200:208:void readBigBlockDepot() -> readBigBlockDepot
    564:584:byte[] readData(int) -> readData
    271:306:void readPropertySets() -> readPropertySets
    223:259:void readSmallBlockDepot() -> readSmallBlockDepot
jxl.read.biff.CountryRecord -> jxl.read.biff.CountryRecord:
# {"id":"sourceFile","fileName":"CountryRecord.java"}
    35:35:void <clinit>() -> <clinit>
    54:58:void <init>(jxl.read.biff.Record) -> <init>
    68:68:int getLanguageCode() -> getLanguageCode
    78:78:int getRegionalSettingsCode() -> getRegionalSettingsCode
jxl.read.biff.DateFormulaRecord -> jxl.read.biff.DateFormulaRecord:
# {"id":"sourceFile","fileName":"DateFormulaRecord.java"}
    74:78:void <init>(jxl.read.biff.NumberFormulaRecord,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,boolean,jxl.read.biff.SheetImpl) -> <init>
    99:105:byte[] getFormulaData() -> getFormulaData
    88:88:jxl.CellType getType() -> getType
jxl.read.biff.DateRecord -> jxl.read.biff.DateRecord:
# {"id":"sourceFile","fileName":"DateRecord.java"}
    45:115:void <clinit>() -> <clinit>
    143:195:void <init>(jxl.NumberCell,int,jxl.biff.FormattingRecords,boolean,jxl.read.biff.SheetImpl) -> <init>
    333:333:jxl.CellFeatures getCellFeatures() -> getCellFeatures
    283:289:jxl.format.CellFormat getCellFormat() -> getCellFormat
    215:215:int getColumn() -> getColumn
    236:236:java.lang.String getContents() -> getContents
    225:225:java.util.Date getDate() -> getDate
    205:205:int getRow() -> getRow
    323:323:jxl.read.biff.SheetImpl getSheet() -> getSheet
    246:246:jxl.CellType getType() -> getType
    257:257:boolean isTime() -> isTime
    343:343:void setCellFeatures(jxl.CellFeatures) -> setCellFeatures
jxl.read.biff.DefaultColumnWidthRecord -> jxl.read.biff.DefaultColumnWidthRecord:
# {"id":"sourceFile","fileName":"DefaultColumnWidthRecord.java"}
    42:45:void <init>(jxl.read.biff.Record) -> <init>
    56:56:int getWidth() -> getWidth
jxl.read.biff.DefaultRowHeightRecord -> jxl.read.biff.DefaultRowHeightRecord:
# {"id":"sourceFile","fileName":"DefaultRowHeightRecord.java"}
    42:47:void <init>(jxl.read.biff.Record) -> <init>
    58:58:int getHeight() -> getHeight
jxl.read.biff.DimensionRecord -> jxl.read.biff.DimensionRecord:
# {"id":"sourceFile","fileName":"DimensionRecord.java"}
    35:50:void <clinit>() -> <clinit>
    59:72:void <init>(jxl.read.biff.Record) -> <init>
    84:86:void <init>(jxl.read.biff.Record,jxl.read.biff.DimensionRecord$Biff7) -> <init>
    126:126:int getNumberOfColumns() -> getNumberOfColumns
    116:116:int getNumberOfRows() -> getNumberOfRows
    95:96:void read10ByteData(byte[]) -> read10ByteData
    105:106:void read14ByteData(byte[]) -> read14ByteData
jxl.read.biff.DimensionRecord$1 -> jxl.read.biff.DimensionRecord$1:
# {"id":"sourceFile","fileName":"DimensionRecord.java"}
jxl.read.biff.DimensionRecord$Biff7 -> jxl.read.biff.DimensionRecord$Biff7:
# {"id":"sourceFile","fileName":"DimensionRecord.java"}
    49:49:void <init>(jxl.read.biff.DimensionRecord$1) -> <init>
jxl.read.biff.ErrorFormulaRecord -> jxl.read.biff.ErrorFormulaRecord:
# {"id":"sourceFile","fileName":"ErrorFormulaRecord.java"}
    84:92:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl) -> <init>
    114:119:java.lang.String getContents() -> getContents
    104:104:int getErrorCode() -> getErrorCode
    141:148:byte[] getFormulaData() -> getFormulaData
    130:130:jxl.CellType getType() -> getType
jxl.read.biff.ErrorRecord -> jxl.read.biff.ErrorRecord:
# {"id":"sourceFile","fileName":"ErrorRecord.java"}
    46:50:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl) -> <init>
    72:72:java.lang.String getContents() -> getContents
    82:82:jxl.CellType getType() -> getType
jxl.read.biff.Excel9FileRecord -> jxl.read.biff.Excel9FileRecord:
# {"id":"sourceFile","fileName":"Excel9FileRecord.java"}
    33:33:void <clinit>() -> <clinit>
    47:48:void <init>(jxl.read.biff.Record) -> <init>
    58:58:boolean getExcel9File() -> getExcel9File
jxl.read.biff.ExternalNameRecord -> jxl.read.biff.ExternalNameRecord:
# {"id":"sourceFile","fileName":"ExternalNameRecord.java"}
    38:38:void <clinit>() -> <clinit>
    58:83:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings) -> <init>
    104:104:java.lang.String getName() -> getName
    94:94:boolean isAddInFunction() -> isAddInFunction
jxl.read.biff.ExternalSheetRecord -> jxl.read.biff.ExternalSheetRecord:
# {"id":"sourceFile","fileName":"ExternalSheetRecord.java"}
    37:43:void <clinit>() -> <clinit>
    91:112:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings) -> <init>
    127:129:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings,jxl.read.biff.ExternalSheetRecord$Biff7) -> <init>
    159:159:int getFirstTabIndex(int) -> getFirstTabIndex
    170:170:int getLastTabIndex(int) -> getLastTabIndex
    138:138:int getNumRecords() -> getNumRecords
    148:148:int getSupbookIndex(int) -> getSupbookIndex
jxl.read.biff.ExternalSheetRecord$1 -> jxl.read.biff.ExternalSheetRecord$1:
# {"id":"sourceFile","fileName":"ExternalSheetRecord.java"}
jxl.read.biff.ExternalSheetRecord$Biff7 -> jxl.read.biff.ExternalSheetRecord$Biff7:
# {"id":"sourceFile","fileName":"ExternalSheetRecord.java"}
    42:42:void <init>(jxl.read.biff.ExternalSheetRecord$1) -> <init>
jxl.read.biff.ExternalSheetRecord$XTI -> jxl.read.biff.ExternalSheetRecord$XTI:
# {"id":"sourceFile","fileName":"ExternalSheetRecord.java"}
    71:74:void <init>(int,int,int) -> <init>
jxl.read.biff.File -> jxl.read.biff.File:
# {"id":"sourceFile","fileName":"File.java"}
    42:42:void <clinit>() -> <clinit>
    84:149:void <init>(java.io.InputStream,jxl.WorkbookSettings) -> <init>
    303:303:void clear() -> clear
    326:326:jxl.read.biff.CompoundFile getCompoundFile() -> getCompoundFile
    238:238:int getPos() -> getPos
    314:314:boolean hasNext() -> hasNext
    181:181:jxl.read.biff.Record next() -> next
    192:194:jxl.read.biff.Record peek() -> peek
    217:226:byte[] read(int,int) -> read
    266:266:void restorePos() -> restorePos
    254:255:void setPos(int) -> setPos
    205:205:void skip(int) -> skip
jxl.read.biff.FooterRecord -> jxl.read.biff.FooterRecord:
# {"id":"sourceFile","fileName":"FooterRecord.java"}
    41:41:void <clinit>() -> <clinit>
    51:69:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings) -> <init>
    82:91:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings,jxl.read.biff.FooterRecord$Biff7) -> <init>
    101:101:java.lang.String getFooter() -> getFooter
jxl.read.biff.FooterRecord$1 -> jxl.read.biff.FooterRecord$1:
# {"id":"sourceFile","fileName":"FooterRecord.java"}
jxl.read.biff.FooterRecord$Biff7 -> jxl.read.biff.FooterRecord$Biff7:
# {"id":"sourceFile","fileName":"FooterRecord.java"}
    40:40:void <init>(jxl.read.biff.FooterRecord$1) -> <init>
jxl.read.biff.FormulaRecord -> jxl.read.biff.FormulaRecord:
# {"id":"sourceFile","fileName":"FormulaRecord.java"}
    41:58:void <clinit>() -> <clinit>
    82:167:void <init>(jxl.read.biff.Record,jxl.read.biff.File,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl,jxl.WorkbookSettings) -> <init>
    195:225:void <init>(jxl.read.biff.Record,jxl.read.biff.File,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.FormulaRecord$IgnoreSharedFormula,jxl.read.biff.SheetImpl,jxl.WorkbookSettings) -> <init>
    236:236:java.lang.String getContents() -> getContents
    258:258:jxl.read.biff.CellValue getFormula() -> getFormula
    247:248:jxl.CellType getType() -> getType
    269:269:boolean isShared() -> isShared
jxl.read.biff.FormulaRecord$1 -> jxl.read.biff.FormulaRecord$1:
# {"id":"sourceFile","fileName":"FormulaRecord.java"}
jxl.read.biff.FormulaRecord$IgnoreSharedFormula -> jxl.read.biff.FormulaRecord$IgnoreSharedFormula:
# {"id":"sourceFile","fileName":"FormulaRecord.java"}
    57:57:void <init>(jxl.read.biff.FormulaRecord$1) -> <init>
jxl.read.biff.GuttersRecord -> jxl.read.biff.GuttersRecord:
# {"id":"sourceFile","fileName":"GuttersRecord.java"}
    42:48:void <init>(jxl.read.biff.Record) -> <init>
    58:58:int getColumnOutlineLevel() -> getColumnOutlineLevel
    53:53:int getRowOutlineLevel() -> getRowOutlineLevel
jxl.read.biff.HeaderRecord -> jxl.read.biff.HeaderRecord:
# {"id":"sourceFile","fileName":"HeaderRecord.java"}
    37:48:void <clinit>() -> <clinit>
    58:76:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings) -> <init>
    89:98:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings,jxl.read.biff.HeaderRecord$Biff7) -> <init>
    108:108:java.lang.String getHeader() -> getHeader
jxl.read.biff.HeaderRecord$1 -> jxl.read.biff.HeaderRecord$1:
# {"id":"sourceFile","fileName":"HeaderRecord.java"}
jxl.read.biff.HeaderRecord$Biff7 -> jxl.read.biff.HeaderRecord$Biff7:
# {"id":"sourceFile","fileName":"HeaderRecord.java"}
    47:47:void <init>(jxl.read.biff.HeaderRecord$1) -> <init>
jxl.read.biff.HideobjRecord -> jxl.read.biff.HideobjRecord:
# {"id":"sourceFile","fileName":"HideobjRecord.java"}
    34:34:void <clinit>() -> <clinit>
    48:50:void <init>(jxl.read.biff.Record) -> <init>
    60:60:int getHideMode() -> getHideMode
jxl.read.biff.HorizontalPageBreaksRecord -> jxl.read.biff.HorizontalPageBreaksRecord:
# {"id":"sourceFile","fileName":"HorizontalPageBreaksRecord.java"}
    47:47:void <clinit>() -> <clinit>
    35:66:void <init>(jxl.read.biff.Record) -> <init>
    35:87:void <init>(jxl.read.biff.Record,jxl.read.biff.HorizontalPageBreaksRecord$Biff7) -> <init>
    99:99:int[] getRowBreaks() -> getRowBreaks
jxl.read.biff.HorizontalPageBreaksRecord$1 -> jxl.read.biff.HorizontalPageBreaksRecord$1:
# {"id":"sourceFile","fileName":"HorizontalPageBreaksRecord.java"}
jxl.read.biff.HorizontalPageBreaksRecord$Biff7 -> jxl.read.biff.HorizontalPageBreaksRecord$Biff7:
# {"id":"sourceFile","fileName":"HorizontalPageBreaksRecord.java"}
    46:46:void <init>(jxl.read.biff.HorizontalPageBreaksRecord$1) -> <init>
jxl.read.biff.HyperlinkRecord -> jxl.read.biff.HyperlinkRecord:
# {"id":"sourceFile","fileName":"HyperlinkRecord.java"}
    47:99:void <clinit>() -> <clinit>
    110:283:void <init>(jxl.read.biff.Record,jxl.Sheet,jxl.WorkbookSettings) -> <init>
    335:335:int getColumn() -> getColumn
    375:375:java.io.File getFile() -> getFile
    355:355:int getLastColumn() -> getLastColumn
    345:345:int getLastRow() -> getLastRow
    407:407:java.lang.String getLocation() -> getLocation
    385:385:jxl.read.biff.Record getRecord() -> getRecord
    325:325:int getRow() -> getRow
    365:365:java.net.URL getURL() -> getURL
    295:295:boolean isFile() -> isFile
    315:315:boolean isLocation() -> isLocation
    305:305:boolean isURL() -> isURL
jxl.read.biff.HyperlinkRecord$1 -> jxl.read.biff.HyperlinkRecord$1:
# {"id":"sourceFile","fileName":"HyperlinkRecord.java"}
jxl.read.biff.HyperlinkRecord$LinkType -> jxl.read.biff.HyperlinkRecord$LinkType:
# {"id":"sourceFile","fileName":"HyperlinkRecord.java"}
    94:94:void <init>(jxl.read.biff.HyperlinkRecord$1) -> <init>
jxl.read.biff.LabelRecord -> jxl.read.biff.LabelRecord:
# {"id":"sourceFile","fileName":"LabelRecord.java"}
    48:48:void <clinit>() -> <clinit>
    61:71:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl,jxl.WorkbookSettings) -> <init>
    87:91:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl,jxl.WorkbookSettings,jxl.read.biff.LabelRecord$Biff7) -> <init>
    111:111:java.lang.String getContents() -> getContents
    101:101:java.lang.String getString() -> getString
    121:121:jxl.CellType getType() -> getType
jxl.read.biff.LabelRecord$1 -> jxl.read.biff.LabelRecord$1:
# {"id":"sourceFile","fileName":"LabelRecord.java"}
jxl.read.biff.LabelRecord$Biff7 -> jxl.read.biff.LabelRecord$Biff7:
# {"id":"sourceFile","fileName":"LabelRecord.java"}
    47:47:void <init>(jxl.read.biff.LabelRecord$1) -> <init>
jxl.read.biff.LabelSSTRecord -> jxl.read.biff.LabelSSTRecord:
# {"id":"sourceFile","fileName":"LabelSSTRecord.java"}
    53:56:void <init>(jxl.read.biff.Record,jxl.read.biff.SSTRecord,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl) -> <init>
    76:76:java.lang.String getContents() -> getContents
    66:66:java.lang.String getString() -> getString
    86:86:jxl.CellType getType() -> getType
jxl.read.biff.LeftMarginRecord -> jxl.read.biff.LeftMarginRecord:
# {"id":"sourceFile","fileName":"LeftMarginRecord.java"}
    36:36:void <init>(jxl.read.biff.Record) -> <init>
jxl.read.biff.MarginRecord -> jxl.read.biff.MarginRecord:
# {"id":"sourceFile","fileName":"MarginRecord.java"}
    45:49:void <init>(jxl.biff.Type,jxl.read.biff.Record) -> <init>
    59:59:double getMargin() -> getMargin
jxl.read.biff.MergedCellsRecord -> jxl.read.biff.MergedCellsRecord:
# {"id":"sourceFile","fileName":"MergedCellsRecord.java"}
    46:67:void <init>(jxl.read.biff.Record,jxl.Sheet) -> <init>
    81:81:jxl.Range[] getRanges() -> getRanges
jxl.read.biff.MulBlankCell -> jxl.read.biff.MulBlankCell:
# {"id":"sourceFile","fileName":"MulBlankCell.java"}
    39:39:void <clinit>() -> <clinit>
    94:100:void <init>(int,int,int,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl) -> <init>
    190:190:jxl.CellFeatures getCellFeatures() -> getCellFeatures
    150:156:jxl.format.CellFormat getCellFormat() -> getCellFormat
    120:120:int getColumn() -> getColumn
    0:0:java.lang.String getContents() -> getContents
    110:110:int getRow() -> getRow
    140:140:jxl.CellType getType() -> getType
    200:205:void setCellFeatures(jxl.CellFeatures) -> setCellFeatures
jxl.read.biff.MulBlankRecord -> jxl.read.biff.MulBlankRecord:
# {"id":"sourceFile","fileName":"MulBlankRecord.java"}
    35:35:void <clinit>() -> <clinit>
    65:74:void <init>(jxl.read.biff.Record) -> <init>
    109:109:int getFirstColumn() -> getFirstColumn
    119:119:int getNumberOfColumns() -> getNumberOfColumns
    99:99:int getRow() -> getRow
    129:129:int getXFIndex(int) -> getXFIndex
    85:87:void readBlanks(byte[]) -> readBlanks
jxl.read.biff.MulRKRecord -> jxl.read.biff.MulRKRecord:
# {"id":"sourceFile","fileName":"MulRKRecord.java"}
    35:35:void <clinit>() -> <clinit>
    69:79:void <init>(jxl.read.biff.Record) -> <init>
    118:118:int getFirstColumn() -> getFirstColumn
    128:128:int getNumberOfColumns() -> getNumberOfColumns
    139:139:int getRKNumber(int) -> getRKNumber
    108:108:int getRow() -> getRow
    150:150:int getXFIndex(int) -> getXFIndex
    91:96:void readRks(byte[]) -> readRks
jxl.read.biff.NameRecord -> jxl.read.biff.NameRecord:
# {"id":"sourceFile","fileName":"NameRecord.java"}
    42:74:void <clinit>() -> <clinit>
    63:355:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings,int) -> <init>
    63:484:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings,int,jxl.read.biff.NameRecord$Biff7) -> <init>
    505:505:jxl.biff.BuiltInName getBuiltInName() -> getBuiltInName
    557:557:byte[] getData() -> getData
    527:527:int getIndex() -> getIndex
    495:495:java.lang.String getName() -> getName
    516:517:jxl.read.biff.NameRecord$NameRange[] getRanges() -> getRanges
    538:538:int getSheetRef() -> getSheetRef
    567:567:boolean isBiff8() -> isBiff8
    577:577:boolean isGlobal() -> isGlobal
jxl.read.biff.NameRecord$1 -> jxl.read.biff.NameRecord$1:
# {"id":"sourceFile","fileName":"NameRecord.java"}
jxl.read.biff.NameRecord$Biff7 -> jxl.read.biff.NameRecord$Biff7:
# {"id":"sourceFile","fileName":"NameRecord.java"}
    73:73:void <init>(jxl.read.biff.NameRecord$1) -> <init>
jxl.read.biff.NameRecord$NameRange -> jxl.read.biff.NameRecord$NameRange:
# {"id":"sourceFile","fileName":"NameRecord.java"}
    126:131:void <init>(jxl.read.biff.NameRecord,int,int,int,int,int) -> <init>
    181:181:int getExternalSheet() -> getExternalSheet
    141:141:int getFirstColumn() -> getFirstColumn
    151:151:int getFirstRow() -> getFirstRow
    161:161:int getLastColumn() -> getLastColumn
    171:171:int getLastRow() -> getLastRow
jxl.read.biff.NineteenFourRecord -> jxl.read.biff.NineteenFourRecord:
# {"id":"sourceFile","fileName":"NineteenFourRecord.java"}
    41:45:void <init>(jxl.read.biff.Record) -> <init>
    58:58:boolean is1904() -> is1904
jxl.read.biff.NumberFormulaRecord -> jxl.read.biff.NumberFormulaRecord:
# {"id":"sourceFile","fileName":"NumberFormulaRecord.java"}
    47:62:void <clinit>() -> <clinit>
    98:111:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl) -> <init>
    131:131:java.lang.String getContents() -> getContents
    152:159:byte[] getFormulaData() -> getFormulaData
    141:141:jxl.CellType getType() -> getType
    121:121:double getValue() -> getValue
jxl.read.biff.NumberRecord -> jxl.read.biff.NumberRecord:
# {"id":"sourceFile","fileName":"NumberRecord.java"}
    41:56:void <clinit>() -> <clinit>
    67:76:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl) -> <init>
    97:97:java.lang.String getContents() -> getContents
    107:107:jxl.CellType getType() -> getType
    87:87:double getValue() -> getValue
jxl.read.biff.NumberValue -> jxl.read.biff.NumberValue:
# {"id":"sourceFile","fileName":"NumberValue.java"}
    89:89:void <clinit>() -> <clinit>
    105:113:void <init>(int,int,double,int,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl) -> <init>
    239:239:jxl.CellFeatures getCellFeatures() -> getCellFeatures
    188:194:jxl.format.CellFormat getCellFormat() -> getCellFormat
    148:148:int getColumn() -> getColumn
    168:168:java.lang.String getContents() -> getContents
    138:138:int getRow() -> getRow
    178:178:jxl.CellType getType() -> getType
    158:158:double getValue() -> getValue
    249:249:void setCellFeatures(jxl.CellFeatures) -> setCellFeatures
    127:127:void setNumberFormat(java.text.NumberFormat) -> setNumberFormat
jxl.read.biff.PLSRecord -> jxl.read.biff.PLSRecord:
# {"id":"sourceFile","fileName":"PLSRecord.java"}
    36:36:void <init>(jxl.read.biff.Record) -> <init>
    46:46:byte[] getData() -> getData
jxl.read.biff.PaneRecord -> jxl.read.biff.PaneRecord:
# {"id":"sourceFile","fileName":"PaneRecord.java"}
    35:35:void <clinit>() -> <clinit>
    53:57:void <init>(jxl.read.biff.Record) -> <init>
    77:77:int getColumnsVisible() -> getColumnsVisible
    67:67:int getRowsVisible() -> getRowsVisible
jxl.read.biff.PasswordException -> jxl.read.biff.PasswordException:
# {"id":"sourceFile","fileName":"PasswordException.java"}
    33:33:void <init>() -> <init>
jxl.read.biff.PasswordRecord -> jxl.read.biff.PasswordRecord:
# {"id":"sourceFile","fileName":"PasswordRecord.java"}
    47:50:void <init>(jxl.read.biff.Record) -> <init>
    60:60:int getPasswordHash() -> getPasswordHash
jxl.read.biff.PrintGridLinesRecord -> jxl.read.biff.PrintGridLinesRecord:
# {"id":"sourceFile","fileName":"PrintGridLinesRecord.java"}
    41:44:void <init>(jxl.read.biff.Record) -> <init>
    54:54:boolean getPrintGridLines() -> getPrintGridLines
jxl.read.biff.PrintHeadersRecord -> jxl.read.biff.PrintHeadersRecord:
# {"id":"sourceFile","fileName":"PrintHeadersRecord.java"}
    41:44:void <init>(jxl.read.biff.Record) -> <init>
    54:54:boolean getPrintHeaders() -> getPrintHeaders
jxl.read.biff.ProtectRecord -> jxl.read.biff.ProtectRecord:
# {"id":"sourceFile","fileName":"ProtectRecord.java"}
    42:47:void <init>(jxl.read.biff.Record) -> <init>
    57:57:boolean isProtected() -> isProtected
jxl.read.biff.RKHelper -> jxl.read.biff.RKHelper:
# {"id":"sourceFile","fileName":"RKHelper.java"}
    58:58:double getDouble(int) -> getDouble
jxl.read.biff.RKRecord -> jxl.read.biff.RKRecord:
# {"id":"sourceFile","fileName":"RKRecord.java"}
    40:55:void <clinit>() -> <clinit>
    66:75:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl) -> <init>
    96:96:java.lang.String getContents() -> getContents
    106:106:jxl.CellType getType() -> getType
    86:86:double getValue() -> getValue
jxl.read.biff.RStringRecord -> jxl.read.biff.RStringRecord:
# {"id":"sourceFile","fileName":"RStringRecord.java"}
    47:47:void <clinit>() -> <clinit>
    61:65:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.read.biff.SheetImpl,jxl.WorkbookSettings,jxl.read.biff.RStringRecord$Biff7) -> <init>
    85:85:java.lang.String getContents() -> getContents
    75:75:java.lang.String getString() -> getString
    95:95:jxl.CellType getType() -> getType
jxl.read.biff.RStringRecord$1 -> jxl.read.biff.RStringRecord$1:
# {"id":"sourceFile","fileName":"RStringRecord.java"}
jxl.read.biff.RStringRecord$Biff7 -> jxl.read.biff.RStringRecord$Biff7:
# {"id":"sourceFile","fileName":"RStringRecord.java"}
    46:46:void <init>(jxl.read.biff.RStringRecord$1) -> <init>
jxl.read.biff.Record -> jxl.read.biff.Record:
# {"id":"sourceFile","fileName":"Record.java"}
    38:38:void <clinit>() -> <clinit>
    78:85:void <init>(byte[],int,jxl.read.biff.File) -> <init>
    177:182:void addContinueRecord(jxl.read.biff.Record) -> addContinueRecord
    156:156:int getCode() -> getCode
    115:146:byte[] getData() -> getData
    105:105:int getLength() -> getLength
    95:95:jxl.biff.Type getType() -> getType
    167:167:void setType(jxl.biff.Type) -> setType
jxl.read.biff.RefreshAllRecord -> jxl.read.biff.RefreshAllRecord:
# {"id":"sourceFile","fileName":"RefreshAllRecord.java"}
    34:34:void <clinit>() -> <clinit>
    48:51:void <init>(jxl.read.biff.Record) -> <init>
    61:61:boolean getRefreshAll() -> getRefreshAll
jxl.read.biff.RightMarginRecord -> jxl.read.biff.RightMarginRecord:
# {"id":"sourceFile","fileName":"RightMarginRecord.java"}
    35:35:void <init>(jxl.read.biff.Record) -> <init>
jxl.read.biff.RowRecord -> jxl.read.biff.RowRecord:
# {"id":"sourceFile","fileName":"RowRecord.java"}
    35:35:void <clinit>() -> <clinit>
    84:97:void <init>(jxl.read.biff.Record) -> <init>
    147:147:boolean getGroupStart() -> getGroupStart
    137:137:int getOutlineLevel() -> getOutlineLevel
    157:157:int getRowHeight() -> getRowHeight
    127:127:int getRowNumber() -> getRowNumber
    177:177:int getXFIndex() -> getXFIndex
    187:187:boolean hasDefaultFormat() -> hasDefaultFormat
    167:167:boolean isCollapsed() -> isCollapsed
    107:107:boolean isDefaultHeight() -> isDefaultHeight
    117:117:boolean matchesDefaultFontHeight() -> matchesDefaultFontHeight
jxl.read.biff.SCLRecord -> jxl.read.biff.SCLRecord:
# {"id":"sourceFile","fileName":"SCLRecord.java"}
    47:52:void <init>(jxl.read.biff.Record) -> <init>
    62:62:int getZoomFactor() -> getZoomFactor
jxl.read.biff.SSTRecord -> jxl.read.biff.SSTRecord:
# {"id":"sourceFile","fileName":"SSTRecord.java"}
    82:123:void <init>(jxl.read.biff.Record,jxl.read.biff.Record[],jxl.WorkbookSettings) -> <init>
    233:276:int getChars(byte[],jxl.read.biff.SSTRecord$ByteArrayHolder,int,jxl.read.biff.SSTRecord$BooleanHolder,int) -> getChars
    303:411:int getContinuedString(byte[],jxl.read.biff.SSTRecord$ByteArrayHolder,int,int,jxl.read.biff.SSTRecord$BooleanHolder,int) -> getContinuedString
    426:427:java.lang.String getString(int) -> getString
    145:208:void readStrings(byte[],int,jxl.WorkbookSettings) -> readStrings
jxl.read.biff.SSTRecord$1 -> jxl.read.biff.SSTRecord$1:
# {"id":"sourceFile","fileName":"SSTRecord.java"}
jxl.read.biff.SSTRecord$BooleanHolder -> jxl.read.biff.SSTRecord$BooleanHolder:
# {"id":"sourceFile","fileName":"SSTRecord.java"}
    65:65:void <init>(jxl.read.biff.SSTRecord$1) -> <init>
jxl.read.biff.SSTRecord$ByteArrayHolder -> jxl.read.biff.SSTRecord$ByteArrayHolder:
# {"id":"sourceFile","fileName":"SSTRecord.java"}
    54:54:void <init>(jxl.read.biff.SSTRecord$1) -> <init>
jxl.read.biff.SaveRecalcRecord -> jxl.read.biff.SaveRecalcRecord:
# {"id":"sourceFile","fileName":"SaveRecalcRecord.java"}
    35:35:void <clinit>() -> <clinit>
    49:52:void <init>(jxl.read.biff.Record) -> <init>
    62:62:boolean getRecalculateOnSave() -> getRecalculateOnSave
jxl.read.biff.SetupRecord -> jxl.read.biff.SetupRecord:
# {"id":"sourceFile","fileName":"SetupRecord.java"}
    35:35:void <clinit>() -> <clinit>
    115:136:void <init>(jxl.read.biff.Record) -> <init>
    258:258:int getCopies() -> getCopies
    228:228:int getFitHeight() -> getFitHeight
    218:218:int getFitWidth() -> getFitWidth
    178:178:double getFooterMargin() -> getFooterMargin
    168:168:double getHeaderMargin() -> getHeaderMargin
    238:238:int getHorizontalPrintResolution() -> getHorizontalPrintResolution
    269:269:boolean getInitialized() -> getInitialized
    208:208:int getPageStart() -> getPageStart
    188:188:int getPaperSize() -> getPaperSize
    198:198:int getScaleFactor() -> getScaleFactor
    248:248:int getVerticalPrintResolution() -> getVerticalPrintResolution
    146:146:boolean isPortrait() -> isPortrait
    158:158:boolean isRightDown() -> isRightDown
jxl.read.biff.SharedBooleanFormulaRecord -> jxl.read.biff.SharedBooleanFormulaRecord:
# {"id":"sourceFile","fileName":"SharedBooleanFormulaRecord.java"}
    46:46:void <clinit>() -> <clinit>
    74:75:void <init>(jxl.read.biff.Record,jxl.read.biff.File,boolean,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl) -> <init>
    99:99:java.lang.String getContents() -> getContents
    121:152:byte[] getFormulaData() -> getFormulaData
    109:109:jxl.CellType getType() -> getType
    88:88:boolean getValue() -> getValue
jxl.read.biff.SharedDateFormulaRecord -> jxl.read.biff.SharedDateFormulaRecord:
# {"id":"sourceFile","fileName":"SharedDateFormulaRecord.java"}
    69:76:void <init>(jxl.read.biff.SharedNumberFormulaRecord,jxl.biff.FormattingRecords,boolean,jxl.read.biff.SheetImpl,int) -> <init>
    96:96:java.lang.String getContents() -> getContents
    158:158:java.util.Date getDate() -> getDate
    118:146:byte[] getFormulaData() -> getFormulaData
    106:106:jxl.CellType getType() -> getType
    169:169:boolean isTime() -> isTime
jxl.read.biff.SharedErrorFormulaRecord -> jxl.read.biff.SharedErrorFormulaRecord:
# {"id":"sourceFile","fileName":"SharedErrorFormulaRecord.java"}
    46:46:void <clinit>() -> <clinit>
    83:84:void <init>(jxl.read.biff.Record,jxl.read.biff.File,int,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl) -> <init>
    106:111:java.lang.String getContents() -> getContents
    96:96:int getErrorCode() -> getErrorCode
    134:166:byte[] getFormulaData() -> getFormulaData
    122:122:jxl.CellType getType() -> getType
jxl.read.biff.SharedFormulaRecord -> jxl.read.biff.SharedFormulaRecord:
# {"id":"sourceFile","fileName":"SharedFormulaRecord.java"}
    42:42:void <clinit>() -> <clinit>
    104:118:void <init>(jxl.read.biff.Record,jxl.read.biff.BaseSharedFormulaRecord,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl) -> <init>
    131:137:boolean add(jxl.read.biff.BaseSharedFormulaRecord) -> add
    156:209:jxl.Cell[] getFormulas(jxl.biff.FormattingRecords,boolean) -> getFormulas
    222:222:jxl.read.biff.BaseSharedFormulaRecord getTemplateFormula() -> getTemplateFormula
jxl.read.biff.SharedNumberFormulaRecord -> jxl.read.biff.SharedNumberFormulaRecord:
# {"id":"sourceFile","fileName":"SharedNumberFormulaRecord.java"}
    50:68:void <clinit>() -> <clinit>
    89:91:void <init>(jxl.read.biff.Record,jxl.read.biff.File,double,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl) -> <init>
    127:127:java.lang.String getContents() -> getContents
    149:177:byte[] getFormulaData() -> getFormulaData
    190:190:java.text.NumberFormat getNumberFormat() -> getNumberFormat
    137:137:jxl.CellType getType() -> getType
    117:117:double getValue() -> getValue
    106:106:void setNumberFormat(java.text.NumberFormat) -> setNumberFormat
jxl.read.biff.SharedStringFormulaRecord -> jxl.read.biff.SharedStringFormulaRecord:
# {"id":"sourceFile","fileName":"SharedStringFormulaRecord.java"}
    49:60:void <clinit>() -> <clinit>
    81:148:void <init>(jxl.read.biff.Record,jxl.read.biff.File,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl,jxl.WorkbookSettings) -> <init>
    170:172:void <init>(jxl.read.biff.Record,jxl.read.biff.File,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl,jxl.read.biff.SharedStringFormulaRecord$EmptyString) -> <init>
    192:192:java.lang.String getContents() -> getContents
    214:247:byte[] getFormulaData() -> getFormulaData
    182:182:java.lang.String getString() -> getString
    202:202:jxl.CellType getType() -> getType
jxl.read.biff.SharedStringFormulaRecord$1 -> jxl.read.biff.SharedStringFormulaRecord$1:
# {"id":"sourceFile","fileName":"SharedStringFormulaRecord.java"}
jxl.read.biff.SharedStringFormulaRecord$EmptyString -> jxl.read.biff.SharedStringFormulaRecord$EmptyString:
# {"id":"sourceFile","fileName":"SharedStringFormulaRecord.java"}
    59:59:void <init>(jxl.read.biff.SharedStringFormulaRecord$1) -> <init>
jxl.read.biff.SheetImpl -> jxl.read.biff.SheetImpl:
# {"id":"sourceFile","fileName":"SheetImpl.java"}
    68:68:void <clinit>() -> <clinit>
    282:320:void <init>(jxl.read.biff.File,jxl.read.biff.SSTRecord,jxl.biff.FormattingRecords,jxl.read.biff.BOFRecord,jxl.read.biff.BOFRecord,boolean,jxl.read.biff.WorkbookParser) -> <init>
    1202:1207:void addLocalName(jxl.read.biff.NameRecord) -> addLocalName
    678:687:void clear() -> clear
    1230:1230:jxl.biff.AutoFilter getAutoFilter() -> getAutoFilter
    1121:1121:jxl.read.biff.ButtonPropertySetRecord getButtonPropertySet() -> getButtonPropertySet
    351:361:jxl.Cell getCell(int,int) -> getCell
    919:923:jxl.biff.drawing.Chart[] getCharts() -> getCharts
    653:656:jxl.read.biff.ColumnInfoRecord[] getColumnInfos() -> getColumnInfos
    909:909:int[] getColumnPageBreaks() -> getColumnPageBreaks
    486:491:int getColumns() -> getColumns
    1217:1219:jxl.biff.ConditionalFormat[] getConditionalFormats() -> getConditionalFormats
    857:857:jxl.biff.DataValidation getDataValidation() -> getDataValidation
    935:936:jxl.biff.drawing.DrawingGroupObject[] getDrawings() -> getDrawings
    809:813:jxl.Hyperlink[] getHyperlinks() -> getHyperlinks
    1240:1240:int getMaxColumnOutlineLevel() -> getMaxColumnOutlineLevel
    1250:1250:int getMaxRowOutlineLevel() -> getMaxRowOutlineLevel
    826:826:jxl.Range[] getMergedCells() -> getMergedCells
    583:583:java.lang.String getName() -> getName
    1111:1111:jxl.read.biff.PLSRecord getPLS() -> getPLS
    505:530:jxl.Cell[] getRow(int) -> getRow
    899:899:int[] getRowPageBreaks() -> getRowPageBreaks
    841:844:jxl.read.biff.RowRecord[] getRowProperties() -> getRowProperties
    469:474:int getRows() -> getRows
    969:969:jxl.SheetSettings getSettings() -> getSettings
    1089:1089:jxl.read.biff.BOFRecord getSheetBof() -> getSheetBof
    980:980:jxl.read.biff.WorkbookParser getWorkbook() -> getWorkbook
    1100:1100:jxl.read.biff.BOFRecord getWorkbookBof() -> getWorkbookBof
    959:959:jxl.biff.WorkspaceInformationRecord getWorkspaceOptions() -> getWorkspaceOptions
    699:793:void readSheet() -> readSheet
    669:669:void setHidden(boolean) -> setHidden
    593:593:void setName(java.lang.String) -> setName
jxl.read.biff.SheetReader -> jxl.read.biff.SheetReader:
# {"id":"sourceFile","fileName":"SheetReader.java"}
    80:80:void <clinit>() -> <clinit>
    272:291:void <init>(jxl.read.biff.File,jxl.read.biff.SSTRecord,jxl.biff.FormattingRecords,jxl.read.biff.BOFRecord,jxl.read.biff.BOFRecord,boolean,jxl.read.biff.WorkbookParser,int,jxl.read.biff.SheetImpl) -> <init>
    303:317:void addCell(jxl.Cell) -> addCell
    1492:1525:void addCellComment(int,int,java.lang.String,double,double) -> addCellComment
    1552:1584:void addCellValidation(int,int,int,int,jxl.biff.DataValiditySettingsRecord) -> addCellValidation
    1228:1231:boolean addToSharedFormulas(jxl.read.biff.BaseSharedFormulaRecord) -> addToSharedFormulas
    1374:1374:jxl.biff.AutoFilter getAutoFilter() -> getAutoFilter
    1474:1474:jxl.read.biff.ButtonPropertySetRecord getButtonPropertySet() -> getButtonPropertySet
    1324:1324:jxl.Cell[][] getCells() -> getCells
    1384:1384:java.util.ArrayList getCharts() -> getCharts
    1444:1444:int[] getColumnBreaks() -> getColumnBreaks
    1344:1344:java.util.ArrayList getColumnInfosArray() -> getColumnInfosArray
    1364:1364:java.util.ArrayList getConditionalFormats() -> getConditionalFormats
    1404:1404:jxl.biff.DataValidation getDataValidation() -> getDataValidation
    1394:1394:java.util.ArrayList getDrawings() -> getDrawings
    1354:1354:java.util.ArrayList getHyperlinks() -> getHyperlinks
    1930:1930:int getMaxColumnOutlineLevel() -> getMaxColumnOutlineLevel
    1940:1940:int getMaxRowOutlineLevel() -> getMaxRowOutlineLevel
    1414:1414:jxl.Range[] getMergedCells() -> getMergedCells
    1314:1314:int getNumCols() -> getNumCols
    1304:1304:int getNumRows() -> getNumRows
    1464:1464:jxl.read.biff.PLSRecord getPLS() -> getPLS
    1434:1434:int[] getRowBreaks() -> getRowBreaks
    1334:1334:java.util.ArrayList getRowProperties() -> getRowProperties
    1424:1424:jxl.SheetSettings getSettings() -> getSettings
    1454:1454:jxl.biff.WorkspaceInformationRecord getWorkspaceOptions() -> getWorkspaceOptions
    1605:1850:void handleObjectRecord(jxl.biff.drawing.ObjRecord,jxl.biff.drawing.MsoDrawingRecord,java.util.HashMap) -> handleObjectRecord
    1868:1920:void handleOutOfBoundsCells() -> handleOutOfBoundsCells
    340:1212:void read() -> read
    1250:1288:jxl.Cell revertSharedFormula(jxl.read.biff.BaseSharedFormulaRecord) -> revertSharedFormula
jxl.read.biff.StringFormulaRecord -> jxl.read.biff.StringFormulaRecord:
# {"id":"sourceFile","fileName":"StringFormulaRecord.java"}
    49:49:void <clinit>() -> <clinit>
    95:129:void <init>(jxl.read.biff.Record,jxl.read.biff.File,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl,jxl.WorkbookSettings) -> <init>
    149:155:void <init>(jxl.read.biff.Record,jxl.biff.FormattingRecords,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.read.biff.SheetImpl) -> <init>
    225:225:java.lang.String getContents() -> getContents
    256:263:byte[] getFormulaData() -> getFormulaData
    235:235:java.lang.String getString() -> getString
    245:245:jxl.CellType getType() -> getType
    168:214:void readString(byte[],jxl.WorkbookSettings) -> readString
jxl.read.biff.SupbookRecord -> jxl.read.biff.SupbookRecord:
# {"id":"sourceFile","fileName":"SupbookRecord.java"}
    38:70:void <clinit>() -> <clinit>
    80:115:void <init>(jxl.read.biff.Record,jxl.WorkbookSettings) -> <init>
    247:285:java.lang.String getEncodedFilename(byte[],int,int) -> getEncodedFilename
    213:213:java.lang.String getFileName() -> getFileName
    203:203:int getNumberOfSheets() -> getNumberOfSheets
    224:224:java.lang.String getSheetName(int) -> getSheetName
    192:192:jxl.read.biff.SupbookRecord$Type getType() -> getType
    298:336:java.lang.String getUnicodeEncodedFilename(byte[],int,int) -> getUnicodeEncodedFilename
    127:179:void readExternal(byte[],jxl.WorkbookSettings) -> readExternal
jxl.read.biff.SupbookRecord$1 -> jxl.read.biff.SupbookRecord$1:
# {"id":"sourceFile","fileName":"SupbookRecord.java"}
jxl.read.biff.SupbookRecord$Type -> jxl.read.biff.SupbookRecord$Type:
# {"id":"sourceFile","fileName":"SupbookRecord.java"}
    63:63:void <init>(jxl.read.biff.SupbookRecord$1) -> <init>
jxl.read.biff.TemplateRecord -> jxl.read.biff.TemplateRecord:
# {"id":"sourceFile","fileName":"TemplateRecord.java"}
    33:33:void <clinit>() -> <clinit>
    47:48:void <init>(jxl.read.biff.Record) -> <init>
    58:58:boolean getTemplate() -> getTemplate
jxl.read.biff.TopMarginRecord -> jxl.read.biff.TopMarginRecord:
# {"id":"sourceFile","fileName":"TopMarginRecord.java"}
    35:35:void <init>(jxl.read.biff.Record) -> <init>
jxl.read.biff.VerticalPageBreaksRecord -> jxl.read.biff.VerticalPageBreaksRecord:
# {"id":"sourceFile","fileName":"VerticalPageBreaksRecord.java"}
    47:47:void <clinit>() -> <clinit>
    35:66:void <init>(jxl.read.biff.Record) -> <init>
    35:87:void <init>(jxl.read.biff.Record,jxl.read.biff.VerticalPageBreaksRecord$Biff7) -> <init>
    99:99:int[] getColumnBreaks() -> getColumnBreaks
jxl.read.biff.VerticalPageBreaksRecord$1 -> jxl.read.biff.VerticalPageBreaksRecord$1:
# {"id":"sourceFile","fileName":"VerticalPageBreaksRecord.java"}
jxl.read.biff.VerticalPageBreaksRecord$Biff7 -> jxl.read.biff.VerticalPageBreaksRecord$Biff7:
# {"id":"sourceFile","fileName":"VerticalPageBreaksRecord.java"}
    46:46:void <init>(jxl.read.biff.VerticalPageBreaksRecord$1) -> <init>
jxl.read.biff.Window2Record -> jxl.read.biff.Window2Record:
# {"id":"sourceFile","fileName":"Window2Record.java"}
    35:74:void <clinit>() -> <clinit>
    83:96:void <init>(jxl.read.biff.Record) -> <init>
    108:118:void <init>(jxl.read.biff.Record,jxl.read.biff.Window2Record$Biff7) -> <init>
    148:148:boolean getDisplayZeroValues() -> getDisplayZeroValues
    158:158:boolean getFrozen() -> getFrozen
    138:138:boolean getShowGridLines() -> getShowGridLines
    178:178:boolean isPageBreakPreview() -> isPageBreakPreview
jxl.read.biff.Window2Record$1 -> jxl.read.biff.Window2Record$1:
# {"id":"sourceFile","fileName":"Window2Record.java"}
jxl.read.biff.Window2Record$Biff7 -> jxl.read.biff.Window2Record$Biff7:
# {"id":"sourceFile","fileName":"Window2Record.java"}
    73:73:void <init>(jxl.read.biff.Window2Record$1) -> <init>
jxl.read.biff.WindowProtectedRecord -> jxl.read.biff.WindowProtectedRecord:
# {"id":"sourceFile","fileName":"WindowProtectedRecord.java"}
    34:34:void <clinit>() -> <clinit>
    48:51:void <init>(jxl.read.biff.Record) -> <init>
    61:61:boolean getWindowProtected() -> getWindowProtected
jxl.read.biff.WorkbookParser -> jxl.read.biff.WorkbookParser:
# {"id":"sourceFile","fileName":"WorkbookParser.java"}
    65:65:void <clinit>() -> <clinit>
    187:199:void <init>(jxl.read.biff.File,jxl.WorkbookSettings) -> <init>
    535:535:void addSheet(jxl.Sheet) -> addSheet
    516:524:void close() -> close
    1221:1221:boolean containsMacros() -> containsMacros
    1252:1252:java.lang.String[] getAddInFunctionNames() -> getAddInFunctionNames
    1231:1231:jxl.read.biff.ButtonPropertySetRecord getButtonPropertySet() -> getButtonPropertySet
    1211:1211:jxl.read.biff.CompoundFile getCompoundFile() -> getCompoundFile
    1241:1241:jxl.read.biff.CountryRecord getCountryRecord() -> getCountryRecord
    1197:1197:jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    0:0:int getExternalSheetIndex(java.lang.String) -> getExternalSheetIndex
    371:441:java.lang.String getExternalSheetName(int) -> getExternalSheetName
    951:951:jxl.read.biff.ExternalSheetRecord getExternalSheetRecord() -> getExternalSheetRecord
    996:996:jxl.biff.Fonts getFonts() -> getFonts
    940:940:jxl.biff.FormattingRecords getFormattingRecords() -> getFormattingRecords
    1170:1174:java.lang.String getName(int) -> getName
    1185:1187:int getNameIndex(java.lang.String) -> getNameIndex
    985:986:jxl.read.biff.NameRecord[] getNameRecords() -> getNameRecords
    507:507:int getNumberOfSheets() -> getNumberOfSheets
    1135:1135:jxl.WorkbookSettings getSettings() -> getSettings
    239:259:jxl.Sheet getSheet(int) -> getSheet
    973:974:jxl.read.biff.SupbookRecord[] getSupbookRecords() -> getSupbookRecords
    1115:1115:jxl.read.biff.BOFRecord getWorkbookBof() -> getWorkbookBof
    1287:1287:jxl.biff.XCTRecord[] getXCTRecords() -> getXCTRecords
    1125:1125:boolean isProtected() -> isProtected
    548:927:void parse() -> parse
jxl.read.biff.WriteAccessRecord -> jxl.read.biff.WriteAccessRecord:
# {"id":"sourceFile","fileName":"WriteAccessRecord.java"}
    45:56:void <init>(jxl.read.biff.Record,boolean,jxl.WorkbookSettings) -> <init>
    67:67:java.lang.String getWriteAccess() -> getWriteAccess
jxl.write.Blank -> jxl.write.Blank:
# {"id":"sourceFile","fileName":"Blank.java"}
    42:42:void <init>(int,int) -> <init>
    56:56:void <init>(int,int,jxl.format.CellFormat) -> <init>
    67:67:void <init>(jxl.Cell) -> <init>
jxl.write.Boolean -> jxl.write.Boolean:
# {"id":"sourceFile","fileName":"Boolean.java"}
    68:68:void <init>(jxl.BooleanCell) -> <init>
jxl.write.DateFormat -> jxl.write.DateFormat:
# {"id":"sourceFile","fileName":"DateFormat.java"}
    47:50:void <init>(java.lang.String) -> <init>
jxl.write.DateFormats -> jxl.write.DateFormats:
# {"id":"sourceFile","fileName":"DateFormats.java"}
    145:215:void <clinit>() -> <clinit>
jxl.write.DateFormats$BuiltInFormat -> jxl.write.DateFormats$BuiltInFormat:
# {"id":"sourceFile","fileName":"DateFormats.java"}
    50:52:void <init>(int,java.lang.String) -> <init>
    119:126:boolean equals(java.lang.Object) -> equals
    62:62:int getFormatIndex() -> getFormatIndex
    136:136:int hashCode() -> hashCode
    0:0:void initialize(int) -> initialize
    0:0:boolean isBuiltIn() -> isBuiltIn
    0:0:boolean isInitialized() -> isInitialized
jxl.write.DateTime -> jxl.write.DateTime:
# {"id":"sourceFile","fileName":"DateTime.java"}
    46:46:void <clinit>() -> <clinit>
    129:129:void <init>(jxl.DateCell) -> <init>
jxl.write.Label -> jxl.write.Label:
# {"id":"sourceFile","fileName":"Label.java"}
    56:56:void <init>(int,int,java.lang.String,jxl.format.CellFormat) -> <init>
    79:79:void <init>(jxl.LabelCell) -> <init>
jxl.write.Number -> jxl.write.Number:
# {"id":"sourceFile","fileName":"Number.java"}
    69:69:void <init>(jxl.NumberCell) -> <init>
jxl.write.NumberFormats -> jxl.write.NumberFormats:
# {"id":"sourceFile","fileName":"NumberFormats.java"}
    148:301:void <clinit>() -> <clinit>
jxl.write.NumberFormats$BuiltInFormat -> jxl.write.NumberFormats$BuiltInFormat:
# {"id":"sourceFile","fileName":"NumberFormats.java"}
    52:54:void <init>(int,java.lang.String) -> <init>
    120:127:boolean equals(java.lang.Object) -> equals
    64:64:int getFormatIndex() -> getFormatIndex
    137:137:int hashCode() -> hashCode
    0:0:void initialize(int) -> initialize
    0:0:boolean isBuiltIn() -> isBuiltIn
    0:0:boolean isInitialized() -> isInitialized
jxl.write.WritableCell -> jxl.write.WritableCell:
# {"id":"sourceFile","fileName":"WritableCell.java"}
jxl.write.WritableCellFeatures -> jxl.write.WritableCellFeatures:
# {"id":"sourceFile","fileName":"WritableCellFeatures.java"}
    34:46:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    64:64:void <init>(jxl.CellFeatures) -> <init>
    95:95:void removeComment() -> removeComment
    104:104:void removeDataValidation() -> removeDataValidation
jxl.write.WritableCellFormat -> jxl.write.WritableCellFormat:
# {"id":"sourceFile","fileName":"WritableCellFormat.java"}
    63:63:void <init>(jxl.write.WritableFont) -> <init>
    74:74:void <init>(jxl.biff.DisplayFormat) -> <init>
    86:86:void <init>(jxl.write.WritableFont,jxl.biff.DisplayFormat) -> <init>
    107:107:void setAlignment(jxl.format.Alignment) -> setAlignment
    179:179:void setBackground(jxl.format.Colour) -> setBackground
    191:191:void setBackground(jxl.format.Colour,jxl.format.Pattern) -> setBackground
    154:154:void setBorder(jxl.format.Border,jxl.format.BorderLineStyle) -> setBorder
    168:168:void setBorder(jxl.format.Border,jxl.format.BorderLineStyle,jxl.format.Colour) -> setBorder
jxl.write.WritableFont -> jxl.write.WritableFont:
# {"id":"sourceFile","fileName":"WritableFont.java"}
    80:106:void <clinit>() -> <clinit>
    121:121:void <init>(jxl.write.WritableFont$FontName) -> <init>
    137:137:void <init>(jxl.format.Font) -> <init>
    149:149:void <init>(jxl.write.WritableFont$FontName,int) -> <init>
    164:164:void <init>(jxl.write.WritableFont$FontName,int,jxl.write.WritableFont$BoldStyle) -> <init>
    225:225:void <init>(jxl.write.WritableFont$FontName,int,jxl.write.WritableFont$BoldStyle,boolean,jxl.format.UnderlineStyle,jxl.format.Colour) -> <init>
    250:250:void <init>(jxl.write.WritableFont$FontName,int,jxl.write.WritableFont$BoldStyle,boolean,jxl.format.UnderlineStyle,jxl.format.Colour,jxl.format.ScriptStyle) -> <init>
    332:332:boolean isStruckout() -> isStruckout
    310:310:void setColour(jxl.format.Colour) -> setColour
jxl.write.WritableFont$BoldStyle -> jxl.write.WritableFont$BoldStyle:
# {"id":"sourceFile","fileName":"WritableFont.java"}
    71:72:void <init>(int) -> <init>
jxl.write.WritableFont$FontName -> jxl.write.WritableFont$FontName:
# {"id":"sourceFile","fileName":"WritableFont.java"}
    50:51:void <init>(java.lang.String) -> <init>
jxl.write.WritableHyperlink -> jxl.write.WritableHyperlink:
# {"id":"sourceFile","fileName":"WritableHyperlink.java"}
    42:42:void <init>(jxl.Hyperlink,jxl.write.WritableSheet) -> <init>
jxl.write.WritableImage -> jxl.write.WritableImage:
# {"id":"sourceFile","fileName":"WritableImage.java"}
    43:57:void <clinit>() -> <clinit>
    102:102:void <init>(jxl.biff.drawing.DrawingGroupObject,jxl.biff.drawing.DrawingGroup) -> <init>
    206:206:byte[] getImageData() -> getImageData
jxl.write.WritableSheet -> jxl.write.WritableSheet:
# {"id":"sourceFile","fileName":"WritableSheet.java"}
jxl.write.WritableWorkbook -> jxl.write.WritableWorkbook:
# {"id":"sourceFile","fileName":"WritableWorkbook.java"}
    40:69:void <clinit>() -> <clinit>
    76:76:void <init>() -> <init>
jxl.write.WriteException -> jxl.write.WriteException:
# {"id":"sourceFile","fileName":"WriteException.java"}
    36:36:void <init>(java.lang.String) -> <init>
jxl.write.biff.BOFRecord -> jxl.write.biff.BOFRecord:
# {"id":"sourceFile","fileName":"BOFRecord.java"}
    40:42:void <clinit>() -> <clinit>
    51:55:void <init>(jxl.write.biff.BOFRecord$WorkbookGlobalsBOF) -> <init>
    82:86:void <init>(jxl.write.biff.BOFRecord$SheetBOF) -> <init>
    113:113:byte[] getData() -> getData
jxl.write.biff.BOFRecord$1 -> jxl.write.biff.BOFRecord$1:
# {"id":"sourceFile","fileName":"BOFRecord.java"}
jxl.write.biff.BOFRecord$SheetBOF -> jxl.write.biff.BOFRecord$SheetBOF:
# {"id":"sourceFile","fileName":"BOFRecord.java"}
    38:38:void <init>(jxl.write.biff.BOFRecord$1) -> <init>
jxl.write.biff.BOFRecord$WorkbookGlobalsBOF -> jxl.write.biff.BOFRecord$WorkbookGlobalsBOF:
# {"id":"sourceFile","fileName":"BOFRecord.java"}
    37:37:void <init>(jxl.write.biff.BOFRecord$1) -> <init>
jxl.write.biff.BackupRecord -> jxl.write.biff.BackupRecord:
# {"id":"sourceFile","fileName":"BackupRecord.java"}
    48:57:void <init>(boolean) -> <init>
    68:68:byte[] getData() -> getData
jxl.write.biff.BlankRecord -> jxl.write.biff.BlankRecord:
# {"id":"sourceFile","fileName":"BlankRecord.java"}
    37:37:void <clinit>() -> <clinit>
    48:48:void <init>(int,int) -> <init>
    61:61:void <init>(int,int,jxl.format.CellFormat) -> <init>
    72:72:void <init>(jxl.Cell) -> <init>
    0:0:java.lang.String getContents() -> getContents
    94:94:jxl.CellType getType() -> getType
jxl.write.biff.BookboolRecord -> jxl.write.biff.BookboolRecord:
# {"id":"sourceFile","fileName":"BookboolRecord.java"}
    48:55:void <init>(boolean) -> <init>
    66:66:byte[] getData() -> getData
jxl.write.biff.BooleanRecord -> jxl.write.biff.BooleanRecord:
# {"id":"sourceFile","fileName":"BooleanRecord.java"}
    75:76:void <init>(jxl.BooleanCell) -> <init>
    113:113:java.lang.String getContents() -> getContents
    143:149:byte[] getData() -> getData
    123:123:jxl.CellType getType() -> getType
    102:102:boolean getValue() -> getValue
jxl.write.biff.BottomMarginRecord -> jxl.write.biff.BottomMarginRecord:
# {"id":"sourceFile","fileName":"BottomMarginRecord.java"}
    31:31:void <init>(double) -> <init>
jxl.write.biff.BoundsheetRecord -> jxl.write.biff.BoundsheetRecord:
# {"id":"sourceFile","fileName":"BoundsheetRecord.java"}
    59:62:void <init>(java.lang.String) -> <init>
    88:109:byte[] getData() -> getData
    78:78:void setChartOnly() -> setChartOnly
    70:70:void setHidden() -> setHidden
jxl.write.biff.ButtonPropertySetRecord -> jxl.write.biff.ButtonPropertySetRecord:
# {"id":"sourceFile","fileName":"ButtonPropertySetRecord.java"}
    40:42:void <init>(jxl.read.biff.ButtonPropertySetRecord) -> <init>
    62:62:byte[] getData() -> getData
jxl.write.biff.CalcCountRecord -> jxl.write.biff.CalcCountRecord:
# {"id":"sourceFile","fileName":"CalcCountRecord.java"}
    48:49:void <init>(int) -> <init>
    62:62:byte[] getData() -> getData
jxl.write.biff.CalcModeRecord -> jxl.write.biff.CalcModeRecord:
# {"id":"sourceFile","fileName":"CalcModeRecord.java"}
    58:66:void <clinit>() -> <clinit>
    75:76:void <init>(jxl.write.biff.CalcModeRecord$CalcMode) -> <init>
    89:89:byte[] getData() -> getData
jxl.write.biff.CalcModeRecord$CalcMode -> jxl.write.biff.CalcModeRecord$CalcMode:
# {"id":"sourceFile","fileName":"CalcModeRecord.java"}
    50:51:void <init>(int) -> <init>
jxl.write.biff.CellValue -> jxl.write.biff.CellValue:
# {"id":"sourceFile","fileName":"CellValue.java"}
    58:58:void <clinit>() -> <clinit>
    113:114:void <init>(jxl.biff.Type,int,int) -> <init>
    126:134:void <init>(jxl.biff.Type,jxl.Cell) -> <init>
    149:154:void <init>(jxl.biff.Type,int,int,jxl.format.CellFormat) -> <init>
    556:612:void addCellFeatures() -> addCellFeatures
    467:481:void addCellFormat() -> addCellFormat
    492:492:jxl.CellFeatures getCellFeatures() -> getCellFeatures
    314:314:jxl.format.CellFormat getCellFormat() -> getCellFormat
    223:223:int getColumn() -> getColumn
    259:261:byte[] getData() -> getData
    213:213:int getRow() -> getRow
    455:455:jxl.write.biff.WritableSheetImpl getSheet() -> getSheet
    502:502:jxl.write.WritableCellFeatures getWritableCellFeatures() -> getWritableCellFeatures
    304:304:int getXFIndex() -> getXFIndex
    294:294:boolean isReferenced() -> isReferenced
    641:641:void removeComment(jxl.biff.drawing.Comment) -> removeComment
    649:649:void removeDataValidation() -> removeDataValidation
    278:283:void setCellDetails(jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.write.biff.WritableSheetImpl) -> setCellDetails
    512:544:void setCellFeatures(jxl.write.WritableCellFeatures) -> setCellFeatures
    189:203:void setCellFormat(jxl.format.CellFormat) -> setCellFormat
jxl.write.biff.CellXFRecord -> jxl.write.biff.CellXFRecord:
# {"id":"sourceFile","fileName":"CellXFRecord.java"}
    48:49:void <init>(jxl.biff.FontRecord,jxl.biff.DisplayFormat) -> <init>
    59:60:void <init>(jxl.biff.XFRecord) -> <init>
    80:84:void setAlignment(jxl.format.Alignment) -> setAlignment
    96:101:void setBackground(jxl.format.Colour,jxl.format.Pattern) -> setBackground
    210:235:void setBorder(jxl.format.Border,jxl.format.BorderLineStyle,jxl.format.Colour) -> setBorder
jxl.write.biff.CodepageRecord -> jxl.write.biff.CodepageRecord:
# {"id":"sourceFile","fileName":"CodepageRecord.java"}
    41:44:void <init>() -> <init>
    54:54:byte[] getData() -> getData
jxl.write.biff.ColumnInfoRecord -> jxl.write.biff.ColumnInfoRecord:
# {"id":"sourceFile","fileName":"ColumnInfoRecord.java"}
    83:89:void <init>(int,int,jxl.biff.XFRecord) -> <init>
    124:131:void <init>(jxl.read.biff.ColumnInfoRecord,int,jxl.biff.FormattingRecords) -> <init>
    306:329:boolean equals(java.lang.Object) -> equals
    242:242:jxl.biff.XFRecord getCellFormat() -> getCellFormat
    160:160:int getColumn() -> getColumn
    208:232:byte[] getData() -> getData
    342:349:int hashCode() -> hashCode
    271:271:void rationalize(jxl.biff.IndexMapping) -> rationalize
    281:281:void setHidden(boolean) -> setHidden
    198:198:void setWidth(int) -> setWidth
jxl.write.biff.ColumnsExceededException -> jxl.write.biff.ColumnsExceededException:
# {"id":"sourceFile","fileName":"ColumnsExceededException.java"}
    33:33:void <init>() -> <init>
jxl.write.biff.CompoundFile -> jxl.write.biff.CompoundFile:
# {"id":"sourceFile","fileName":"CompoundFile.java"}
    52:52:void <clinit>() -> <clinit>
    205:352:void <init>(jxl.write.biff.ExcelDataOutput,int,java.io.OutputStream,jxl.read.biff.CompoundFile) -> <init>
    662:669:void checkBbdPos() -> checkBbdPos
    907:909:int getBigBlocksRequired(int) -> getBigBlocksRequired
    921:923:int getSmallBlocksRequired(int) -> getSmallBlocksRequired
    372:444:void readAdditionalPropertySets(jxl.read.biff.CompoundFile) -> readAdditionalPropertySets
    454:462:void write() -> write
    714:727:void writeAdditionalPropertySetBlockChains() -> writeAdditionalPropertySetBlockChains
    473:491:void writeAdditionalPropertySets() -> writeAdditionalPropertySets
    818:894:void writeBigBlockDepot() -> writeBigBlockDepot
    688:704:void writeBlockChain(int,int) -> writeBlockChain
    521:521:void writeDocumentSummaryData() -> writeDocumentSummaryData
    505:508:void writeExcelData() -> writeExcelData
    546:650:void writeHeader() -> writeHeader
    933:1158:void writePropertySets() -> writePropertySets
    783:806:void writeSmallBlockDepot() -> writeSmallBlockDepot
    738:773:void writeSmallBlockDepotChain() -> writeSmallBlockDepotChain
    534:534:void writeSummaryData() -> writeSummaryData
jxl.write.biff.CompoundFile$ReadPropertyStorage -> jxl.write.biff.CompoundFile$ReadPropertyStorage:
# {"id":"sourceFile","fileName":"CompoundFile.java"}
    171:174:void <init>(jxl.biff.BaseCompoundFile$PropertyStorage,byte[],int) -> <init>
jxl.write.biff.CopyAdditionalPropertySetsException -> jxl.write.biff.CopyAdditionalPropertySetsException:
# {"id":"sourceFile","fileName":"CopyAdditionalPropertySetsException.java"}
    33:33:void <init>() -> <init>
jxl.write.biff.CountryRecord -> jxl.write.biff.CountryRecord:
# {"id":"sourceFile","fileName":"CountryRecord.java"}
    48:51:void <init>(jxl.biff.CountryCode,jxl.biff.CountryCode) -> <init>
    56:59:void <init>(jxl.read.biff.CountryRecord) -> <init>
    71:72:byte[] getData() -> getData
jxl.write.biff.DBCellRecord -> jxl.write.biff.DBCellRecord:
# {"id":"sourceFile","fileName":"DBCellRecord.java"}
    63:65:void <init>(int) -> <init>
    85:85:void addCellRowPosition(int) -> addCellRowPosition
    105:117:byte[] getData() -> getData
    75:75:void setCellOffset(int) -> setCellOffset
    95:95:void setPosition(int) -> setPosition
jxl.write.biff.DSFRecord -> jxl.write.biff.DSFRecord:
# {"id":"sourceFile","fileName":"DSFRecord.java"}
    41:45:void <init>() -> <init>
    55:55:byte[] getData() -> getData
jxl.write.biff.DateFormatRecord -> jxl.write.biff.DateFormatRecord:
# {"id":"sourceFile","fileName":"DateFormatRecord.java"}
    36:44:void <init>(java.lang.String) -> <init>
jxl.write.biff.DateRecord -> jxl.write.biff.DateRecord:
# {"id":"sourceFile","fileName":"DateRecord.java"}
    44:75:void <clinit>() -> <clinit>
    174:177:void <init>(jxl.DateCell) -> <init>
    213:241:void calculateValue(boolean) -> calculateValue
    279:279:java.lang.String getContents() -> getContents
    262:265:byte[] getData() -> getData
    313:313:java.util.Date getDate() -> getDate
    252:252:jxl.CellType getType() -> getType
    325:325:boolean isTime() -> isTime
jxl.write.biff.DateRecord$GMTDate -> jxl.write.biff.DateRecord$GMTDate:
# {"id":"sourceFile","fileName":"DateRecord.java"}
jxl.write.biff.DefaultColumnWidth -> jxl.write.biff.DefaultColumnWidth:
# {"id":"sourceFile","fileName":"DefaultColumnWidth.java"}
    47:50:void <init>(int) -> <init>
    60:60:byte[] getData() -> getData
jxl.write.biff.DefaultRowHeightRecord -> jxl.write.biff.DefaultRowHeightRecord:
# {"id":"sourceFile","fileName":"DefaultRowHeightRecord.java"}
    54:57:void <init>(int,boolean) -> <init>
    67:73:byte[] getData() -> getData
jxl.write.biff.DeltaRecord -> jxl.write.biff.DeltaRecord:
# {"id":"sourceFile","fileName":"DeltaRecord.java"}
    48:51:void <init>(double) -> <init>
    62:75:byte[] getData() -> getData
jxl.write.biff.DimensionRecord -> jxl.write.biff.DimensionRecord:
# {"id":"sourceFile","fileName":"DimensionRecord.java"}
    53:60:void <init>(int,int) -> <init>
    70:70:byte[] getData() -> getData
jxl.write.biff.EOFRecord -> jxl.write.biff.EOFRecord:
# {"id":"sourceFile","fileName":"EOFRecord.java"}
    35:35:void <init>() -> <init>
    0:0:byte[] getData() -> getData
jxl.write.biff.Excel9FileRecord -> jxl.write.biff.Excel9FileRecord:
# {"id":"sourceFile","fileName":"Excel9FileRecord.java"}
    38:38:void <init>() -> <init>
    0:0:byte[] getData() -> getData
jxl.write.biff.ExcelDataOutput -> jxl.write.biff.ExcelDataOutput:
# {"id":"sourceFile","fileName":"ExcelDataOutput.java"}
jxl.write.biff.ExtendedSSTRecord -> jxl.write.biff.ExtendedSSTRecord:
# {"id":"sourceFile","fileName":"ExtendedSSTRecord.java"}
    39:55:void <init>(int) -> <init>
    80:83:void addString(int,int) -> addString
    93:105:byte[] getData() -> getData
    60:61:int getNumberOfBuckets() -> getNumberOfBuckets
    74:74:int getNumberOfStringsPerBucket() -> getNumberOfStringsPerBucket
jxl.write.biff.ExternalNameRecord -> jxl.write.biff.ExternalNameRecord:
# {"id":"sourceFile","fileName":"ExternalNameRecord.java"}
    37:50:void <init>(java.lang.String) -> <init>
    60:70:byte[] getData() -> getData
jxl.write.biff.ExternalSheetRecord -> jxl.write.biff.ExternalSheetRecord:
# {"id":"sourceFile","fileName":"ExternalSheetRecord.java"}
    105:114:void <init>(jxl.read.biff.ExternalSheetRecord) -> <init>
    123:124:void <init>() -> <init>
    171:184:byte[] getData() -> getData
    210:210:int getFirstTabIndex(int) -> getFirstTabIndex
    135:158:int getIndex(int,int) -> getIndex
    199:199:int getSupbookIndex(int) -> getSupbookIndex
    231:234:void sheetInserted(int) -> sheetInserted
jxl.write.biff.ExternalSheetRecord$XTI -> jxl.write.biff.ExternalSheetRecord$XTI:
# {"id":"sourceFile","fileName":"ExternalSheetRecord.java"}
    55:58:void <init>(int,int,int) -> <init>
    63:70:void sheetInserted(int) -> sheetInserted
jxl.write.biff.File -> jxl.write.biff.File:
# {"id":"sourceFile","fileName":"File.java"}
    41:41:void <clinit>() -> <clinit>
    82:86:void <init>(java.io.OutputStream,jxl.WorkbookSettings,jxl.read.biff.CompoundFile) -> <init>
    116:135:void close(boolean) -> close
    91:101:void createDataOutput() -> createDataOutput
    159:159:int getPos() -> getPos
    171:171:void setData(byte[],int) -> setData
    147:149:void write(jxl.biff.ByteData) -> write
jxl.write.biff.FileDataOutput -> jxl.write.biff.FileDataOutput:
# {"id":"sourceFile","fileName":"FileDataOutput.java"}
    36:36:void <clinit>() -> <clinit>
    55:58:void <init>(java.io.File) -> <init>
    117:121:void close() -> close
    81:81:int getPosition() -> getPosition
    92:95:void setData(byte[],int) -> setData
    69:69:void write(byte[]) -> write
    105:108:void writeData(java.io.OutputStream) -> writeData
jxl.write.biff.FooterRecord -> jxl.write.biff.FooterRecord:
# {"id":"sourceFile","fileName":"FooterRecord.java"}
    49:51:void <init>(java.lang.String) -> <init>
    73:85:byte[] getData() -> getData
jxl.write.biff.FunctionGroupCountRecord -> jxl.write.biff.FunctionGroupCountRecord:
# {"id":"sourceFile","fileName":"FunctionGroupCountRecord.java"}
    46:52:void <init>() -> <init>
    62:62:byte[] getData() -> getData
jxl.write.biff.GridSetRecord -> jxl.write.biff.GridSetRecord:
# {"id":"sourceFile","fileName":"GridSetRecord.java"}
    47:50:void <init>(boolean) -> <init>
    65:65:byte[] getData() -> getData
jxl.write.biff.GuttersRecord -> jxl.write.biff.GuttersRecord:
# {"id":"sourceFile","fileName":"GuttersRecord.java"}
    58:58:void <init>() -> <init>
    68:73:byte[] getData() -> getData
    114:115:void setMaxColumnOutline(int) -> setMaxColumnOutline
    93:94:void setMaxRowOutline(int) -> setMaxRowOutline
jxl.write.biff.HeaderRecord -> jxl.write.biff.HeaderRecord:
# {"id":"sourceFile","fileName":"HeaderRecord.java"}
    48:50:void <init>(java.lang.String) -> <init>
    72:84:byte[] getData() -> getData
jxl.write.biff.HideobjRecord -> jxl.write.biff.HideobjRecord:
# {"id":"sourceFile","fileName":"HideobjRecord.java"}
    53:58:void <init>(int) -> <init>
    68:68:byte[] getData() -> getData
jxl.write.biff.HorizontalCentreRecord -> jxl.write.biff.HorizontalCentreRecord:
# {"id":"sourceFile","fileName":"HorizontalCentreRecord.java"}
    47:51:void <init>(boolean) -> <init>
    66:66:byte[] getData() -> getData
jxl.write.biff.HorizontalPageBreaksRecord -> jxl.write.biff.HorizontalPageBreaksRecord:
# {"id":"sourceFile","fileName":"HorizontalPageBreaksRecord.java"}
    43:45:void <init>(int[]) -> <init>
    55:64:byte[] getData() -> getData
jxl.write.biff.HyperlinkRecord -> jxl.write.biff.HyperlinkRecord:
# {"id":"sourceFile","fileName":"HyperlinkRecord.java"}
    54:128:void <clinit>() -> <clinit>
    137:145:void <init>(jxl.Hyperlink,jxl.write.WritableSheet) -> <init>
    154:186:void copyReadHyperlink(jxl.Hyperlink,jxl.write.WritableSheet) -> copyReadHyperlink
    197:228:void copyWritableHyperlink(jxl.Hyperlink,jxl.write.WritableSheet) -> copyWritableHyperlink
    444:529:byte[] getData() -> getData
    972:1147:byte[] getFileData(byte[]) -> getFileData
    1221:1230:byte[] getLocationData(byte[]) -> getLocationData
    1179:1205:java.lang.String getShortName(java.lang.String) -> getShortName
    946:958:byte[] getUNCData(byte[]) -> getUNCData
    889:933:byte[] getURLData(byte[]) -> getURLData
    344:344:boolean isFile() -> isFile
    374:374:boolean isLocation() -> isLocation
    354:354:boolean isUNC() -> isUNC
    364:364:boolean isURL() -> isURL
    539:549:java.lang.String toString() -> toString
jxl.write.biff.HyperlinkRecord$1 -> jxl.write.biff.HyperlinkRecord$1:
# {"id":"sourceFile","fileName":"HyperlinkRecord.java"}
jxl.write.biff.HyperlinkRecord$LinkType -> jxl.write.biff.HyperlinkRecord$LinkType:
# {"id":"sourceFile","fileName":"HyperlinkRecord.java"}
    122:122:void <init>(jxl.write.biff.HyperlinkRecord$1) -> <init>
jxl.write.biff.IndexRecord -> jxl.write.biff.IndexRecord:
# {"id":"sourceFile","fileName":"IndexRecord.java"}
    62:69:void <init>(int,int,int) -> <init>
    92:93:void addBlockPosition(int) -> addBlockPosition
    81:82:byte[] getData() -> getData
    102:102:void setDataStartPosition(int) -> setDataStartPosition
jxl.write.biff.InterfaceEndRecord -> jxl.write.biff.InterfaceEndRecord:
# {"id":"sourceFile","fileName":"InterfaceEndRecord.java"}
    36:36:void <init>() -> <init>
    0:0:byte[] getData() -> getData
jxl.write.biff.InterfaceHeaderRecord -> jxl.write.biff.InterfaceHeaderRecord:
# {"id":"sourceFile","fileName":"InterfaceHeaderRecord.java"}
    35:35:void <init>() -> <init>
    46:46:byte[] getData() -> getData
jxl.write.biff.IterationRecord -> jxl.write.biff.IterationRecord:
# {"id":"sourceFile","fileName":"IterationRecord.java"}
    46:50:void <init>(boolean) -> <init>
    65:65:byte[] getData() -> getData
jxl.write.biff.JxlWriteException -> jxl.write.biff.JxlWriteException:
# {"id":"sourceFile","fileName":"JxlWriteException.java"}
    44:59:void <clinit>() -> <clinit>
    69:69:void <init>(jxl.write.biff.JxlWriteException$WriteMessage) -> <init>
jxl.write.biff.JxlWriteException$WriteMessage -> jxl.write.biff.JxlWriteException$WriteMessage:
# {"id":"sourceFile","fileName":"JxlWriteException.java"}
    39:39:void <init>(java.lang.String) -> <init>
jxl.write.biff.LabelRecord -> jxl.write.biff.LabelRecord:
# {"id":"sourceFile","fileName":"LabelRecord.java"}
    40:40:void <clinit>() -> <clinit>
    85:90:void <init>(int,int,java.lang.String,jxl.format.CellFormat) -> <init>
    116:120:void <init>(jxl.LabelCell) -> <init>
    158:158:java.lang.String getContents() -> getContents
    141:144:byte[] getData() -> getData
    169:169:java.lang.String getString() -> getString
    131:131:jxl.CellType getType() -> getType
    216:225:void setCellDetails(jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.write.biff.WritableSheetImpl) -> setCellDetails
jxl.write.biff.LeftMarginRecord -> jxl.write.biff.LeftMarginRecord:
# {"id":"sourceFile","fileName":"LeftMarginRecord.java"}
    31:31:void <init>(double) -> <init>
jxl.write.biff.MMSRecord -> jxl.write.biff.MMSRecord:
# {"id":"sourceFile","fileName":"MMSRecord.java"}
    51:56:void <init>(int,int) -> <init>
    69:69:byte[] getData() -> getData
jxl.write.biff.MarginRecord -> jxl.write.biff.MarginRecord:
# {"id":"sourceFile","fileName":"MarginRecord.java"}
    41:42:void <init>(jxl.biff.Type,double) -> <init>
    53:53:byte[] getData() -> getData
jxl.write.biff.MemoryDataOutput -> jxl.write.biff.MemoryDataOutput:
# {"id":"sourceFile","fileName":"MemoryDataOutput.java"}
    34:34:void <clinit>() -> <clinit>
    55:58:void <init>(int,int) -> <init>
    0:0:void close() -> close
    88:88:int getPosition() -> getPosition
    99:99:void setData(byte[],int) -> setData
    69:78:void write(byte[]) -> write
    107:107:void writeData(java.io.OutputStream) -> writeData
jxl.write.biff.MergedCells -> jxl.write.biff.MergedCells:
# {"id":"sourceFile","fileName":"MergedCells.java"}
    47:47:void <clinit>() -> <clinit>
    68:70:void <init>(jxl.write.WritableSheet) -> <init>
    81:81:void add(jxl.Range) -> add
    199:228:void checkIntersections() -> checkIntersections
    242:278:void checkRanges() -> checkRanges
    168:172:jxl.Range[] getMergedCells() -> getMergedCells
    284:321:void write(jxl.write.biff.File) -> write
jxl.write.biff.MergedCellsRecord -> jxl.write.biff.MergedCellsRecord:
# {"id":"sourceFile","fileName":"MergedCellsRecord.java"}
    48:50:void <init>(java.util.ArrayList) -> <init>
    60:78:byte[] getData() -> getData
jxl.write.biff.MulRKRecord -> jxl.write.biff.MulRKRecord:
# {"id":"sourceFile","fileName":"MulRKRecord.java"}
    62:73:void <init>(java.util.List) -> <init>
    84:112:byte[] getData() -> getData
jxl.write.biff.NameRecord -> jxl.write.biff.NameRecord:
# {"id":"sourceFile","fileName":"NameRecord.java"}
    37:155:void <clinit>() -> <clinit>
    62:177:void <init>(jxl.read.biff.NameRecord,int) -> <init>
    62:247:void <init>(jxl.biff.BuiltInName,int,int,int,int,int,int,boolean) -> <init>
    62:296:void <init>(jxl.biff.BuiltInName,int,int,int,int,int,int,int,int,int,int,boolean) -> <init>
    311:410:byte[] getData() -> getData
    430:430:int getIndex() -> getIndex
    420:420:java.lang.String getName() -> getName
jxl.write.biff.NameRecord$NameRange -> jxl.write.biff.NameRecord$NameRange:
# {"id":"sourceFile","fileName":"NameRecord.java"}
    81:86:void <init>(jxl.read.biff.NameRecord$NameRange) -> <init>
    97:102:void <init>(int,int,int,int,int) -> <init>
    125:137:byte[] getData() -> getData
jxl.write.biff.NineteenFourRecord -> jxl.write.biff.NineteenFourRecord:
# {"id":"sourceFile","fileName":"NineteenFourRecord.java"}
    49:56:void <init>(boolean) -> <init>
    66:66:byte[] getData() -> getData
jxl.write.biff.NumberRecord -> jxl.write.biff.NumberRecord:
# {"id":"sourceFile","fileName":"NumberRecord.java"}
    51:51:void <clinit>() -> <clinit>
    88:89:void <init>(jxl.NumberCell) -> <init>
    139:147:java.lang.String getContents() -> getContents
    122:125:byte[] getData() -> getData
    112:112:jxl.CellType getType() -> getType
    157:157:double getValue() -> getValue
jxl.write.biff.ObjProjRecord -> jxl.write.biff.ObjProjRecord:
# {"id":"sourceFile","fileName":"ObjProjRecord.java"}
    40:42:void <init>() -> <init>
    52:52:byte[] getData() -> getData
jxl.write.biff.ObjectProtectRecord -> jxl.write.biff.ObjectProtectRecord:
# {"id":"sourceFile","fileName":"ObjectProtectRecord.java"}
    47:55:void <init>(boolean) -> <init>
    66:66:byte[] getData() -> getData
jxl.write.biff.PLSRecord -> jxl.write.biff.PLSRecord:
# {"id":"sourceFile","fileName":"PLSRecord.java"}
    42:44:void <init>(jxl.read.biff.PLSRecord) -> <init>
    67:67:byte[] getData() -> getData
jxl.write.biff.PaneRecord -> jxl.write.biff.PaneRecord:
# {"id":"sourceFile","fileName":"PaneRecord.java"}
    56:59:void <init>(int,int) -> <init>
    72:105:byte[] getData() -> getData
jxl.write.biff.PasswordRecord -> jxl.write.biff.PasswordRecord:
# {"id":"sourceFile","fileName":"PasswordRecord.java"}
    48:70:void <init>(java.lang.String) -> <init>
    81:84:void <init>(int) -> <init>
    94:94:byte[] getData() -> getData
    0:0:int rotLeft15Bit(int,int) -> rotLeft15Bit
jxl.write.biff.PrecisionRecord -> jxl.write.biff.PrecisionRecord:
# {"id":"sourceFile","fileName":"PrecisionRecord.java"}
    47:54:void <init>(boolean) -> <init>
    65:65:byte[] getData() -> getData
jxl.write.biff.PrintGridLinesRecord -> jxl.write.biff.PrintGridLinesRecord:
# {"id":"sourceFile","fileName":"PrintGridLinesRecord.java"}
    46:49:void <init>(boolean) -> <init>
    64:64:byte[] getData() -> getData
jxl.write.biff.PrintHeadersRecord -> jxl.write.biff.PrintHeadersRecord:
# {"id":"sourceFile","fileName":"PrintHeadersRecord.java"}
    46:49:void <init>(boolean) -> <init>
    64:64:byte[] getData() -> getData
jxl.write.biff.Prot4RevPassRecord -> jxl.write.biff.Prot4RevPassRecord:
# {"id":"sourceFile","fileName":"Prot4RevPassRecord.java"}
    40:43:void <init>() -> <init>
    53:53:byte[] getData() -> getData
jxl.write.biff.Prot4RevRecord -> jxl.write.biff.Prot4RevRecord:
# {"id":"sourceFile","fileName":"Prot4RevRecord.java"}
    47:56:void <init>(boolean) -> <init>
    67:67:byte[] getData() -> getData
jxl.write.biff.ProtectRecord -> jxl.write.biff.ProtectRecord:
# {"id":"sourceFile","fileName":"ProtectRecord.java"}
    47:55:void <init>(boolean) -> <init>
    66:66:byte[] getData() -> getData
jxl.write.biff.ReadBooleanFormulaRecord -> jxl.write.biff.ReadBooleanFormulaRecord:
# {"id":"sourceFile","fileName":"ReadBooleanFormulaRecord.java"}
    38:38:void <init>(jxl.biff.FormulaData) -> <init>
    48:48:boolean getValue() -> getValue
jxl.write.biff.ReadDateFormulaRecord -> jxl.write.biff.ReadDateFormulaRecord:
# {"id":"sourceFile","fileName":"ReadDateFormulaRecord.java"}
    41:41:void <init>(jxl.biff.FormulaData) -> <init>
    51:51:java.util.Date getDate() -> getDate
    62:62:boolean isTime() -> isTime
jxl.write.biff.ReadErrorFormulaRecord -> jxl.write.biff.ReadErrorFormulaRecord:
# {"id":"sourceFile","fileName":"ReadErrorFormulaRecord.java"}
    39:39:void <clinit>() -> <clinit>
    48:48:void <init>(jxl.biff.FormulaData) -> <init>
    58:58:int getErrorCode() -> getErrorCode
    71:128:byte[] handleFormulaException() -> handleFormulaException
jxl.write.biff.ReadFormulaRecord -> jxl.write.biff.ReadFormulaRecord:
# {"id":"sourceFile","fileName":"ReadFormulaRecord.java"}
    51:51:void <clinit>() -> <clinit>
    70:71:void <init>(jxl.biff.FormulaData) -> <init>
    76:76:byte[] getCellData() -> getCellData
    190:190:java.lang.String getContents() -> getContents
    134:169:byte[] getData() -> getData
    201:207:byte[] getFormulaData() -> getFormulaData
    403:403:jxl.biff.FormulaData getReadFormula() -> getReadFormula
    180:180:jxl.CellType getType() -> getType
    89:120:byte[] handleFormulaException() -> handleFormulaException
    256:257:void setCellDetails(jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.write.biff.WritableSheetImpl) -> setCellDetails
jxl.write.biff.ReadNumberFormulaRecord -> jxl.write.biff.ReadNumberFormulaRecord:
# {"id":"sourceFile","fileName":"ReadNumberFormulaRecord.java"}
    40:40:void <clinit>() -> <clinit>
    49:49:void <init>(jxl.biff.FormulaData) -> <init>
    59:59:double getValue() -> getValue
    83:115:byte[] handleFormulaException() -> handleFormulaException
jxl.write.biff.ReadStringFormulaRecord -> jxl.write.biff.ReadStringFormulaRecord:
# {"id":"sourceFile","fileName":"ReadStringFormulaRecord.java"}
    38:38:void <clinit>() -> <clinit>
    47:47:void <init>(jxl.biff.FormulaData) -> <init>
    57:57:java.lang.String getString() -> getString
    70:107:byte[] handleFormulaException() -> handleFormulaException
jxl.write.biff.RefModeRecord -> jxl.write.biff.RefModeRecord:
# {"id":"sourceFile","fileName":"RefModeRecord.java"}
    35:35:void <init>() -> <init>
    0:0:byte[] getData() -> getData
jxl.write.biff.RefreshAllRecord -> jxl.write.biff.RefreshAllRecord:
# {"id":"sourceFile","fileName":"RefreshAllRecord.java"}
    48:57:void <init>(boolean) -> <init>
    68:68:byte[] getData() -> getData
jxl.write.biff.RightMarginRecord -> jxl.write.biff.RightMarginRecord:
# {"id":"sourceFile","fileName":"RightMarginRecord.java"}
    31:31:void <init>(double) -> <init>
jxl.write.biff.RowRecord -> jxl.write.biff.RowRecord:
# {"id":"sourceFile","fileName":"RowRecord.java"}
    49:114:void <clinit>() -> <clinit>
    138:145:void <init>(int,jxl.write.WritableSheet) -> <init>
    226:267:void addCell(jxl.write.biff.CellValue) -> addCell
    477:477:jxl.write.biff.CellValue getCell(int) -> getCell
    414:453:byte[] getData() -> getData
    465:465:int getMaxColumn() -> getMaxColumn
    633:635:void rationalize(jxl.biff.IndexMapping) -> rationalize
    185:195:void setRowDetails(int,boolean,boolean,int,boolean,jxl.biff.XFRecord) -> setRowDetails
    294:294:void write(jxl.write.biff.File) -> write
    309:362:void writeCells(jxl.write.biff.File) -> writeCells
    376:398:void writeIntegerValues(java.util.ArrayList,jxl.write.biff.File) -> writeIntegerValues
jxl.write.biff.RowsExceededException -> jxl.write.biff.RowsExceededException:
# {"id":"sourceFile","fileName":"RowsExceededException.java"}
    33:33:void <init>() -> <init>
jxl.write.biff.SCLRecord -> jxl.write.biff.SCLRecord:
# {"id":"sourceFile","fileName":"SCLRecord.java"}
    43:45:void <init>(int) -> <init>
    56:60:byte[] getData() -> getData
jxl.write.biff.SSTContinueRecord -> jxl.write.biff.SSTContinueRecord:
# {"id":"sourceFile","fileName":"SSTContinueRecord.java"}
    0:0:void <clinit>() -> <clinit>
    79:83:void <init>() -> <init>
    148:176:int add(java.lang.String) -> add
    186:223:byte[] getData() -> getData
    135:135:int getOffset() -> getOffset
    95:125:int setFirstString(java.lang.String,boolean) -> setFirstString
jxl.write.biff.SSTRecord -> jxl.write.biff.SSTRecord:
# {"id":"sourceFile","fileName":"SSTRecord.java"}
    0:0:void <clinit>() -> <clinit>
    75:81:void <init>(int,int) -> <init>
    94:123:int add(java.lang.String) -> add
    143:164:byte[] getData() -> getData
    133:133:int getOffset() -> getOffset
jxl.write.biff.SaveRecalcRecord -> jxl.write.biff.SaveRecalcRecord:
# {"id":"sourceFile","fileName":"SaveRecalcRecord.java"}
    46:49:void <init>(boolean) -> <init>
    64:64:byte[] getData() -> getData
jxl.write.biff.ScenarioProtectRecord -> jxl.write.biff.ScenarioProtectRecord:
# {"id":"sourceFile","fileName":"ScenarioProtectRecord.java"}
    47:55:void <init>(boolean) -> <init>
    66:66:byte[] getData() -> getData
jxl.write.biff.SelectionRecord -> jxl.write.biff.SelectionRecord:
# {"id":"sourceFile","fileName":"SelectionRecord.java"}
    56:59:void <clinit>() -> <clinit>
    66:69:void <init>(jxl.write.biff.SelectionRecord$PaneType,int,int) -> <init>
    82:90:byte[] getData() -> getData
jxl.write.biff.SelectionRecord$PaneType -> jxl.write.biff.SelectionRecord$PaneType:
# {"id":"sourceFile","fileName":"SelectionRecord.java"}
    52:52:void <init>(int) -> <init>
jxl.write.biff.SetupRecord -> jxl.write.biff.SetupRecord:
# {"id":"sourceFile","fileName":"SetupRecord.java"}
    41:136:void <init>(jxl.SheetSettings) -> <init>
    188:244:byte[] getData() -> getData
jxl.write.biff.SharedStrings -> jxl.write.biff.SharedStrings:
# {"id":"sourceFile","fileName":"SharedStrings.java"}
    52:55:void <init>() -> <init>
    166:181:jxl.write.biff.SSTContinueRecord createContinueRecord(java.lang.String,int,jxl.write.biff.File) -> createContinueRecord
    90:90:java.lang.String get(int) -> get
    68:79:int getIndex(java.lang.String) -> getIndex
    105:152:void write(jxl.write.biff.File) -> write
jxl.write.biff.SheetCopier -> jxl.write.biff.SheetCopier:
# {"id":"sourceFile","fileName":"SheetCopier.java"}
    87:87:void <clinit>() -> <clinit>
    121:125:void <init>(jxl.Sheet,jxl.write.WritableSheet) -> <init>
    219:423:void copySheet() -> copySheet
    185:185:jxl.biff.AutoFilter getAutoFilter() -> getAutoFilter
    210:210:jxl.write.biff.ButtonPropertySetRecord getButtonPropertySet() -> getButtonPropertySet
    195:195:jxl.biff.drawing.ComboBox getComboBox() -> getComboBox
    190:190:jxl.biff.DataValidation getDataValidation() -> getDataValidation
    1110:1110:int getMaxColumnOutlineLevel() -> getMaxColumnOutlineLevel
    1120:1120:int getMaxRowOutlineLevel() -> getMaxRowOutlineLevel
    200:200:jxl.write.biff.PLSRecord getPLSRecord() -> getPLSRecord
    1100:1100:int getRows() -> getRows
    205:205:boolean isChartOnly() -> isChartOnly
    155:155:void setColumnBreaks(java.util.ArrayList) -> setColumnBreaks
    130:130:void setColumnFormats(java.util.TreeSet) -> setColumnFormats
    175:175:void setConditionalFormats(java.util.ArrayList) -> setConditionalFormats
    165:165:void setDrawings(java.util.ArrayList) -> setDrawings
    135:135:void setFormatRecords(jxl.biff.FormattingRecords) -> setFormatRecords
    140:140:void setHyperlinks(java.util.ArrayList) -> setHyperlinks
    170:170:void setImages(java.util.ArrayList) -> setImages
    145:145:void setMergedCells(jxl.write.biff.MergedCells) -> setMergedCells
    150:150:void setRowBreaks(java.util.ArrayList) -> setRowBreaks
    160:160:void setSheetWriter(jxl.write.biff.SheetWriter) -> setSheetWriter
    180:180:void setValidatedCells(java.util.ArrayList) -> setValidatedCells
    803:849:jxl.write.WritableCell shallowCopyCell(jxl.Cell) -> shallowCopyCell
    924:962:void shallowCopyCells() -> shallowCopyCells
jxl.write.biff.SheetWriter -> jxl.write.biff.SheetWriter:
# {"id":"sourceFile","fileName":"SheetWriter.java"}
    66:66:void <clinit>() -> <clinit>
    193:199:void <init>(jxl.write.biff.File,jxl.write.biff.WritableSheetImpl,jxl.WorkbookSettings) -> <init>
    734:1002:void checkMergedBorders() -> checkMergedBorders
    723:723:jxl.biff.drawing.Chart[] getCharts() -> getCharts
    1017:1037:jxl.Cell[] getColumn(int) -> getColumn
    1100:1100:void setAutoFilter(jxl.biff.AutoFilter) -> setAutoFilter
    1068:1068:void setButtonPropertySet(jxl.write.biff.ButtonPropertySetRecord) -> setButtonPropertySet
    1048:1048:void setChartOnly() -> setChartOnly
    702:702:void setCharts(jxl.biff.drawing.Chart[]) -> setCharts
    1090:1090:void setConditionalFormats(java.util.ArrayList) -> setConditionalFormats
    1079:1080:void setDataValidation(jxl.biff.DataValidation,java.util.ArrayList) -> setDataValidation
    656:657:void setDimensions(int,int) -> setDimensions
    713:713:void setDrawings(java.util.ArrayList,boolean) -> setDrawings
    1058:1058:void setPLS(jxl.write.biff.PLSRecord) -> setPLS
    668:668:void setSettings(jxl.SheetSettings) -> setSettings
    690:690:void setWorkspaceOptions(jxl.biff.WorkspaceInformationRecord) -> setWorkspaceOptions
    637:644:void setWriteData(jxl.write.biff.RowRecord[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,jxl.write.biff.MergedCells,java.util.TreeSet,int,int) -> setWriteData
    212:599:void write() -> write
    1108:1160:void writeDataValidation() -> writeDataValidation
jxl.write.biff.StringRecord -> jxl.write.biff.StringRecord:
# {"id":"sourceFile","fileName":"StringRecord.java"}
    43:45:void <init>(java.lang.String) -> <init>
    55:58:byte[] getData() -> getData
jxl.write.biff.StyleXFRecord -> jxl.write.biff.StyleXFRecord:
# {"id":"sourceFile","fileName":"StyleXFRecord.java"}
    39:41:void <init>(jxl.biff.FontRecord,jxl.biff.DisplayFormat) -> <init>
    53:53:void setCellOptions(int) -> setCellOptions
    64:64:void setLocked(boolean) -> setLocked
jxl.write.biff.Styles -> jxl.write.biff.Styles:
# {"id":"sourceFile","fileName":"Styles.java"}
    42:42:void <clinit>() -> <clinit>
    78:83:void <init>() -> <init>
    142:147:jxl.write.WritableFont getArial10Pt() -> getArial10Pt
    172:177:jxl.write.WritableCellFormat getDefaultDateFormat() -> getDefaultDateFormat
    196:220:jxl.biff.XFRecord getFormat(jxl.biff.XFRecord) -> getFormat
    111:116:jxl.write.WritableCellFormat getHiddenStyle() -> getHiddenStyle
    157:162:jxl.write.WritableFont getHyperlinkFont() -> getHyperlinkFont
    127:132:jxl.write.WritableCellFormat getHyperlinkStyle() -> getHyperlinkStyle
    95:100:jxl.write.WritableCellFormat getNormalStyle() -> getNormalStyle
    137:138:void initArial10Pt() -> initArial10Pt
    167:168:void initDefaultDateFormat() -> initDefaultDateFormat
    105:107:void initHiddenStyle() -> initHiddenStyle
    152:153:void initHyperlinkFont() -> initHyperlinkFont
    121:123:void initHyperlinkStyle() -> initHyperlinkStyle
    88:91:void initNormalStyle() -> initNormalStyle
jxl.write.biff.SupbookRecord -> jxl.write.biff.SupbookRecord:
# {"id":"sourceFile","fileName":"SupbookRecord.java"}
    41:82:void <clinit>() -> <clinit>
    98:102:void <init>(int,jxl.WorkbookSettings) -> <init>
    113:120:void <init>(java.lang.String,jxl.WorkbookSettings) -> <init>
    128:151:void <init>(jxl.read.biff.SupbookRecord,jxl.WorkbookSettings) -> <init>
    187:189:void adjustInternal(int) -> adjustInternal
    248:266:byte[] getData() -> getData
    297:297:java.lang.String getFileName() -> getFileName
    287:287:int getNumberOfSheets() -> getNumberOfSheets
    310:329:int getSheetIndex(java.lang.String) -> getSheetIndex
    339:339:java.lang.String getSheetName(int) -> getSheetName
    276:276:jxl.write.biff.SupbookRecord$SupbookType getType() -> getType
    238:238:void initAddin() -> initAddin
    198:229:void initExternal() -> initExternal
    171:176:void initInternal() -> initInternal
jxl.write.biff.SupbookRecord$1 -> jxl.write.biff.SupbookRecord$1:
# {"id":"sourceFile","fileName":"SupbookRecord.java"}
jxl.write.biff.SupbookRecord$SupbookType -> jxl.write.biff.SupbookRecord$SupbookType:
# {"id":"sourceFile","fileName":"SupbookRecord.java"}
    76:76:void <init>(jxl.write.biff.SupbookRecord$1) -> <init>
jxl.write.biff.TabIdRecord -> jxl.write.biff.TabIdRecord:
# {"id":"sourceFile","fileName":"TabIdRecord.java"}
    43:49:void <init>(int) -> <init>
    60:60:byte[] getData() -> getData
jxl.write.biff.TemplateRecord -> jxl.write.biff.TemplateRecord:
# {"id":"sourceFile","fileName":"TemplateRecord.java"}
    38:38:void <init>() -> <init>
    0:0:byte[] getData() -> getData
jxl.write.biff.TopMarginRecord -> jxl.write.biff.TopMarginRecord:
# {"id":"sourceFile","fileName":"TopMarginRecord.java"}
    31:31:void <init>(double) -> <init>
jxl.write.biff.UsesElfsRecord -> jxl.write.biff.UsesElfsRecord:
# {"id":"sourceFile","fileName":"UsesElfsRecord.java"}
    45:49:void <init>() -> <init>
    64:64:byte[] getData() -> getData
jxl.write.biff.VerticalCentreRecord -> jxl.write.biff.VerticalCentreRecord:
# {"id":"sourceFile","fileName":"VerticalCentreRecord.java"}
    47:51:void <init>(boolean) -> <init>
    66:66:byte[] getData() -> getData
jxl.write.biff.VerticalPageBreaksRecord -> jxl.write.biff.VerticalPageBreaksRecord:
# {"id":"sourceFile","fileName":"VerticalPageBreaksRecord.java"}
    43:45:void <init>(int[]) -> <init>
    55:64:byte[] getData() -> getData
jxl.write.biff.Weird1Record -> jxl.write.biff.Weird1Record:
# {"id":"sourceFile","fileName":"Weird1Record.java"}
    35:35:void <init>() -> <init>
    0:0:byte[] getData() -> getData
jxl.write.biff.Window1Record -> jxl.write.biff.Window1Record:
# {"id":"sourceFile","fileName":"Window1Record.java"}
    46:71:void <init>(int) -> <init>
    81:81:byte[] getData() -> getData
jxl.write.biff.Window2Record -> jxl.write.biff.Window2Record:
# {"id":"sourceFile","fileName":"Window2Record.java"}
    42:92:void <init>(jxl.SheetSettings) -> <init>
    104:104:byte[] getData() -> getData
jxl.write.biff.WindowProtectRecord -> jxl.write.biff.WindowProtectRecord:
# {"id":"sourceFile","fileName":"WindowProtectRecord.java"}
    47:55:void <init>(boolean) -> <init>
    66:66:byte[] getData() -> getData
jxl.write.biff.WritableFontRecord -> jxl.write.biff.WritableFontRecord:
# {"id":"sourceFile","fileName":"WritableFontRecord.java"}
    46:46:void <init>(java.lang.String,int,int,boolean,int,int,int) -> <init>
    56:56:void <init>(jxl.format.Font) -> <init>
    135:140:void setColour(int) -> setColour
jxl.write.biff.WritableFonts -> jxl.write.biff.WritableFonts:
# {"id":"sourceFile","fileName":"WritableFonts.java"}
    37:49:void <init>(jxl.write.biff.WritableWorkbookImpl) -> <init>
jxl.write.biff.WritableFormattingRecords -> jxl.write.biff.WritableFormattingRecords:
# {"id":"sourceFile","fileName":"WritableFormattingRecords.java"}
    52:219:void <init>(jxl.biff.Fonts,jxl.write.biff.Styles) -> <init>
jxl.write.biff.WritableSheetImpl -> jxl.write.biff.WritableSheetImpl:
# {"id":"sourceFile","fileName":"WritableSheetImpl.java"}
    94:269:void <clinit>() -> <clinit>
    327:353:void <init>(java.lang.String,jxl.write.biff.File,jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.WorkbookSettings,jxl.write.biff.WritableWorkbookImpl) -> <init>
    1133:1199:void addCell(jxl.write.WritableCell) -> addCell
    2507:2508:void addDrawing(jxl.biff.drawing.DrawingGroupObject) -> addDrawing
    2589:2589:void addValidationCell(jxl.write.biff.CellValue) -> addValidationCell
    2642:2674:void autosizeColumn(int) -> autosizeColumn
    2626:2630:void autosizeColumns() -> autosizeColumns
    2190:2199:void checkMergedBorders() -> checkMergedBorders
    1569:1594:void copy(jxl.Sheet) -> copy
    380:380:jxl.Cell getCell(int,int) -> getCell
    2167:2167:jxl.biff.drawing.Chart[] getCharts() -> getCharts
    1263:1282:jxl.write.biff.ColumnInfoRecord getColumnInfo(int) -> getColumnInfo
    440:440:int getColumns() -> getColumns
    2600:2600:jxl.biff.drawing.ComboBox getComboBox() -> getComboBox
    610:610:java.lang.String getName() -> getName
    1214:1233:jxl.write.biff.RowRecord getRowRecord(int) -> getRowRecord
    430:430:int getRows() -> getRows
    2099:2099:jxl.SheetSettings getSettings() -> getSettings
    2252:2252:jxl.write.biff.WritableWorkbookImpl getWorkbook() -> getWorkbook
    2107:2107:jxl.WorkbookSettings getWorkbookSettings() -> getWorkbookSettings
    410:417:jxl.write.WritableCell getWritableCell(int,int) -> getWritableCell
    2300:2300:boolean isChartOnly() -> isChartOnly
    2223:2242:void rationalize(jxl.biff.IndexMapping,jxl.biff.IndexMapping,jxl.biff.IndexMapping) -> rationalize
    2533:2544:void removeDataValidation(jxl.write.biff.CellValue) -> removeDataValidation
    2518:2522:void removeDrawing(jxl.biff.drawing.DrawingGroupObject) -> removeDrawing
    1345:1347:void setColumnView(int,int) -> setColumnView
    1374:1423:void setColumnView(int,jxl.CellView) -> setColumnView
    2610:2610:void setComboBox(jxl.biff.drawing.ComboBox) -> setComboBox
    1292:1292:void setName(java.lang.String) -> setName
    1439:1442:void setRowView(int,int) -> setRowView
    1490:1518:void setRowView(int,jxl.CellView) -> setRowView
    2474:2491:java.lang.String validateName(java.lang.String) -> validateName
    1530:1558:void write() -> write
jxl.write.biff.WritableSheetImpl$1 -> jxl.write.biff.WritableSheetImpl$1:
# {"id":"sourceFile","fileName":"WritableSheetImpl.java"}
jxl.write.biff.WritableSheetImpl$ColumnInfoComparator -> jxl.write.biff.WritableSheetImpl$ColumnInfoComparator:
# {"id":"sourceFile","fileName":"WritableSheetImpl.java"}
    274:274:void <init>(jxl.write.biff.WritableSheetImpl$1) -> <init>
    301:307:int compare(java.lang.Object,java.lang.Object) -> compare
    0:0:boolean equals(java.lang.Object) -> equals
jxl.write.biff.WritableWorkbookImpl -> jxl.write.biff.WritableWorkbookImpl:
# {"id":"sourceFile","fileName":"WritableWorkbookImpl.java"}
    68:159:void <clinit>() -> <clinit>
    182:214:void <init>(java.io.OutputStream,boolean,jxl.WorkbookSettings) -> <init>
    232:350:void <init>(java.io.OutputStream,jxl.Workbook,boolean,jxl.WorkbookSettings) -> <init>
    1587:1592:void addDrawing(jxl.biff.drawing.DrawingGroupObject) -> addDrawing
    1784:1805:void addNameArea(jxl.biff.BuiltInName,jxl.write.WritableSheet,int,int,int,int,boolean) -> addNameArea
    1836:1859:void addNameArea(jxl.biff.BuiltInName,jxl.write.WritableSheet,int,int,int,int,int,int,int,int,boolean) -> addNameArea
    1365:1365:void addRCIRCell(jxl.write.biff.CellValue) -> addRCIRCell
    456:456:void close() -> close
    963:971:void copyWorkbook(jxl.Workbook) -> copyWorkbook
    486:520:jxl.write.WritableSheet createSheet(java.lang.String,int,boolean) -> createSheet
    538:538:jxl.write.WritableSheet createSheet(java.lang.String,int) -> createSheet
    1614:1614:jxl.biff.drawing.DrawingGroup getDrawingGroup() -> getDrawingGroup
    1177:1258:int getExternalSheetIndex(java.lang.String) -> getExternalSheetIndex
    1064:1083:java.lang.String getExternalSheetName(int) -> getExternalSheetName
    1043:1046:int getInternalSheetIndex(java.lang.String) -> getInternalSheetIndex
    1340:1342:java.lang.String getName(int) -> getName
    1353:1354:int getNameIndex(java.lang.String) -> getNameIndex
    444:444:int getNumberOfSheets() -> getNumberOfSheets
    1867:1867:jxl.WorkbookSettings getSettings() -> getSettings
    408:408:jxl.write.WritableSheet getSheet(int) -> getSheet
    378:382:java.lang.String[] getSheetNames() -> getSheetNames
    1698:1698:jxl.write.biff.Styles getStyles() -> getStyles
    0:0:jxl.read.biff.BOFRecord getWorkbookBof() -> getWorkbookBof
    1021:1030:void rationalize() -> rationalize
    636:950:void write() -> write
jxl.write.biff.WriteAccessRecord -> jxl.write.biff.WriteAccessRecord:
# {"id":"sourceFile","fileName":"WriteAccessRecord.java"}
    52:64:void <init>(java.lang.String) -> <init>
    75:75:byte[] getData() -> getData
kotlin.DeprecationLevel -> kotlin.DeprecationLevel:
# {"id":"sourceFile","fileName":"Annotations.kt"}
    0:0:kotlin.DeprecationLevel[] $values() -> $values
    86:90:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.DeprecationLevel valueOf(java.lang.String) -> valueOf
    0:0:kotlin.DeprecationLevel[] values() -> values
kotlin.ExceptionsKt__ExceptionsKt -> kotlin.ExceptionsKt__ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    71:71:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
kotlin.Experimental$Level -> kotlin.Experimental$Level:
# {"id":"sourceFile","fileName":"Experimental.kt"}
    0:0:kotlin.Experimental$Level[] $values() -> $values
    37:39:void <clinit>() -> <clinit>
    35:35:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.Experimental$Level valueOf(java.lang.String) -> valueOf
    0:0:kotlin.Experimental$Level[] values() -> values
kotlin.Function -> kotlin.Function:
# {"id":"sourceFile","fileName":"Function.kt"}
kotlin.InitializedLazyImpl -> kotlin.InitializedLazyImpl:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    95:95:void <init>(java.lang.Object) -> <init>
    95:95:java.lang.Object getValue() -> getValue
    0:0:boolean isInitialized() -> isInitialized
    99:99:java.lang.String toString() -> toString
kotlin.KotlinNothingValueException -> kotlin.KotlinNothingValueException:
# {"id":"sourceFile","fileName":"ExceptionsH.kt"}
    118:118:void <init>() -> <init>
    119:119:void <init>(java.lang.String) -> <init>
    120:120:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    121:121:void <init>(java.lang.Throwable) -> <init>
kotlin.KotlinNullPointerException -> kotlin.KotlinNullPointerException:
# {"id":"sourceFile","fileName":"KotlinNullPointerException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.Lazy -> kotlin.Lazy:
# {"id":"sourceFile","fileName":"Lazy.kt"}
kotlin.LazyKt__LazyJVMKt -> kotlin.LazyKt__LazyJVMKt:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    21:21:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
kotlin.LazyThreadSafetyMode -> kotlin.LazyThreadSafetyMode:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    0:0:kotlin.LazyThreadSafetyMode[] $values() -> $values
    54:67:void <clinit>() -> <clinit>
    49:49:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.LazyThreadSafetyMode valueOf(java.lang.String) -> valueOf
    0:0:kotlin.LazyThreadSafetyMode[] values() -> values
kotlin.NoWhenBranchMatchedException -> kotlin.NoWhenBranchMatchedException:
# {"id":"sourceFile","fileName":"NoWhenBranchMatchedException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    15:15:void <init>(java.lang.Throwable) -> <init>
kotlin.NotImplementedError -> kotlin.NotImplementedError:
# {"id":"sourceFile","fileName":"Standard.kt"}
    0:0:void <init>() -> <init>
    15:15:void <init>(java.lang.String) -> <init>
    15:15:void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.Pair -> kotlin.Pair:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    26:28:void <init>(java.lang.Object,java.lang.Object) -> <init>
    0:0:java.lang.Object component1() -> component1
    0:0:java.lang.Object component2() -> component2
    0:0:kotlin.Pair copy(java.lang.Object,java.lang.Object) -> copy
    0:0:kotlin.Pair copy$default(kotlin.Pair,java.lang.Object,java.lang.Object,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Object getFirst() -> getFirst
    28:28:java.lang.Object getSecond() -> getSecond
    0:0:int hashCode() -> hashCode
    34:34:java.lang.String toString() -> toString
kotlin.RequiresOptIn$Level -> kotlin.RequiresOptIn$Level:
# {"id":"sourceFile","fileName":"OptIn.kt"}
    0:0:kotlin.RequiresOptIn$Level[] $values() -> $values
    42:45:void <clinit>() -> <clinit>
    40:40:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.RequiresOptIn$Level valueOf(java.lang.String) -> valueOf
    0:0:kotlin.RequiresOptIn$Level[] values() -> values
kotlin.Result -> kotlin.Result:
# {"id":"sourceFile","fileName":"Result.kt"}
    0:0:void <clinit>() -> <clinit>
    22:22:void <init>(java.lang.Object) -> <init>
    0:0:kotlin.Result box-impl(java.lang.Object) -> box-impl
    0:0:java.lang.Object constructor-impl(java.lang.Object) -> constructor-impl
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(java.lang.Object,java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(java.lang.Object,java.lang.Object) -> equals-impl0
    64:64:java.lang.Throwable exceptionOrNull-impl(java.lang.Object) -> exceptionOrNull-impl
    0:0:void getValue$annotations() -> getValue$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(java.lang.Object) -> hashCode-impl
    38:38:boolean isFailure-impl(java.lang.Object) -> isFailure-impl
    32:32:boolean isSuccess-impl(java.lang.Object) -> isSuccess-impl
    73:73:java.lang.String toString() -> toString
    75:76:java.lang.String toString-impl(java.lang.Object) -> toString-impl
    0:0:java.lang.Object unbox-impl() -> unbox-impl
kotlin.Result$Companion -> kotlin.Result$Companion:
# {"id":"sourceFile","fileName":"Result.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.Result$Failure -> kotlin.Result$Failure:
# {"id":"sourceFile","fileName":"Result.kt"}
    105:106:void <init>(java.lang.Throwable) -> <init>
    109:109:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
    111:111:java.lang.String toString() -> toString
kotlin.ResultKt -> kotlin.ResultKt:
# {"id":"sourceFile","fileName":"Result.kt"}
    122:122:java.lang.Object createFailure(java.lang.Throwable) -> createFailure
    132:132:void throwOnFailure(java.lang.Object) -> throwOnFailure
kotlin.SynchronizedLazyImpl -> kotlin.SynchronizedLazyImpl:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    55:59:void <init>(kotlin.jvm.functions.Function0,java.lang.Object) -> <init>
    55:55:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    63:76:java.lang.Object getValue() -> getValue
    82:82:boolean isInitialized() -> isInitialized
    84:84:java.lang.String toString() -> toString
    86:86:java.lang.Object writeReplace() -> writeReplace
kotlin.Triple -> kotlin.Triple:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    66:69:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    0:0:java.lang.Object component1() -> component1
    0:0:java.lang.Object component2() -> component2
    0:0:java.lang.Object component3() -> component3
    0:0:kotlin.Triple copy(java.lang.Object,java.lang.Object,java.lang.Object) -> copy
    0:0:kotlin.Triple copy$default(kotlin.Triple,java.lang.Object,java.lang.Object,java.lang.Object,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    67:67:java.lang.Object getFirst() -> getFirst
    68:68:java.lang.Object getSecond() -> getSecond
    69:69:java.lang.Object getThird() -> getThird
    0:0:int hashCode() -> hashCode
    75:75:java.lang.String toString() -> toString
kotlin.TuplesKt -> kotlin.TuplesKt:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> to
kotlin.TypeCastException -> kotlin.TypeCastException:
# {"id":"sourceFile","fileName":"TypeCastException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.UNINITIALIZED_VALUE -> kotlin.UNINITIALIZED_VALUE:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.UninitializedPropertyAccessException -> kotlin.UninitializedPropertyAccessException:
# {"id":"sourceFile","fileName":"UninitializedPropertyAccessException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    15:15:void <init>(java.lang.Throwable) -> <init>
kotlin.Unit -> kotlin.Unit:
# {"id":"sourceFile","fileName":"Unit.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:java.lang.String toString() -> toString
kotlin.UnsafeLazyImpl -> kotlin.UnsafeLazyImpl:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    74:76:void <init>(kotlin.jvm.functions.Function0) -> <init>
    80:85:java.lang.Object getValue() -> getValue
    88:88:boolean isInitialized() -> isInitialized
    90:90:java.lang.String toString() -> toString
    92:92:java.lang.Object writeReplace() -> writeReplace
kotlin.annotation.AnnotationRetention -> kotlin.annotation.AnnotationRetention:
# {"id":"sourceFile","fileName":"Annotations.kt"}
    0:0:kotlin.annotation.AnnotationRetention[] $values() -> $values
    65:69:void <clinit>() -> <clinit>
    63:63:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.annotation.AnnotationRetention valueOf(java.lang.String) -> valueOf
    0:0:kotlin.annotation.AnnotationRetention[] values() -> values
kotlin.annotation.AnnotationTarget -> kotlin.annotation.AnnotationTarget:
# {"id":"sourceFile","fileName":"Annotations.kt"}
    0:0:kotlin.annotation.AnnotationTarget[] $values() -> $values
    26:54:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.annotation.AnnotationTarget valueOf(java.lang.String) -> valueOf
    0:0:kotlin.annotation.AnnotationTarget[] values() -> values
kotlin.collections.AbstractCollection -> kotlin.collections.AbstractCollection:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    14:14:int size() -> <init>
    14:14:void <init>():14 -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    1743:1744:boolean kotlin.collections.CollectionsKt___CollectionsKt.any(java.lang.Iterable,kotlin.jvm.functions.Function1) -> contains
    1743:1744:boolean contains(java.lang.Object):19 -> contains
    19:19:boolean contains(java.lang.Object) -> contains
    1722:1723:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1722:1723:boolean containsAll(java.util.Collection):22 -> containsAll
    22:22:boolean containsAll(java.util.Collection) -> containsAll
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    14:14:int size() -> size
    34:34:java.lang.Object[] toArray() -> toArray
    40:40:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    26:26:java.lang.String toString() -> toString
kotlin.collections.AbstractCollection$toString$1 -> kotlin.collections.AbstractCollection$toString$1:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    0:0:void <init>(kotlin.collections.AbstractCollection) -> <init>
    26:26:java.lang.Object invoke(java.lang.Object) -> invoke
    27:27:java.lang.CharSequence invoke(java.lang.Object) -> invoke
kotlin.collections.AbstractList -> kotlin.collections.AbstractList:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.collections.AbstractList$Companion -> kotlin.collections.AbstractList$Companion:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    108:108:void checkElementIndex$kotlin_stdlib(int,int) -> checkElementIndex$kotlin_stdlib
    114:114:void checkPositionIndex$kotlin_stdlib(int,int) -> checkPositionIndex$kotlin_stdlib
    120:123:void checkRangeIndexes$kotlin_stdlib(int,int,int) -> checkRangeIndexes$kotlin_stdlib
kotlin.collections.AbstractMutableCollection -> kotlin.collections.AbstractMutableCollection:
# {"id":"sourceFile","fileName":"AbstractMutableCollection.kt"}
    16:16:void <init>() -> <init>
    15:15:int size() -> size
kotlin.collections.AbstractMutableList -> kotlin.collections.AbstractMutableList:
# {"id":"sourceFile","fileName":"AbstractMutableList.kt"}
    16:16:void <init>() -> <init>
    15:15:java.lang.Object remove(int) -> remove
    15:15:int size() -> size
kotlin.collections.AbstractMutableMap -> kotlin.collections.AbstractMutableMap:
# {"id":"sourceFile","fileName":"AbstractMutableMap.kt"}
    19:19:void <init>() -> <init>
    18:18:java.util.Set entrySet() -> entrySet
    18:18:java.util.Collection getValues() -> getValues
    18:18:java.util.Set keySet() -> keySet
    18:18:int size() -> size
    18:18:java.util.Collection values() -> values
kotlin.collections.AbstractMutableSet -> kotlin.collections.AbstractMutableSet:
# {"id":"sourceFile","fileName":"AbstractMutableSet.kt"}
    16:16:void <init>() -> <init>
    15:15:int size() -> size
kotlin.collections.ArrayAsCollection -> kotlin.collections.ArrayAsCollection:
# {"id":"sourceFile","fileName":"Collections.kt"}
    57:57:int size() -> <init>
    57:57:void <init>(java.lang.Object[],boolean):57 -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    60:60:boolean contains(java.lang.Object) -> contains
    1722:1723:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1722:1723:boolean containsAll(java.util.Collection):61 -> containsAll
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    58:58:int getSize() -> getSize
    59:59:boolean isEmpty() -> isEmpty
    62:62:java.util.Iterator iterator() -> iterator
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    57:57:int size() -> size
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    64:64:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArrayDeque -> kotlin.collections.ArrayDeque:
# {"id":"sourceFile","fileName":"ArrayDeque.kt"}
    562:562:void <clinit>() -> <clinit>
    28:32:void <init>(int) -> <init>
    39:40:void <init>() -> <init>
    179:179:boolean add(java.lang.Object) -> add
    184:253:void add(int,java.lang.Object) -> add
    272:274:boolean addAll(java.util.Collection) -> addAll
    279:350:boolean addAll(int,java.util.Collection) -> addAll
    124:128:void addFirst(java.lang.Object) -> addFirst
    135:138:void addLast(java.lang.Object) -> addLast
    521:529:void clear() -> clear
    372:372:boolean contains(java.lang.Object) -> contains
    257:268:void copyCollectionElements(int,java.util.Collection) -> copyCollectionElements
    74:78:void copyElements(int) -> copyElements
    96:96:int decremented(int) -> decremented
    59:67:void ensureCapacity(int) -> ensureCapacity
    103:103:java.lang.Object first() -> first
    108:108:java.lang.Object firstOrNull() -> firstOrNull
    357:359:java.lang.Object get(int) -> get
    22:22:int getSize() -> getSize
    94:94:int incremented(int) -> incremented
    375:386:int indexOf(java.lang.Object) -> indexOf
    98:98:boolean isEmpty() -> isEmpty
    113:113:java.lang.Object last() -> last
    394:405:int lastIndexOf(java.lang.Object) -> lastIndexOf
    118:118:java.lang.Object lastOrNull() -> lastOrNull
    89:89:int negativeMod(int) -> negativeMod
    87:87:int positiveMod(int) -> positiveMod
    413:415:boolean remove(java.lang.Object) -> remove
    467:476:boolean filterInPlace(kotlin.jvm.functions.Function1) -> removeAll
    467:476:boolean removeAll(java.util.Collection):462 -> removeAll
    462:462:boolean removeAll(java.util.Collection) -> removeAll
    480:490:boolean filterInPlace(kotlin.jvm.functions.Function1) -> removeAll
    480:490:boolean removeAll(java.util.Collection):462 -> removeAll
    462:462:boolean removeAll(java.util.Collection) -> removeAll
    494:503:boolean filterInPlace(kotlin.jvm.functions.Function1) -> removeAll
    494:503:boolean removeAll(java.util.Collection):462 -> removeAll
    462:462:boolean removeAll(java.util.Collection) -> removeAll
    507:515:boolean filterInPlace(kotlin.jvm.functions.Function1) -> removeAll
    507:515:boolean removeAll(java.util.Collection):462 -> removeAll
    420:457:java.lang.Object removeAt(int) -> removeAt
    145:150:java.lang.Object removeFirst() -> removeFirst
    163:168:java.lang.Object removeLast() -> removeLast
    467:476:boolean filterInPlace(kotlin.jvm.functions.Function1) -> retainAll
    467:476:boolean retainAll(java.util.Collection):464 -> retainAll
    464:464:boolean retainAll(java.util.Collection) -> retainAll
    480:490:boolean filterInPlace(kotlin.jvm.functions.Function1) -> retainAll
    480:490:boolean retainAll(java.util.Collection):464 -> retainAll
    464:464:boolean retainAll(java.util.Collection) -> retainAll
    494:503:boolean filterInPlace(kotlin.jvm.functions.Function1) -> retainAll
    494:503:boolean retainAll(java.util.Collection):464 -> retainAll
    464:464:boolean retainAll(java.util.Collection) -> retainAll
    507:515:boolean filterInPlace(kotlin.jvm.functions.Function1) -> retainAll
    507:515:boolean retainAll(java.util.Collection):464 -> retainAll
    363:367:java.lang.Object set(int,java.lang.Object) -> set
    535:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    554:554:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArrayDeque$Companion -> kotlin.collections.ArrayDeque$Companion:
# {"id":"sourceFile","fileName":"ArrayDeque.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    0:0:int newCapacity$kotlin_stdlib(int,int) -> newCapacity$kotlin_stdlib
kotlin.collections.ArraysKt__ArraysJVMKt -> kotlin.collections.ArraysKt__ArraysJVMKt:
# {"id":"sourceFile","fileName":"ArraysJVM.kt"}
    44:44:java.lang.Object[] arrayOfNulls(java.lang.Object[],int) -> arrayOfNulls
    49:49:void copyOfRangeToIndexCheck(int,int) -> copyOfRangeToIndexCheck
kotlin.collections.ArraysKt__ArraysKt -> kotlin.collections.ArraysKt__ArraysKt:
# {"id":"sourceFile","fileName":"Arrays.kt"}
kotlin.collections.ArraysKt___ArraysJvmKt -> kotlin.collections.ArraysKt___ArraysJvmKt:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    133:133:java.util.List asList(java.lang.Object[]) -> asList
    1247:1247:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int) -> copyInto
    1246:1246:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object) -> copyInto$default
    1835:1836:java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> copyOfRange
    1914:1914:void fill(java.lang.Object[],java.lang.Object,int,int) -> fill
    1956:1956:void fill(int[],int,int,int) -> fill
    1913:1913:void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> fill$default
kotlin.collections.ArraysKt___ArraysKt -> kotlin.collections.ArraysKt___ArraysKt:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    519:519:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    3290:3291:java.util.List drop(java.lang.Object[],int) -> drop
    4198:4198:java.util.List filterNotNull(java.lang.Object[]) -> filterNotNull
    4207:4207:java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection) -> filterNotNullTo
    8054:8054:int getLastIndex(java.lang.Object[]) -> getLastIndex
    1508:1515:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    2897:2900:char single(char[]) -> single
    3070:3070:java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
    4966:4973:java.util.List takeLast(java.lang.Object[],int) -> takeLast
    9945:9948:java.util.List toList(java.lang.Object[]) -> toList
    10044:10044:java.util.List toMutableList(java.lang.Object[]) -> toMutableList
    10069:10070:java.util.List toMutableList(int[]) -> toMutableList
kotlin.collections.ArraysUtilJVM -> kotlin.collections.ArraysUtilJVM:
# {"id":"sourceFile","fileName":"ArraysUtilJVM.java"}
    13:13:java.util.List asList(java.lang.Object[]) -> asList
kotlin.collections.BrittleContainsOptimizationKt -> kotlin.collections.BrittleContainsOptimizationKt:
# {"id":"sourceFile","fileName":"BrittleContainsOptimization.kt"}
    29:33:java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable) -> convertToSetForSetOperationWith
    123:123:boolean kotlin.collections.CollectionsKt__CollectionsJVMKt.brittleContainsOptimizationEnabled() -> convertToSetForSetOperationWith
    123:123:java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable):35 -> convertToSetForSetOperationWith
    35:35:java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable) -> convertToSetForSetOperationWith
    123:123:boolean kotlin.collections.CollectionsKt__CollectionsJVMKt.brittleContainsOptimizationEnabled() -> safeToConvertToSet
    123:123:boolean safeToConvertToSet(java.util.Collection):16 -> safeToConvertToSet
    16:16:boolean safeToConvertToSet(java.util.Collection) -> safeToConvertToSet
kotlin.collections.CollectionSystemProperties -> kotlin.collections.CollectionSystemProperties:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
    128:128:void <clinit>() -> <clinit>
kotlin.collections.CollectionsKt__CollectionsJVMKt -> kotlin.collections.CollectionsKt__CollectionsJVMKt:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
    51:51:java.util.List build(java.util.List) -> build
    88:92:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean) -> copyToArrayOfAny
    45:45:java.util.List createListBuilder(int) -> createListBuilder
    20:20:java.util.List listOf(java.lang.Object) -> listOf
kotlin.collections.CollectionsKt__CollectionsKt -> kotlin.collections.CollectionsKt__CollectionsKt:
# {"id":"sourceFile","fileName":"Collections.kt"}
    55:55:java.util.Collection asCollection(java.lang.Object[]) -> asCollection
    71:71:java.util.List emptyList() -> emptyList
    215:215:kotlin.ranges.IntRange getIndices(java.util.Collection) -> getIndices
    223:223:int getLastIndex(java.util.List) -> getLastIndex
    77:77:java.util.List listOf(java.lang.Object[]) -> listOf
    126:126:java.util.List listOfNotNull(java.lang.Object[]) -> listOfNotNull
    107:107:java.util.List mutableListOf(java.lang.Object[]) -> mutableListOf
    291:293:java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
    467:467:void throwCountOverflow() -> throwCountOverflow
    463:463:void throwIndexOverflow() -> throwIndexOverflow
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1 -> kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1:
# {"id":"sourceFile","fileName":"Collections.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1,java.lang.Comparable) -> <init>
    392:392:java.lang.Object invoke(java.lang.Object) -> invoke
    392:392:java.lang.Integer invoke(java.lang.Object):392 -> invoke
    392:392:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.collections.CollectionsKt__IterablesKt -> kotlin.collections.CollectionsKt__IterablesKt:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
kotlin.collections.CollectionsKt__IteratorsJVMKt -> kotlin.collections.CollectionsKt__IteratorsJVMKt:
# {"id":"sourceFile","fileName":"IteratorsJVM.kt"}
kotlin.collections.CollectionsKt__IteratorsKt -> kotlin.collections.CollectionsKt__IteratorsKt:
# {"id":"sourceFile","fileName":"Iterators.kt"}
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> kotlin.collections.CollectionsKt__MutableCollectionsJVMKt:
# {"id":"sourceFile","fileName":"MutableCollectionsJVM.kt"}
kotlin.collections.CollectionsKt__MutableCollectionsKt -> kotlin.collections.CollectionsKt__MutableCollectionsKt:
# {"id":"sourceFile","fileName":"MutableCollections.kt"}
    116:120:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    217:220:boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean) -> filterInPlace$CollectionsKt__MutableCollectionsKt
    206:206:boolean removeAll(java.lang.Iterable,kotlin.jvm.functions.Function1) -> removeAll
    255:255:java.lang.Object removeLast(java.util.List) -> removeLast
    170:170:boolean retainAll(java.util.Collection,java.lang.Iterable) -> retainAll
    213:213:boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1) -> retainAll
kotlin.collections.CollectionsKt__ReversedViewsKt -> kotlin.collections.CollectionsKt__ReversedViewsKt:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
kotlin.collections.CollectionsKt___CollectionsJvmKt -> kotlin.collections.CollectionsKt___CollectionsJvmKt:
# {"id":"sourceFile","fileName":"_CollectionsJvm.kt"}
    43:43:void reverse(java.util.List) -> reverse
kotlin.collections.CollectionsKt___CollectionsKt -> kotlin.collections.CollectionsKt___CollectionsKt:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    3533:3533:kotlin.sequences.Sequence asSequence(java.lang.Iterable) -> asSequence
    74:76:boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    197:202:java.lang.Object first(java.lang.Iterable) -> first
    213:215:java.lang.Object first(java.util.List) -> first
    313:317:int indexOf(java.lang.Iterable,java.lang.Object) -> indexOf
    1673:1674:java.util.Set intersect(java.lang.Iterable,java.lang.Iterable) -> intersect
    3494:3503:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    3493:3493:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    3516:3516:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    3515:3515:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    417:419:java.lang.Object last(java.util.List) -> last
    509:509:java.lang.Object lastOrNull(java.util.List) -> lastOrNull
    2190:2195:java.lang.Comparable maxOrNull(java.lang.Iterable) -> maxOrNull
    2560:2565:java.lang.Comparable minOrNull(java.lang.Iterable) -> minOrNull
    3137:3137:java.util.List minus(java.lang.Iterable,java.lang.Object) -> minus
    857:857:java.util.Collection filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> minus
    857:857:java.util.List minus(java.lang.Iterable,java.lang.Object):3139 -> minus
    3139:3139:java.util.List minus(java.lang.Iterable,java.lang.Object) -> minus
    3226:3228:java.util.List plus(java.util.Collection,java.lang.Object) -> plus
    3268:3275:java.util.List plus(java.util.Collection,java.lang.Iterable) -> plus
    977:979:java.util.List reversed(java.lang.Iterable) -> reversed
    590:597:java.lang.Object single(java.lang.Iterable) -> single
    607:610:java.lang.Object single(java.util.List) -> single
    890:903:java.util.List take(java.lang.Iterable,int) -> take
    1295:1296:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection) -> toCollection
    1305:1305:java.util.HashSet toHashSet(java.lang.Iterable) -> toHashSet
    1139:1142:int[] toIntArray(java.util.Collection) -> toIntArray
    1312:1319:java.util.List toList(java.lang.Iterable) -> toList
    1326:1328:java.util.List toMutableList(java.lang.Iterable) -> toMutableList
    1335:1335:java.util.List toMutableList(java.util.Collection) -> toMutableList
    1696:1697:java.util.Set toMutableSet(java.lang.Iterable) -> toMutableSet
    1344:1351:java.util.Set toSet(java.lang.Iterable) -> toSet
    3442:3446:java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    3442:3446:java.util.List zip(java.lang.Iterable,java.lang.Iterable):3431 -> zip
    3431:3431:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1 -> kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(java.lang.Iterable):21 -> <init>
    3533:3533:kotlin.sequences.Sequence kotlin.collections.CollectionsKt___CollectionsKt.asSequence(java.lang.Iterable) -> iterator
    3533:3533:java.util.Iterator iterator():681 -> iterator
kotlin.collections.EmptyIterator -> kotlin.collections.EmptyIterator:
# {"id":"sourceFile","fileName":"Collections.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void add(java.lang.Object) -> add
    0:0:boolean hasNext() -> hasNext
    0:0:boolean hasPrevious() -> hasPrevious
    15:15:java.lang.Object next() -> next
    20:20:java.lang.Void next() -> next
    0:0:int nextIndex() -> nextIndex
    15:15:java.lang.Object previous() -> previous
    21:21:java.lang.Void previous() -> previous
    0:0:int previousIndex() -> previousIndex
    0:0:void remove() -> remove
    0:0:void set(java.lang.Object) -> set
kotlin.collections.EmptyList -> kotlin.collections.EmptyList:
# {"id":"sourceFile","fileName":"Collections.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void add(int,java.lang.Object) -> add
    0:0:void add(int,java.lang.Void) -> add
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean add(java.lang.Void) -> add
    0:0:boolean addAll(int,java.util.Collection) -> addAll
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    0:0:boolean contains(java.lang.Void) -> contains
    24:24:boolean contains(java.lang.Object) -> contains
    34:34:boolean containsAll(java.util.Collection) -> containsAll
    27:27:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object get(int) -> get
    36:36:java.lang.Void get(int) -> get
    0:0:int getSize() -> getSize
    0:0:int hashCode() -> hashCode
    0:0:int indexOf(java.lang.Void) -> indexOf
    24:24:int indexOf(java.lang.Object) -> indexOf
    0:0:boolean isEmpty() -> isEmpty
    40:40:java.util.Iterator iterator() -> iterator
    0:0:int lastIndexOf(java.lang.Void) -> lastIndexOf
    24:24:int lastIndexOf(java.lang.Object) -> lastIndexOf
    41:41:java.util.ListIterator listIterator() -> listIterator
    43:44:java.util.ListIterator listIterator(int) -> listIterator
    52:52:java.lang.Object readResolve() -> readResolve
    0:0:java.lang.Object remove(int) -> remove
    0:0:java.lang.Void remove(int) -> remove
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    0:0:java.lang.Object set(int,java.lang.Object) -> set
    0:0:java.lang.Void set(int,java.lang.Void) -> set
    24:24:int size() -> size
    49:49:java.util.List subList(int,int) -> subList
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
kotlin.collections.EmptyMap -> kotlin.collections.EmptyMap:
# {"id":"sourceFile","fileName":"Maps.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void clear() -> clear
    0:0:boolean containsKey(java.lang.Object) -> containsKey
    0:0:boolean containsValue(java.lang.Void) -> containsValue
    14:14:boolean containsValue(java.lang.Object) -> containsValue
    14:14:java.util.Set entrySet() -> entrySet
    17:17:boolean equals(java.lang.Object) -> equals
    0:0:java.lang.Void get(java.lang.Object) -> get
    14:14:java.lang.Object get(java.lang.Object) -> get
    27:27:java.util.Set getEntries() -> getEntries
    28:28:java.util.Set getKeys() -> getKeys
    0:0:int getSize() -> getSize
    29:29:java.util.Collection getValues() -> getValues
    0:0:int hashCode() -> hashCode
    0:0:boolean isEmpty() -> isEmpty
    14:14:java.util.Set keySet() -> keySet
    0:0:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    0:0:java.lang.Void put(java.lang.Object,java.lang.Void) -> put
    0:0:void putAll(java.util.Map) -> putAll
    31:31:java.lang.Object readResolve() -> readResolve
    0:0:java.lang.Void remove(java.lang.Object) -> remove
    14:14:java.lang.Object remove(java.lang.Object) -> remove
    14:14:int size() -> size
    0:0:java.lang.String toString() -> toString
    14:14:java.util.Collection values() -> values
kotlin.collections.EmptySet -> kotlin.collections.EmptySet:
# {"id":"sourceFile","fileName":"Sets.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean add(java.lang.Void) -> add
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    0:0:boolean contains(java.lang.Void) -> contains
    14:14:boolean contains(java.lang.Object) -> contains
    24:24:boolean containsAll(java.util.Collection) -> containsAll
    17:17:boolean equals(java.lang.Object) -> equals
    0:0:int getSize() -> getSize
    0:0:int hashCode() -> hashCode
    0:0:boolean isEmpty() -> isEmpty
    26:26:java.util.Iterator iterator() -> iterator
    28:28:java.lang.Object readResolve() -> readResolve
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    14:14:int size() -> size
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
kotlin.collections.IndexedValue -> kotlin.collections.IndexedValue:
# {"id":"sourceFile","fileName":"IndexedValue.kt"}
    14:14:void <init>(int,java.lang.Object) -> <init>
    0:0:boolean equals(java.lang.Object) -> equals
    14:14:int getIndex() -> getIndex
    14:14:java.lang.Object getValue() -> getValue
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
kotlin.collections.IntIterator -> kotlin.collections.IntIterator:
# {"id":"sourceFile","fileName":"Iterators.kt"}
    35:35:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.collections.MapsKt__MapWithDefaultKt -> kotlin.collections.MapsKt__MapWithDefaultKt:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
kotlin.collections.MapsKt__MapsJVMKt -> kotlin.collections.MapsKt__MapsJVMKt:
# {"id":"sourceFile","fileName":"MapsJVM.kt"}
    58:58:java.util.Map build(java.util.Map) -> build
    52:52:java.util.Map createMapBuilder(int) -> createMapBuilder
    0:0:int mapCapacity(int) -> mapCapacity
    27:27:java.util.Map mapOf(kotlin.Pair) -> mapOf
    140:140:java.util.Map toSingletonMap(java.util.Map) -> toSingletonMap
kotlin.collections.MapsKt__MapsKt -> kotlin.collections.MapsKt__MapsKt:
# {"id":"sourceFile","fileName":"Maps.kt"}
    40:40:java.util.Map emptyMap() -> emptyMap
    784:786:java.util.Map optimizeReadOnlyMap(java.util.Map) -> optimizeReadOnlyMap
    415:416:void putAll(java.util.Map,java.lang.Iterable) -> putAll
    546:553:java.util.Map toMap(java.lang.Iterable) -> toMap
    560:560:java.util.Map toMap(java.lang.Iterable,java.util.Map) -> toMap
    600:603:java.util.Map toMap(java.util.Map) -> toMap
    612:612:java.util.Map toMutableMap(java.util.Map) -> toMutableMap
kotlin.collections.MapsKt___MapsJvmKt -> kotlin.collections.MapsKt___MapsJvmKt:
# {"id":"sourceFile","fileName":"_MapsJvm.kt"}
kotlin.collections.MapsKt___MapsKt -> kotlin.collections.MapsKt___MapsKt:
# {"id":"sourceFile","fileName":"_Maps.kt"}
    585:585:kotlin.sequences.Sequence asSequence(java.util.Map) -> asSequence
kotlin.collections.SetsKt__SetsJVMKt -> kotlin.collections.SetsKt__SetsJVMKt:
# {"id":"sourceFile","fileName":"SetsJVM.kt"}
    49:49:java.util.Set build(java.util.Set) -> build
    43:43:java.util.Set createSetBuilder(int) -> createSetBuilder
    18:18:java.util.Set setOf(java.lang.Object) -> setOf
kotlin.collections.SetsKt__SetsKt -> kotlin.collections.SetsKt__SetsKt:
# {"id":"sourceFile","fileName":"Sets.kt"}
    36:36:java.util.Set emptySet() -> emptySet
    173:175:java.util.Set optimizeReadOnlySet(java.util.Set) -> optimizeReadOnlySet
kotlin.collections.SetsKt___SetsKt -> kotlin.collections.SetsKt___SetsKt:
# {"id":"sourceFile","fileName":"_Sets.kt"}
    26:26:java.util.Set minus(java.util.Set,java.lang.Object) -> minus
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> minus
    857:857:java.util.Set minus(java.util.Set,java.lang.Object):28 -> minus
    28:28:java.util.Set minus(java.util.Set,java.lang.Object) -> minus
kotlin.collections.builders.AbstractMapBuilderEntrySet -> kotlin.collections.builders.AbstractMapBuilderEntrySet:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    610:610:void <init>() -> <init>
    610:610:boolean contains(java.lang.Object) -> contains
    611:611:boolean contains(java.util.Map$Entry) -> contains
    610:610:boolean remove(java.lang.Object) -> remove
kotlin.collections.builders.ListBuilder -> kotlin.collections.builders.ListBuilder:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    13:19:void <init>(java.lang.Object[],int,int,boolean,kotlin.collections.builders.ListBuilder,kotlin.collections.builders.ListBuilder) -> <init>
    21:21:void <init>() -> <init>
    23:24:void <init>(int) -> <init>
    12:12:java.lang.Object[] access$getArray$p(kotlin.collections.builders.ListBuilder) -> access$getArray$p
    12:12:int access$getLength$p(kotlin.collections.builders.ListBuilder) -> access$getLength$p
    12:12:int access$getOffset$p(kotlin.collections.builders.ListBuilder) -> access$getOffset$p
    84:85:boolean add(java.lang.Object) -> add
    90:92:void add(int,java.lang.Object) -> add
    96:98:boolean addAll(java.util.Collection) -> addAll
    103:106:boolean addAll(int,java.util.Collection) -> addAll
    221:230:void addAllInternal(int,java.util.Collection,int) -> addAllInternal
    210:216:void addAtInternal(int,java.lang.Object) -> addAtInternal
    27:29:java.util.List build() -> build
    189:189:void checkIsMutable() -> checkIsMutable
    111:112:void clear() -> clear
    200:200:boolean contentEquals(java.util.List) -> contentEquals
    180:184:void ensureCapacity(int) -> ensureCapacity
    196:196:void ensureExtraCapacity(int) -> ensureExtraCapacity
    166:166:boolean equals(java.lang.Object) -> equals
    45:46:java.lang.Object get(int) -> get
    40:40:int getSize() -> getSize
    170:170:int hashCode() -> hashCode
    59:60:int indexOf(java.lang.Object) -> indexOf
    204:206:void insertAtInternal(int,int) -> insertAtInternal
    193:193:boolean isEffectivelyReadOnly() -> isEffectivelyReadOnly
    42:42:boolean isEmpty() -> isEmpty
    75:75:java.util.Iterator iterator() -> iterator
    67:69:int lastIndexOf(java.lang.Object) -> lastIndexOf
    76:76:java.util.ListIterator listIterator() -> listIterator
    79:80:java.util.ListIterator listIterator(int) -> listIterator
    122:124:boolean remove(java.lang.Object) -> remove
    129:130:boolean removeAll(java.util.Collection) -> removeAll
    116:118:java.lang.Object removeAt(int) -> removeAt
    237:245:java.lang.Object removeAtInternal(int) -> removeAtInternal
    251:257:void removeRangeInternal(int,int) -> removeRangeInternal
    134:135:boolean retainAll(java.util.Collection) -> retainAll
    262:279:int retainOrRemoveAllInternal(int,int,java.util.Collection,boolean) -> retainOrRemoveAllInternal
    50:53:java.lang.Object set(int,java.lang.Object) -> set
    139:140:java.util.List subList(int,int) -> subList
    144:153:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    161:161:java.lang.Object[] toArray() -> toArray
    174:174:java.lang.String toString() -> toString
    34:37:java.lang.Object writeReplace() -> writeReplace
kotlin.collections.builders.ListBuilder$Itr -> kotlin.collections.builders.ListBuilder$Itr:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    289:292:void <init>(kotlin.collections.builders.ListBuilder,int) -> <init>
    319:320:void add(java.lang.Object) -> add
    296:296:boolean hasNext() -> hasNext
    295:295:boolean hasPrevious() -> hasPrevious
    308:310:java.lang.Object next() -> next
    299:299:int nextIndex() -> nextIndex
    302:304:java.lang.Object previous() -> previous
    298:298:int previousIndex() -> previousIndex
    324:327:void remove() -> remove
    314:315:void set(java.lang.Object) -> set
kotlin.collections.builders.ListBuilderKt -> kotlin.collections.builders.ListBuilderKt:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    1:1:boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> access$subarrayContentEquals
    1:1:boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> access$subarrayContentHashCode
    1:1:int access$subarrayContentHashCode(java.lang.Object[],int,int):1 -> access$subarrayContentHashCode
    1:1:boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> access$subarrayContentToString
    1:1:java.lang.String access$subarrayContentToString(java.lang.Object[],int,int):1 -> access$subarrayContentToString
    333:335:java.lang.Object[] arrayOfUninitializedElements(int) -> arrayOfUninitializedElements
    374:374:java.lang.Object[] copyOfUninitializedElements(java.lang.Object[],int) -> copyOfUninitializedElements
    379:379:void resetAt(java.lang.Object[],int) -> resetAt
    383:383:void resetRange(java.lang.Object[],int,int) -> resetRange
    363:366:boolean subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> subarrayContentEquals
    355:356:int subarrayContentHashCode(java.lang.Object[],int,int) -> subarrayContentHashCode
    339:348:java.lang.String subarrayContentToString(java.lang.Object[],int,int) -> subarrayContentToString
kotlin.collections.builders.MapBuilder -> kotlin.collections.builders.MapBuilder:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    0:0:void <clinit>() -> <clinit>
    12:20:void <init>(java.lang.Object[],java.lang.Object[],int[],int[],int,int) -> <init>
    34:34:void <init>() -> <init>
    36:40:void <init>(int) -> <init>
    12:12:java.lang.Object[] access$allocateValuesArray(kotlin.collections.builders.MapBuilder) -> access$allocateValuesArray
    12:12:java.lang.Object[] access$getKeysArray$p(kotlin.collections.builders.MapBuilder) -> access$getKeysArray$p
    12:12:int access$getLength$p(kotlin.collections.builders.MapBuilder) -> access$getLength$p
    12:12:int[] access$getPresenceArray$p(kotlin.collections.builders.MapBuilder) -> access$getPresenceArray$p
    12:12:java.lang.Object[] access$getValuesArray$p(kotlin.collections.builders.MapBuilder) -> access$getValuesArray$p
    12:12:void access$removeKeyAt(kotlin.collections.builders.MapBuilder,int) -> access$removeKeyAt
    276:304:int addKey$kotlin_stdlib(java.lang.Object) -> addKey$kotlin_stdlib
    195:198:java.lang.Object[] allocateValuesArray() -> allocateValuesArray
    45:46:java.util.Map build() -> build
    172:172:void checkIsMutable$kotlin_stdlib() -> checkIsMutable$kotlin_stdlib
    95:107:void clear() -> clear
    207:218:void compact() -> compact
    383:388:boolean containsAllEntries$kotlin_stdlib(java.util.Collection) -> containsAllEntries$kotlin_stdlib
    375:377:boolean containsEntry$kotlin_stdlib(java.util.Map$Entry) -> containsEntry$kotlin_stdlib
    57:57:boolean containsKey(java.lang.Object) -> containsKey
    58:58:boolean containsValue(java.lang.Object) -> containsValue
    380:380:boolean contentEquals(java.util.Map) -> contentEquals
    180:190:void ensureCapacity(int) -> ensureCapacity
    176:176:void ensureExtraCapacity(int) -> ensureExtraCapacity
    443:443:kotlin.collections.builders.MapBuilder$EntriesItr entriesIterator$kotlin_stdlib() -> entriesIterator$kotlin_stdlib
    12:12:java.util.Set entrySet() -> entrySet
    139:140:boolean equals(java.lang.Object) -> equals
    255:262:int findKey(java.lang.Object) -> findKey
    267:269:int findValue(java.lang.Object) -> findValue
    61:63:java.lang.Object get(java.lang.Object) -> get
    168:168:int getCapacity() -> getCapacity
    129:132:java.util.Set getEntries() -> getEntries
    169:169:int getHashSize() -> getHashSize
    111:114:java.util.Set getKeys() -> getKeys
    22:22:int getSize() -> getSize
    120:123:java.util.Collection getValues() -> getValues
    202:202:int hash(java.lang.Object) -> hash
    145:147:int hashCode() -> hashCode
    56:56:boolean isEmpty() -> isEmpty
    29:29:boolean isReadOnly$kotlin_stdlib() -> isReadOnly$kotlin_stdlib
    12:12:java.util.Set keySet() -> keySet
    441:441:kotlin.collections.builders.MapBuilder$KeysItr keysIterator$kotlin_stdlib() -> keysIterator$kotlin_stdlib
    67:75:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    81:82:void putAll(java.util.Map) -> putAll
    413:418:boolean putAllEntries(java.util.Collection) -> putAllEntries
    398:406:boolean putEntry(java.util.Map$Entry) -> putEntry
    240:250:boolean putRehash(int) -> putRehash
    223:233:void rehash(int) -> rehash
    86:90:java.lang.Object remove(java.lang.Object) -> remove
    425:429:boolean removeEntry$kotlin_stdlib(java.util.Map$Entry) -> removeEntry$kotlin_stdlib
    328:368:void removeHashAt(int) -> removeHashAt
    310:313:int removeKey$kotlin_stdlib(java.lang.Object) -> removeKey$kotlin_stdlib
    318:321:void removeKeyAt(int) -> removeKeyAt
    434:437:boolean removeValue$kotlin_stdlib(java.lang.Object) -> removeValue$kotlin_stdlib
    12:12:int size() -> size
    153:163:java.lang.String toString() -> toString
    12:12:java.util.Collection values() -> values
    442:442:kotlin.collections.builders.MapBuilder$ValuesItr valuesIterator$kotlin_stdlib() -> valuesIterator$kotlin_stdlib
    51:54:java.lang.Object writeReplace() -> writeReplace
kotlin.collections.builders.MapBuilder$Companion -> kotlin.collections.builders.MapBuilder$Companion:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    445:445:int access$computeHashSize(kotlin.collections.builders.MapBuilder$Companion,int) -> access$computeHashSize
    445:445:int access$computeShift(kotlin.collections.builders.MapBuilder$Companion,int) -> access$computeShift
    451:451:int computeHashSize(int) -> computeHashSize
    453:453:int computeShift(int) -> computeShift
kotlin.collections.builders.MapBuilder$EntriesItr -> kotlin.collections.builders.MapBuilder$EntriesItr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    502:502:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    502:502:java.lang.Object next() -> next
    505:508:kotlin.collections.builders.MapBuilder$EntryRef next() -> next
    521:528:void nextAppendString(java.lang.StringBuilder) -> nextAppendString
    513:516:int nextHashCode$kotlin_stdlib() -> nextHashCode$kotlin_stdlib
kotlin.collections.builders.MapBuilder$EntryRef -> kotlin.collections.builders.MapBuilder$EntryRef:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    532:534:void <init>(kotlin.collections.builders.MapBuilder,int) -> <init>
    551:553:boolean equals(java.lang.Object) -> equals
    537:537:java.lang.Object getKey() -> getKey
    540:540:java.lang.Object getValue() -> getValue
    555:555:int hashCode() -> hashCode
    543:546:java.lang.Object setValue(java.lang.Object) -> setValue
    557:557:java.lang.String toString() -> toString
kotlin.collections.builders.MapBuilder$Itr -> kotlin.collections.builders.MapBuilder$Itr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    456:456:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    457:457:kotlin.collections.builders.MapBuilder getMap$kotlin_stdlib() -> <init>
    457:457:void <init>(kotlin.collections.builders.MapBuilder):457 -> <init>
    460:460:void setLastIndex$kotlin_stdlib(int) -> <init>
    460:460:void <init>(kotlin.collections.builders.MapBuilder):460 -> <init>
    463:463:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    459:459:void setIndex$kotlin_stdlib(int) -> getIndex$kotlin_stdlib
    459:459:int getIndex$kotlin_stdlib():459 -> getIndex$kotlin_stdlib
    460:460:void setLastIndex$kotlin_stdlib(int) -> getLastIndex$kotlin_stdlib
    460:460:int getLastIndex$kotlin_stdlib():460 -> getLastIndex$kotlin_stdlib
    457:457:kotlin.collections.builders.MapBuilder getMap$kotlin_stdlib() -> getMap$kotlin_stdlib
    471:471:boolean hasNext() -> hasNext
    467:468:void initNext$kotlin_stdlib() -> initNext$kotlin_stdlib
    474:477:void remove() -> remove
    459:459:void setIndex$kotlin_stdlib(int) -> setIndex$kotlin_stdlib
    460:460:void setLastIndex$kotlin_stdlib(int) -> setLastIndex$kotlin_stdlib
kotlin.collections.builders.MapBuilder$KeysItr -> kotlin.collections.builders.MapBuilder$KeysItr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    481:481:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    483:486:java.lang.Object next() -> next
kotlin.collections.builders.MapBuilder$ValuesItr -> kotlin.collections.builders.MapBuilder$ValuesItr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    492:492:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    494:497:java.lang.Object next() -> next
kotlin.collections.builders.MapBuilderEntries -> kotlin.collections.builders.MapBuilderEntries:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    616:617:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    615:615:boolean add(java.lang.Object) -> add
    623:623:boolean add(java.util.Map$Entry) -> add
    624:624:boolean addAll(java.util.Collection) -> addAll
    622:622:void clear() -> clear
    627:627:boolean containsAll(java.util.Collection) -> containsAll
    621:621:boolean containsEntry(java.util.Map$Entry) -> containsEntry
    619:619:int getSize() -> getSize
    620:620:boolean isEmpty() -> isEmpty
    626:626:java.util.Iterator iterator() -> iterator
    625:625:boolean remove(java.util.Map$Entry) -> remove
    630:631:boolean removeAll(java.util.Collection) -> removeAll
    635:636:boolean retainAll(java.util.Collection) -> retainAll
kotlin.collections.builders.MapBuilderKeys -> kotlin.collections.builders.MapBuilderKeys:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    562:563:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    569:569:boolean add(java.lang.Object) -> add
    570:570:boolean addAll(java.util.Collection) -> addAll
    568:568:void clear() -> clear
    567:567:boolean contains(java.lang.Object) -> contains
    565:565:int getSize() -> getSize
    566:566:boolean isEmpty() -> isEmpty
    572:572:java.util.Iterator iterator() -> iterator
    571:571:boolean remove(java.lang.Object) -> remove
    575:576:boolean removeAll(java.util.Collection) -> removeAll
    580:581:boolean retainAll(java.util.Collection) -> retainAll
kotlin.collections.builders.MapBuilderValues -> kotlin.collections.builders.MapBuilderValues:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    586:587:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    592:592:boolean add(java.lang.Object) -> add
    593:593:boolean addAll(java.util.Collection) -> addAll
    594:594:void clear() -> clear
    591:591:boolean contains(java.lang.Object) -> contains
    589:589:int getSize() -> getSize
    590:590:boolean isEmpty() -> isEmpty
    595:595:java.util.Iterator iterator() -> iterator
    596:596:boolean remove(java.lang.Object) -> remove
    599:600:boolean removeAll(java.util.Collection) -> removeAll
    604:605:boolean retainAll(java.util.Collection) -> retainAll
kotlin.collections.builders.SerializedCollection -> kotlin.collections.builders.SerializedCollection:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    0:0:void <clinit>() -> <clinit>
    386:388:void <init>(java.util.Collection,int) -> <init>
    391:391:void <init>() -> <init>
    402:418:void readExternal(java.io.ObjectInput) -> readExternal
    422:422:java.lang.Object readResolve() -> readResolve
    394:397:void writeExternal(java.io.ObjectOutput) -> writeExternal
kotlin.collections.builders.SerializedCollection$Companion -> kotlin.collections.builders.SerializedCollection$Companion:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.collections.builders.SerializedMap -> kotlin.collections.builders.SerializedMap:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    0:0:void <clinit>() -> <clinit>
    640:641:void <init>(java.util.Map) -> <init>
    644:644:void <init>() -> <init>
    656:666:void readExternal(java.io.ObjectInput) -> readExternal
    671:671:java.lang.Object readResolve() -> readResolve
    647:651:void writeExternal(java.io.ObjectOutput) -> writeExternal
kotlin.collections.builders.SerializedMap$Companion -> kotlin.collections.builders.SerializedMap$Companion:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.collections.builders.SetBuilder -> kotlin.collections.builders.SetBuilder:
# {"id":"sourceFile","fileName":"SetBuilder.kt"}
    11:12:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    14:14:void <init>() -> <init>
    16:16:void <init>(int) -> <init>
    33:33:boolean add(java.lang.Object) -> add
    38:39:boolean addAll(java.util.Collection) -> addAll
    19:19:java.util.Set build() -> build
    32:32:void clear() -> clear
    31:31:boolean contains(java.lang.Object) -> contains
    29:29:int getSize() -> getSize
    30:30:boolean isEmpty() -> isEmpty
    35:35:java.util.Iterator iterator() -> iterator
    34:34:boolean remove(java.lang.Object) -> remove
    43:44:boolean removeAll(java.util.Collection) -> removeAll
    48:49:boolean retainAll(java.util.Collection) -> retainAll
    24:27:java.lang.Object writeReplace() -> writeReplace
kotlin.comparisons.ComparisonsKt__ComparisonsKt -> kotlin.comparisons.ComparisonsKt__ComparisonsKt:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    78:78:int compareValues(java.lang.Comparable,java.lang.Comparable) -> compareValues
kotlin.contracts.InvocationKind -> kotlin.contracts.InvocationKind:
# {"id":"sourceFile","fileName":"ContractBuilder.kt"}
    0:0:kotlin.contracts.InvocationKind[] $values() -> $values
    101:122:void <clinit>() -> <clinit>
    93:93:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.contracts.InvocationKind valueOf(java.lang.String) -> valueOf
    0:0:kotlin.contracts.InvocationKind[] values() -> values
kotlin.coroutines.AbstractCoroutineContextElement -> kotlin.coroutines.AbstractCoroutineContextElement:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    14:15:void <init>(kotlin.coroutines.CoroutineContext$Key) -> <init>
    14:14:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    14:14:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    15:15:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    14:14:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    14:14:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.AbstractCoroutineContextKey -> kotlin.coroutines.AbstractCoroutineContextKey:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    46:52:void <init>(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1) -> <init>
    55:55:boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key) -> isSubKey$kotlin_stdlib
    54:54:kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element) -> tryCast$kotlin_stdlib
kotlin.coroutines.CombinedContext -> kotlin.coroutines.CombinedContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    111:111:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> <init>
    111:111:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):111 -> <init>
    113:114:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> <init>
    153:153:boolean contains(kotlin.coroutines.CoroutineContext$Element) -> contains
    158:163:boolean containsAll(kotlin.coroutines.CombinedContext) -> containsAll
    169:169:boolean equals(java.lang.Object) -> equals
    131:131:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    120:125:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    171:171:int hashCode() -> hashCode
    134:139:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    111:111:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    147:147:int size() -> size
    174:174:java.lang.String toString() -> toString
    179:185:java.lang.Object writeReplace() -> writeReplace
kotlin.coroutines.CombinedContext$Serialized -> kotlin.coroutines.CombinedContext$Serialized:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    188:188:kotlin.coroutines.CoroutineContext[] getElements() -> <init>
    188:188:void <init>(kotlin.coroutines.CoroutineContext[]):188 -> <init>
    188:188:kotlin.coroutines.CoroutineContext[] getElements() -> getElements
    193:193:java.lang.Object readResolve() -> readResolve
    12955:12955:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.fold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2) -> readResolve
    12955:12955:java.lang.Object readResolve():193 -> readResolve
    193:193:java.lang.Object readResolve() -> readResolve
kotlin.coroutines.CombinedContext$Serialized$Companion -> kotlin.coroutines.CombinedContext$Serialized$Companion:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.coroutines.CombinedContext$toString$1 -> kotlin.coroutines.CombinedContext$toString$1:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    174:174:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    175:175:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.CombinedContext$writeReplace$1 -> kotlin.coroutines.CombinedContext$writeReplace$1:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <init>(kotlin.coroutines.CoroutineContext[],kotlin.jvm.internal.Ref$IntRef) -> <init>
    182:182:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    182:182:void invoke(kotlin.Unit,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.Continuation -> kotlin.coroutines.Continuation:
# {"id":"sourceFile","fileName":"Continuation.kt"}
kotlin.coroutines.ContinuationInterceptor -> kotlin.coroutines.ContinuationInterceptor:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> kotlin.coroutines.ContinuationInterceptor$DefaultImpls:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    55:60:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> get
    67:70:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> minusKey
kotlin.coroutines.ContinuationInterceptor$Key -> kotlin.coroutines.ContinuationInterceptor$Key:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.coroutines.ContinuationKt -> kotlin.coroutines.ContinuationKt:
# {"id":"sourceFile","fileName":"Continuation.kt"}
    115:115:void startCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> startCoroutine
    129:129:void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutine
kotlin.coroutines.CoroutineContext -> kotlin.coroutines.CoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$DefaultImpls -> kotlin.coroutines.CoroutineContext$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    31:32:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Element -> kotlin.coroutines.CoroutineContext$Element:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> kotlin.coroutines.CoroutineContext$Element$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    70:70:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    67:67:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> get
    73:73:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    59:59:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Key -> kotlin.coroutines.CoroutineContext$Key:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$plus$1 -> kotlin.coroutines.CoroutineContext$plus$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    33:40:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.EmptyCoroutineContext -> kotlin.coroutines.EmptyCoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    0:0:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    0:0:int hashCode() -> hashCode
    0:0:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    0:0:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    97:97:java.lang.Object readResolve() -> readResolve
    0:0:java.lang.String toString() -> toString
kotlin.coroutines.intrinsics.CoroutineSingletons -> kotlin.coroutines.intrinsics.CoroutineSingletons:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    0:0:kotlin.coroutines.intrinsics.CoroutineSingletons[] $values() -> $values
    64:64:void <clinit>() -> <clinit>
    62:62:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String) -> valueOf
    0:0:kotlin.coroutines.intrinsics.CoroutineSingletons[] values() -> values
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    87:89:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
    165:186:kotlin.coroutines.Continuation createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> createCoroutineUnintercepted
    165:186:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):91 -> createCoroutineUnintercepted
    122:124:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
    165:186:kotlin.coroutines.Continuation createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> createCoroutineUnintercepted
    165:186:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):126 -> createCoroutineUnintercepted
    143:143:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation) -> intercepted
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    168:168:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> <init>
    172:182:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    186:186:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    190:200:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    168:168:void kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.<init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> <init>
    168:168:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1):168 -> <init>
    172:172:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    172:172:java.lang.Object invokeSuspend(java.lang.Object):172 -> invokeSuspend
    179:179:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    179:179:java.lang.Object invokeSuspend(java.lang.Object):179 -> invokeSuspend
    180:180:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    180:180:java.lang.Object invokeSuspend(java.lang.Object):180 -> invokeSuspend
    182:182:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    182:182:java.lang.Object invokeSuspend(java.lang.Object):182 -> invokeSuspend
    174:174:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    174:174:java.lang.Object invokeSuspend(java.lang.Object):174 -> invokeSuspend
    175:175:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    175:175:java.lang.Object invokeSuspend(java.lang.Object):175 -> invokeSuspend
    205:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    186:186:void kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.<init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    186:186:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1):186 -> <init>
    190:190:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    190:190:java.lang.Object invokeSuspend(java.lang.Object):190 -> invokeSuspend
    197:197:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    197:197:java.lang.Object invokeSuspend(java.lang.Object):197 -> invokeSuspend
    198:198:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    198:198:java.lang.Object invokeSuspend(java.lang.Object):198 -> invokeSuspend
    200:200:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    200:200:java.lang.Object invokeSuspend(java.lang.Object):200 -> invokeSuspend
    192:192:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    192:192:java.lang.Object invokeSuspend(java.lang.Object):192 -> invokeSuspend
    193:193:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    193:193:java.lang.Object invokeSuspend(java.lang.Object):193 -> invokeSuspend
    205:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    168:168:void kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.<init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> <init>
    168:168:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object):168 -> <init>
    172:172:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    172:172:java.lang.Object invokeSuspend(java.lang.Object):172 -> invokeSuspend
    179:179:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    179:179:java.lang.Object invokeSuspend(java.lang.Object):179 -> invokeSuspend
    180:180:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    180:180:java.lang.Object invokeSuspend(java.lang.Object):180 -> invokeSuspend
    182:182:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    182:182:java.lang.Object invokeSuspend(java.lang.Object):182 -> invokeSuspend
    174:174:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    174:174:java.lang.Object invokeSuspend(java.lang.Object):174 -> invokeSuspend
    175:175:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1.invokeSuspend(java.lang.Object) -> invokeSuspend
    175:175:java.lang.Object invokeSuspend(java.lang.Object):175 -> invokeSuspend
    205:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    186:186:void kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.<init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    186:186:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object):186 -> <init>
    190:190:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    190:190:java.lang.Object invokeSuspend(java.lang.Object):190 -> invokeSuspend
    197:197:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    197:197:java.lang.Object invokeSuspend(java.lang.Object):197 -> invokeSuspend
    198:198:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    198:198:java.lang.Object invokeSuspend(java.lang.Object):198 -> invokeSuspend
    200:200:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    200:200:java.lang.Object invokeSuspend(java.lang.Object):200 -> invokeSuspend
    192:192:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    192:192:java.lang.Object invokeSuspend(java.lang.Object):192 -> invokeSuspend
    193:193:java.lang.Object kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2.invokeSuspend(java.lang.Object) -> invokeSuspend
    193:193:java.lang.Object invokeSuspend(java.lang.Object):193 -> invokeSuspend
    205:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    57:57:java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> kotlin.coroutines.jvm.internal.BaseContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    14:18:void <init>(kotlin.coroutines.Continuation) -> <init>
    60:60:kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation) -> create
    64:64:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    73:73:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    18:18:kotlin.coroutines.Continuation getCompletion() -> getCompletion
    kotlin.coroutines.CoroutineContext getContext() -> getContext
      # {"id":"com.android.tools.r8.synthesized"}
    76:76:java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    0:0:void releaseIntercepted() -> releaseIntercepted
    28:46:void resumeWith(java.lang.Object) -> resumeWith
    68:68:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.Boxing -> kotlin.coroutines.jvm.internal.Boxing:
# {"id":"sourceFile","fileName":"boxing.kt"}
    20:20:java.lang.Boolean boxBoolean(boolean) -> boxBoolean
kotlin.coroutines.jvm.internal.CompletedContinuation -> kotlin.coroutines.jvm.internal.CompletedContinuation:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    126:126:kotlin.coroutines.CoroutineContext getContext() -> getContext
    129:129:void resumeWith(java.lang.Object) -> resumeWith
    0:0:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.ContinuationImpl -> kotlin.coroutines.jvm.internal.ContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    100:101:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext) -> <init>
    102:102:void <init>(kotlin.coroutines.Continuation) -> <init>
    105:105:kotlin.coroutines.CoroutineContext getContext() -> getContext
    111:113:kotlin.coroutines.Continuation intercepted() -> intercepted
    116:120:void releaseIntercepted() -> releaseIntercepted
kotlin.coroutines.jvm.internal.CoroutineStackFrame -> kotlin.coroutines.jvm.internal.CoroutineStackFrame:
# {"id":"sourceFile","fileName":"CoroutineStackFrame.kt"}
kotlin.coroutines.jvm.internal.DebugMetadata -> kotlin.coroutines.jvm.internal.DebugMetadata:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
kotlin.coroutines.jvm.internal.DebugMetadataKt -> kotlin.coroutines.jvm.internal.DebugMetadataKt:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    102:103:void checkDebugMetadataVersion(int,int) -> checkDebugMetadataVersion
    90:90:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getDebugMetadataAnnotation
    94:96:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getLabel
    42:48:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getStackTraceElement
kotlin.coroutines.jvm.internal.DebugProbesKt -> kotlin.coroutines.jvm.internal.DebugProbesKt:
# {"id":"sourceFile","fileName":"DebugProbes.kt"}
    0:0:kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation) -> probeCoroutineCreated
    0:0:void probeCoroutineResumed(kotlin.coroutines.Continuation) -> probeCoroutineResumed
    0:0:void probeCoroutineSuspended(kotlin.coroutines.Continuation) -> probeCoroutineSuspended
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> kotlin.coroutines.jvm.internal.ModuleNameRetriever:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    61:61:void <clinit>() -> <clinit>
    76:84:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> buildCache
    66:72:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getModuleName
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    52:57:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl -> kotlin.coroutines.jvm.internal.RestrictedContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    83:86:void <init>(kotlin.coroutines.Continuation) -> <init>
    93:93:kotlin.coroutines.CoroutineContext getContext() -> getContext
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda -> kotlin.coroutines.jvm.internal.RestrictedSuspendLambda:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    142:144:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    145:145:void <init>(int) -> <init>
    142:142:int getArity() -> getArity
    148:151:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.SuspendLambda -> kotlin.coroutines.jvm.internal.SuspendLambda:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    157:159:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    160:160:void <init>(int) -> <init>
    157:157:int getArity() -> getArity
    163:166:java.lang.String toString() -> toString
kotlin.internal.PlatformImplementations -> kotlin.internal.PlatformImplementations:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    32:32:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    45:45:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
kotlin.internal.PlatformImplementations$ReflectThrowable -> kotlin.internal.PlatformImplementations$ReflectThrowable:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    23:27:void <clinit>() -> <clinit>
kotlin.internal.PlatformImplementationsKt -> kotlin.internal.PlatformImplementationsKt:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    50:70:void <clinit>() -> <clinit>
    89:100:int getJavaVersion() -> getJavaVersion
kotlin.internal.ProgressionUtilKt -> kotlin.internal.ProgressionUtilKt:
# {"id":"sourceFile","fileName":"progressionUtil.kt"}
    21:21:int differenceModulo(int,int,int) -> differenceModulo
    46:48:int getProgressionLastElement(int,int,int) -> getProgressionLastElement
    10:10:int mod(int,int) -> mod
kotlin.internal.RequireKotlinVersionKind -> kotlin.internal.RequireKotlinVersionKind:
# {"id":"sourceFile","fileName":"Annotations.kt"}
    0:0:kotlin.internal.RequireKotlinVersionKind[] $values() -> $values
    102:104:void <clinit>() -> <clinit>
    100:100:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.internal.RequireKotlinVersionKind valueOf(java.lang.String) -> valueOf
    0:0:kotlin.internal.RequireKotlinVersionKind[] values() -> values
kotlin.internal.jdk7.JDK7PlatformImplementations -> kotlin.internal.jdk7.JDK7PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    11:11:void <init>() -> <init>
    14:14:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
kotlin.internal.jdk8.JDK8PlatformImplementations -> kotlin.internal.jdk8.JDK8PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    27:27:void <init>() -> <init>
    39:39:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
kotlin.io.AccessDeniedException -> kotlin.io.AccessDeniedException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    46:46:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:50:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
kotlin.io.CloseableKt -> kotlin.io.CloseableKt:
# {"id":"sourceFile","fileName":"Closeable.kt"}
    57:62:void closeFinally(java.io.Closeable,java.lang.Throwable) -> closeFinally
kotlin.io.ExceptionsKt -> kotlin.io.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    1:1:java.lang.String access$constructMessage(java.io.File,java.io.File,java.lang.String) -> access$constructMessage
    12:19:java.lang.String constructMessage(java.io.File,java.io.File,java.lang.String) -> constructMessage
kotlin.io.FileAlreadyExistsException -> kotlin.io.FileAlreadyExistsException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    37:37:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    41:41:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
kotlin.io.FileSystemException -> kotlin.io.FileSystemException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    28:28:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    29:32:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
    29:29:java.io.File getFile() -> getFile
    30:30:java.io.File getOther() -> getOther
    31:31:java.lang.String getReason() -> getReason
kotlin.io.FileWalkDirection -> kotlin.io.FileWalkDirection:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    0:0:kotlin.io.FileWalkDirection[] $values() -> $values
    22:24:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.io.FileWalkDirection valueOf(java.lang.String) -> valueOf
    0:0:kotlin.io.FileWalkDirection[] values() -> values
kotlin.io.NoSuchFileException -> kotlin.io.NoSuchFileException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    55:55:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    59:59:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
kotlin.io.OnErrorAction -> kotlin.io.OnErrorAction:
# {"id":"sourceFile","fileName":"Utils.kt"}
    0:0:kotlin.io.OnErrorAction[] $values() -> $values
    251:254:void <clinit>() -> <clinit>
    249:249:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.io.OnErrorAction valueOf(java.lang.String) -> valueOf
    0:0:kotlin.io.OnErrorAction[] values() -> values
kotlin.io.ReadAfterEOFException -> kotlin.io.ReadAfterEOFException:
# {"id":"sourceFile","fileName":"ioH.kt"}
    40:40:void <init>(java.lang.String) -> <init>
kotlin.jvm.JvmClassMappingKt -> kotlin.jvm.JvmClassMappingKt:
# {"id":"sourceFile","fileName":"JvmClassMapping.kt"}
    29:29:java.lang.Class getJavaClass(kotlin.reflect.KClass) -> getJavaClass
    59:62:java.lang.Class getJavaObjectType(kotlin.reflect.KClass) -> getJavaObjectType
kotlin.jvm.KotlinReflectionNotSupportedError -> kotlin.jvm.KotlinReflectionNotSupportedError:
# {"id":"sourceFile","fileName":"KotlinReflectionNotSupportedError.kt"}
    11:11:void <init>() -> <init>
    13:13:void <init>(java.lang.String) -> <init>
    15:15:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    17:17:void <init>(java.lang.Throwable) -> <init>
kotlin.jvm.functions.Function0 -> kotlin.jvm.functions.Function0:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function1 -> kotlin.jvm.functions.Function1:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function10 -> kotlin.jvm.functions.Function10:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function11 -> kotlin.jvm.functions.Function11:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function12 -> kotlin.jvm.functions.Function12:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function13 -> kotlin.jvm.functions.Function13:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function14 -> kotlin.jvm.functions.Function14:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function15 -> kotlin.jvm.functions.Function15:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function16 -> kotlin.jvm.functions.Function16:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function17 -> kotlin.jvm.functions.Function17:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function18 -> kotlin.jvm.functions.Function18:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function19 -> kotlin.jvm.functions.Function19:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function2 -> kotlin.jvm.functions.Function2:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function20 -> kotlin.jvm.functions.Function20:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function21 -> kotlin.jvm.functions.Function21:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function22 -> kotlin.jvm.functions.Function22:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function3 -> kotlin.jvm.functions.Function3:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function4 -> kotlin.jvm.functions.Function4:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function5 -> kotlin.jvm.functions.Function5:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function6 -> kotlin.jvm.functions.Function6:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function7 -> kotlin.jvm.functions.Function7:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function8 -> kotlin.jvm.functions.Function8:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function9 -> kotlin.jvm.functions.Function9:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.internal.AdaptedFunctionReference -> kotlin.jvm.internal.AdaptedFunctionReference:
# {"id":"sourceFile","fileName":"AdaptedFunctionReference.java"}
    39:39:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    42:49:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    65:67:boolean equals(java.lang.Object) -> equals
    54:54:int getArity() -> getArity
    58:58:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    78:84:int hashCode() -> hashCode
    90:90:java.lang.String toString() -> toString
kotlin.jvm.internal.ArrayIterator -> kotlin.jvm.internal.ArrayIterator:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    8:8:void <init>(java.lang.Object[]) -> <init>
    10:10:boolean hasNext() -> hasNext
    11:11:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.jvm.internal.ArrayIteratorKt -> kotlin.jvm.internal.ArrayIteratorKt:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    14:14:java.util.Iterator iterator(java.lang.Object[]) -> iterator
kotlin.jvm.internal.CallableReference -> kotlin.jvm.internal.CallableReference:
# {"id":"sourceFile","fileName":"CallableReference.java"}
    48:48:void <clinit>() -> <clinit>
    60:60:void <init>() -> <init>
    65:65:void <init>(java.lang.Object) -> <init>
    69:74:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean) -> <init>
    161:161:java.lang.Object call(java.lang.Object[]) -> call
    166:166:java.lang.Object callBy(java.util.Map) -> callBy
    86:89:kotlin.reflect.KCallable compute() -> compute
    150:150:java.util.List getAnnotations() -> getAnnotations
    81:81:java.lang.Object getBoundReceiver() -> getBoundReceiver
    120:120:java.lang.String getName() -> getName
    111:111:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    140:140:java.util.List getParameters() -> getParameters
    96:98:kotlin.reflect.KCallable getReflected() -> getReflected
    145:145:kotlin.reflect.KType getReturnType() -> getReturnType
    132:132:java.lang.String getSignature() -> getSignature
    156:156:java.util.List getTypeParameters() -> getTypeParameters
    172:172:kotlin.reflect.KVisibility getVisibility() -> getVisibility
    190:190:boolean isAbstract() -> isAbstract
    178:178:boolean isFinal() -> isFinal
    184:184:boolean isOpen() -> isOpen
    196:196:boolean isSuspend() -> isSuspend
kotlin.jvm.internal.CallableReference$NoReceiver -> kotlin.jvm.internal.CallableReference$NoReceiver:
# {"id":"sourceFile","fileName":"CallableReference.java"}
    52:52:void <clinit>() -> <clinit>
    51:51:kotlin.jvm.internal.CallableReference$NoReceiver access$000() -> access$000
    55:55:java.lang.Object readResolve() -> readResolve
kotlin.jvm.internal.ClassBasedDeclarationContainer -> kotlin.jvm.internal.ClassBasedDeclarationContainer:
# {"id":"sourceFile","fileName":"ClassBasedDeclarationContainer.kt"}
kotlin.jvm.internal.ClassReference -> kotlin.jvm.internal.ClassReference:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    101:102:void <clinit>() -> <clinit>
    1559:1559:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> <clinit>
    1559:1559:void <clinit>():107 -> <clinit>
    1591:1592:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1591:1592:void <clinit>():107 -> <clinit>
    107:155:void <clinit>() -> <clinit>
    1253:1254:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1253:1254:void <clinit>():155 -> <clinit>
    132:159:void <clinit>() -> <clinit>
    438:438:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    438:438:void <clinit>():163 -> <clinit>
    388:388:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    388:388:void <clinit>():163 -> <clinit>
    1238:1239:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1238:1239:void <clinit>():163 -> <clinit>
    388:388:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    388:388:void <clinit>():163 -> <clinit>
    163:163:void <clinit>() -> <clinit>
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> <init>
    10:10:void <init>(java.lang.Class):10 -> <init>
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> access$getSimpleNames$cp
    10:10:java.util.Map access$getSimpleNames$cp():10 -> access$getSimpleNames$cp
    91:91:boolean equals(java.lang.Object) -> equals
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> getJClass
    10:10:java.lang.Class getJClass():10 -> getJClass
    12:12:java.lang.String getSimpleName() -> getSimpleName
    94:94:int hashCode() -> hashCode
    97:97:java.lang.String toString() -> toString
kotlin.jvm.internal.ClassReference$Companion -> kotlin.jvm.internal.ClassReference$Companion:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    166:180:java.lang.String getClassSimpleName(java.lang.Class) -> getClassSimpleName
kotlin.jvm.internal.CollectionToArray -> kotlin.jvm.internal.CollectionToArray:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    14:14:void <clinit>() -> <clinit>
    30:30:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:57:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:34:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    59:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    59:60:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:39:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    65:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    65:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    43:46:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:57:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    21:21:java.lang.Object[] toArray(java.util.Collection) -> toArray
    59:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    59:60:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    22:22:java.lang.Object[] toArray(java.util.Collection) -> toArray
    65:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    65:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    23:23:java.lang.Object[] toArray(java.util.Collection) -> toArray
kotlin.jvm.internal.DefaultConstructorMarker -> kotlin.jvm.internal.DefaultConstructorMarker:
# {"id":"sourceFile","fileName":"DefaultConstructorMarker.java"}
kotlin.jvm.internal.FunInterfaceConstructorReference -> kotlin.jvm.internal.FunInterfaceConstructorReference:
# {"id":"sourceFile","fileName":"FunInterfaceConstructorReference.java"}
    31:32:void <init>(java.lang.Class) -> <init>
    38:40:boolean equals(java.lang.Object) -> equals
    25:25:kotlin.reflect.KCallable getReflected() -> getReflected
    55:55:kotlin.reflect.KFunction getReflected() -> getReflected
    45:45:int hashCode() -> hashCode
    50:50:java.lang.String toString() -> toString
kotlin.jvm.internal.FunctionBase -> kotlin.jvm.internal.FunctionBase:
# {"id":"sourceFile","fileName":"FunctionBase.kt"}
kotlin.jvm.internal.FunctionImpl -> kotlin.jvm.internal.FunctionImpl:
# {"id":"sourceFile","fileName":"FunctionImpl.java"}
    31:32:void checkArity(int) -> checkArity
    42:43:java.lang.Object invoke() -> invoke
    48:49:java.lang.Object invoke(java.lang.Object) -> invoke
    54:55:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    60:61:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    66:67:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    72:73:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    78:79:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    84:85:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    90:91:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    96:97:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    102:103:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    108:109:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    114:115:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    120:121:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    126:127:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    132:133:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    138:139:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    144:145:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    150:151:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    156:157:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    162:163:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    168:169:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    174:175:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    27:27:java.lang.Object invokeVararg(java.lang.Object[]) -> invokeVararg
    37:37:void throwWrongArity(int) -> throwWrongArity
kotlin.jvm.internal.FunctionReference -> kotlin.jvm.internal.FunctionReference:
# {"id":"sourceFile","fileName":"FunctionReference.java"}
    40:40:void <init>(int) -> <init>
    45:45:void <init>(int,java.lang.Object) -> <init>
    50:52:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    69:69:kotlin.reflect.KCallable computeReflected() -> computeReflected
    105:116:boolean equals(java.lang.Object) -> equals
    57:57:int getArity() -> getArity
    12:12:kotlin.reflect.KCallable getReflected() -> getReflected
    63:63:kotlin.reflect.KFunction getReflected() -> getReflected
    123:123:int hashCode() -> hashCode
    81:81:boolean isExternal() -> isExternal
    93:93:boolean isInfix() -> isInfix
    75:75:boolean isInline() -> isInline
    87:87:boolean isOperator() -> isOperator
    99:99:boolean isSuspend() -> isSuspend
    128:134:java.lang.String toString() -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> kotlin.jvm.internal.FunctionReferenceImpl:
# {"id":"sourceFile","fileName":"FunctionReferenceImpl.java"}
    15:15:void <init>(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
kotlin.jvm.internal.InlineMarker -> kotlin.jvm.internal.InlineMarker:
# {"id":"sourceFile","fileName":"InlineMarker.java"}
    0:0:void mark(int) -> mark
kotlin.jvm.internal.Intrinsics -> kotlin.jvm.internal.Intrinsics:
# {"id":"sourceFile","fileName":"Intrinsics.java"}
    167:167:boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    87:87:void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String) -> checkExpressionValueIsNotNull
    25:25:void checkNotNull(java.lang.Object) -> checkNotNull
    31:31:void checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    93:93:void checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> checkNotNullExpressionValue
    131:131:void checkNotNullParameter(java.lang.Object,java.lang.String) -> checkNotNullParameter
    125:125:void checkParameterIsNotNull(java.lang.Object,java.lang.String) -> checkParameterIsNotNull
    0:0:int compare(int,int) -> compare
    144:155:java.lang.String createParameterIsNullExceptionMessage(java.lang.String) -> createParameterIsNullExceptionMessage
    219:219:void needClassReification() -> needClassReification
    211:211:void reifiedOperationMarker(int,java.lang.String) -> reifiedOperationMarker
    251:251:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    255:266:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> sanitizeStackTrace
    20:20:java.lang.String stringPlus(java.lang.String,java.lang.Object) -> stringPlus
    45:45:void throwJavaNpe() -> throwJavaNpe
    50:50:void throwJavaNpe(java.lang.String) -> throwJavaNpe
    136:136:void throwParameterIsNullIAE(java.lang.String) -> throwParameterIsNullIAE
    140:140:void throwParameterIsNullNPE(java.lang.String) -> throwParameterIsNullNPE
    201:201:void throwUndefinedForReified() -> throwUndefinedForReified
    207:207:void throwUndefinedForReified(java.lang.String) -> throwUndefinedForReified
    54:54:void throwUninitializedProperty(java.lang.String) -> throwUninitializedProperty
    58:58:void throwUninitializedPropertyAccessException(java.lang.String) -> throwUninitializedPropertyAccessException
kotlin.jvm.internal.Lambda -> kotlin.jvm.internal.Lambda:
# {"id":"sourceFile","fileName":"Lambda.kt"}
    10:10:void <init>(int) -> <init>
    10:10:int getArity() -> getArity
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.LocalVariableReference -> kotlin.jvm.internal.LocalVariableReference:
# {"id":"sourceFile","fileName":"localVariableReferences.kt"}
    17:17:void <init>() -> <init>
    20:20:java.lang.Object get() -> get
    18:18:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
kotlin.jvm.internal.LocalVariableReferencesKt -> kotlin.jvm.internal.LocalVariableReferencesKt:
# {"id":"sourceFile","fileName":"localVariableReferences.kt"}
    1:1:java.lang.Void access$notSupportedError() -> access$notSupportedError
    13:13:java.lang.Void notSupportedError() -> notSupportedError
kotlin.jvm.internal.MutableLocalVariableReference -> kotlin.jvm.internal.MutableLocalVariableReference:
# {"id":"sourceFile","fileName":"localVariableReferences.kt"}
    25:25:void <init>() -> <init>
    28:28:java.lang.Object get() -> get
    26:26:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    30:30:void set(java.lang.Object) -> set
kotlin.jvm.internal.MutablePropertyReference -> kotlin.jvm.internal.MutablePropertyReference:
# {"id":"sourceFile","fileName":"MutablePropertyReference.java"}
    13:13:void <init>() -> <init>
    18:18:void <init>(java.lang.Object) -> <init>
    23:23:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    kotlin.reflect.KProperty$Getter getGetter() -> getGetter
      # {"id":"com.android.tools.r8.synthesized"}
    kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.jvm.internal.MutablePropertyReference0 -> kotlin.jvm.internal.MutablePropertyReference0:
# {"id":"sourceFile","fileName":"MutablePropertyReference0.java"}
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Object) -> <init>
    25:25:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    30:30:kotlin.reflect.KCallable computeReflected() -> computeReflected
    java.lang.Object get() -> get
      # {"id":"com.android.tools.r8.synthesized"}
    51:51:java.lang.Object getDelegate() -> getDelegate
    13:13:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    40:40:kotlin.reflect.KProperty0$Getter getGetter() -> getGetter
    13:13:kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
    45:45:kotlin.reflect.KMutableProperty0$Setter getSetter() -> getSetter
    35:35:java.lang.Object invoke() -> invoke
    void set(java.lang.Object) -> set
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.jvm.internal.MutablePropertyReference0Impl -> kotlin.jvm.internal.MutablePropertyReference0Impl:
# {"id":"sourceFile","fileName":"MutablePropertyReference0Impl.java"}
    15:15:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    34:34:java.lang.Object get() -> get
    39:39:void set(java.lang.Object) -> set
kotlin.jvm.internal.MutablePropertyReference1 -> kotlin.jvm.internal.MutablePropertyReference1:
# {"id":"sourceFile","fileName":"MutablePropertyReference1.java"}
    16:16:void <init>() -> <init>
    21:21:void <init>(java.lang.Object) -> <init>
    26:26:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    31:31:kotlin.reflect.KCallable computeReflected() -> computeReflected
    java.lang.Object get(java.lang.Object) -> get
      # {"id":"com.android.tools.r8.synthesized"}
    52:52:java.lang.Object getDelegate(java.lang.Object) -> getDelegate
    13:13:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    41:41:kotlin.reflect.KProperty1$Getter getGetter() -> getGetter
    13:13:kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
    46:46:kotlin.reflect.KMutableProperty1$Setter getSetter() -> getSetter
    36:36:java.lang.Object invoke(java.lang.Object) -> invoke
    void set(java.lang.Object,java.lang.Object) -> set
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.jvm.internal.MutablePropertyReference1Impl -> kotlin.jvm.internal.MutablePropertyReference1Impl:
# {"id":"sourceFile","fileName":"MutablePropertyReference1Impl.java"}
    15:15:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    34:34:java.lang.Object get(java.lang.Object) -> get
    39:39:void set(java.lang.Object,java.lang.Object) -> set
kotlin.jvm.internal.MutablePropertyReference2 -> kotlin.jvm.internal.MutablePropertyReference2:
# {"id":"sourceFile","fileName":"MutablePropertyReference2.java"}
    16:16:void <init>() -> <init>
    21:21:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    26:26:kotlin.reflect.KCallable computeReflected() -> computeReflected
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
      # {"id":"com.android.tools.r8.synthesized"}
    47:47:java.lang.Object getDelegate(java.lang.Object,java.lang.Object) -> getDelegate
    13:13:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    36:36:kotlin.reflect.KProperty2$Getter getGetter() -> getGetter
    13:13:kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
    41:41:kotlin.reflect.KMutableProperty2$Setter getSetter() -> getSetter
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    void set(java.lang.Object,java.lang.Object,java.lang.Object) -> set
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.jvm.internal.MutablePropertyReference2Impl -> kotlin.jvm.internal.MutablePropertyReference2Impl:
# {"id":"sourceFile","fileName":"MutablePropertyReference2Impl.java"}
    15:15:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    23:23:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    28:28:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    33:33:void set(java.lang.Object,java.lang.Object,java.lang.Object) -> set
kotlin.jvm.internal.PackageReference -> kotlin.jvm.internal.PackageReference:
# {"id":"sourceFile","fileName":"PackageReference.kt"}
    10:13:void <init>(java.lang.Class,java.lang.String) -> <init>
    19:19:boolean equals(java.lang.Object) -> equals
    12:12:java.lang.Class getJClass() -> getJClass
    22:22:int hashCode() -> hashCode
    25:25:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference -> kotlin.jvm.internal.PropertyReference:
# {"id":"sourceFile","fileName":"PropertyReference.java"}
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Object) -> <init>
    25:25:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    49:57:boolean equals(java.lang.Object) -> equals
    kotlin.reflect.KProperty$Getter getGetter() -> getGetter
      # {"id":"com.android.tools.r8.synthesized"}
    12:12:kotlin.reflect.KCallable getReflected() -> getReflected
    31:31:kotlin.reflect.KProperty getReflected() -> getReflected
    64:64:int hashCode() -> hashCode
    43:43:boolean isConst() -> isConst
    37:37:boolean isLateinit() -> isLateinit
    69:74:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference0 -> kotlin.jvm.internal.PropertyReference0:
# {"id":"sourceFile","fileName":"PropertyReference0.java"}
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Object) -> <init>
    25:25:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    30:30:kotlin.reflect.KCallable computeReflected() -> computeReflected
    java.lang.Object get() -> get
      # {"id":"com.android.tools.r8.synthesized"}
    46:46:java.lang.Object getDelegate() -> getDelegate
    12:12:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    40:40:kotlin.reflect.KProperty0$Getter getGetter() -> getGetter
    35:35:java.lang.Object invoke() -> invoke
kotlin.jvm.internal.PropertyReference0Impl -> kotlin.jvm.internal.PropertyReference0Impl:
# {"id":"sourceFile","fileName":"PropertyReference0Impl.java"}
    15:15:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    34:34:java.lang.Object get() -> get
kotlin.jvm.internal.PropertyReference1 -> kotlin.jvm.internal.PropertyReference1:
# {"id":"sourceFile","fileName":"PropertyReference1.java"}
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Object) -> <init>
    25:25:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    30:30:kotlin.reflect.KCallable computeReflected() -> computeReflected
    java.lang.Object get(java.lang.Object) -> get
      # {"id":"com.android.tools.r8.synthesized"}
    46:46:java.lang.Object getDelegate(java.lang.Object) -> getDelegate
    12:12:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    40:40:kotlin.reflect.KProperty1$Getter getGetter() -> getGetter
    35:35:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.jvm.internal.PropertyReference1Impl -> kotlin.jvm.internal.PropertyReference1Impl:
# {"id":"sourceFile","fileName":"PropertyReference1Impl.java"}
    15:15:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    34:34:java.lang.Object get(java.lang.Object) -> get
kotlin.jvm.internal.PropertyReference2 -> kotlin.jvm.internal.PropertyReference2:
# {"id":"sourceFile","fileName":"PropertyReference2.java"}
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    25:25:kotlin.reflect.KCallable computeReflected() -> computeReflected
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
      # {"id":"com.android.tools.r8.synthesized"}
    41:41:java.lang.Object getDelegate(java.lang.Object,java.lang.Object) -> getDelegate
    12:12:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    35:35:kotlin.reflect.KProperty2$Getter getGetter() -> getGetter
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlin.jvm.internal.PropertyReference2Impl -> kotlin.jvm.internal.PropertyReference2Impl:
# {"id":"sourceFile","fileName":"PropertyReference2Impl.java"}
    15:15:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    23:23:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    28:28:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
kotlin.jvm.internal.Ref$BooleanRef -> kotlin.jvm.internal.Ref$BooleanRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    90:90:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ByteRef -> kotlin.jvm.internal.Ref$ByteRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    27:27:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$CharRef -> kotlin.jvm.internal.Ref$CharRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    81:81:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$DoubleRef -> kotlin.jvm.internal.Ref$DoubleRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    72:72:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$FloatRef -> kotlin.jvm.internal.Ref$FloatRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    63:63:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$IntRef -> kotlin.jvm.internal.Ref$IntRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    45:45:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$LongRef -> kotlin.jvm.internal.Ref$LongRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    54:54:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ObjectRef -> kotlin.jvm.internal.Ref$ObjectRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    18:18:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ShortRef -> kotlin.jvm.internal.Ref$ShortRef:
# {"id":"sourceFile","fileName":"Ref.java"}
    36:36:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> kotlin.jvm.internal.Reflection:
# {"id":"sourceFile","fileName":"Reflection.java"}
    26:39:void <clinit>() -> <clinit>
    89:89:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    59:59:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    51:51:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class) -> getOrCreateKotlinPackage
    99:99:kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0) -> mutableProperty0
    107:107:kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1) -> mutableProperty1
    115:115:kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2) -> mutableProperty2
    95:95:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0) -> property0
    103:103:kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1) -> property1
    111:111:kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2) -> property2
    78:78:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    83:83:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
kotlin.jvm.internal.ReflectionFactory -> kotlin.jvm.internal.ReflectionFactory:
# {"id":"sourceFile","fileName":"ReflectionFactory.java"}
    0:0:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    30:30:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    26:26:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String) -> getOrCreateKotlinPackage
    0:0:kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0) -> mutableProperty0
    0:0:kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1) -> mutableProperty1
    0:0:kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2) -> mutableProperty2
    0:0:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0) -> property0
    0:0:kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1) -> property1
    0:0:kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2) -> property2
    39:39:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    44:45:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
kotlin.jvm.internal.TypeIntrinsics -> kotlin.jvm.internal.TypeIntrinsics:
# {"id":"sourceFile","fileName":"TypeIntrinsics.java"}
    123:126:java.util.Collection asMutableCollection(java.lang.Object) -> asMutableCollection
    207:210:java.util.Map asMutableMap(java.lang.Object) -> asMutableMap
    341:342:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int) -> beforeCheckcastToFunctionOfArity
    138:141:java.util.Collection castToCollection(java.lang.Object) -> castToCollection
    222:225:java.util.Map castToMap(java.lang.Object) -> castToMap
    258:327:int getFunctionArity(java.lang.Object) -> getFunctionArity
    336:336:boolean isFunctionOfArity(java.lang.Object,int) -> isFunctionOfArity
    17:17:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    21:22:void throwCce(java.lang.Object,java.lang.String) -> throwCce
    26:26:void throwCce(java.lang.String) -> throwCce
    30:30:java.lang.ClassCastException throwCce(java.lang.ClassCastException) -> throwCce
kotlin.jvm.internal.markers.KMappedMarker -> kotlin.jvm.internal.markers.KMappedMarker:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableCollection -> kotlin.jvm.internal.markers.KMutableCollection:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableMap -> kotlin.jvm.internal.markers.KMutableMap:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.random.AbstractPlatformRandom -> kotlin.random.AbstractPlatformRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    35:35:void <init>() -> <init>
    39:39:int nextBits(int) -> nextBits
    44:44:boolean nextBoolean() -> nextBoolean
    47:47:byte[] nextBytes(byte[]) -> nextBytes
    45:45:double nextDouble() -> nextDouble
    46:46:float nextFloat() -> nextFloat
    41:41:int nextInt() -> nextInt
    42:42:int nextInt(int) -> nextInt
    43:43:long nextLong() -> nextLong
kotlin.random.FallbackThreadLocalRandom -> kotlin.random.FallbackThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    50:51:void <init>() -> <init>
    56:56:java.util.Random getImpl() -> getImpl
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> kotlin.random.FallbackThreadLocalRandom$implStorage$1:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    51:51:void <init>() -> <init>
    51:51:java.lang.Object initialValue() -> initialValue
    52:52:java.util.Random initialValue() -> initialValue
kotlin.random.PlatformRandomKt -> kotlin.random.PlatformRandomKt:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    0:0:double doubleFromParts(int,int) -> doubleFromParts
kotlin.random.Random -> kotlin.random.Random:
# {"id":"sourceFile","fileName":"Random.kt"}
    271:271:void <clinit>() -> <clinit>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> <init>
    19:19:void <init>():19 -> <init>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> access$getDefaultRandom$cp
    163:163:boolean nextBoolean() -> nextBoolean
    222:240:byte[] nextBytes(byte[],int,int) -> nextBytes
    253:253:byte[] nextBytes(byte[]) -> nextBytes
    260:260:byte[] nextBytes(int) -> nextBytes
    221:221:byte[] nextBytes$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object) -> nextBytes$default
    170:170:double nextDouble() -> nextDouble
    181:181:double nextDouble(double) -> nextDouble
    195:203:double nextDouble(double,double) -> nextDouble
    211:211:float nextFloat() -> nextFloat
    53:53:int nextInt(int) -> nextInt
    65:82:int nextInt(int,int) -> nextInt
    95:95:long nextLong() -> nextLong
    108:108:long nextLong(long) -> nextLong
    120:152:long nextLong(long,long) -> nextLong
kotlin.random.Random$Default -> kotlin.random.Random$Default:
# {"id":"sourceFile","fileName":"Random.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    270:270:void <init>() -> <init>
    281:281:int nextBits(int) -> nextBits
    290:290:boolean nextBoolean() -> nextBoolean
    298:298:byte[] nextBytes(byte[]) -> nextBytes
    299:299:byte[] nextBytes(int) -> nextBytes
    301:301:byte[] nextBytes(byte[],int,int) -> nextBytes
    292:292:double nextDouble() -> nextDouble
    293:293:double nextDouble(double) -> nextDouble
    294:294:double nextDouble(double,double) -> nextDouble
    296:296:float nextFloat() -> nextFloat
    282:282:int nextInt() -> nextInt
    283:283:int nextInt(int) -> nextInt
    284:284:int nextInt(int,int) -> nextInt
    286:286:long nextLong() -> nextLong
    287:287:long nextLong(long) -> nextLong
    288:288:long nextLong(long,long) -> nextLong
    279:279:java.lang.Object writeReplace() -> writeReplace
kotlin.random.Random$Default$Serialized -> kotlin.random.Random$Default$Serialized:
# {"id":"sourceFile","fileName":"Random.kt"}
    0:0:void <clinit>() -> <clinit>
    276:276:java.lang.Object readResolve() -> readResolve
kotlin.random.RandomKt -> kotlin.random.RandomKt:
# {"id":"sourceFile","fileName":"Random.kt"}
    382:382:java.lang.String boundsErrorMessage(java.lang.Object,java.lang.Object) -> boundsErrorMessage
    378:378:void checkRangeBounds(int,int) -> checkRangeBounds
    379:379:void checkRangeBounds(long,long) -> checkRangeBounds
    380:380:void checkRangeBounds(double,double) -> checkRangeBounds
    372:372:int fastLog2(int) -> fastLog2
    0:0:int takeUpperBits(int,int) -> takeUpperBits
kotlin.random.XorWowRandom -> kotlin.random.XorWowRandom:
# {"id":"sourceFile","fileName":"XorWowRandom.kt"}
    0:0:void <clinit>() -> <clinit>
    19:34:void <init>(int,int,int,int,int,int) -> <init>
    28:28:void <init>(int,int) -> <init>
    54:54:int nextBits(int) -> nextBits
    40:49:int nextInt() -> nextInt
kotlin.random.XorWowRandom$Companion -> kotlin.random.XorWowRandom$Companion:
# {"id":"sourceFile","fileName":"XorWowRandom.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.random.jdk8.PlatformThreadLocalRandom -> kotlin.random.jdk8.PlatformThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformThreadLocalRandom.kt"}
    11:11:void <init>() -> <init>
    13:13:java.util.Random getImpl() -> getImpl
    18:18:double nextDouble(double) -> nextDouble
    15:15:int nextInt(int,int) -> nextInt
    16:16:long nextLong(long) -> nextLong
    17:17:long nextLong(long,long) -> nextLong
kotlin.ranges.IntProgression -> kotlin.ranges.IntProgression:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <clinit>() -> <clinit>
    77:102:void <init>(int,int,int) -> <init>
    115:116:boolean equals(java.lang.Object) -> equals
    92:92:int getFirst() -> getFirst
    97:97:int getLast() -> getLast
    102:102:int getStep() -> getStep
    119:119:int hashCode() -> hashCode
    112:112:boolean isEmpty() -> isEmpty
    77:77:java.util.Iterator iterator() -> iterator
    104:104:kotlin.collections.IntIterator iterator() -> iterator
    121:121:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> kotlin.ranges.IntProgression$Companion:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    132:132:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> fromClosedRange
kotlin.ranges.IntProgressionIterator -> kotlin.ranges.IntProgressionIterator:
# {"id":"sourceFile","fileName":"ProgressionIterators.kt"}
    38:41:void <init>(int,int,int) -> <init>
    43:43:boolean hasNext() -> hasNext
    46:52:int nextInt() -> nextInt
kotlin.ranges.IntRange -> kotlin.ranges.IntRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    68:68:void <clinit>() -> <clinit>
    44:44:void <init>(int,int) -> <init>
    44:44:kotlin.ranges.IntRange access$getEMPTY$cp() -> access$getEMPTY$cp
    48:48:boolean contains(int) -> contains
    58:59:boolean equals(java.lang.Object) -> equals
    46:46:java.lang.Integer getEndInclusive() -> getEndInclusive
    45:45:java.lang.Integer getStart() -> getStart
    62:62:int hashCode() -> hashCode
    55:55:boolean isEmpty() -> isEmpty
    64:64:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> kotlin.ranges.IntRange$Companion:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    68:68:kotlin.ranges.IntRange getEMPTY() -> getEMPTY
kotlin.ranges.RangesKt__RangesKt -> kotlin.ranges.RangesKt__RangesKt:
# {"id":"sourceFile","fileName":"Ranges.kt"}
kotlin.ranges.RangesKt___RangesKt -> kotlin.ranges.RangesKt___RangesKt:
# {"id":"sourceFile","fileName":"_Ranges.kt"}
    0:0:int coerceAtLeast(int,int) -> coerceAtLeast
    0:0:int coerceAtMost(int,int) -> coerceAtMost
    0:0:long coerceAtMost(long,long) -> coerceAtMost
    1235:1235:int coerceIn(int,int,int) -> coerceIn
    650:650:kotlin.ranges.IntProgression downTo(int,int) -> downTo
    916:917:kotlin.ranges.IntRange until(int,int) -> until
kotlin.reflect.KAnnotatedElement -> kotlin.reflect.KAnnotatedElement:
# {"id":"sourceFile","fileName":"KAnnotatedElement.kt"}
kotlin.reflect.KCallable -> kotlin.reflect.KCallable:
# {"id":"sourceFile","fileName":"KCallable.kt"}
kotlin.reflect.KClass -> kotlin.reflect.KClass:
# {"id":"sourceFile","fileName":"KClass.kt"}
kotlin.reflect.KDeclarationContainer -> kotlin.reflect.KDeclarationContainer:
# {"id":"sourceFile","fileName":"KDeclarationContainer.kt"}
kotlin.reflect.KFunction -> kotlin.reflect.KFunction:
# {"id":"sourceFile","fileName":"KFunction.kt"}
kotlin.reflect.KMutableProperty$Setter -> kotlin.reflect.KMutableProperty$Setter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty0 -> kotlin.reflect.KMutableProperty0:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty0$Setter -> kotlin.reflect.KMutableProperty0$Setter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty1 -> kotlin.reflect.KMutableProperty1:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty1$Setter -> kotlin.reflect.KMutableProperty1$Setter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty2 -> kotlin.reflect.KMutableProperty2:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty2$Setter -> kotlin.reflect.KMutableProperty2$Setter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KParameter$Kind -> kotlin.reflect.KParameter$Kind:
# {"id":"sourceFile","fileName":"KParameter.kt"}
    0:0:kotlin.reflect.KParameter$Kind[] $values() -> $values
    55:61:void <clinit>() -> <clinit>
    53:53:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.reflect.KParameter$Kind valueOf(java.lang.String) -> valueOf
    0:0:kotlin.reflect.KParameter$Kind[] values() -> values
kotlin.reflect.KProperty -> kotlin.reflect.KProperty:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty$Getter -> kotlin.reflect.KProperty$Getter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty0 -> kotlin.reflect.KProperty0:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty0$Getter -> kotlin.reflect.KProperty0$Getter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty1 -> kotlin.reflect.KProperty1:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty1$Getter -> kotlin.reflect.KProperty1$Getter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty2 -> kotlin.reflect.KProperty2:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty2$Getter -> kotlin.reflect.KProperty2$Getter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KType -> kotlin.reflect.KType:
# {"id":"sourceFile","fileName":"KType.kt"}
kotlin.reflect.KVariance -> kotlin.reflect.KVariance:
# {"id":"sourceFile","fileName":"KVariance.kt"}
    0:0:kotlin.reflect.KVariance[] $values() -> $values
    23:33:void <clinit>() -> <clinit>
    18:18:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.reflect.KVariance valueOf(java.lang.String) -> valueOf
    0:0:kotlin.reflect.KVariance[] values() -> values
kotlin.reflect.KVisibility -> kotlin.reflect.KVisibility:
# {"id":"sourceFile","fileName":"KVisibility.kt"}
    0:0:kotlin.reflect.KVisibility[] $values() -> $values
    34:49:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.reflect.KVisibility valueOf(java.lang.String) -> valueOf
    0:0:kotlin.reflect.KVisibility[] values() -> values
kotlin.sequences.ConstrainedOnceSequence -> kotlin.sequences.ConstrainedOnceSequence:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
    19:20:void <init>(kotlin.sequences.Sequence) -> <init>
    23:24:java.util.Iterator iterator() -> iterator
kotlin.sequences.EmptySequence -> kotlin.sequences.EmptySequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    45:45:java.util.Iterator iterator() -> iterator
kotlin.sequences.FilteringSequence -> kotlin.sequences.FilteringSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    157:160:void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1) -> <init>
    157:157:kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.FilteringSequence) -> access$getPredicate$p
    157:157:boolean access$getSendWhen$p(kotlin.sequences.FilteringSequence) -> access$getSendWhen$p
    157:157:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FilteringSequence) -> access$getSequence$p
    163:163:java.util.Iterator iterator() -> iterator
kotlin.sequences.FilteringSequence$iterator$1 -> kotlin.sequences.FilteringSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    163:165:void <init>(kotlin.sequences.FilteringSequence) -> <init>
    169:177:void calcNext() -> calcNext
    193:195:boolean hasNext() -> hasNext
    181:187:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.sequences.GeneratorSequence -> kotlin.sequences.GeneratorSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    585:585:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
    585:585:kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence) -> access$getGetInitialValue$p
    585:585:kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence) -> access$getGetNextValue$p
    586:586:java.util.Iterator iterator() -> iterator
kotlin.sequences.GeneratorSequence$iterator$1 -> kotlin.sequences.GeneratorSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    586:588:void <init>(kotlin.sequences.GeneratorSequence) -> <init>
    591:592:void calcNext() -> calcNext
    608:610:boolean hasNext() -> hasNext
    596:603:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.sequences.Sequence -> kotlin.sequences.Sequence:
# {"id":"sourceFile","fileName":"Sequence.kt"}
kotlin.sequences.SequenceBuilderIterator -> kotlin.sequences.SequenceBuilderIterator:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    102:102:void <init>() -> <init>
    153:156:java.lang.Throwable exceptionalState() -> exceptionalState
    186:186:kotlin.coroutines.CoroutineContext getContext() -> getContext
    110:127:boolean hasNext() -> hasNext
    132:145:java.lang.Object next() -> next
    150:150:java.lang.Object nextNotReady() -> nextNotReady
    0:0:void remove() -> remove
    181:182:void resumeWith(java.lang.Object) -> resumeWith
    106:106:void setNextStep(kotlin.coroutines.Continuation) -> setNextStep
    161:165:java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation) -> yield
kotlin.sequences.SequenceScope -> kotlin.sequences.SequenceScope:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    49:49:void <init>() -> <init>
kotlin.sequences.SequencesKt__SequenceBuilderKt -> kotlin.sequences.SequencesKt__SequenceBuilderKt:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    35:36:java.util.Iterator iterator(kotlin.jvm.functions.Function2) -> iterator
    25:25:kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2) -> sequence
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(kotlin.jvm.functions.Function2):21 -> <init>
    25:25:kotlin.sequences.Sequence kotlin.sequences.SequencesKt__SequenceBuilderKt.sequence(kotlin.jvm.functions.Function2) -> iterator
    25:25:java.util.Iterator iterator():681 -> iterator
kotlin.sequences.SequencesKt__SequencesJVMKt -> kotlin.sequences.SequencesKt__SequencesJVMKt:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
kotlin.sequences.SequencesKt__SequencesKt -> kotlin.sequences.SequencesKt__SequencesKt:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    30:30:kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
    626:626:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> constrainOnce
    660:662:kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1) -> generateSequence
    678:678:kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> generateSequence
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1 -> R8$$REMOVED$$CLASS$$5:
# {"id":"sourceFile","fileName":"Sequences.kt"}
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(java.util.Iterator):21 -> <init>
    30:30:kotlin.sequences.Sequence kotlin.sequences.SequencesKt__SequencesKt.asSequence(java.util.Iterator) -> iterator
    30:30:java.util.Iterator iterator():681 -> iterator
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2 -> kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <init>(java.lang.Object) -> <init>
    662:662:java.lang.Object invoke() -> invoke
kotlin.sequences.SequencesKt___SequencesJvmKt -> kotlin.sequences.SequencesKt___SequencesJvmKt:
# {"id":"sourceFile","fileName":"_SequencesJvm.kt"}
kotlin.sequences.SequencesKt___SequencesKt -> kotlin.sequences.SequencesKt___SequencesKt:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    496:496:kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> filterNot
    508:508:kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence) -> filterNotNull
    167:170:java.lang.Object firstOrNull(kotlin.sequences.Sequence) -> firstOrNull
    242:247:java.lang.Object last(kotlin.sequences.Sequence) -> last
    1052:1052:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> map
    1116:1116:kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> mapNotNull
    573:573:kotlin.sequences.Sequence takeWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> takeWhile
    787:788:java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection) -> toCollection
    808:808:java.util.List toList(kotlin.sequences.Sequence) -> toList
    817:817:java.util.List toMutableList(kotlin.sequences.Sequence) -> toMutableList
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1 -> kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    473:473:java.lang.Object invoke(java.lang.Object) -> invoke
    473:473:java.lang.Boolean invoke(java.lang.Object):473 -> invoke
    473:473:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1 -> kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    508:508:java.lang.Boolean invoke(java.lang.Object) -> invoke
    508:508:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.TakeWhileSequence -> kotlin.sequences.TakeWhileSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    430:433:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    430:430:kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.TakeWhileSequence) -> access$getPredicate$p
    430:430:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeWhileSequence) -> access$getSequence$p
    435:435:java.util.Iterator iterator() -> iterator
kotlin.sequences.TakeWhileSequence$iterator$1 -> kotlin.sequences.TakeWhileSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    435:437:void <init>(kotlin.sequences.TakeWhileSequence) -> <init>
    441:449:void calcNext() -> calcNext
    467:469:boolean hasNext() -> hasNext
    453:462:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.sequences.TransformingSequence -> kotlin.sequences.TransformingSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    205:206:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    205:205:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence) -> access$getSequence$p
    205:205:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence) -> access$getTransformer$p
    207:207:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingSequence$iterator$1 -> kotlin.sequences.TransformingSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    207:208:void <init>(kotlin.sequences.TransformingSequence) -> <init>
    214:214:boolean hasNext() -> hasNext
    210:210:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.text.CharCategory -> kotlin.text.CharCategory:
# {"id":"sourceFile","fileName":"CharCategoryJVM.kt"}
    0:0:kotlin.text.CharCategory[] $values() -> $values
    12:157:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    162:162:boolean contains(char) -> contains
    8:8:java.lang.String getCode() -> getCode
    8:8:int getValue() -> getValue
    0:0:kotlin.text.CharCategory valueOf(java.lang.String) -> valueOf
    0:0:kotlin.text.CharCategory[] values() -> values
kotlin.text.CharCategory$Companion -> kotlin.text.CharCategory$Companion:
# {"id":"sourceFile","fileName":"CharCategoryJVM.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.text.CharDirectionality -> kotlin.text.CharDirectionality:
# {"id":"sourceFile","fileName":"CharDirectionality.kt"}
    0:0:kotlin.text.CharDirectionality[] $values() -> $values
    19:118:void <clinit>() -> <clinit>
    13:13:void <init>(java.lang.String,int,int) -> <init>
    13:13:kotlin.Lazy access$getDirectionalityMap$delegate$cp() -> access$getDirectionalityMap$delegate$cp
    13:13:int getValue() -> getValue
    0:0:kotlin.text.CharDirectionality valueOf(java.lang.String) -> valueOf
    0:0:kotlin.text.CharDirectionality[] values() -> values
kotlin.text.CharDirectionality$Companion -> kotlin.text.CharDirectionality$Companion:
# {"id":"sourceFile","fileName":"CharDirectionality.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.text.CharDirectionality$Companion$directionalityMap$2 -> kotlin.text.CharDirectionality$Companion$directionalityMap$2:
# {"id":"sourceFile","fileName":"CharDirectionality.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    118:118:java.lang.Object invoke() -> invoke
    118:118:java.lang.Object invoke() -> invoke
    118:118:java.util.Map invoke():118 -> invoke
    8811:8812:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associateBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> invoke
    8811:8812:java.util.Map invoke():118 -> invoke
    9071:9071:java.util.Map kotlin.collections.ArraysKt___ArraysKt.associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> invoke
    9071:9071:java.util.Map invoke():118 -> invoke
    118:118:java.lang.Object invoke() -> invoke
    118:118:java.util.Map invoke():118 -> invoke
kotlin.text.CharsKt__CharJVMKt -> kotlin.text.CharsKt__CharJVMKt:
# {"id":"sourceFile","fileName":"CharJVM.kt"}
    313:314:int checkRadix(int) -> checkRadix
    306:306:int digitOf(char,int) -> digitOf
    98:98:boolean isWhitespace(char) -> isWhitespace
kotlin.text.CharsKt__CharKt -> kotlin.text.CharsKt__CharKt:
# {"id":"sourceFile","fileName":"Char.kt"}
    237:240:boolean equals(char,char,boolean) -> equals
kotlin.text.DelimitedRangesSequence -> kotlin.text.DelimitedRangesSequence:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1171:1175:void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2) -> <init>
    1171:1171:kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence) -> access$getGetNextMatch$p
    1171:1171:java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence) -> access$getInput$p
    1171:1171:int access$getLimit$p(kotlin.text.DelimitedRangesSequence) -> access$getLimit$p
    1171:1171:int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence) -> access$getStartIndex$p
    1178:1178:java.util.Iterator iterator() -> iterator
kotlin.text.DelimitedRangesSequence$iterator$1 -> kotlin.text.DelimitedRangesSequence$iterator$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1178:1181:void <init>(kotlin.text.DelimitedRangesSequence) -> <init>
    1186:1205:void calcNext() -> calcNext
    1222:1224:boolean hasNext() -> hasNext
    1178:1178:java.lang.Object next() -> next
    1210:1217:kotlin.ranges.IntRange next() -> next
    0:0:void remove() -> remove
kotlin.text.FlagEnum -> kotlin.text.FlagEnum:
# {"id":"sourceFile","fileName":"Regex.kt"}
kotlin.text.MatchGroup -> kotlin.text.MatchGroup:
# {"id":"sourceFile","fileName":"Regex.kt"}
    75:75:void <init>(java.lang.String,kotlin.ranges.IntRange) -> <init>
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
kotlin.text.MatchGroupCollection -> kotlin.text.MatchGroupCollection:
# {"id":"sourceFile","fileName":"MatchResult.kt"}
kotlin.text.MatchResult -> kotlin.text.MatchResult:
# {"id":"sourceFile","fileName":"MatchResult.kt"}
kotlin.text.MatcherMatchResult -> kotlin.text.MatcherMatchResult:
# {"id":"sourceFile","fileName":"Regex.kt"}
    351:358:void <init>(java.util.regex.Matcher,java.lang.CharSequence) -> <init>
    351:351:java.util.regex.MatchResult access$getMatchResult(kotlin.text.MatcherMatchResult) -> access$getMatchResult
    352:352:java.util.regex.MatchResult getMatchResult() -> getMatchResult
    354:354:kotlin.ranges.IntRange getRange() -> getRange
    390:391:kotlin.text.MatchResult next() -> next
kotlin.text.MatcherMatchResult$groups$1 -> kotlin.text.MatcherMatchResult$groups$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    358:358:void <init>(kotlin.text.MatcherMatchResult) -> <init>
    358:358:boolean contains(java.lang.Object) -> contains
    358:358:boolean contains(kotlin.text.MatchGroup) -> contains
    364:366:kotlin.text.MatchGroup get(int) -> get
    359:359:int getSize() -> getSize
    0:0:boolean isEmpty() -> isEmpty
    362:362:java.util.Iterator iterator() -> iterator
kotlin.text.MatcherMatchResult$groups$1$iterator$1 -> kotlin.text.MatcherMatchResult$groups$1$iterator$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.text.MatcherMatchResult$groups$1) -> <init>
    362:362:java.lang.Object invoke(java.lang.Object) -> invoke
    362:362:kotlin.text.MatchGroup invoke(int) -> invoke
kotlin.text.Regex -> kotlin.text.Regex:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <clinit>() -> <clinit>
    83:83:java.util.regex.Pattern access$getNativePattern$p(kotlin.text.Regex) -> <init>
    83:83:void <init>(java.util.regex.Pattern):83 -> <init>
    85:85:void <init>(java.util.regex.Pattern) -> <init>
    89:89:void <init>(java.lang.String) -> <init>
    92:92:void <init>(java.lang.String,kotlin.text.RegexOption) -> <init>
    95:95:void <init>(java.lang.String,java.util.Set) -> <init>
    83:83:java.util.regex.Pattern access$getNativePattern$p(kotlin.text.Regex) -> access$getNativePattern$p
    110:110:boolean containsMatchIn(java.lang.CharSequence) -> containsMatchIn
    122:122:kotlin.text.MatchResult find(java.lang.CharSequence,int) -> find
    121:121:kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> find$default
    133:136:kotlin.sequences.Sequence findAll(java.lang.CharSequence,int) -> findAll
    132:132:kotlin.sequences.Sequence findAll$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> findAll$default
    104:104:java.util.Set getOptions() -> getOptions
    22:23:java.util.Set kotlin.text.RegexKt.fromInt(int) -> getOptions
    22:23:java.util.Set getOptions():104 -> getOptions
    104:104:java.util.Set getOptions() -> getOptions
    100:100:java.lang.String getPattern() -> getPattern
    149:150:kotlin.text.MatchResult matchAt(java.lang.CharSequence,int) -> matchAt
    144:144:kotlin.text.MatchResult matchEntire(java.lang.CharSequence) -> matchEntire
    107:107:boolean matches(java.lang.CharSequence) -> matches
    156:156:boolean matchesAt(java.lang.CharSequence,int) -> matchesAt
    179:179:java.lang.String replace(java.lang.CharSequence,java.lang.String) -> replace
    187:204:java.lang.String replace(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> replace
    229:229:java.lang.String replaceFirst(java.lang.CharSequence,java.lang.String) -> replaceFirst
    240:255:java.util.List split(java.lang.CharSequence,int) -> split
    239:239:java.util.List split$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> split$default
    271:273:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,int) -> splitToSequence
    270:270:kotlin.sequences.Sequence splitToSequence$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> splitToSequence$default
    305:305:java.util.regex.Pattern toPattern() -> toPattern
    298:298:java.lang.String toString() -> toString
    307:307:java.lang.Object writeReplace() -> writeReplace
kotlin.text.Regex$Companion -> kotlin.text.Regex$Companion:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    317:317:int access$ensureUnicodeCase(kotlin.text.Regex$Companion,int) -> access$ensureUnicodeCase
    0:0:int ensureUnicodeCase(int) -> ensureUnicodeCase
kotlin.text.Regex$Serialized -> kotlin.text.Regex$Serialized:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <clinit>() -> <clinit>
    309:309:void <init>(java.lang.String,int) -> <init>
    309:309:int getFlags() -> getFlags
    309:309:java.lang.String getPattern() -> getPattern
    314:314:java.lang.Object readResolve() -> readResolve
kotlin.text.Regex$Serialized$Companion -> kotlin.text.Regex$Serialized$Companion:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.text.Regex$findAll$1 -> kotlin.text.Regex$findAll$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.text.Regex,java.lang.CharSequence,int) -> <init>
    136:136:java.lang.Object invoke() -> invoke
    136:136:kotlin.text.MatchResult invoke() -> invoke
kotlin.text.Regex$findAll$2 -> kotlin.text.Regex$findAll$2:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    136:136:java.lang.Object invoke(java.lang.Object) -> invoke
    136:136:kotlin.text.MatchResult invoke(kotlin.text.MatchResult) -> invoke
kotlin.text.Regex$special$$inlined$fromInt$1 -> kotlin.text.Regex$special$$inlined$fromInt$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(int) -> <init>
    23:23:java.lang.Object kotlin.text.RegexKt$fromInt$1$1.invoke(java.lang.Object) -> invoke
    23:23:java.lang.Boolean invoke(java.lang.Enum):23 -> invoke
    23:23:java.lang.Object kotlin.text.RegexKt$fromInt$1$1.invoke(java.lang.Object) -> invoke
    23:23:java.lang.Object invoke(java.lang.Object):23 -> invoke
kotlin.text.Regex$splitToSequence$1 -> kotlin.text.Regex$splitToSequence$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.text.Regex,java.lang.CharSequence,int,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    273:289:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    276:289:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.text.RegexKt -> kotlin.text.RegexKt:
# {"id":"sourceFile","fileName":"Regex.kt"}
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int) -> access$findNext
    1:1:kotlin.text.MatchResult access$findNext(java.util.regex.Matcher,int,java.lang.CharSequence):1 -> access$findNext
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int) -> access$matchEntire
    1:1:kotlin.text.MatchResult access$matchEntire(java.util.regex.Matcher,java.lang.CharSequence):1 -> access$matchEntire
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int) -> access$range
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult):1 -> access$range
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int) -> access$range
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int) -> access$toInt
    1:1:int access$toInt(java.lang.Iterable):1 -> access$toInt
    344:344:kotlin.text.MatchResult findNext(java.util.regex.Matcher,int,java.lang.CharSequence) -> findNext
    348:348:kotlin.text.MatchResult matchEntire(java.util.regex.Matcher,java.lang.CharSequence) -> matchEntire
    396:396:kotlin.ranges.IntRange range(java.util.regex.MatchResult) -> range
    397:397:kotlin.ranges.IntRange range(java.util.regex.MatchResult,int) -> range
    1786:1786:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.fold(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2) -> toInt
    1786:1786:int toInt(java.lang.Iterable):19 -> toInt
    19:19:int toInt(java.lang.Iterable) -> toInt
kotlin.text.RegexKt$fromInt$1$1 -> kotlin.text.RegexKt$fromInt$1$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(int) -> <init>
    23:23:java.lang.Object invoke(java.lang.Object) -> invoke
    23:23:java.lang.Boolean invoke(java.lang.Enum):23 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.text.RegexOption -> kotlin.text.RegexOption:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:kotlin.text.RegexOption[] $values() -> $values
    33:63:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int,int,int) -> <init>
    29:29:void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    29:29:int getMask() -> getMask
    29:29:int getValue() -> getValue
    0:0:kotlin.text.RegexOption valueOf(java.lang.String) -> valueOf
    0:0:kotlin.text.RegexOption[] values() -> values
kotlin.text.StringsKt__AppendableKt -> kotlin.text.StringsKt__AppendableKt:
# {"id":"sourceFile","fileName":"Appendable.kt"}
    85:88:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> appendElement
kotlin.text.StringsKt__IndentKt -> kotlin.text.StringsKt__IndentKt:
# {"id":"sourceFile","fileName":"Indent.kt"}
    102:103:kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String) -> getIndentFunction$StringsKt__IndentKt
    151:152:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> indentWidth$StringsKt__IndentKt
    151:152:int indentWidth$StringsKt__IndentKt(java.lang.String):99 -> indentWidth$StringsKt__IndentKt
    99:99:int indentWidth$StringsKt__IndentKt(java.lang.String) -> indentWidth$StringsKt__IndentKt
    69:69:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> replaceIndent
    766:766:java.lang.String replaceIndent(java.lang.String,java.lang.String):72 -> replaceIndent
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> replaceIndent
    857:857:java.lang.String replaceIndent(java.lang.String,java.lang.String):72 -> replaceIndent
    72:72:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> replaceIndent
    1549:1549:java.lang.String replaceIndent(java.lang.String,java.lang.String):73 -> replaceIndent
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> replaceIndent
    1620:1621:java.lang.String replaceIndent(java.lang.String,java.lang.String):73 -> replaceIndent
    71:76:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    111:111:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndent
    111:111:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> replaceIndent
    1569:1569:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    1861:1861:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> replaceIndent
    1861:1861:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    1579:1579:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> replaceIndent
    1579:1579:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    113:113:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndent
    113:113:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    76:76:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    116:116:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndent
    116:116:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    1579:1579:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> replaceIndent
    1579:1579:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    118:119:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndent
    118:119:java.lang.String replaceIndent(java.lang.String,java.lang.String):76 -> replaceIndent
    63:63:java.lang.String trimIndent(java.lang.String) -> trimIndent
kotlin.text.StringsKt__IndentKt$getIndentFunction$1 -> kotlin.text.StringsKt__IndentKt$getIndentFunction$1:
# {"id":"sourceFile","fileName":"Indent.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.String invoke(java.lang.String) -> invoke
    102:102:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.text.StringsKt__IndentKt$getIndentFunction$2 -> kotlin.text.StringsKt__IndentKt$getIndentFunction$2:
# {"id":"sourceFile","fileName":"Indent.kt"}
    0:0:void <init>(java.lang.String) -> <init>
    103:103:java.lang.Object invoke(java.lang.Object) -> invoke
    103:103:java.lang.String invoke(java.lang.String) -> invoke
kotlin.text.StringsKt__RegexExtensionsJVMKt -> kotlin.text.StringsKt__RegexExtensionsJVMKt:
# {"id":"sourceFile","fileName":"RegexExtensionsJVM.kt"}
kotlin.text.StringsKt__RegexExtensionsKt -> kotlin.text.StringsKt__RegexExtensionsKt:
# {"id":"sourceFile","fileName":"RegexExtensions.kt"}
kotlin.text.StringsKt__StringBuilderJVMKt -> kotlin.text.StringsKt__StringBuilderJVMKt:
# {"id":"sourceFile","fileName":"StringBuilderJVM.kt"}
kotlin.text.StringsKt__StringBuilderKt -> kotlin.text.StringsKt__StringBuilderKt:
# {"id":"sourceFile","fileName":"StringBuilder.kt"}
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> kotlin.text.StringsKt__StringNumberConversionsJVMKt:
# {"id":"sourceFile","fileName":"StringNumberConversionsJVM.kt"}
kotlin.text.StringsKt__StringNumberConversionsKt -> kotlin.text.StringsKt__StringNumberConversionsKt:
# {"id":"sourceFile","fileName":"StringNumberConversions.kt"}
    132:132:java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
    142:199:java.lang.Long toLongOrNull(java.lang.String,int) -> toLongOrNull
kotlin.text.StringsKt__StringsJVMKt -> kotlin.text.StringsKt__StringsJVMKt:
# {"id":"sourceFile","fileName":"StringsJVM.kt"}
    440:442:boolean endsWith(java.lang.String,java.lang.String,boolean) -> endsWith
    438:438:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
    57:59:boolean equals(java.lang.String,java.lang.String,boolean) -> equals
    621:621:boolean isBlank(java.lang.CharSequence) -> isBlank
    1722:1723:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> isBlank
    1722:1723:boolean isBlank(java.lang.CharSequence):621 -> isBlank
    621:621:boolean isBlank(java.lang.CharSequence) -> isBlank
    654:656:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> regionMatches
    88:105:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> replace
    86:86:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
    418:420:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    416:416:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
kotlin.text.StringsKt__StringsKt -> kotlin.text.StringsKt__StringsKt:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1:1:kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> access$findAnyOf
    1145:1148:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    1144:1144:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
    993:1002:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:288:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1003 -> findAnyOf$StringsKt__StringsKt
    1003:1008:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:288:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1009 -> findAnyOf$StringsKt__StringsKt
    1009:1011:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    373:373:kotlin.ranges.IntRange getIndices(java.lang.CharSequence) -> getIndices
    379:379:int getLastIndex(java.lang.CharSequence) -> getLastIndex
    1087:1090:int indexOf(java.lang.CharSequence,char,int,boolean) -> indexOf
    1102:1105:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> indexOf
    974:985:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> indexOf$StringsKt__StringsKt
    972:972:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> indexOf$StringsKt__StringsKt$default
    1086:1086:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
    1101:1101:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
    933:939:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    12788:12788:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> indexOfAny
    12788:12788:int indexOfAny(java.lang.CharSequence,char[],int,boolean):940 -> indexOfAny
    940:940:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    1117:1120:int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> lastIndexOf
    1132:1135:int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> lastIndexOf
    1116:1116:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    1131:1131:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    956:963:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    12788:12788:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> lastIndexOfAny
    12788:12788:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):964 -> lastIndexOfAny
    964:964:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    1394:1394:kotlin.sequences.Sequence lineSequence(java.lang.CharSequence) -> lineSequence
    1401:1401:java.util.List lines(java.lang.CharSequence) -> lines
    1263:1266:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1262:1262:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    821:826:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatchesImpl
    1271:1271:void requireNonNegativeLimit(int) -> requireNonNegativeLimit
    1288:1288:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int) -> splitToSequence
    1287:1287:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> splitToSequence$default
    423:423:java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange) -> substring
    448:449:java.lang.String substringAfter(java.lang.String,char,java.lang.String) -> substringAfter
    457:458:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String) -> substringAfter
    447:447:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfter$default
    456:456:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
    484:485:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> substringAfterLast
    483:483:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
    430:431:java.lang.String substringBefore(java.lang.String,char,java.lang.String) -> substringBefore
    439:440:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String) -> substringBefore
    429:429:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
    438:438:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
    80:85:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    80:85:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
    176:176:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    100:100:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    100:100:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>(java.util.List,boolean) -> <init>
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:kotlin.Pair invoke(java.lang.CharSequence,int):1266 -> invoke
kotlin.text.StringsKt__StringsKt$splitToSequence$1 -> kotlin.text.StringsKt__StringsKt$splitToSequence$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>(java.lang.CharSequence) -> <init>
    1288:1288:java.lang.Object invoke(java.lang.Object) -> invoke
    1288:1288:java.lang.String invoke(kotlin.ranges.IntRange) -> invoke
kotlin.text.StringsKt___StringsJvmKt -> kotlin.text.StringsKt___StringsJvmKt:
# {"id":"sourceFile","fileName":"_StringsJvm.kt"}
kotlin.text.StringsKt___StringsKt -> kotlin.text.StringsKt___StringsKt:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    338:339:java.lang.String drop(java.lang.String,int) -> drop
kotlin.time.DurationUnit -> kotlin.time.DurationUnit:
# {"id":"sourceFile","fileName":"DurationUnitJvm.kt"}
    0:0:kotlin.time.DurationUnit[] $values() -> $values
    19:43:void <clinit>() -> <clinit>
    13:15:void <init>(java.lang.String,int,java.util.concurrent.TimeUnit) -> <init>
    15:15:java.util.concurrent.TimeUnit getTimeUnit$kotlin_stdlib() -> getTimeUnit$kotlin_stdlib
    0:0:kotlin.time.DurationUnit valueOf(java.lang.String) -> valueOf
    0:0:kotlin.time.DurationUnit[] values() -> values
kotlinx.coroutines.AbstractCoroutine -> kotlinx.coroutines.AbstractCoroutine:
# {"id":"sourceFile","fileName":"AbstractCoroutine.kt"}
    41:58:void <init>(kotlin.coroutines.CoroutineContext,boolean,boolean) -> <init>
    105:105:void afterResume(java.lang.Object) -> afterResume
    86:86:java.lang.String cancellationExceptionMessage() -> cancellationExceptionMessage
    58:58:kotlin.coroutines.CoroutineContext getContext() -> getContext
    63:63:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    108:108:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable) -> handleOnCompletionException$kotlinx_coroutines_core
    65:65:boolean isActive() -> isActive
    112:113:java.lang.String nameString$kotlinx_coroutines_core() -> nameString$kotlinx_coroutines_core
    0:0:void onCancelled(java.lang.Throwable,boolean) -> onCancelled
    0:0:void onCompleted(java.lang.Object) -> onCompleted
    90:93:void onCompletionInternal(java.lang.Object) -> onCompletionInternal
    100:102:void resumeWith(java.lang.Object) -> resumeWith
    126:126:void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2) -> start
kotlinx.coroutines.AbstractTimeSource -> kotlinx.coroutines.AbstractTimeSource:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
kotlinx.coroutines.AbstractTimeSourceKt -> kotlinx.coroutines.AbstractTimeSourceKt:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:kotlinx.coroutines.AbstractTimeSource getTimeSource() -> getTimeSource
kotlinx.coroutines.Active -> kotlinx.coroutines.Active:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.BeforeResumeCancelHandler -> kotlinx.coroutines.BeforeResumeCancelHandler:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    566:566:void <init>() -> <init>
kotlinx.coroutines.BlockingEventLoop -> kotlinx.coroutines.BlockingEventLoop:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    22:23:void <init>(java.lang.Thread) -> <init>
    22:22:java.lang.Thread getThread() -> getThread
kotlinx.coroutines.BuildersKt -> kotlinx.coroutines.BuildersKt:
    1:1:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2) -> launch
    1:1:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object) -> launch$default
kotlinx.coroutines.BuildersKt__Builders_commonKt -> kotlinx.coroutines.BuildersKt__Builders_commonKt:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    52:56:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2) -> launch
    47:49:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object) -> launch$default
kotlinx.coroutines.CancelHandler -> kotlinx.coroutines.CancelHandler:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    558:558:void <init>() -> <init>
kotlinx.coroutines.CancelHandlerBase -> kotlinx.coroutines.CancelHandlerBase:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
kotlinx.coroutines.CancellableContinuation -> kotlinx.coroutines.CancellableContinuation:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
kotlinx.coroutines.CancellableContinuation$DefaultImpls -> kotlinx.coroutines.CancellableContinuation$DefaultImpls:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    78:78:java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object) -> tryResume$default
kotlinx.coroutines.CancellableContinuationImpl -> kotlinx.coroutines.CancellableContinuationImpl:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    29:29:void <init>(kotlin.coroutines.Continuation,int) -> <init>
    27:27:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> <init>
    27:27:void <init>(kotlin.coroutines.Continuation,int):27 -> <init>
    34:34:kotlin.coroutines.CoroutineContext getContext() -> <init>
    34:34:void <init>(kotlin.coroutines.Continuation,int):34 -> <init>
    62:73:void <init>(kotlin.coroutines.Continuation,int) -> <init>
    482:482:java.lang.Void alreadyResumedError(java.lang.Object) -> alreadyResumedError
    215:215:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable) -> callCancelHandler
    200:202:void callCancelHandlerSafely(kotlin.jvm.functions.Function0) -> callCancelHandler
    200:202:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable):215 -> callCancelHandler
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> callCancelHandler
    22:22:void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable):212 -> callCancelHandler
    200:202:void callCancelHandlerSafely(kotlin.jvm.functions.Function0) -> callCancelHandler
    200:202:void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable):212 -> callCancelHandler
    219:224:void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable) -> callOnCancellation
    175:598:boolean cancel(java.lang.Throwable) -> cancel
    143:596:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> cancelCompletedResult$kotlinx_coroutines_core
    168:170:boolean cancelLater(java.lang.Throwable) -> cancelLater
    513:513:void completeResume(java.lang.Object) -> completeResume
    495:497:void detachChild$kotlinx_coroutines_core() -> detachChild$kotlinx_coroutines_core
    488:488:void detachChildIfNonResuable() -> detachChildIfNonResuable
    395:397:void dispatchResume(int) -> dispatchResume
    133:133:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    34:34:kotlin.coroutines.CoroutineContext getContext() -> getContext
    233:233:java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job) -> getContinuationCancellationCause
    27:27:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> getDelegate$kotlinx_coroutines_core
    536:536:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object) -> getExceptionalResult$kotlinx_coroutines_core
    257:298:java.lang.Object getResult() -> getResult
    58:58:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> getResult
    58:58:java.lang.Object getResult():299 -> getResult
    289:302:java.lang.Object getResult() -> getResult
    58:58:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> getResult
    58:58:java.lang.Object getResult():289 -> getResult
    77:77:java.lang.Object getState$kotlinx_coroutines_core() -> getState$kotlinx_coroutines_core
    86:88:java.lang.String getStateDebugRepresentation() -> getStateDebugRepresentation
    529:529:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object) -> getSuccessfulResult$kotlinx_coroutines_core
    98:106:void initCancellability() -> initCancellability
    306:312:kotlinx.coroutines.DisposableHandle installParentHandle() -> installParentHandle
    334:630:void invokeOnCancellation(kotlin.jvm.functions.Function1) -> invokeOnCancellation
    81:81:boolean isCompleted() -> isCompleted
    110:110:boolean isReusable() -> isReusable
    392:392:kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1) -> makeCancelHandler
    388:388:void multipleHandlersError(kotlin.jvm.functions.Function1,java.lang.Object) -> multipleHandlersError
    0:0:java.lang.String nameString() -> nameString
    189:192:void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable) -> parentCancelled$kotlinx_coroutines_core
    322:324:void releaseClaimedReusableContinuation() -> releaseClaimedReusableContinuation
    120:128:boolean resetStateReusable() -> resetStateReusable
    331:331:void resume(java.lang.Object,kotlin.jvm.functions.Function1) -> resume
    427:632:void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1) -> resumeImpl
    420:420:void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> resumeImpl$default
    328:328:void resumeWith(java.lang.Object) -> resumeWith
    407:416:java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object) -> resumedState
    137:137:java.lang.Object takeState$kotlinx_coroutines_core() -> takeState$kotlinx_coroutines_core
    540:540:java.lang.String toString() -> toString
    502:502:java.lang.Object tryResume(java.lang.Object,java.lang.Object) -> tryResume
    505:505:java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1) -> tryResume
    248:623:boolean tryResume() -> tryResume
    462:634:kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1) -> tryResumeImpl
    508:508:java.lang.Object tryResumeWithException(java.lang.Throwable) -> tryResumeWithException
    238:621:boolean trySuspend() -> trySuspend
kotlinx.coroutines.CancellableContinuationImpl$$ExternalSyntheticBackportWithForwarding0 -> kotlinx.coroutines.CancellableContinuationImpl$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlinx.coroutines.CancellableContinuationImpl$$InternalSyntheticBackportWithForwarding$1$14938e86c53bbc417d960c3db093d9c528eee461fa47b6759be891f884702045$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.CancellableContinuationImplKt -> kotlinx.coroutines.CancellableContinuationImplKt:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    20:20:void <clinit>() -> <clinit>
kotlinx.coroutines.CancellableContinuationKt -> kotlinx.coroutines.CancellableContinuationKt:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    380:380:void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle) -> disposeOnCancellation
    340:358:kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation) -> getOrCreateCancellableContinuation
    366:366:void removeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.internal.LockFreeLinkedListNode) -> removeOnCancellation
kotlinx.coroutines.CancelledContinuation -> kotlinx.coroutines.CancelledContinuation:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    0:0:void <clinit>() -> <clinit>
    63:64:void <init>(kotlin.coroutines.Continuation,java.lang.Throwable,boolean) -> <init>
    65:65:boolean makeResumed() -> makeResumed
kotlinx.coroutines.ChildContinuation -> kotlinx.coroutines.ChildContinuation:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1471:1472:void <init>(kotlinx.coroutines.CancellableContinuationImpl) -> <init>
    1470:1470:java.lang.Object invoke(java.lang.Object) -> invoke
    1474:1474:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.ChildHandle -> kotlinx.coroutines.ChildHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.ChildHandleNode -> kotlinx.coroutines.ChildHandleNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1462:1463:void <init>(kotlinx.coroutines.ChildJob) -> <init>
    1466:1466:boolean childCancelled(java.lang.Throwable) -> childCancelled
    1464:1464:kotlinx.coroutines.Job getParent() -> getParent
    1461:1461:java.lang.Object invoke(java.lang.Object) -> invoke
    1465:1465:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.ChildJob -> kotlinx.coroutines.ChildJob:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.CompletableJob -> kotlinx.coroutines.CompletableJob:
# {"id":"sourceFile","fileName":"CompletableJob.kt"}
kotlinx.coroutines.CompletedContinuation -> kotlinx.coroutines.CompletedContinuation:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    579:579:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    579:579:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):579 -> <init>
    580:580:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable) -> <init>
    581:581:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    581:581:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):581 -> <init>
    582:582:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    582:582:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):582 -> <init>
    583:583:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    583:583:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):583 -> <init>
    584:584:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    584:584:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):584 -> <init>
    579:579:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    0:0:kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable) -> copy
    0:0:kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    586:586:boolean getCancelled() -> getCancelled
    0:0:int hashCode() -> hashCode
    589:590:void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable) -> invokeHandlers
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.CompletedExceptionally -> kotlinx.coroutines.CompletedExceptionally:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    0:0:void <clinit>() -> <clinit>
    42:46:void <init>(java.lang.Throwable,boolean) -> <init>
    42:42:void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    47:47:boolean getHandled() -> getHandled
    48:48:boolean makeHandled() -> makeHandled
    49:49:java.lang.String toString() -> toString
kotlinx.coroutines.CompletedWithCancellation -> kotlinx.coroutines.CompletedWithCancellation:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    31:33:void <init>(java.lang.Object,kotlin.jvm.functions.Function1) -> <init>
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.CompletionHandlerBase -> kotlinx.coroutines.CompletionHandlerBase:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
    9:9:void <init>() -> <init>
kotlinx.coroutines.CompletionHandlerException -> kotlinx.coroutines.CompletionHandlerException:
# {"id":"sourceFile","fileName":"Exceptions.common.kt"}
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.CompletionHandlerKt -> R8$$REMOVED$$CLASS$$6:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
kotlinx.coroutines.CompletionHandler_commonKt -> R8$$REMOVED$$CLASS$$7:
# {"id":"sourceFile","fileName":"CompletionHandler.common.kt"}
kotlinx.coroutines.CompletionStateKt -> kotlinx.coroutines.CompletionStateKt:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    26:29:java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation) -> recoverResult
    14:16:java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1) -> toState
    19:21:java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> toState
    12:12:java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object) -> toState$default
kotlinx.coroutines.CoroutineContextKt -> kotlinx.coroutines.CoroutineContextKt:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    54:88:kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean) -> foldCopies
    0:0:java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext) -> getCoroutineName
    40:40:boolean hasCopyableElements(kotlin.coroutines.CoroutineContext) -> hasCopyableElements
    19:22:kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext) -> newCoroutineContext
    149:149:kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame) -> undispatchedCompletion
    125:140:kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object) -> updateUndispatchedCompletion
kotlinx.coroutines.CoroutineContextKt$foldCopies$1 -> kotlinx.coroutines.CoroutineContextKt$foldCopies$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    80:80:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    85:85:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1 -> kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <init>(kotlin.jvm.internal.Ref$ObjectRef,boolean) -> <init>
    63:63:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    64:64:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 -> kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    40:40:java.lang.Boolean invoke(boolean,kotlin.coroutines.CoroutineContext$Element) -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlinx.coroutines.CoroutineDispatcher -> kotlinx.coroutines.CoroutineDispatcher:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    0:0:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    131:131:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatchYield
    31:31:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    140:140:kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation) -> interceptContinuation
    0:0:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    100:101:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int) -> limitedParallelism
    31:31:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    147:148:void releaseInterceptedContinuation(kotlin.coroutines.Continuation) -> releaseInterceptedContinuation
    166:166:java.lang.String toString() -> toString
kotlinx.coroutines.CoroutineDispatcher$Key -> kotlinx.coroutines.CoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    36:38:void <init>() -> <init>
kotlinx.coroutines.CoroutineDispatcher$Key$1 -> kotlinx.coroutines.CoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    38:38:java.lang.Object invoke(java.lang.Object) -> invoke
    38:38:kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineExceptionHandler -> kotlinx.coroutines.CoroutineExceptionHandler:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.CoroutineExceptionHandler$Key -> kotlinx.coroutines.CoroutineExceptionHandler$Key:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.CoroutineExceptionHandlerImplKt -> kotlinx.coroutines.CoroutineExceptionHandlerImplKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.kt"}
    20:23:void <clinit>() -> <clinit>
    46:61:void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleCoroutineExceptionImpl
kotlinx.coroutines.CoroutineExceptionHandlerKt -> kotlinx.coroutines.CoroutineExceptionHandlerKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    24:33:void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleCoroutineException
    38:38:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable):39 -> handlerException
kotlinx.coroutines.CoroutineId -> kotlinx.coroutines.CoroutineId:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.CoroutineId$Key -> kotlinx.coroutines.CoroutineId$Key:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlinx.coroutines.CoroutineName -> kotlinx.coroutines.CoroutineName:
# {"id":"sourceFile","fileName":"CoroutineName.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.CoroutineName$Key -> kotlinx.coroutines.CoroutineName$Key:
# {"id":"sourceFile","fileName":"CoroutineName.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlinx.coroutines.CoroutineScope -> kotlinx.coroutines.CoroutineScope:
# {"id":"sourceFile","fileName":"CoroutineScope.kt"}
kotlinx.coroutines.CoroutineScopeKt -> kotlinx.coroutines.CoroutineScopeKt:
# {"id":"sourceFile","fileName":"CoroutineScope.kt"}
    277:277:kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext) -> CoroutineScope
    262:264:java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> coroutineScope
kotlinx.coroutines.CoroutineStart -> kotlinx.coroutines.CoroutineStart:
# {"id":"sourceFile","fileName":"CoroutineStart.kt"}
    0:0:kotlinx.coroutines.CoroutineStart[] $values() -> $values
    37:76:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    90:94:void invoke(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> invoke
    109:113:void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> invoke
    122:122:boolean isLazy() -> isLazy
    0:0:void isLazy$annotations() -> isLazy$annotations
    0:0:kotlinx.coroutines.CoroutineStart valueOf(java.lang.String) -> valueOf
    0:0:kotlinx.coroutines.CoroutineStart[] values() -> values
kotlinx.coroutines.CoroutineStart$WhenMappings -> kotlinx.coroutines.CoroutineStart$WhenMappings:
# {"id":"sourceFile","fileName":"CoroutineStart.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.CoroutinesInternalError -> kotlinx.coroutines.CoroutinesInternalError:
# {"id":"sourceFile","fileName":"Exceptions.common.kt"}
    28:28:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.DebugStringsKt -> kotlinx.coroutines.DebugStringsKt:
# {"id":"sourceFile","fileName":"DebugStrings.kt"}
    21:21:java.lang.String getClassSimpleName(java.lang.Object) -> getClassSimpleName
    13:13:java.lang.String getHexAddress(java.lang.Object) -> getHexAddress
    16:18:java.lang.String toDebugString(kotlin.coroutines.Continuation) -> toDebugString
kotlinx.coroutines.DefaultExecutor -> kotlinx.coroutines.DefaultExecutor:
# {"id":"sourceFile","fileName":"DefaultExecutor.kt"}
    32:41:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    177:181:void acknowledgeShutdownIfNeeded() -> acknowledgeShutdownIfNeeded
    135:138:java.lang.Thread createThreadSync() -> createThreadSync
    68:69:void enqueue(java.lang.Runnable) -> enqueue
    49:49:java.lang.Thread getThread() -> getThread
    60:60:boolean isShutDown() -> isShutDown
    63:63:boolean isShutdownRequested() -> isShutdownRequested
    154:157:boolean notifyStartup() -> notifyStartup
    101:129:void run() -> run
    115:129:void run() -> run
    121:129:void run() -> run
    129:129:void run() -> run
    84:85:void shutdown() -> shutdown
    78:78:void shutdownError() -> shutdownError
kotlinx.coroutines.DefaultExecutorKt -> kotlinx.coroutines.DefaultExecutorKt:
# {"id":"sourceFile","fileName":"DefaultExecutor.kt"}
    11:13:void <clinit>() -> <clinit>
    13:13:kotlinx.coroutines.Delay getDefaultDelay() -> getDefaultDelay
    17:24:kotlinx.coroutines.Delay initializeDefaultDelay() -> initializeDefaultDelay
kotlinx.coroutines.Delay -> kotlinx.coroutines.Delay:
# {"id":"sourceFile","fileName":"Delay.kt"}
kotlinx.coroutines.DiagnosticCoroutineContextException -> kotlinx.coroutines.DiagnosticCoroutineContextException:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.kt"}
    32:32:void <init>(kotlin.coroutines.CoroutineContext) -> <init>
    39:39:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    34:34:java.lang.String getLocalizedMessage() -> getLocalizedMessage
kotlinx.coroutines.DispatchedTask -> kotlinx.coroutines.DispatchedTask:
# {"id":"sourceFile","fileName":"DispatchedTask.kt"}
    51:52:void <init>(int) -> <init>
    79:79:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object) -> getExceptionalResult$kotlinx_coroutines_core
    0:0:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object) -> getSuccessfulResult$kotlinx_coroutines_core
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> handleFatalException
    75:75:void handleFatalException(java.lang.Throwable,java.lang.Throwable):140 -> handleFatalException
    144:146:void handleFatalException(java.lang.Throwable,java.lang.Throwable) -> handleFatalException
    83:88:void run() -> run
    107:111:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    107:111:void run():88 -> run
    89:100:void run() -> run
    219:219:void kotlinx.coroutines.DispatchedTaskKt.resumeWithStackTrace(kotlin.coroutines.Continuation,java.lang.Throwable) -> run
    219:219:void run():101 -> run
    104:109:void run() -> run
    119:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    119:119:void run():88 -> run
    114:115:void run() -> run
    119:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    119:119:void run():88 -> run
    114:115:void run() -> run
kotlinx.coroutines.DispatchedTaskKt -> kotlinx.coroutines.DispatchedTaskKt:
# {"id":"sourceFile","fileName":"DispatchedTask.kt"}
    152:166:void dispatch(kotlinx.coroutines.DispatchedTask,int) -> dispatch
    0:0:boolean isCancellableMode(int) -> isCancellableMode
    0:0:boolean isReusableMode(int) -> isReusableMode
    173:177:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean) -> resume
    255:255:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resume
    255:255:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    107:111:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resume
    107:111:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    256:257:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resume
    256:257:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    119:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resume
    119:119:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    178:178:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean) -> resume
    183:186:void resumeUnconfined(kotlinx.coroutines.DispatchedTask) -> resumeUnconfined
    199:199:void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeUnconfined
    199:199:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):189 -> resumeUnconfined
    190:190:void resumeUnconfined(kotlinx.coroutines.DispatchedTask) -> resumeUnconfined
    204:213:void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeUnconfined
    204:213:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):189 -> resumeUnconfined
kotlinx.coroutines.Dispatchers -> kotlinx.coroutines.Dispatchers:
# {"id":"sourceFile","fileName":"Dispatchers.kt"}
    32:134:void <clinit>() -> <clinit>
    32:32:kotlinx.coroutines.CoroutineDispatcher getDefault() -> getDefault
    134:134:kotlinx.coroutines.CoroutineDispatcher getIO() -> getIO
    57:57:kotlinx.coroutines.MainCoroutineDispatcher getMain() -> getMain
kotlinx.coroutines.DisposableHandle -> kotlinx.coroutines.DisposableHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.DisposeOnCancel -> kotlinx.coroutines.DisposeOnCancel:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    389:389:void <init>(kotlinx.coroutines.DisposableHandle) -> <init>
    389:389:java.lang.Object invoke(java.lang.Object) -> invoke
    390:390:void invoke(java.lang.Throwable) -> invoke
    391:391:java.lang.String toString() -> toString
kotlinx.coroutines.Empty -> kotlinx.coroutines.Empty:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1310:1310:void <init>(boolean) -> <init>
    0:0:kotlinx.coroutines.NodeList getList() -> getList
    1310:1310:boolean isActive() -> isActive
    1312:1312:java.lang.String toString() -> toString
kotlinx.coroutines.EventLoop -> kotlinx.coroutines.EventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    23:23:void <init>() -> <init>
    109:114:void decrementUseCount(boolean) -> decrementUseCount
    0:0:long delta(boolean) -> delta
    85:87:void dispatchUnconfined(kotlinx.coroutines.DispatchedTask) -> dispatchUnconfined
    62:63:long getNextTime() -> getNextTime
    104:105:void incrementUseCount(boolean) -> incrementUseCount
    103:103:void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object) -> incrementUseCount$default
    94:94:boolean isUnconfinedLoopActive() -> isUnconfinedLoopActive
    98:98:boolean isUnconfinedQueueEmpty() -> isUnconfinedQueueEmpty
    67:69:boolean processUnconfinedEvent() -> processUnconfinedEvent
kotlinx.coroutines.EventLoopImplBase -> kotlinx.coroutines.EventLoopImplBase:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    0:0:void <clinit>() -> <clinit>
    184:184:boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase) -> <init>
    184:184:void <init>():184 -> <init>
    186:191:void <init>() -> <init>
    345:561:void closeQueue() -> closeQueue
    328:558:java.lang.Runnable dequeue() -> dequeue
    285:285:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    288:292:void enqueue(java.lang.Runnable) -> enqueue
    299:556:boolean enqueueImpl(java.lang.Runnable) -> enqueueImpl
    209:217:long getNextTime() -> getNextTime
    193:193:boolean isCompleted() -> isCompleted
    197:203:boolean isEmpty() -> isEmpty
    259:263:long processNextEvent() -> processNextEvent
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> processNextEvent
    20:20:long processNextEvent():268 -> processNextEvent
    52:52:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    52:52:long processNextEvent():268 -> processNextEvent
    268:268:long processNextEvent() -> processNextEvent
    53:53:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    53:53:long processNextEvent():268 -> processNextEvent
    277:282:long processNextEvent() -> processNextEvent
    392:401:void rescheduleAllDelayed() -> rescheduleAllDelayed
    386:387:void resetAll() -> resetAll
    194:194:void setCompleted(boolean) -> setCompleted
    223:231:void shutdown() -> shutdown
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue -> kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
kotlinx.coroutines.EventLoopImplPlatform -> kotlinx.coroutines.EventLoopImplPlatform:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    7:7:void <init>() -> <init>
    11:13:void unpark() -> unpark
kotlinx.coroutines.EventLoopKt -> kotlinx.coroutines.EventLoopKt:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    25:25:kotlinx.coroutines.EventLoop createEventLoop() -> createEventLoop
kotlinx.coroutines.EventLoop_commonKt -> kotlinx.coroutines.EventLoop_commonKt:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    146:172:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p() -> access$getCLOSED_EMPTY$p
kotlinx.coroutines.ExceptionsKt -> kotlinx.coroutines.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    22:22:java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable) -> CancellationException
kotlinx.coroutines.ExecutorCoroutineDispatcher -> kotlinx.coroutines.ExecutorCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Executors.kt"}
    0:0:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"Executors.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    23:25:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"Executors.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    25:25:kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl -> kotlinx.coroutines.ExecutorCoroutineDispatcherImpl:
# {"id":"sourceFile","fileName":"Executors.kt"}
    115:123:void <init>(java.util.concurrent.Executor) -> <init>
    169:169:void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException) -> cancelJobOnRejection
    173:173:void close() -> close
    128:132:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    177:177:boolean equals(java.lang.Object) -> equals
    115:115:java.util.concurrent.Executor getExecutor() -> getExecutor
    178:178:int hashCode() -> hashCode
    176:176:java.lang.String toString() -> toString
kotlinx.coroutines.ExecutorsKt -> kotlinx.coroutines.ExecutorsKt:
# {"id":"sourceFile","fileName":"Executors.kt"}
    100:100:kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor) -> from
kotlinx.coroutines.InactiveNodeList -> kotlinx.coroutines.InactiveNodeList:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1381:1382:void <init>(kotlinx.coroutines.NodeList) -> <init>
    1382:1382:kotlinx.coroutines.NodeList getList() -> getList
    0:0:boolean isActive() -> isActive
    1385:1385:java.lang.String toString() -> toString
kotlinx.coroutines.Incomplete -> kotlinx.coroutines.Incomplete:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
kotlinx.coroutines.IncompleteStateBox -> kotlinx.coroutines.IncompleteStateBox:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1283:1283:void <init>(kotlinx.coroutines.Incomplete) -> <init>
kotlinx.coroutines.InvokeOnCancel -> kotlinx.coroutines.InvokeOnCancel:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    570:571:void <init>(kotlin.jvm.functions.Function1) -> <init>
    569:569:java.lang.Object invoke(java.lang.Object) -> invoke
    573:573:void invoke(java.lang.Throwable) -> invoke
    575:575:java.lang.String toString() -> toString
kotlinx.coroutines.InvokeOnCancelling -> kotlinx.coroutines.InvokeOnCancelling:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    0:0:void <clinit>() -> <clinit>
    1452:1455:void <init>(kotlin.jvm.functions.Function1) -> <init>
    1451:1451:java.lang.Object invoke(java.lang.Object) -> invoke
    1457:1457:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.InvokeOnCompletion -> kotlinx.coroutines.InvokeOnCompletion:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1389:1390:void <init>(kotlin.jvm.functions.Function1) -> <init>
    1388:1388:java.lang.Object invoke(java.lang.Object) -> invoke
    1391:1391:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.Job -> kotlinx.coroutines.Job:
# {"id":"sourceFile","fileName":"Job.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.Job$DefaultImpls -> kotlinx.coroutines.Job$DefaultImpls:
# {"id":"sourceFile","fileName":"Job.kt"}
    183:183:void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    112:112:java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    112:112:kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key) -> get
    341:341:kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> invokeOnCompletion$default
    112:112:kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    112:112:kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext) -> plus
kotlinx.coroutines.Job$Key -> kotlinx.coroutines.Job$Key:
# {"id":"sourceFile","fileName":"Job.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.JobCancellationException -> kotlinx.coroutines.JobCancellationException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    32:36:void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job) -> <init>
    0:0:kotlinx.coroutines.JobCancellationException createCopy() -> createCopy
    29:29:java.lang.Throwable createCopy() -> createCopy
    68:68:boolean equals(java.lang.Object) -> equals
    44:44:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    70:70:int hashCode() -> hashCode
    64:64:java.lang.String toString() -> toString
kotlinx.coroutines.JobCancellingNode -> kotlinx.coroutines.JobCancellingNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1449:1449:void <init>() -> <init>
kotlinx.coroutines.JobImpl -> kotlinx.coroutines.JobImpl:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1315:1328:void <init>(kotlinx.coroutines.Job) -> <init>
    1328:1328:boolean getHandlesException$kotlinx_coroutines_core() -> getHandlesException$kotlinx_coroutines_core
    0:0:boolean getOnCancelComplete$kotlinx_coroutines_core() -> getOnCancelComplete$kotlinx_coroutines_core
    1335:1338:boolean handlesException() -> handlesException
kotlinx.coroutines.JobKt -> kotlinx.coroutines.JobKt:
    1:1:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job) -> Job
    1:1:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object) -> Job$default
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    1:1:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    1:1:void ensureActive(kotlin.coroutines.CoroutineContext) -> ensureActive
    1:1:void ensureActive(kotlinx.coroutines.Job) -> ensureActive
kotlinx.coroutines.JobKt__JobKt -> kotlinx.coroutines.JobKt__JobKt:
# {"id":"sourceFile","fileName":"Job.kt"}
    379:379:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object) -> Job
    379:379:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job):379 -> Job
    379:379:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object) -> Job$default
    549:549:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    548:548:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    571:571:void ensureActive(kotlinx.coroutines.Job) -> ensureActive
    589:589:void ensureActive(kotlin.coroutines.CoroutineContext) -> ensureActive
kotlinx.coroutines.JobNode -> kotlinx.coroutines.JobNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1350:1350:void <init>() -> <init>
    1357:1357:void dispose() -> dispose
    1354:1354:kotlinx.coroutines.JobSupport getJob() -> getJob
    0:0:kotlinx.coroutines.NodeList getList() -> getList
    0:0:boolean isActive() -> isActive
    1354:1354:void setJob(kotlinx.coroutines.JobSupport) -> setJob
    1358:1358:java.lang.String toString() -> toString
kotlinx.coroutines.JobSupport -> kotlinx.coroutines.JobSupport:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    0:0:void <clinit>() -> <clinit>
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> <init>
    27:27:void <init>(boolean):27 -> <init>
    129:131:void <init>(boolean) -> <init>
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> access$cancellationExceptionMessage
    27:27:java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport):27 -> access$cancellationExceptionMessage
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> access$continueCompleting
    27:27:void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):27 -> access$continueCompleting
    91:91:kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp kotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> addLastAtomic
    91:91:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):524 -> addLastAtomic
    156:157:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> addLastAtomic
    156:157:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):524 -> addLastAtomic
    270:271:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    21:21:java.util.Set kotlinx.coroutines.internal.ConcurrentKt.identitySet(int) -> addSuppressedExceptions
    21:21:void addSuppressedExceptions(java.lang.Throwable,java.util.List):271 -> addSuppressedExceptions
    278:281:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> addSuppressedExceptions
    75:75:void addSuppressedExceptions(java.lang.Throwable,java.util.List):282 -> addSuppressedExceptions
    0:0:void afterCompletion(java.lang.Object) -> afterCompletion
    970:970:kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob) -> attachChild
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> cancel
    703:703:void cancel(java.util.concurrent.CancellationException):617 -> cancel
    617:617:void cancel(java.util.concurrent.CancellationException) -> cancel
    663:678:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object) -> cancelImpl$kotlinx_coroutines_core
    632:632:void cancelInternal(java.lang.Throwable) -> cancelInternal
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> cancelMakeCompleting
    177:177:java.lang.Object cancelMakeCompleting(java.lang.Object):690 -> cancelMakeCompleting
    691:697:java.lang.Object cancelMakeCompleting(java.lang.Object) -> cancelMakeCompleting
    344:358:boolean cancelParent(java.lang.Throwable) -> cancelParent
    0:0:java.lang.String cancellationExceptionMessage() -> cancellationExceptionMessage
    650:651:boolean childCancelled(java.lang.Throwable) -> childCancelled
    307:323:void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object) -> completeStateFinalization
    931:936:void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> continueCompleting
    719:719:java.lang.Throwable createCauseException(java.lang.Object) -> createCauseException
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> createCauseException
    703:703:java.lang.Throwable createCauseException(java.lang.Object):719 -> createCauseException
    720:720:java.lang.Throwable createCauseException(java.lang.Object) -> createCauseException
    208:208:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object) -> finalizeFinishingState
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> finalizeFinishingState
    20:20:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):211 -> finalizeFinishingState
    212:240:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object) -> finalizeFinishingState
    913:913:kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete) -> firstChild
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> fold
    27:27:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):27 -> fold
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> get
    27:27:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):27 -> get
    415:420:java.util.concurrent.CancellationException getCancellationException() -> getCancellationException
    707:714:java.util.concurrent.CancellationException getChildJobCancellationCause() -> getChildJobCancellationCause
    910:910:java.lang.Throwable getExceptionOrNull(java.lang.Object) -> getExceptionOrNull
    246:248:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> getFinalRootCause
    703:703:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List):248 -> getFinalRootCause
    259:1487:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    0:0:boolean getHandlesException$kotlinx_coroutines_core() -> getHandlesException$kotlinx_coroutines_core
    29:29:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    0:0:boolean getOnCancelComplete$kotlinx_coroutines_core() -> getOnCancelComplete$kotlinx_coroutines_core
    773:782:kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete) -> getOrPromoteCancellingList
    133:133:kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core() -> getParentHandle$kotlinx_coroutines_core
    167:1481:java.lang.Object getState$kotlinx_coroutines_core() -> getState$kotlinx_coroutines_core
    0:0:boolean handleJobException(java.lang.Throwable) -> handleJobException
    980:980:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable) -> handleOnCompletionException$kotlinx_coroutines_core
    145:155:void initParentJob(kotlinx.coroutines.Job) -> initParentJob
    458:458:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    177:177:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):459 -> invokeOnCompletion
    461:475:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> invokeOnCompletion
    20:20:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):476 -> invokeOnCompletion
    478:478:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    47:47:boolean kotlinx.coroutines.CompletionHandler_commonKt.isHandlerOf(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    47:47:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):481 -> invokeOnCompletion
    481:489:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> invokeOnCompletion
    22:22:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):493 -> invokeOnCompletion
    496:503:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> invokeOnCompletion
    22:22:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):503 -> invokeOnCompletion
    504:504:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    182:183:boolean isActive() -> isActive
    186:186:boolean isCompleted() -> isCompleted
    0:0:boolean isScopedCoroutine() -> isScopedCoroutine
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCancelling
    177:177:java.lang.Object makeCancelling(java.lang.Object):732 -> makeCancelling
    734:734:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> makeCancelling
    20:20:java.lang.Object makeCancelling(java.lang.Object):735 -> makeCancelling
    736:766:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCompletingOnce$kotlinx_coroutines_core
    177:177:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object):827 -> makeCompletingOnce$kotlinx_coroutines_core
    828:835:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object) -> makeCompletingOnce$kotlinx_coroutines_core
    512:519:kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean) -> makeNode
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> minusKey
    27:27:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):27 -> minusKey
    1058:1058:java.lang.String nameString$kotlinx_coroutines_core() -> nameString$kotlinx_coroutines_core
    941:946:kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> nextChild
    329:329:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    645:647:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCancelling
    645:647:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    368:368:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    368:368:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> notifyCancelling
    75:75:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    371:371:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    371:371:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    648:648:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCancelling
    648:648:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    375:375:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    375:375:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    332:332:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    645:647:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCompletion
    645:647:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    368:368:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    368:368:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> notifyCompletion
    75:75:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    371:371:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    371:371:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    648:648:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCompletion
    648:648:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    375:375:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    375:375:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    0:0:void onCancelling(java.lang.Throwable) -> onCancelling
    0:0:void onCompletionInternal(java.lang.Object) -> onCompletionInternal
    0:0:void onStart() -> onStart
    637:637:void parentCancelled(kotlinx.coroutines.ParentJob) -> parentCancelled
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> plus
    27:27:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):27 -> plus
    528:530:void promoteEmptyToNodeList(kotlinx.coroutines.Empty) -> promoteEmptyToNodeList
    535:539:void promoteSingleToNodeList(kotlinx.coroutines.JobNode) -> promoteSingleToNodeList
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> removeNode$kotlinx_coroutines_core
    177:177:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode):590 -> removeNode$kotlinx_coroutines_core
    592:599:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode) -> removeNode$kotlinx_coroutines_core
    134:134:void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle) -> setParentHandle$kotlinx_coroutines_core
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> start
    177:177:boolean start():379 -> start
    380:380:boolean start() -> start
    393:401:int startInternal(java.lang.Object) -> startInternal
    1061:1067:java.lang.String stateString(java.lang.Object) -> stateString
    424:424:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String) -> toCancellationException
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> toCancellationException
    703:703:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String):424 -> toCancellationException
    423:423:java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object) -> toCancellationException$default
    1053:1053:java.lang.String toDebugString() -> toDebugString
    1050:1050:java.lang.String toString() -> toString
    292:295:boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryFinalizeSimpleState
    790:795:boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable) -> tryMakeCancelling
    847:863:java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object) -> tryMakeCompleting
    873:877:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):880 -> tryMakeCompletingSlowPath
    882:906:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    918:923:boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> tryWaitForChild
kotlinx.coroutines.JobSupport$ChildCompletion -> kotlinx.coroutines.JobSupport$ChildCompletion:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1149:1153:void <init>(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> <init>
    1148:1148:java.lang.Object invoke(java.lang.Object) -> invoke
    1155:1155:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.JobSupport$Finishing -> kotlinx.coroutines.JobSupport$Finishing:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1078:1078:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable) -> <init>
    1075:1075:kotlinx.coroutines.NodeList getList() -> <init>
    1075:1075:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable):1075 -> <init>
    1079:1089:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable) -> <init>
    1117:1134:void addExceptionLocked(java.lang.Throwable) -> addExceptionLocked
    1138:1138:java.util.ArrayList allocateList() -> allocateList
    1091:1091:java.lang.Object getExceptionsHolder() -> getExceptionsHolder
    1075:1075:kotlinx.coroutines.NodeList getList() -> getList
    1086:1086:java.lang.Throwable getRootCause() -> getRootCause
    1097:1097:boolean isActive() -> isActive
    1096:1096:boolean isCancelling() -> isCancelling
    1081:1081:boolean isCompleting() -> isCompleting
    1095:1095:boolean isSealed() -> isSealed
    1102:1111:java.util.List sealLocked(java.lang.Throwable) -> sealLocked
    1082:1082:void setCompleting(boolean) -> setCompleting
    1092:1092:void setExceptionsHolder(java.lang.Object) -> setExceptionsHolder
    1087:1087:void setRootCause(java.lang.Throwable) -> setRootCause
    1141:1141:java.lang.String toString() -> toString
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1 -> kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> <init>
    91:91:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object):91 -> <init>
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> prepare
    91:91:java.lang.Object prepare(java.lang.Object):91 -> prepare
    524:524:boolean kotlinx.coroutines.JobSupport.addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode) -> prepare
    524:524:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):672 -> prepare
kotlinx.coroutines.JobSupportKt -> kotlinx.coroutines.JobSupportKt:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1290:1308:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p() -> access$getCOMPLETING_ALREADY$p
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p() -> access$getCOMPLETING_RETRY$p
    1:1:kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p() -> access$getEMPTY_ACTIVE$p
    1:1:kotlinx.coroutines.Empty access$getEMPTY_NEW$p() -> access$getEMPTY_NEW$p
    1:1:kotlinx.coroutines.internal.Symbol access$getSEALED$p() -> access$getSEALED$p
    1:1:kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p() -> access$getTOO_LATE_TO_CANCEL$p
    1284:1284:java.lang.Object boxIncomplete(java.lang.Object) -> boxIncomplete
    1285:1285:java.lang.Object unboxState(java.lang.Object) -> unboxState
kotlinx.coroutines.LazyStandaloneCoroutine -> kotlinx.coroutines.LazyStandaloneCoroutine:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    201:202:void <init>(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2) -> <init>
    205:205:void onStart() -> onStart
kotlinx.coroutines.MainCoroutineDispatcher -> kotlinx.coroutines.MainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainCoroutineDispatcher.kt"}
    15:15:void <init>() -> <init>
    69:72:java.lang.String toStringInternalImpl() -> toStringInternalImpl
kotlinx.coroutines.NodeList -> kotlinx.coroutines.NodeList:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1361:1361:void <init>() -> <init>
    0:0:kotlinx.coroutines.NodeList getList() -> getList
    0:0:boolean isActive() -> isActive
    1378:1378:java.lang.String toString() -> toString
kotlinx.coroutines.NonDisposableHandle -> kotlinx.coroutines.NonDisposableHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:boolean childCancelled(java.lang.Throwable) -> childCancelled
    0:0:void dispose() -> dispose
    0:0:kotlinx.coroutines.Job getParent() -> getParent
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.NotCompleted -> kotlinx.coroutines.NotCompleted:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
kotlinx.coroutines.ParentJob -> kotlinx.coroutines.ParentJob:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.RemoveOnCancel -> kotlinx.coroutines.RemoveOnCancel:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
    384:384:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    384:384:java.lang.Object invoke(java.lang.Object) -> invoke
    385:385:void invoke(java.lang.Throwable) -> invoke
    386:386:java.lang.String toString() -> toString
kotlinx.coroutines.StandaloneCoroutine -> kotlinx.coroutines.StandaloneCoroutine:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    191:191:void <init>(kotlin.coroutines.CoroutineContext,boolean) -> <init>
    193:193:boolean handleJobException(java.lang.Throwable) -> handleJobException
kotlinx.coroutines.ThreadContextElement -> kotlinx.coroutines.ThreadContextElement:
# {"id":"sourceFile","fileName":"ThreadContextElement.kt"}
kotlinx.coroutines.ThreadLocalEventLoop -> kotlinx.coroutines.ThreadLocalEventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    128:128:void <clinit>() -> <clinit>
    131:131:kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core() -> getEventLoop$kotlinx_coroutines_core
    137:137:void resetEventLoop$kotlinx_coroutines_core() -> resetEventLoop$kotlinx_coroutines_core
    141:141:void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop) -> setEventLoop$kotlinx_coroutines_core
kotlinx.coroutines.TimeoutCancellationException -> kotlinx.coroutines.TimeoutCancellationException:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    166:167:void <init>(java.lang.String,kotlinx.coroutines.Job) -> <init>
    173:173:void <init>(java.lang.String) -> <init>
    164:164:java.lang.Throwable createCopy() -> createCopy
    177:177:kotlinx.coroutines.TimeoutCancellationException createCopy() -> createCopy
kotlinx.coroutines.Unconfined -> kotlinx.coroutines.Unconfined:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    0:0:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    24:30:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    0:0:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.UndispatchedCoroutine -> kotlinx.coroutines.UndispatchedCoroutine:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlinx.coroutines.UndispatchedMarker -> kotlinx.coroutines.UndispatchedMarker:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <clinit>() -> <clinit>
    159:159:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    159:159:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    0:0:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    159:159:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    159:159:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlinx.coroutines.YieldContext -> kotlinx.coroutines.YieldContext:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    0:0:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
kotlinx.coroutines.YieldContext$Key -> kotlinx.coroutines.YieldContext$Key:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlinx.coroutines.YieldKt -> kotlinx.coroutines.YieldKt:
# {"id":"sourceFile","fileName":"Yield.kt"}
    31:51:java.lang.Object yield(kotlin.coroutines.Continuation) -> yield
kotlinx.coroutines.android.AndroidDispatcherFactory -> kotlinx.coroutines.android.AndroidDispatcherFactory:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    55:56:kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List) -> createDispatcher
    0:0:int getLoadPriority() -> getLoadPriority
    0:0:java.lang.String hintOnError() -> hintOnError
kotlinx.coroutines.android.AndroidExceptionPreHandler -> kotlinx.coroutines.android.AndroidExceptionPreHandler:
# {"id":"sourceFile","fileName":"AndroidExceptionPreHandler.kt"}
    15:18:void <init>() -> <init>
    49:51:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleException
    22:31:java.lang.reflect.Method preHandler() -> preHandler
kotlinx.coroutines.android.HandlerContext -> kotlinx.coroutines.android.HandlerContext:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    115:131:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    133:133:void <init>(android.os.Handler,java.lang.String,boolean):133 -> <init>
    134:134:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    133:133:void <init>(android.os.Handler,java.lang.String,boolean):133 -> <init>
    125:125:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    128:128:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    128:128:void <init>(android.os.Handler,java.lang.String):128 -> <init>
    166:167:void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> cancelOnRejection
    141:142:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    175:175:boolean equals(java.lang.Object) -> equals
    114:114:android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext) -> getImmediate
    114:114:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():114 -> getImmediate
    133:133:kotlinx.coroutines.android.HandlerContext getImmediate() -> getImmediate
    176:176:int hashCode() -> hashCode
    137:137:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    170:172:java.lang.String toString() -> toString
kotlinx.coroutines.android.HandlerDispatcher -> kotlinx.coroutines.android.HandlerDispatcher:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    22:22:void <init>() -> <init>
kotlinx.coroutines.android.HandlerDispatcherKt -> kotlinx.coroutines.android.HandlerDispatcherKt:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    109:109:void <clinit>() -> <clinit>
    86:104:android.os.Handler asHandler(android.os.Looper,boolean) -> asHandler
kotlinx.coroutines.channels.AbstractChannel -> kotlinx.coroutines.channels.AbstractChannel:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    517:517:void <init>(kotlin.jvm.functions.Function1) -> <init>
    515:515:void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive) -> access$enqueueReceive
    515:515:boolean access$enqueueReceive(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive):515 -> access$enqueueReceive
    515:515:void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive) -> access$removeReceiveOnCancel
    623:624:boolean enqueueReceive(kotlinx.coroutines.channels.Receive) -> enqueueReceive
    619:620:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    166:166:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> enqueueReceiveInternal
    166:166:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):620 -> enqueueReceiveInternal
    620:620:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    168:168:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> enqueueReceiveInternal
    168:168:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):620 -> enqueueReceiveInternal
    621:621:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    91:91:kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp kotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    91:91:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):621 -> enqueueReceiveInternal
    179:179:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    179:179:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):621 -> enqueueReceiveInternal
    621:621:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    181:181:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    181:181:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):621 -> enqueueReceiveInternal
    699:699:kotlinx.coroutines.channels.ChannelIterator iterator() -> iterator
    0:0:void onReceiveDequeued() -> onReceiveDequeued
    0:0:void onReceiveEnqueued() -> onReceiveEnqueued
    542:550:java.lang.Object pollInternal() -> pollInternal
    628:633:java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation) -> receiveCatching-JP2dKIU
    1128:1128:java.lang.Object kotlinx.coroutines.channels.AbstractChannelKt.toResult(java.lang.Object) -> receiveCatching-JP2dKIU
    1128:1128:java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation):631 -> receiveCatching-JP2dKIU
    633:633:java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation) -> receiveCatching-JP2dKIU
    333:333:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> receiveSuspend
    333:333:java.lang.Object receiveSuspend(int,kotlin.coroutines.Continuation):597 -> receiveSuspend
    598:613:java.lang.Object receiveSuspend(int,kotlin.coroutines.Continuation) -> receiveSuspend
    332:335:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> receiveSuspend
    332:335:java.lang.Object receiveSuspend(int,kotlin.coroutines.Continuation):597 -> receiveSuspend
    822:822:void removeReceiveOnCancel(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive) -> removeReceiveOnCancel
    803:804:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed() -> takeFirstReceiveOrPeekClosed
    638:641:java.lang.Object tryReceive-PtdJZtk() -> tryReceive-PtdJZtk
kotlinx.coroutines.channels.AbstractChannel$Itr -> kotlinx.coroutines.channels.AbstractChannel$Itr:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    832:832:java.lang.Object access$hasNextSuspend(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlin.coroutines.Continuation) -> <init>
    832:832:void <init>(kotlinx.coroutines.channels.AbstractChannel):832 -> <init>
    833:833:void setResult(java.lang.Object) -> <init>
    833:833:void <init>(kotlinx.coroutines.channels.AbstractChannel):833 -> <init>
    833:833:void setResult(java.lang.Object) -> getResult
    833:833:java.lang.Object getResult():833 -> getResult
    837:842:java.lang.Object hasNext(kotlin.coroutines.Continuation) -> hasNext
    846:847:boolean hasNextResult(java.lang.Object) -> hasNextResult
    333:333:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> hasNextSuspend
    333:333:java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation):853 -> hasNextSuspend
    854:872:java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation) -> hasNextSuspend
    332:335:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> hasNextSuspend
    332:335:java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation):853 -> hasNextSuspend
    880:887:java.lang.Object next() -> next
    833:833:void setResult(java.lang.Object) -> setResult
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement -> kotlinx.coroutines.channels.AbstractChannel$ReceiveElement:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    892:894:void <init>(kotlinx.coroutines.CancellableContinuation,int) -> <init>
    908:908:void completeResumeReceive(java.lang.Object) -> completeResumeReceive
    912:912:void resumeReceiveClosed(kotlinx.coroutines.channels.Closed) -> resumeReceiveClosed
    1131:1131:java.lang.Object kotlinx.coroutines.channels.AbstractChannelKt.toResult(kotlinx.coroutines.channels.Closed) -> resumeReceiveClosed
    1131:1131:void resumeReceiveClosed(kotlinx.coroutines.channels.Closed):912 -> resumeReceiveClosed
    913:913:void resumeReceiveClosed(kotlinx.coroutines.channels.Closed) -> resumeReceiveClosed
    895:896:java.lang.Object resumeValue(java.lang.Object) -> resumeValue
    916:916:java.lang.String toString() -> toString
    901:905:kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeReceive
kotlinx.coroutines.channels.AbstractChannel$ReceiveElementWithUndeliveredHandler -> kotlinx.coroutines.channels.AbstractChannel$ReceiveElementWithUndeliveredHandler:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    922:923:void <init>(kotlinx.coroutines.CancellableContinuation,int,kotlin.jvm.functions.Function1) -> <init>
    925:925:kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object) -> resumeOnCancellationFun
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext -> kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    929:931:void <init>(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlinx.coroutines.CancellableContinuation) -> <init>
    946:947:void completeResumeReceive(java.lang.Object) -> completeResumeReceive
    963:963:kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object) -> resumeOnCancellationFun
    951:958:void resumeReceiveClosed(kotlinx.coroutines.channels.Closed) -> resumeReceiveClosed
    965:965:java.lang.String toString() -> toString
    933:938:kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeReceive
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel -> kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    824:824:void <init>(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive) -> <init>
    824:824:java.lang.Object invoke(java.lang.Object) -> invoke
    826:827:void invoke(java.lang.Throwable) -> invoke
    829:829:java.lang.String toString() -> toString
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1 -> kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> <init>
    91:91:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractChannel):91 -> <init>
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> prepare
    91:91:java.lang.Object prepare(java.lang.Object):91 -> prepare
    621:621:boolean kotlinx.coroutines.channels.AbstractChannel.enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> prepare
    621:621:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):672 -> prepare
kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1 -> kotlinx.coroutines.channels.AbstractChannel$receiveCatching$1:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    0:0:void <init>(kotlinx.coroutines.channels.AbstractChannel,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.channels.AbstractChannelKt -> kotlinx.coroutines.channels.AbstractChannelKt:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1012:1032:void <clinit>() -> <clinit>
kotlinx.coroutines.channels.AbstractSendChannel -> kotlinx.coroutines.channels.AbstractSendChannel:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    0:0:void <clinit>() -> <clinit>
    19:19:void access$helpCloseAndResumeWithSendException(kotlinx.coroutines.channels.AbstractSendChannel,kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed) -> <init>
    19:19:void <init>(kotlin.jvm.functions.Function1):19 -> <init>
    20:20:void <init>(kotlin.jvm.functions.Function1) -> <init>
    23:23:kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue() -> <init>
    23:23:void <init>(kotlin.jvm.functions.Function1):23 -> <init>
    41:41:void <init>(kotlin.jvm.functions.Function1) -> <init>
    19:19:void access$helpCloseAndResumeWithSendException(kotlinx.coroutines.channels.AbstractSendChannel,kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed) -> access$helpCloseAndResumeWithSendException
    19:19:void access$helpCloseAndResumeWithSendException(kotlinx.coroutines.channels.AbstractSendChannel,kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed) -> access$isFullImpl
    19:19:boolean access$isFullImpl(kotlinx.coroutines.channels.AbstractSendChannel):19 -> access$isFullImpl
    262:269:boolean close(java.lang.Throwable) -> close
    166:166:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> close
    166:166:boolean close(java.lang.Throwable):269 -> close
    269:269:boolean close(java.lang.Throwable) -> close
    168:168:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> close
    168:168:boolean close(java.lang.Throwable):269 -> close
    270:272:boolean close(java.lang.Throwable) -> close
    455:455:int countQueueSize() -> countQueueSize
    645:648:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> countQueueSize
    645:648:int countQueueSize():455 -> countQueueSize
    246:247:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    166:166:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> enqueueSend
    166:166:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):247 -> enqueueSend
    248:248:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    168:168:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> enqueueSend
    168:168:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):247 -> enqueueSend
    252:252:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    91:91:kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp kotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> enqueueSend
    91:91:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):252 -> enqueueSend
    179:179:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> enqueueSend
    179:179:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):252 -> enqueueSend
    253:253:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    181:181:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrevAndIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> enqueueSend
    181:181:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):252 -> enqueueSend
    256:256:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    0:0:java.lang.String getBufferDebugString() -> getBufferDebugString
    83:83:kotlinx.coroutines.channels.Closed getClosedForSend() -> getClosedForSend
    23:23:kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue() -> getQueue
    437:448:java.lang.String getQueueDebugStateString() -> getQueueDebugStateString
    324:328:void helpClose(kotlinx.coroutines.channels.Closed) -> helpClose
    39:39:void kotlinx.coroutines.internal.InlineList.forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1) -> helpClose
    39:39:void helpClose(kotlinx.coroutines.channels.Closed):342 -> helpClose
    342:342:void helpClose(kotlinx.coroutines.channels.Closed) -> helpClose
    41:43:void kotlinx.coroutines.internal.InlineList.forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1) -> helpClose
    41:43:void helpClose(kotlinx.coroutines.channels.Closed):342 -> helpClose
    329:344:void helpClose(kotlinx.coroutines.channels.Closed) -> helpClose
    173:174:java.lang.Throwable helpCloseAndGetSendException(kotlinx.coroutines.channels.Closed) -> helpCloseAndGetSendException
    230:231:void helpCloseAndResumeWithSendException(kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed) -> helpCloseAndResumeWithSendException
    231:236:void helpCloseAndResumeWithSendException(kotlin.coroutines.Continuation,java.lang.Object,kotlinx.coroutines.channels.Closed) -> helpCloseAndResumeWithSendException
    277:282:void invokeOnCloseHandler(java.lang.Throwable) -> invokeOnCloseHandler
    130:130:boolean isFullImpl() -> isFullImpl
    52:57:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    0:0:void onClosedIdempotent(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> onClosedIdempotent
    134:136:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation) -> send
    104:104:kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object) -> sendBuffered
    166:166:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> sendBuffered
    166:166:kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object):104 -> sendBuffered
    105:105:kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object) -> sendBuffered
    168:168:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIfPrev(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function1) -> sendBuffered
    168:168:kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object):104 -> sendBuffered
    333:333:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> sendSuspend
    333:333:java.lang.Object sendSuspend(java.lang.Object,kotlin.coroutines.Continuation):190 -> sendSuspend
    192:220:java.lang.Object sendSuspend(java.lang.Object,kotlin.coroutines.Continuation) -> sendSuspend
    332:336:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> sendSuspend
    332:336:java.lang.Object sendSuspend(java.lang.Object,kotlin.coroutines.Continuation):190 -> sendSuspend
    221:223:java.lang.Object sendSuspend(java.lang.Object,kotlin.coroutines.Continuation) -> sendSuspend
    358:358:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed() -> takeFirstReceiveOrPeekClosed
    298:301:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstIfIsInstanceOfOrPeekIf(kotlin.jvm.functions.Function1) -> takeFirstReceiveOrPeekClosed
    298:301:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed():358 -> takeFirstReceiveOrPeekClosed
    358:358:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed() -> takeFirstReceiveOrPeekClosed
    303:308:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstIfIsInstanceOfOrPeekIf(kotlin.jvm.functions.Function1) -> takeFirstReceiveOrPeekClosed
    303:308:kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed():358 -> takeFirstReceiveOrPeekClosed
    96:96:kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed() -> takeFirstSendOrPeekClosed
    298:301:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstIfIsInstanceOfOrPeekIf(kotlin.jvm.functions.Function1) -> takeFirstSendOrPeekClosed
    298:301:kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed():96 -> takeFirstSendOrPeekClosed
    96:96:kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed() -> takeFirstSendOrPeekClosed
    303:308:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode.removeFirstIfIsInstanceOfOrPeekIf(kotlin.jvm.functions.Function1) -> takeFirstSendOrPeekClosed
    303:308:kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed():96 -> takeFirstSendOrPeekClosed
    433:433:java.lang.String toString() -> toString
    155:168:java.lang.Object trySend-JP2dKIU(java.lang.Object) -> trySend-JP2dKIU
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered -> kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    495:496:void <init>(java.lang.Object) -> <init>
    0:0:void completeResumeSend() -> completeResumeSend
    497:497:java.lang.Object getPollResult() -> getPollResult
    508:508:java.lang.String toString() -> toString
    498:498:kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeSend
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1 -> kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> <init>
    91:91:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractSendChannel):91 -> <init>
    91:91:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> prepare
    91:91:java.lang.Object prepare(java.lang.Object):91 -> prepare
    672:672:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> prepare
kotlinx.coroutines.channels.ArrayChannel -> kotlinx.coroutines.channels.ArrayChannel:
# {"id":"sourceFile","fileName":"ArrayChannel.kt"}
    26:45:void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1) -> <init>
    150:158:void enqueueElement(int,java.lang.Object) -> enqueueElement
    277:277:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    17:17:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):277 -> enqueueReceiveInternal
    278:278:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    129:129:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> enqueueSend
    17:17:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send):129 -> enqueueSend
    130:130:java.lang.Object enqueueSend(kotlinx.coroutines.channels.Send) -> enqueueSend
    164:172:void ensureCapacity(int) -> ensureCapacity
    306:306:java.lang.String getBufferDebugString() -> getBufferDebugString
    0:0:boolean isBufferAlwaysEmpty() -> isBufferAlwaysEmpty
    0:0:boolean isBufferAlwaysFull() -> isBufferAlwaysFull
    48:48:boolean isBufferEmpty() -> isBufferEmpty
    50:50:boolean isBufferFull() -> isBufferFull
    58:58:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> offerInternal
    17:17:java.lang.Object offerInternal(java.lang.Object):58 -> offerInternal
    59:84:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    181:181:java.lang.Object pollInternal() -> pollInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> pollInternal
    17:17:java.lang.Object pollInternal():181 -> pollInternal
    182:212:java.lang.Object pollInternal() -> pollInternal
    136:144:kotlinx.coroutines.internal.Symbol updateBufferSize(int) -> updateBufferSize
kotlinx.coroutines.channels.ArrayChannel$WhenMappings -> kotlinx.coroutines.channels.ArrayChannel$WhenMappings:
# {"id":"sourceFile","fileName":"ArrayChannel.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.channels.BufferOverflow -> kotlinx.coroutines.channels.BufferOverflow:
# {"id":"sourceFile","fileName":"BufferOverflow.kt"}
    0:0:kotlinx.coroutines.channels.BufferOverflow[] $values() -> $values
    23:34:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
    0:0:kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String) -> valueOf
    0:0:kotlinx.coroutines.channels.BufferOverflow[] values() -> values
kotlinx.coroutines.channels.Channel -> kotlinx.coroutines.channels.Channel:
# {"id":"sourceFile","fileName":"Channel.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.channels.Channel$Factory -> kotlinx.coroutines.channels.Channel$Factory:
# {"id":"sourceFile","fileName":"Channel.kt"}
    749:749:void <clinit>() -> <clinit>
    749:749:int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core() -> getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core
kotlinx.coroutines.channels.ChannelIterator -> kotlinx.coroutines.channels.ChannelIterator:
# {"id":"sourceFile","fileName":"Channel.kt"}
kotlinx.coroutines.channels.ChannelKt -> kotlinx.coroutines.channels.ChannelKt:
# {"id":"sourceFile","fileName":"Channel.kt"}
    775:795:kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1) -> Channel
    768:770:kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object) -> Channel$default
kotlinx.coroutines.channels.ChannelResult -> kotlinx.coroutines.channels.ChannelResult:
# {"id":"sourceFile","fileName":"Channel.kt"}
    465:465:void <clinit>() -> <clinit>
    399:399:void <init>(java.lang.Object) -> <init>
    397:397:kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp() -> access$getFailed$cp
    0:0:kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object) -> box-impl
    0:0:java.lang.Object constructor-impl(java.lang.Object) -> constructor-impl
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(java.lang.Object,java.lang.Object) -> equals-impl
    434:434:java.lang.Object getOrNull-impl(java.lang.Object) -> getOrNull-impl
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(java.lang.Object) -> hashCode-impl
    480:480:java.lang.String toString() -> toString
    482:483:java.lang.String toString-impl(java.lang.Object) -> toString-impl
    0:0:java.lang.Object unbox-impl() -> unbox-impl
kotlinx.coroutines.channels.ChannelResult$Closed -> kotlinx.coroutines.channels.ChannelResult$Closed:
# {"id":"sourceFile","fileName":"Channel.kt"}
    456:456:void <init>(java.lang.Throwable) -> <init>
    457:457:boolean equals(java.lang.Object) -> equals
    458:458:int hashCode() -> hashCode
    459:459:java.lang.String toString() -> toString
kotlinx.coroutines.channels.ChannelResult$Companion -> kotlinx.coroutines.channels.ChannelResult$Companion:
# {"id":"sourceFile","fileName":"Channel.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    477:477:java.lang.Object closed-JP2dKIU(java.lang.Throwable) -> closed-JP2dKIU
    473:473:java.lang.Object failure-PtdJZtk() -> failure-PtdJZtk
    469:469:java.lang.Object success-JP2dKIU(java.lang.Object) -> success-JP2dKIU
kotlinx.coroutines.channels.ChannelResult$Failed -> kotlinx.coroutines.channels.ChannelResult$Failed:
# {"id":"sourceFile","fileName":"Channel.kt"}
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.channels.Closed -> kotlinx.coroutines.channels.Closed:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1105:1106:void <init>(java.lang.Throwable) -> <init>
    0:0:void completeResumeReceive(java.lang.Object) -> completeResumeReceive
    0:0:void completeResumeSend() -> completeResumeSend
    0:0:kotlinx.coroutines.channels.Closed getOfferResult() -> getOfferResult
    1104:1104:java.lang.Object getPollResult() -> getOfferResult
    1104:1104:java.lang.Object getOfferResult():1104 -> getOfferResult
    0:0:kotlinx.coroutines.channels.Closed getPollResult() -> getPollResult
    1104:1104:java.lang.Object getPollResult() -> getPollResult
    1108:1108:java.lang.Throwable getReceiveException() -> getReceiveException
    1107:1107:java.lang.Throwable getSendException() -> getSendException
    1117:1117:java.lang.String toString() -> toString
    1114:1114:kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeReceive
    1112:1112:kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeSend
kotlinx.coroutines.channels.ClosedReceiveChannelException -> kotlinx.coroutines.channels.ClosedReceiveChannelException:
# {"id":"sourceFile","fileName":"Channel.kt"}
    820:820:void <init>(java.lang.String) -> <init>
kotlinx.coroutines.channels.ClosedSendChannelException -> kotlinx.coroutines.channels.ClosedSendChannelException:
# {"id":"sourceFile","fileName":"Channel.kt"}
    811:811:void <init>(java.lang.String) -> <init>
kotlinx.coroutines.channels.ConflatedChannel -> kotlinx.coroutines.channels.ConflatedChannel:
# {"id":"sourceFile","fileName":"ConflatedChannel.kt"}
    20:30:void <init>(kotlin.jvm.functions.Function1) -> <init>
    135:135:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> enqueueReceiveInternal
    17:17:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive):135 -> enqueueReceiveInternal
    136:136:boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive) -> enqueueReceiveInternal
    142:142:java.lang.String getBufferDebugString() -> getBufferDebugString
    0:0:boolean isBufferAlwaysEmpty() -> isBufferAlwaysEmpty
    0:0:boolean isBufferAlwaysFull() -> isBufferAlwaysFull
    22:22:boolean isBufferEmpty() -> isBufferEmpty
    0:0:boolean isBufferFull() -> isBufferFull
    35:35:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> offerInternal
    17:17:java.lang.Object offerInternal(java.lang.Object):35 -> offerInternal
    36:57:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
    96:96:java.lang.Object pollInternal() -> pollInternal
    17:17:java.lang.Object kotlinx.coroutines.internal.ConcurrentKt.withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> pollInternal
    17:17:java.lang.Object pollInternal():96 -> pollInternal
    97:100:java.lang.Object pollInternal() -> pollInternal
    128:131:kotlinx.coroutines.internal.UndeliveredElementException updateValueLocked(java.lang.Object) -> updateValueLocked
kotlinx.coroutines.channels.LinkedListChannel -> kotlinx.coroutines.channels.LinkedListChannel:
# {"id":"sourceFile","fileName":"LinkedListChannel.kt"}
    20:20:void <init>(kotlin.jvm.functions.Function1) -> <init>
    0:0:boolean isBufferAlwaysEmpty() -> isBufferAlwaysEmpty
    0:0:boolean isBufferAlwaysFull() -> isBufferAlwaysFull
    0:0:boolean isBufferEmpty() -> isBufferEmpty
    0:0:boolean isBufferFull() -> isBufferFull
    29:40:java.lang.Object offerInternal(java.lang.Object) -> offerInternal
kotlinx.coroutines.channels.Receive -> kotlinx.coroutines.channels.Receive:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1120:1120:void <init>() -> <init>
    1120:1120:java.lang.Object getOfferResult() -> getOfferResult
    1121:1121:kotlinx.coroutines.internal.Symbol getOfferResult() -> getOfferResult
    0:0:kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object) -> resumeOnCancellationFun
kotlinx.coroutines.channels.ReceiveChannel -> kotlinx.coroutines.channels.ReceiveChannel:
# {"id":"sourceFile","fileName":"Channel.kt"}
kotlinx.coroutines.channels.ReceiveOrClosed -> kotlinx.coroutines.channels.ReceiveOrClosed:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
kotlinx.coroutines.channels.RendezvousChannel -> kotlinx.coroutines.channels.RendezvousChannel:
# {"id":"sourceFile","fileName":"RendezvousChannel.kt"}
    18:18:void <init>(kotlin.jvm.functions.Function1) -> <init>
    0:0:boolean isBufferAlwaysEmpty() -> isBufferAlwaysEmpty
    0:0:boolean isBufferAlwaysFull() -> isBufferAlwaysFull
    0:0:boolean isBufferEmpty() -> isBufferEmpty
    0:0:boolean isBufferFull() -> isBufferFull
kotlinx.coroutines.channels.Send -> kotlinx.coroutines.channels.Send:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1039:1039:void <init>() -> <init>
    0:0:void undeliveredElement() -> undeliveredElement
kotlinx.coroutines.channels.SendChannel -> kotlinx.coroutines.channels.SendChannel:
# {"id":"sourceFile","fileName":"Channel.kt"}
kotlinx.coroutines.channels.SendChannel$DefaultImpls -> kotlinx.coroutines.channels.SendChannel$DefaultImpls:
# {"id":"sourceFile","fileName":"Channel.kt"}
    93:93:boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object) -> close$default
kotlinx.coroutines.channels.SendElement -> kotlinx.coroutines.channels.SendElement:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1070:1070:void <init>(java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> <init>
    1068:1068:java.lang.Object getPollResult() -> <init>
    1068:1068:void <init>(java.lang.Object,kotlinx.coroutines.CancellableContinuation):1068 -> <init>
    1069:1069:void <init>(java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> <init>
    1079:1079:void completeResumeSend() -> completeResumeSend
    1068:1068:java.lang.Object getPollResult() -> getPollResult
    1081:1081:java.lang.String toString() -> toString
    1072:1076:kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp) -> tryResumeSend
kotlinx.coroutines.channels.SendElementWithUndeliveredHandler -> kotlinx.coroutines.channels.SendElementWithUndeliveredHandler:
# {"id":"sourceFile","fileName":"AbstractChannel.kt"}
    1087:1088:void <init>(java.lang.Object,kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1) -> <init>
    1090:1092:boolean remove() -> remove
    1097:1097:void undeliveredElement() -> undeliveredElement
kotlinx.coroutines.channels.TickerMode -> kotlinx.coroutines.channels.TickerMode:
# {"id":"sourceFile","fileName":"TickerChannels.kt"}
    0:0:kotlinx.coroutines.channels.TickerMode[] $values() -> $values
    33:38:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    0:0:kotlinx.coroutines.channels.TickerMode valueOf(java.lang.String) -> valueOf
    0:0:kotlinx.coroutines.channels.TickerMode[] values() -> values
kotlinx.coroutines.debug.internal.ConcurrentWeakMap -> kotlinx.coroutines.debug.internal.ConcurrentWeakMap:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    0:0:void <clinit>() -> <clinit>
    15:15:void <init>(boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    21:24:void <init>(boolean) -> <init>
    13:13:java.lang.ref.ReferenceQueue access$getWeakRefQueue$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap) -> access$decrementSize
    13:13:void access$decrementSize(kotlinx.coroutines.debug.internal.ConcurrentWeakMap):13 -> access$decrementSize
    13:13:java.lang.ref.ReferenceQueue access$getWeakRefQueue$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap) -> access$getWeakRefQueue$p
    67:67:void clear() -> clear
    29:29:void decrementSize() -> decrementSize
    31:31:java.lang.Object get(java.lang.Object) -> get
    63:63:java.util.Set getEntries() -> getEntries
    60:60:java.util.Set getKeys() -> getKeys
    27:27:int getSize() -> getSize
    34:36:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    50:55:java.lang.Object putSynchronized(java.lang.Object,java.lang.Object) -> putSynchronized
    41:43:java.lang.Object remove(java.lang.Object) -> remove
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core -> kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    0:0:void <clinit>() -> <clinit>
    86:86:void <init>(kotlinx.coroutines.debug.internal.ConcurrentWeakMap,int) -> <init>
    85:85:int access$getAllocated$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) -> <init>
    85:85:void <init>(kotlinx.coroutines.debug.internal.ConcurrentWeakMap,int):85 -> <init>
    86:91:void <init>(kotlinx.coroutines.debug.internal.ConcurrentWeakMap,int) -> <init>
    85:85:int access$getAllocated$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core) -> access$getAllocated$p
    97:106:java.lang.Object getImpl(java.lang.Object) -> getImpl
    93:93:int index(int) -> index
    208:208:java.util.Iterator keyValueIterator(kotlin.jvm.functions.Function2) -> keyValueIterator
    124:289:java.lang.Object putImpl(java.lang.Object,java.lang.Object,kotlinx.coroutines.debug.internal.HashedWeakRef) -> putImpl
    123:123:java.lang.Object putImpl$default(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core,java.lang.Object,java.lang.Object,kotlinx.coroutines.debug.internal.HashedWeakRef,int,java.lang.Object) -> putImpl$default
    167:187:kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core rehash() -> rehash
    113:116:void removeCleanedAt(int) -> removeCleanedAt
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$$ExternalSyntheticBackportWithForwarding0 -> kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$$InternalSyntheticBackportWithForwarding$1$06d4cb75914b758a36ea9fc1317f99b9e6f885d2e6e3f6b74bd66540f92ebe92$0.m(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator -> kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    210:210:void remove() -> <init>
    210:210:void <init>(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core,kotlin.jvm.functions.Function2):210 -> <init>
    211:215:void <init>(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core,kotlin.jvm.functions.Function2) -> <init>
    218:223:void findNext() -> findNext
    229:229:boolean hasNext() -> hasNext
    232:233:java.lang.Object next() -> next
    210:210:void remove() -> remove
    236:236:java.lang.Void remove() -> remove
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry -> kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    240:240:void <init>(java.lang.Object,java.lang.Object) -> <init>
    240:240:java.lang.Object getKey() -> getKey
    240:240:java.lang.Object getValue() -> getValue
    241:241:java.lang.Object setValue(java.lang.Object) -> setValue
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet -> kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    244:246:void <init>(kotlinx.coroutines.debug.internal.ConcurrentWeakMap,kotlin.jvm.functions.Function2) -> <init>
    248:248:boolean add(java.lang.Object) -> add
    247:247:int getSize() -> getSize
    249:249:java.util.Iterator iterator() -> iterator
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1 -> kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    63:63:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    63:63:java.util.Map$Entry invoke(java.lang.Object,java.lang.Object) -> invoke
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1 -> kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt -> kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    255:257:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getREHASH$p() -> access$getREHASH$p
    1:1:kotlinx.coroutines.debug.internal.Marked access$mark(java.lang.Object) -> access$mark
    1:1:java.lang.Void access$noImpl() -> access$noImpl
    277:279:kotlinx.coroutines.debug.internal.Marked mark(java.lang.Object) -> mark
    283:283:java.lang.Void noImpl() -> noImpl
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl -> kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl:
# {"id":"sourceFile","fileName":"DebugCoroutineInfoImpl.kt"}
kotlinx.coroutines.debug.internal.DebugProbesImpl -> kotlinx.coroutines.debug.internal.DebugProbesImpl:
# {"id":"sourceFile","fileName":"DebugProbesImpl.kt"}
    24:79:void <clinit>() -> <clinit>
    22:22:boolean access$isFinished(kotlinx.coroutines.debug.internal.DebugProbesImpl,kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) -> access$isFinished
    62:65:kotlin.jvm.functions.Function1 getDynamicAttach() -> getDynamicAttach
    62:66:kotlin.jvm.functions.Function1 getDynamicAttach() -> getDynamicAttach
    278:278:boolean isFinished(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) -> isFinished
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner -> kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner:
# {"id":"sourceFile","fileName":"DebugProbesImpl.kt"}
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumberRefVolatile -> kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumberRefVolatile:
    0:0:void <init>(long) -> <init>
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1 -> kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1:
# {"id":"sourceFile","fileName":"DebugProbesImpl.kt"}
    0:0:void <init>() -> <init>
    161:161:java.lang.Object kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke(java.lang.Object) -> invoke
    161:161:java.lang.Object invoke(java.lang.Object):161 -> invoke
    163:163:java.lang.Object kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) -> invoke
    163:163:java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner):163 -> invoke
    164:164:java.lang.Object kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) -> invoke
    164:164:java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner):164 -> invoke
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3 -> kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3:
# {"id":"sourceFile","fileName":"DebugProbesImpl.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2) -> <init>
    161:161:java.lang.Object invoke(java.lang.Object) -> invoke
    163:164:java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) -> invoke
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1 -> kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1:
# {"id":"sourceFile","fileName":"DebugProbesImpl.kt"}
    0:0:void <init>() -> <init>
    161:161:java.lang.Object kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke(java.lang.Object) -> invoke
    161:161:java.lang.Object invoke(java.lang.Object):161 -> invoke
    163:163:java.lang.Object kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) -> invoke
    163:163:java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner):163 -> invoke
    164:164:java.lang.Object kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner) -> invoke
    164:164:java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner):164 -> invoke
kotlinx.coroutines.debug.internal.DebuggerInfo -> kotlinx.coroutines.debug.internal.DebuggerInfo:
# {"id":"sourceFile","fileName":"DebuggerInfo.kt"}
    18:23:void <init>(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.coroutines.CoroutineContext) -> <init>
    20:20:java.lang.Long getCoroutineId() -> getCoroutineId
    21:21:java.lang.String getDispatcher() -> getDispatcher
    26:26:java.util.List getLastObservedStackTrace() -> getLastObservedStackTrace
    25:25:java.lang.String getLastObservedThreadName() -> getLastObservedThreadName
    24:24:java.lang.String getLastObservedThreadState() -> getLastObservedThreadState
    22:22:java.lang.String getName() -> getName
    27:27:long getSequenceNumber() -> getSequenceNumber
    23:23:java.lang.String getState() -> getState
kotlinx.coroutines.debug.internal.HashedWeakRef -> kotlinx.coroutines.debug.internal.HashedWeakRef:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    265:267:void <init>(java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
kotlinx.coroutines.debug.internal.Marked -> kotlinx.coroutines.debug.internal.Marked:
# {"id":"sourceFile","fileName":"ConcurrentWeakMap.kt"}
    274:274:void <init>(java.lang.Object) -> <init>
kotlinx.coroutines.flow.AbstractFlow -> kotlinx.coroutines.flow.AbstractFlow:
# {"id":"sourceFile","fileName":"Flow.kt"}
    224:224:void <init>() -> <init>
    227:234:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
    232:234:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
kotlinx.coroutines.flow.AbstractFlow$collect$1 -> kotlinx.coroutines.flow.AbstractFlow$collect$1:
# {"id":"sourceFile","fileName":"Flow.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.AbstractFlow,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.DistinctFlowImpl -> kotlinx.coroutines.flow.DistinctFlowImpl:
# {"id":"sourceFile","fileName":"Distinct.kt"}
    69:72:void <init>(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> <init>
    75:76:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2 -> kotlinx.coroutines.flow.DistinctFlowImpl$collect$2:
# {"id":"sourceFile","fileName":"Distinct.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.DistinctFlowImpl,kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector) -> <init>
    76:83:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    80:83:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    83:83:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1 -> kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1:
# {"id":"sourceFile","fileName":"Distinct.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.DistinctFlowImpl$collect$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.Flow -> kotlinx.coroutines.flow.Flow:
# {"id":"sourceFile","fileName":"Flow.kt"}
kotlinx.coroutines.flow.FlowCollector -> kotlinx.coroutines.flow.FlowCollector:
# {"id":"sourceFile","fileName":"FlowCollector.kt"}
kotlinx.coroutines.flow.FlowKt -> kotlinx.coroutines.flow.FlowKt:
    1:1:kotlinx.coroutines.flow.SharedFlow asSharedFlow(kotlinx.coroutines.flow.MutableSharedFlow) -> asSharedFlow
    1:1:kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow) -> asStateFlow
    1:1:kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow) -> distinctUntilChanged
    1:1:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation) -> emitAll
    1:1:void ensureActive(kotlinx.coroutines.flow.FlowCollector) -> ensureActive
    1:1:kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2) -> flow
kotlinx.coroutines.flow.FlowKt__BuildersKt -> kotlinx.coroutines.flow.FlowKt__BuildersKt:
# {"id":"sourceFile","fileName":"Builders.kt"}
    56:56:kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2) -> flow
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__CollectKt -> kotlinx.coroutines.flow.FlowKt__CollectKt:
# {"id":"sourceFile","fileName":"Collect.kt"}
    108:109:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation) -> emitAll
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3 -> kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3:
# {"id":"sourceFile","fileName":"Collect.kt"}
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1 -> kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1:
# {"id":"sourceFile","fileName":"Collect.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2 -> kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2:
# {"id":"sourceFile","fileName":"Collect.kt"}
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1 -> kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1:
# {"id":"sourceFile","fileName":"Collect.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__DistinctKt -> kotlinx.coroutines.flow.FlowKt__DistinctKt:
# {"id":"sourceFile","fileName":"Distinct.kt"}
    49:52:void <clinit>() -> <clinit>
    25:26:kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow) -> distinctUntilChanged
    65:66:kotlinx.coroutines.flow.Flow distinctUntilChangedBy$FlowKt__DistinctKt(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> distinctUntilChangedBy$FlowKt__DistinctKt
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1 -> kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1:
# {"id":"sourceFile","fileName":"Distinct.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    52:52:java.lang.Boolean invoke(java.lang.Object,java.lang.Object) -> invoke
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1 -> kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1:
# {"id":"sourceFile","fileName":"Distinct.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.Object invoke(java.lang.Object) -> invoke
kotlinx.coroutines.flow.FlowKt__EmittersKt -> kotlinx.coroutines.flow.FlowKt__EmittersKt:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void ensureActive(kotlinx.coroutines.flow.FlowCollector) -> ensureActive
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    39:39:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    44:44:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    44:44:java.lang.Object invokeSuspend(java.lang.Object):44 -> invokeSuspend
    39:39:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    40:40:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    40:40:java.lang.Object invokeSuspend(java.lang.Object):40 -> invokeSuspend
    44:44:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    44:44:java.lang.Object invokeSuspend(java.lang.Object):44 -> invokeSuspend
    40:44:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector) -> <init>
    40:40:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    42:42:java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    42:42:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):42 -> emit
    40:40:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    42:42:java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    42:42:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):42 -> emit
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1 -> kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1:
# {"id":"sourceFile","fileName":"Limit.kt"}
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1:
# {"id":"sourceFile","fileName":"Limit.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1:
# {"id":"sourceFile","fileName":"Limit.kt"}
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1:
# {"id":"sourceFile","fileName":"Limit.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1:
# {"id":"sourceFile","fileName":"Limit.kt"}
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1 -> kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1:
# {"id":"sourceFile","fileName":"Limit.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2 -> kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1 -> kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1 -> kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1:
# {"id":"sourceFile","fileName":"Merge.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation) -> invoke
    190:190:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    190:190:java.lang.Object invokeSuspend(java.lang.Object):190 -> invokeSuspend
    190:190:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2 -> kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1 -> kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1 -> kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1:
# {"id":"sourceFile","fileName":"Merge.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation) -> invoke
    189:189:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    190:190:java.lang.Object kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    190:190:java.lang.Object invokeSuspend(java.lang.Object):190 -> invokeSuspend
    189:189:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    190:190:java.lang.Object kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    190:190:java.lang.Object invokeSuspend(java.lang.Object):190 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2 -> kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2:
# {"id":"sourceFile","fileName":"Limit.kt"}
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1 -> kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1:
# {"id":"sourceFile","fileName":"Limit.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 -> kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2:
# {"id":"sourceFile","fileName":"Limit.kt"}
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1 -> kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1:
# {"id":"sourceFile","fileName":"Limit.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2 -> kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2:
# {"id":"sourceFile","fileName":"Reduce.kt"}
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1 -> kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1:
# {"id":"sourceFile","fileName":"Reduce.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ShareKt -> kotlinx.coroutines.flow.FlowKt__ShareKt:
# {"id":"sourceFile","fileName":"Share.kt"}
    362:362:kotlinx.coroutines.flow.SharedFlow asSharedFlow(kotlinx.coroutines.flow.MutableSharedFlow) -> asSharedFlow
    368:368:kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow) -> asStateFlow
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2 -> kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2 -> kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2 -> kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2:
# {"id":"sourceFile","fileName":"Emitters.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1:
# {"id":"sourceFile","fileName":"Emitters.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt -> kotlinx.coroutines.flow.FlowKt__ZipKt:
# {"id":"sourceFile","fileName":"Zip.kt"}
    1:1:kotlin.jvm.functions.Function0 access$nullArrayFactory() -> access$nullArrayFactory
    277:277:kotlin.jvm.functions.Function0 nullArrayFactory$FlowKt__ZipKt() -> nullArrayFactory$FlowKt__ZipKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    258:333:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    333:336:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    258:333:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    333:337:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    258:333:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    333:338:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[]) -> <init>
    238:238:java.lang.Object invoke() -> invoke
    238:238:java.lang.Object invoke() -> invoke
    238:238:java.lang.Object[] invoke():238 -> invoke
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    238:238:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    238:238:java.lang.Object invokeSuspend(java.lang.Object):238 -> invokeSuspend
    238:238:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[]) -> <init>
    289:289:java.lang.Object invoke() -> invoke
    291:291:java.lang.Object[] invoke() -> invoke
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    292:292:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    292:292:java.lang.Object invokeSuspend(java.lang.Object):292 -> invokeSuspend
    292:292:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object invokeSuspend(java.lang.Object):273 -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    80:80:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.flowCombineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4) -> invokeSuspend
    80:80:java.lang.Object invokeSuspend(java.lang.Object):337 -> invokeSuspend
    269:335:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    80:80:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.flowCombineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4) -> invokeSuspend
    80:80:java.lang.Object invokeSuspend(java.lang.Object):337 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object invokeSuspend(java.lang.Object):273 -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    108:108:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4) -> invokeSuspend
    108:108:java.lang.Object invokeSuspend(java.lang.Object):337 -> invokeSuspend
    269:335:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    108:108:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4) -> invokeSuspend
    108:108:java.lang.Object invokeSuspend(java.lang.Object):337 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object invokeSuspend(java.lang.Object):273 -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    144:144:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5) -> invokeSuspend
    144:144:java.lang.Object invokeSuspend(java.lang.Object):338 -> invokeSuspend
    269:336:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    144:144:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5) -> invokeSuspend
    144:144:java.lang.Object invokeSuspend(java.lang.Object):338 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object invokeSuspend(java.lang.Object):273 -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    184:184:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6) -> invokeSuspend
    184:184:java.lang.Object invokeSuspend(java.lang.Object):339 -> invokeSuspend
    269:337:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    184:184:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6) -> invokeSuspend
    184:184:java.lang.Object invokeSuspend(java.lang.Object):339 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function7) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object invokeSuspend(java.lang.Object):273 -> invokeSuspend
    274:274:java.lang.Object kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1.invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function7) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    269:269:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    228:228:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function7) -> invokeSuspend
    228:228:java.lang.Object invokeSuspend(java.lang.Object):340 -> invokeSuspend
    269:338:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    228:228:kotlinx.coroutines.flow.Flow kotlinx.coroutines.flow.FlowKt__ZipKt.combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function7) -> invokeSuspend
    228:228:java.lang.Object invokeSuspend(java.lang.Object):340 -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    250:250:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    252:252:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    252:252:java.lang.Object invokeSuspend(java.lang.Object):252 -> invokeSuspend
    250:250:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    251:251:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    251:251:java.lang.Object invokeSuspend(java.lang.Object):251 -> invokeSuspend
    252:252:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    252:252:java.lang.Object invokeSuspend(java.lang.Object):252 -> invokeSuspend
    251:252:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[]) -> <init>
    251:251:java.lang.Object invoke() -> invoke
    251:251:java.lang.Object invoke() -> invoke
    251:251:java.lang.Object[] invoke():251 -> invoke
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    251:251:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    251:251:java.lang.Object invokeSuspend(java.lang.Object):251 -> invokeSuspend
    251:251:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    307:307:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    309:309:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    309:309:java.lang.Object invokeSuspend(java.lang.Object):309 -> invokeSuspend
    307:307:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    308:308:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    308:308:java.lang.Object invokeSuspend(java.lang.Object):308 -> invokeSuspend
    309:309:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    309:309:java.lang.Object invokeSuspend(java.lang.Object):309 -> invokeSuspend
    308:309:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[]) -> <init>
    308:308:java.lang.Object invoke() -> invoke
    308:308:java.lang.Object invoke() -> invoke
    308:308:java.lang.Object[] invoke():308 -> invoke
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    308:308:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    308:308:java.lang.Object invokeSuspend(java.lang.Object):308 -> invokeSuspend
    308:308:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> invoke
    272:272:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
    272:272:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object invokeSuspend(java.lang.Object):273 -> invokeSuspend
    274:274:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    274:274:java.lang.Object invokeSuspend(java.lang.Object):274 -> invokeSuspend
    273:274:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    273:273:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    273:273:java.lang.Object invokeSuspend(java.lang.Object):273 -> invokeSuspend
    273:273:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation) -> invoke
    262:262:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend
    262:262:java.lang.Object invokeSuspend(java.lang.Object):262 -> invokeSuspend
    262:262:java.lang.Object invokeSuspend$$forInline(java.lang.Object) -> invokeSuspend$$forInline
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1 -> kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1:
# {"id":"sourceFile","fileName":"Zip.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.Void invoke() -> invoke
    277:277:java.lang.Object invoke() -> invoke
kotlinx.coroutines.flow.LintKt$retry$1 -> kotlinx.coroutines.flow.LintKt$retry$1:
# {"id":"sourceFile","fileName":"Lint.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(java.lang.Throwable,kotlin.coroutines.Continuation) -> invoke
    122:122:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.MutableSharedFlow -> kotlinx.coroutines.flow.MutableSharedFlow:
# {"id":"sourceFile","fileName":"SharedFlow.kt"}
kotlinx.coroutines.flow.MutableStateFlow -> kotlinx.coroutines.flow.MutableStateFlow:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
kotlinx.coroutines.flow.ReadonlySharedFlow -> kotlinx.coroutines.flow.ReadonlySharedFlow:
# {"id":"sourceFile","fileName":"Share.kt"}
    370:374:void <init>(kotlinx.coroutines.flow.SharedFlow,kotlinx.coroutines.Job) -> <init>
    0:0:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
kotlinx.coroutines.flow.ReadonlyStateFlow -> kotlinx.coroutines.flow.ReadonlyStateFlow:
# {"id":"sourceFile","fileName":"Share.kt"}
    379:383:void <init>(kotlinx.coroutines.flow.StateFlow,kotlinx.coroutines.Job) -> <init>
    0:0:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
    0:0:java.lang.Object getValue() -> getValue
kotlinx.coroutines.flow.SafeFlow -> kotlinx.coroutines.flow.SafeFlow:
# {"id":"sourceFile","fileName":"Builders.kt"}
    59:59:void <init>(kotlin.jvm.functions.Function2) -> <init>
    61:61:java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collectSafely
kotlinx.coroutines.flow.SharedFlow -> kotlinx.coroutines.flow.SharedFlow:
# {"id":"sourceFile","fileName":"SharedFlow.kt"}
kotlinx.coroutines.flow.SharedFlowImpl -> kotlinx.coroutines.flow.SharedFlowImpl:
# {"id":"sourceFile","fileName":"SharedFlow.kt"}
    304:307:void <init>(int,int,kotlinx.coroutines.channels.BufferOverflow) -> <init>
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$cancelEmitter
    303:303:void access$cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowImpl$Emitter):303 -> access$cancelEmitter
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$enqueueLocked
    303:303:void access$enqueueLocked(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object):303 -> access$enqueueLocked
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$findSlotsToResumeLocked
    303:303:kotlin.coroutines.Continuation[] access$findSlotsToResumeLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlin.coroutines.Continuation[]):303 -> access$findSlotsToResumeLocked
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$getBufferCapacity$p
    303:303:int access$getBufferCapacity$p(kotlinx.coroutines.flow.SharedFlowImpl):303 -> access$getBufferCapacity$p
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$getHead
    303:303:long access$getHead(kotlinx.coroutines.flow.SharedFlowImpl):303 -> access$getHead
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$getQueueSize$p
    303:303:int access$getQueueSize$p(kotlinx.coroutines.flow.SharedFlowImpl):303 -> access$getQueueSize$p
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$getTotalSize
    303:303:int access$getTotalSize(kotlinx.coroutines.flow.SharedFlowImpl):303 -> access$getTotalSize
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$setQueueSize$p
    303:303:void access$setQueueSize$p(kotlinx.coroutines.flow.SharedFlowImpl,int):303 -> access$setQueueSize$p
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$tryEmitLocked
    303:303:boolean access$tryEmitLocked(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object):303 -> access$tryEmitLocked
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> access$tryPeekLocked
    315:321:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> awaitValue
    315:321:java.lang.Object awaitValue(kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation):661 -> awaitValue
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> awaitValue
    20:20:java.lang.Object awaitValue(kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation):662 -> awaitValue
    663:671:java.lang.Object awaitValue(kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation) -> awaitValue
    314:324:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> awaitValue
    314:324:java.lang.Object awaitValue(kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation):661 -> awaitValue
    671:671:java.lang.Object awaitValue(kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation) -> awaitValue
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> cancelEmitter
    20:20:void cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl$Emitter):507 -> cancelEmitter
    508:513:void cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl$Emitter) -> cancelEmitter
    616:620:void cleanupTailLocked() -> cleanupTailLocked
    0:0:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
    370:386:java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect$suspendImpl
    329:329:java.lang.Object kotlinx.coroutines.CoroutineScopeKt.currentCoroutineContext$$forInline(kotlin.coroutines.Continuation) -> collect$suspendImpl
    329:329:java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):374 -> collect$suspendImpl
    374:386:java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect$suspendImpl
    97:98:void kotlinx.coroutines.flow.internal.AbstractSharedFlow.forEachSlotLocked(kotlin.jvm.functions.Function1) -> correctCollectorIndexesOnDropOldest
    97:98:void correctCollectorIndexesOnDropOldest(long):454 -> correctCollectorIndexesOnDropOldest
    13536:13536:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> correctCollectorIndexesOnDropOldest
    13536:13536:void correctCollectorIndexesOnDropOldest(long):454 -> correctCollectorIndexesOnDropOldest
    99:99:void kotlinx.coroutines.flow.internal.AbstractSharedFlow.forEachSlotLocked(kotlin.jvm.functions.Function1) -> correctCollectorIndexesOnDropOldest
    99:99:void correctCollectorIndexesOnDropOldest(long):454 -> correctCollectorIndexesOnDropOldest
    456:460:void correctCollectorIndexesOnDropOldest(long) -> correctCollectorIndexesOnDropOldest
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> createSlot
    303:303:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot():303 -> createSlot
    687:687:kotlinx.coroutines.flow.SharedFlowSlot createSlot() -> createSlot
    303:303:long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot) -> createSlotArray
    303:303:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int):303 -> createSlotArray
    688:688:kotlinx.coroutines.flow.SharedFlowSlot[] createSlotArray(int) -> createSlotArray
    445:449:void dropOldestLocked() -> dropOldestLocked
    0:0:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    405:406:java.lang.Object emit$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object,kotlin.coroutines.Continuation) -> emit$suspendImpl
    315:321:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> emitSuspend
    315:321:java.lang.Object emitSuspend(java.lang.Object,kotlin.coroutines.Continuation):484 -> emitSuspend
    485:485:java.lang.Object emitSuspend(java.lang.Object,kotlin.coroutines.Continuation) -> emitSuspend
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> emitSuspend
    20:20:java.lang.Object emitSuspend(java.lang.Object,kotlin.coroutines.Continuation):486 -> emitSuspend
    488:504:java.lang.Object emitSuspend(java.lang.Object,kotlin.coroutines.Continuation) -> emitSuspend
    314:324:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> emitSuspend
    314:324:java.lang.Object emitSuspend(java.lang.Object,kotlin.coroutines.Continuation):484 -> emitSuspend
    494:494:java.lang.Object emitSuspend(java.lang.Object,kotlin.coroutines.Continuation) -> emitSuspend
    465:470:void enqueueLocked(java.lang.Object) -> enqueueLocked
    676:676:kotlin.coroutines.Continuation[] findSlotsToResumeLocked(kotlin.coroutines.Continuation[]) -> findSlotsToResumeLocked
    97:98:void kotlinx.coroutines.flow.internal.AbstractSharedFlow.forEachSlotLocked(kotlin.jvm.functions.Function1) -> findSlotsToResumeLocked
    97:98:kotlin.coroutines.Continuation[] findSlotsToResumeLocked(kotlin.coroutines.Continuation[]):677 -> findSlotsToResumeLocked
    13536:13536:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> findSlotsToResumeLocked
    13536:13536:kotlin.coroutines.Continuation[] findSlotsToResumeLocked(kotlin.coroutines.Continuation[]):677 -> findSlotsToResumeLocked
    99:99:void kotlinx.coroutines.flow.internal.AbstractSharedFlow.forEachSlotLocked(kotlin.jvm.functions.Function1) -> findSlotsToResumeLocked
    99:99:kotlin.coroutines.Continuation[] findSlotsToResumeLocked(kotlin.coroutines.Continuation[]):677 -> findSlotsToResumeLocked
    678:684:kotlin.coroutines.Continuation[] findSlotsToResumeLocked(kotlin.coroutines.Continuation[]) -> findSlotsToResumeLocked
    348:348:long getBufferEndIndex() -> getBufferEndIndex
    345:345:long getHead() -> getHead
    656:657:java.lang.Object getPeekedValueLockedAt(long) -> getPeekedValueLockedAt
    349:349:long getQueueEndIndex() -> getQueueEndIndex
    346:346:int getReplaySize() -> getReplaySize
    347:347:int getTotalSize() -> getTotalSize
    474:479:java.lang.Object[] growBuffer(java.lang.Object[],int,int) -> growBuffer
    391:391:boolean tryEmit(java.lang.Object) -> tryEmit
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryEmit
    20:20:boolean tryEmit(java.lang.Object):392 -> tryEmit
    393:400:boolean tryEmit(java.lang.Object) -> tryEmit
    412:428:boolean tryEmitLocked(java.lang.Object) -> tryEmitLocked
    435:440:boolean tryEmitNoCollectorsLocked(java.lang.Object) -> tryEmitNoCollectorsLocked
    646:651:long tryPeekLocked(kotlinx.coroutines.flow.SharedFlowSlot) -> tryPeekLocked
    626:626:java.lang.Object tryTakeValue(kotlinx.coroutines.flow.SharedFlowSlot) -> tryTakeValue
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTakeValue
    20:20:java.lang.Object tryTakeValue(kotlinx.coroutines.flow.SharedFlowSlot):627 -> tryTakeValue
    628:639:java.lang.Object tryTakeValue(kotlinx.coroutines.flow.SharedFlowSlot) -> tryTakeValue
    598:606:void updateBufferLocked(long,long,long,long) -> updateBufferLocked
    524:529:kotlin.coroutines.Continuation[] updateCollectorIndexLocked$kotlinx_coroutines_core(long) -> updateCollectorIndexLocked$kotlinx_coroutines_core
    97:98:void kotlinx.coroutines.flow.internal.AbstractSharedFlow.forEachSlotLocked(kotlin.jvm.functions.Function1) -> updateCollectorIndexLocked$kotlinx_coroutines_core
    97:98:kotlin.coroutines.Continuation[] updateCollectorIndexLocked$kotlinx_coroutines_core(long):530 -> updateCollectorIndexLocked$kotlinx_coroutines_core
    13536:13536:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> updateCollectorIndexLocked$kotlinx_coroutines_core
    13536:13536:kotlin.coroutines.Continuation[] updateCollectorIndexLocked$kotlinx_coroutines_core(long):530 -> updateCollectorIndexLocked$kotlinx_coroutines_core
    99:99:void kotlinx.coroutines.flow.internal.AbstractSharedFlow.forEachSlotLocked(kotlin.jvm.functions.Function1) -> updateCollectorIndexLocked$kotlinx_coroutines_core
    99:99:kotlin.coroutines.Continuation[] updateCollectorIndexLocked$kotlinx_coroutines_core(long):530 -> updateCollectorIndexLocked$kotlinx_coroutines_core
    532:587:kotlin.coroutines.Continuation[] updateCollectorIndexLocked$kotlinx_coroutines_core(long) -> updateCollectorIndexLocked$kotlinx_coroutines_core
    516:517:long updateNewCollectorIndexLocked$kotlinx_coroutines_core() -> updateNewCollectorIndexLocked$kotlinx_coroutines_core
kotlinx.coroutines.flow.SharedFlowImpl$Emitter -> kotlinx.coroutines.flow.SharedFlowImpl$Emitter:
# {"id":"sourceFile","fileName":"SharedFlow.kt"}
    703:707:void <init>(kotlinx.coroutines.flow.SharedFlowImpl,long,java.lang.Object,kotlin.coroutines.Continuation) -> <init>
    709:709:void dispose() -> dispose
kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings -> kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings:
# {"id":"sourceFile","fileName":"SharedFlow.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.flow.SharedFlowImpl$collect$1 -> kotlinx.coroutines.flow.SharedFlowImpl$collect$1:
# {"id":"sourceFile","fileName":"SharedFlow.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.SharedFlowImpl,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.SharedFlowKt -> kotlinx.coroutines.flow.SharedFlowKt:
# {"id":"sourceFile","fileName":"SharedFlow.kt"}
    715:715:void <clinit>() -> <clinit>
    269:276:kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow(int,int,kotlinx.coroutines.channels.BufferOverflow) -> MutableSharedFlow
    264:267:kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow$default(int,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object) -> MutableSharedFlow$default
    1:1:void access$setBufferAt(java.lang.Object[],long,java.lang.Object) -> access$getBufferAt
    1:1:java.lang.Object access$getBufferAt(java.lang.Object[],long):1 -> access$getBufferAt
    1:1:void access$setBufferAt(java.lang.Object[],long,java.lang.Object) -> access$setBufferAt
    717:717:java.lang.Object getBufferAt(java.lang.Object[],long) -> getBufferAt
    718:718:void setBufferAt(java.lang.Object[],long,java.lang.Object) -> setBufferAt
kotlinx.coroutines.flow.SharedFlowSlot -> kotlinx.coroutines.flow.SharedFlowSlot:
# {"id":"sourceFile","fileName":"SharedFlow.kt"}
    281:281:kotlin.coroutines.Continuation[] freeLocked(java.lang.Object) -> <init>
    281:281:void <init>():281 -> <init>
    283:283:void <init>() -> <init>
    281:281:kotlin.coroutines.Continuation[] freeLocked(java.lang.Object) -> allocateLocked
    281:281:boolean allocateLocked(java.lang.Object):281 -> allocateLocked
    289:290:boolean allocateLocked(kotlinx.coroutines.flow.SharedFlowImpl) -> allocateLocked
    281:281:kotlin.coroutines.Continuation[] freeLocked(java.lang.Object) -> freeLocked
    296:299:kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.SharedFlowImpl) -> freeLocked
kotlinx.coroutines.flow.SharingCommand -> kotlinx.coroutines.flow.SharingCommand:
# {"id":"sourceFile","fileName":"SharingStarted.kt"}
    0:0:kotlinx.coroutines.flow.SharingCommand[] $values() -> $values
    22:35:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    0:0:kotlinx.coroutines.flow.SharingCommand valueOf(java.lang.String) -> valueOf
    0:0:kotlinx.coroutines.flow.SharingCommand[] values() -> values
kotlinx.coroutines.flow.StateFlow -> kotlinx.coroutines.flow.StateFlow:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
kotlinx.coroutines.flow.StateFlowImpl -> kotlinx.coroutines.flow.StateFlowImpl:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
    311:312:void <init>(java.lang.Object) -> <init>
    383:407:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
    329:329:java.lang.Object kotlinx.coroutines.CoroutineScopeKt.currentCoroutineContext$$forInline(kotlin.coroutines.Continuation) -> collect
    329:329:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):387 -> collect
    387:407:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> collect
    309:309:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int) -> createSlot
    309:309:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot():309 -> createSlot
    411:411:kotlinx.coroutines.flow.StateFlowSlot createSlot() -> createSlot
    309:309:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int) -> createSlotArray
    412:412:kotlinx.coroutines.flow.StateFlowSlot[] createSlotArray(int) -> createSlotArray
    375:376:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    317:317:java.lang.Object getValue() -> getValue
    318:318:void setValue(java.lang.Object) -> setValue
    370:370:boolean tryEmit(java.lang.Object) -> tryEmit
    325:325:boolean updateState(java.lang.Object,java.lang.Object) -> updateState
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> updateState
    20:20:boolean updateState(java.lang.Object,java.lang.Object):326 -> updateState
    327:350:boolean updateState(java.lang.Object,java.lang.Object) -> updateState
    13536:13536:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> updateState
    13536:13536:boolean updateState(java.lang.Object,java.lang.Object):350 -> updateState
    351:351:boolean updateState(java.lang.Object,java.lang.Object) -> updateState
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> updateState
    20:20:boolean updateState(java.lang.Object,java.lang.Object):354 -> updateState
    337:362:boolean updateState(java.lang.Object,java.lang.Object) -> updateState
kotlinx.coroutines.flow.StateFlowImpl$collect$1 -> kotlinx.coroutines.flow.StateFlowImpl$collect$1:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.StateFlowImpl,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.StateFlowKt -> kotlinx.coroutines.flow.StateFlowKt:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
    242:245:void <clinit>() -> <clinit>
    187:187:kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object) -> MutableStateFlow
    1:1:kotlinx.coroutines.internal.Symbol access$getPENDING$p() -> access$getNONE$p
    1:1:kotlinx.coroutines.internal.Symbol access$getNONE$p():1 -> access$getNONE$p
    1:1:kotlinx.coroutines.internal.Symbol access$getPENDING$p() -> access$getPENDING$p
kotlinx.coroutines.flow.StateFlowSlot -> kotlinx.coroutines.flow.StateFlowSlot:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
    0:0:void <clinit>() -> <clinit>
    248:248:kotlin.coroutines.Continuation[] freeLocked(java.lang.Object) -> <init>
    248:248:void <init>():248 -> <init>
    260:260:void <init>() -> <init>
    248:248:kotlin.coroutines.Continuation[] freeLocked(java.lang.Object) -> allocateLocked
    248:248:boolean allocateLocked(java.lang.Object):248 -> allocateLocked
    264:265:boolean allocateLocked(kotlinx.coroutines.flow.StateFlowImpl) -> allocateLocked
    315:321:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> awaitPending
    315:321:java.lang.Object awaitPending(kotlin.coroutines.Continuation):300 -> awaitPending
    302:305:java.lang.Object awaitPending(kotlin.coroutines.Continuation) -> awaitPending
    314:324:java.lang.Object kotlinx.coroutines.CancellableContinuationKt.suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> awaitPending
    314:324:java.lang.Object awaitPending(kotlin.coroutines.Continuation):300 -> awaitPending
    248:248:kotlin.coroutines.Continuation[] freeLocked(java.lang.Object) -> freeLocked
    270:271:kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.StateFlowImpl) -> freeLocked
    279:432:void makePending() -> makePending
    294:296:boolean takePending() -> takePending
kotlinx.coroutines.flow.internal.AbortFlowException -> kotlinx.coroutines.flow.internal.AbortFlowException:
# {"id":"sourceFile","fileName":"FlowExceptions.kt"}
    12:12:void <init>(kotlinx.coroutines.flow.FlowCollector) -> <init>
    11:11:kotlinx.coroutines.flow.FlowCollector getOwner() -> <init>
    11:11:void <init>(kotlinx.coroutines.flow.FlowCollector):11 -> <init>
    17:17:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    11:11:kotlinx.coroutines.flow.FlowCollector getOwner() -> getOwner
kotlinx.coroutines.flow.internal.AbstractSharedFlow -> kotlinx.coroutines.flow.internal.AbstractSharedFlow:
# {"id":"sourceFile","fileName":"AbstractSharedFlow.kt"}
    23:23:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] access$getSlots(kotlinx.coroutines.flow.internal.AbstractSharedFlow) -> access$getNCollectors
    23:23:int access$getNCollectors(kotlinx.coroutines.flow.internal.AbstractSharedFlow):23 -> access$getNCollectors
    23:23:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] access$getSlots(kotlinx.coroutines.flow.internal.AbstractSharedFlow) -> access$getSlots
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> allocateSlot
    20:20:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot allocateSlot():48 -> allocateSlot
    49:68:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot allocateSlot() -> allocateSlot
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> freeSlot
    20:20:void freeSlot(kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot):79 -> freeSlot
    80:91:void freeSlot(kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot) -> freeSlot
    27:27:int getNCollectors() -> getNCollectors
    25:25:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] getSlots() -> getSlots
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt -> kotlinx.coroutines.flow.internal.AbstractSharedFlowKt:
# {"id":"sourceFile","fileName":"AbstractSharedFlow.kt"}
    16:16:void <clinit>() -> <clinit>
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot -> kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot:
# {"id":"sourceFile","fileName":"AbstractSharedFlow.kt"}
kotlinx.coroutines.flow.internal.ChildCancelledException -> kotlinx.coroutines.flow.internal.ChildCancelledException:
# {"id":"sourceFile","fileName":"FlowExceptions.kt"}
    22:22:void <init>() -> <init>
    26:26:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
kotlinx.coroutines.flow.internal.CombineKt -> kotlinx.coroutines.flow.internal.CombineKt:
# {"id":"sourceFile","fileName":"Combine.kt"}
    22:22:java.lang.Object combineInternal(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> combineInternal
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 -> kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2:
# {"id":"sourceFile","fileName":"Combine.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    22:86:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    59:86:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 -> kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1:
# {"id":"sourceFile","fileName":"Combine.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.Flow[],int,java.util.concurrent.atomic.AtomicInteger,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> invoke
    32:44:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    40:44:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1 -> kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1:
# {"id":"sourceFile","fileName":"Combine.kt"}
    0:0:void <init>(kotlinx.coroutines.channels.Channel,int) -> <init>
    34:37:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    37:37:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1 -> kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1:
# {"id":"sourceFile","fileName":"Combine.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.flow.internal.DownstreamExceptionContext -> kotlinx.coroutines.flow.internal.DownstreamExceptionContext:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    144:147:void <init>(java.lang.Throwable,kotlin.coroutines.CoroutineContext) -> <init>
    0:0:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    0:0:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    0:0:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    0:0:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlinx.coroutines.flow.internal.FlowCoroutine -> kotlinx.coroutines.flow.internal.FlowCoroutine:
# {"id":"sourceFile","fileName":"FlowCoroutine.kt"}
    57:57:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation) -> <init>
    59:60:boolean childCancelled(java.lang.Throwable) -> childCancelled
kotlinx.coroutines.flow.internal.FlowCoroutineKt -> kotlinx.coroutines.flow.internal.FlowCoroutineKt:
# {"id":"sourceFile","fileName":"FlowCoroutine.kt"}
    31:33:java.lang.Object flowScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> flowScope
kotlinx.coroutines.flow.internal.NoOpContinuation -> kotlinx.coroutines.flow.internal.NoOpContinuation:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    150:150:void <clinit>() -> <clinit>
    150:150:kotlin.coroutines.CoroutineContext getContext() -> getContext
    0:0:void resumeWith(java.lang.Object) -> resumeWith
kotlinx.coroutines.flow.internal.NullSurrogateKt -> kotlinx.coroutines.flow.internal.NullSurrogateKt:
# {"id":"sourceFile","fileName":"NullSurrogate.kt"}
    18:34:void <clinit>() -> <clinit>
kotlinx.coroutines.flow.internal.SafeCollector -> kotlinx.coroutines.flow.internal.SafeCollector:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    22:31:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext) -> <init>
    103:106:void checkContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,java.lang.Object) -> checkContext
    64:72:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> emit
    78:93:java.lang.Object emit(kotlin.coroutines.Continuation,java.lang.Object) -> emit
    135:140:void exceptionTransparencyViolated(kotlinx.coroutines.flow.internal.DownstreamExceptionContext,java.lang.Object) -> exceptionTransparencyViolated
    26:26:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    44:44:kotlin.coroutines.CoroutineContext getContext() -> getContext
    0:0:java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    47:49:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    54:54:void releaseIntercepted() -> releaseIntercepted
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 -> kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    31:31:java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element) -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlinx.coroutines.flow.internal.SafeCollectorKt -> kotlinx.coroutines.flow.internal.SafeCollectorKt:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    15:15:void <clinit>() -> <clinit>
    1:1:kotlin.jvm.functions.Function3 access$getEmitFun$p() -> access$getEmitFun$p
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 -> kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1:
# {"id":"sourceFile","fileName":"SafeCollector.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    15:15:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation) -> invoke
kotlinx.coroutines.flow.internal.SafeCollector_commonKt -> kotlinx.coroutines.flow.internal.SafeCollector_commonKt:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    25:86:void checkContext(kotlinx.coroutines.flow.internal.SafeCollector,kotlin.coroutines.CoroutineContext) -> checkContext
    96:97:kotlinx.coroutines.Job transitiveCoroutineParent(kotlinx.coroutines.Job,kotlinx.coroutines.Job) -> transitiveCoroutineParent
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1 -> kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.internal.SafeCollector) -> <init>
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    26:81:java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1 -> kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1 -> kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1:
# {"id":"sourceFile","fileName":"SafeCollector.common.kt"}
    0:0:void <init>(kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1,kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlinx.coroutines.internal.ArrayQueue -> kotlinx.coroutines.internal.ArrayQueue:
# {"id":"sourceFile","fileName":"ArrayQueue.kt"}
    7:8:void <init>() -> <init>
    15:17:void addLast(java.lang.Object) -> addLast
    36:50:void ensureCapacity() -> ensureCapacity
    12:12:boolean isEmpty() -> isEmpty
    22:26:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
kotlinx.coroutines.internal.AtomicKt -> kotlinx.coroutines.internal.AtomicKt:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    43:121:void <clinit>() -> <clinit>
kotlinx.coroutines.internal.AtomicOp -> kotlinx.coroutines.internal.AtomicOp:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    0:0:void <clinit>() -> <clinit>
    57:58:void <init>() -> <init>
    80:83:java.lang.Object decide(java.lang.Object) -> decide
    0:0:kotlinx.coroutines.internal.AtomicOp getAtomicOp() -> getAtomicOp
    0:0:long getOpSequence() -> getOpSequence
    94:99:java.lang.Object perform(java.lang.Object) -> perform
kotlinx.coroutines.internal.ConcurrentKt -> kotlinx.coroutines.internal.ConcurrentKt:
# {"id":"sourceFile","fileName":"Concurrent.kt"}
    23:24:void <clinit>() -> <clinit>
    32:33:boolean removeFutureOnCancel(java.util.concurrent.Executor) -> removeFutureOnCancel
kotlinx.coroutines.internal.ContextScope -> kotlinx.coroutines.internal.ContextScope:
# {"id":"sourceFile","fileName":"Scopes.kt"}
    37:38:void <init>(kotlin.coroutines.CoroutineContext) -> <init>
    38:38:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    40:40:java.lang.String toString() -> toString
kotlinx.coroutines.internal.DispatchedContinuation -> kotlinx.coroutines.internal.DispatchedContinuation:
# {"id":"sourceFile","fileName":"DispatchedContinuation.kt"}
    0:0:void <clinit>() -> <clinit>
    20:59:void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation) -> <init>
    80:319:void awaitReusability() -> awaitReusability
    236:237:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> cancelCompletedResult$kotlinx_coroutines_core
    112:321:kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation() -> claimReusableCancellableContinuation
    262:264:void dispatchYield$kotlinx_coroutines_core(kotlin.coroutines.CoroutineContext,java.lang.Object) -> dispatchYield$kotlinx_coroutines_core
    26:26:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    0:0:kotlin.coroutines.CoroutineContext getContext() -> getContext
    0:0:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> getDelegate$kotlinx_coroutines_core
    62:62:kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation() -> getReusableCancellableContinuation
    71:71:boolean isReusable() -> isReusable
    171:325:boolean postponeCancellation(java.lang.Throwable) -> postponeCancellation
    90:91:void release() -> release
    196:201:void resumeWith(java.lang.Object) -> resumeWith
    302:309:boolean kotlinx.coroutines.internal.DispatchedContinuationKt.executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeWith
    302:309:void resumeWith(java.lang.Object):203 -> resumeWith
    199:199:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    199:199:void resumeWith(java.lang.Object):203 -> resumeWith
    204:204:void resumeWith(java.lang.Object) -> resumeWith
    95:95:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    95:95:void resumeWith(java.lang.Object):204 -> resumeWith
    205:206:void resumeWith(java.lang.Object) -> resumeWith
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    99:99:void resumeWith(java.lang.Object):204 -> resumeWith
    204:204:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    204:204:void resumeWith(java.lang.Object):203 -> resumeWith
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    99:99:void resumeWith(java.lang.Object):204 -> resumeWith
    211:213:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    211:213:void resumeWith(java.lang.Object):203 -> resumeWith
    186:188:java.lang.Object takeState$kotlinx_coroutines_core() -> takeState$kotlinx_coroutines_core
    268:268:java.lang.String toString() -> toString
    152:323:java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation) -> tryReleaseClaimedContinuation
kotlinx.coroutines.internal.DispatchedContinuationKt -> kotlinx.coroutines.internal.DispatchedContinuationKt:
# {"id":"sourceFile","fileName":"DispatchedContinuation.kt"}
    14:17:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p() -> access$getUNDEFINED$p
    282:282:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    218:222:void kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith(java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    218:222:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    302:309:boolean executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeCancellableWith
    302:309:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    199:199:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    199:199:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    243:247:boolean kotlinx.coroutines.internal.DispatchedContinuation.resumeCancelled(java.lang.Object) -> resumeCancellableWith
    243:247:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    255:255:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resumeCancellableWith
    255:255:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    107:111:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    107:111:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    256:257:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resumeCancellableWith
    256:257:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    119:119:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    119:119:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    204:213:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    204:213:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    283:283:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    278:278:void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object) -> resumeCancellableWith$default
    287:287:boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation) -> yieldUndispatched
    302:309:boolean executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> yieldUndispatched
    302:309:boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation):287 -> yieldUndispatched
    199:199:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> yieldUndispatched
    199:199:boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation):287 -> yieldUndispatched
    288:288:boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation) -> yieldUndispatched
    204:213:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> yieldUndispatched
    204:213:boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation):287 -> yieldUndispatched
kotlinx.coroutines.internal.ExceptionsConstructorKt -> R8$$REMOVED$$CLASS$$8:
# {"id":"sourceFile","fileName":"ExceptionsConstructor.kt"}
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1 -> kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1:
# {"id":"sourceFile","fileName":"ExceptionsConstructor.kt"}
    0:0:void <init>(java.lang.reflect.Constructor) -> <init>
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Object invoke(java.lang.Object):70 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
    54:54:kotlin.jvm.functions.Function1 kotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor(java.lang.reflect.Constructor) -> invoke
    54:54:java.lang.Throwable invoke(java.lang.Throwable):112 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
    54:54:kotlin.jvm.functions.Function1 kotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor(java.lang.reflect.Constructor) -> invoke
    54:54:java.lang.Throwable invoke(java.lang.Throwable):112 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2 -> kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2:
# {"id":"sourceFile","fileName":"ExceptionsConstructor.kt"}
    0:0:void <init>(java.lang.reflect.Constructor) -> <init>
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Object invoke(java.lang.Object):70 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
    59:59:kotlin.jvm.functions.Function1 kotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor(java.lang.reflect.Constructor) -> invoke
    59:59:java.lang.Throwable invoke(java.lang.Throwable):112 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
    59:59:kotlin.jvm.functions.Function1 kotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor(java.lang.reflect.Constructor) -> invoke
    59:59:java.lang.Throwable invoke(java.lang.Throwable):112 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3 -> kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3:
# {"id":"sourceFile","fileName":"ExceptionsConstructor.kt"}
    0:0:void <init>(java.lang.reflect.Constructor) -> <init>
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Object invoke(java.lang.Object):70 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
    61:61:kotlin.jvm.functions.Function1 kotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor(java.lang.reflect.Constructor) -> invoke
    61:61:java.lang.Throwable invoke(java.lang.Throwable):112 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
    61:61:kotlin.jvm.functions.Function1 kotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor(java.lang.reflect.Constructor) -> invoke
    61:61:java.lang.Throwable invoke(java.lang.Throwable):112 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4 -> kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4:
# {"id":"sourceFile","fileName":"ExceptionsConstructor.kt"}
    0:0:void <init>(java.lang.reflect.Constructor) -> <init>
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Object invoke(java.lang.Object):70 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
    64:64:kotlin.jvm.functions.Function1 kotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor(java.lang.reflect.Constructor) -> invoke
    64:64:java.lang.Throwable invoke(java.lang.Throwable):112 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
    64:64:kotlin.jvm.functions.Function1 kotlinx.coroutines.internal.ExceptionsConstructorKt.createSafeConstructor(java.lang.reflect.Constructor) -> invoke
    64:64:java.lang.Throwable invoke(java.lang.Throwable):112 -> invoke
    70:70:java.lang.Object kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1 -> kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1:
# {"id":"sourceFile","fileName":"ExceptionsConstructor.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1) -> <init>
    70:70:java.lang.Object invoke(java.lang.Object) -> invoke
    70:70:java.lang.Object invoke(java.lang.Object) -> invoke
    70:70:java.lang.Throwable invoke(java.lang.Throwable):70 -> invoke
kotlinx.coroutines.internal.FastServiceLoader -> kotlinx.coroutines.internal.FastServiceLoader:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    0:0:void <clinit>() -> <clinit>
    105:107:java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class) -> getProviderInstance
    87:90:java.util.List load(java.lang.Class,java.lang.ClassLoader) -> load
    54:59:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():60 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    60:60:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():61 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    61:65:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    96:175:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1446:1446:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1446:1446:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    99:181:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    111:119:java.util.List parse(java.net.URL) -> parse
    136:143:java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1) -> parse
    136:143:java.util.List parse(java.net.URL):117 -> parse
    143:143:java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1) -> parse
    143:143:java.util.List parse(java.net.URL):117 -> parse
    124:125:java.util.List parse(java.net.URL) -> parse
    149:196:java.util.List parseFile(java.io.BufferedReader) -> parseFile
kotlinx.coroutines.internal.FastServiceLoaderKt -> kotlinx.coroutines.internal.FastServiceLoaderKt:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    17:17:void <clinit>() -> <clinit>
    17:17:void <clinit>() -> getANDROID_DETECTED
    17:17:boolean getANDROID_DETECTED():17 -> getANDROID_DETECTED
kotlinx.coroutines.internal.InlineList -> kotlinx.coroutines.internal.InlineList:
# {"id":"sourceFile","fileName":"InlineList.kt"}
    0:0:java.lang.Object constructor-impl(java.lang.Object) -> constructor-impl
    18:18:java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> constructor-impl$default
    22:31:java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object) -> plus-FjFbRPM
kotlinx.coroutines.internal.LimitedDispatcher -> kotlinx.coroutines.internal.LimitedDispatcher:
# {"id":"sourceFile","fileName":"LimitedDispatcher.kt"}
    17:19:void <init>(kotlinx.coroutines.CoroutineDispatcher,int) -> <init>
    19:27:void <init>(kotlinx.coroutines.CoroutineDispatcher,int) -> <init>
    100:101:boolean addAndTryDispatching(java.lang.Runnable) -> addAndTryDispatching
    80:87:void dispatchInternal(java.lang.Runnable,kotlin.jvm.functions.Function0) -> dispatch
    80:87:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):66 -> dispatch
    67:67:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    80:87:void dispatchInternal(java.lang.Runnable,kotlin.jvm.functions.Function0) -> dispatchYield
    80:87:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable):73 -> dispatchYield
    74:74:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatchYield
    39:56:void run() -> run
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> run
    20:20:void run():56 -> run
    57:61:void run() -> run
    92:92:boolean tryAllocateWorker() -> tryAllocateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryAllocateWorker
    20:20:boolean tryAllocateWorker():92 -> tryAllocateWorker
    93:95:boolean tryAllocateWorker() -> tryAllocateWorker
kotlinx.coroutines.internal.LimitedDispatcherKt -> kotlinx.coroutines.internal.LimitedDispatcherKt:
# {"id":"sourceFile","fileName":"LimitedDispatcher.kt"}
    106:106:void checkParallelism(int) -> checkParallelism
kotlinx.coroutines.internal.LockFreeLinkedListHead -> kotlinx.coroutines.internal.LockFreeLinkedListHead:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    638:638:void <init>() -> <init>
    0:0:boolean isRemoved() -> isRemoved
    638:638:boolean remove() -> remove
    653:653:java.lang.Void remove() -> remove
kotlinx.coroutines.internal.LockFreeLinkedListKt -> kotlinx.coroutines.internal.LockFreeLinkedListKt:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    26:30:void <clinit>() -> <clinit>
    26:26:java.lang.Object getCONDITION_FALSE() -> getCONDITION_FALSE
    631:631:kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object) -> unwrap
kotlinx.coroutines.internal.LockFreeLinkedListNode -> kotlinx.coroutines.internal.LockFreeLinkedListNode:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    0:0:void <clinit>() -> <clinit>
    63:63:kotlinx.coroutines.internal.Removed access$removed(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    63:63:void <init>():63 -> <init>
    66:68:void <init>() -> <init>
    63:63:kotlinx.coroutines.internal.Removed access$removed(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> access$finishAdd
    63:63:void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode):63 -> access$finishAdd
    215:219:boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode) -> addNext
    124:131:boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> addOneIfEmpty
    573:612:kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor) -> correctPrev
    117:118:kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> findPrevNonRemoved
    547:682:void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> finishAdd
    100:674:java.lang.Object getNext() -> getNext
    106:106:kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode() -> getNextNode
    114:114:kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode() -> getPrevNode
    266:266:void helpRemove() -> helpRemove
    276:281:void helpRemovePrev() -> helpRemovePrev
    95:95:boolean isRemoved() -> isRemoved
    245:245:boolean remove() -> remove
    251:257:kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext() -> removeOrNext
    71:71:kotlinx.coroutines.internal.Removed removed() -> removed
    623:623:java.lang.String toString() -> toString
    226:231:int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp) -> tryCondAddNext
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp -> kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    75:76:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    73:73:void complete(java.lang.Object,java.lang.Object) -> complete
    81:84:void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object) -> complete
kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp -> kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1 -> R8$$REMOVED$$CLASS$$9:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1 -> kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    0:0:void <init>(java.lang.Object) -> <init>
    623:623:java.lang.Object get() -> get
kotlinx.coroutines.internal.LockFreeTaskQueue -> kotlinx.coroutines.internal.LockFreeTaskQueue:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    0:0:void <clinit>() -> <clinit>
    30:33:void <init>(boolean) -> <init>
    48:312:boolean addLast(java.lang.Object) -> addLast
    41:310:void close() -> close
    37:37:int getSize() -> getSize
    59:314:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
kotlinx.coroutines.internal.LockFreeTaskQueueCore -> kotlinx.coroutines.internal.LockFreeTaskQueueCore:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    288:288:void <clinit>() -> <clinit>
    76:87:void <init>(int,boolean) -> <init>
    106:320:int addLast(java.lang.Object) -> addLast
    230:239:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long) -> allocateNextCopy
    225:340:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long) -> allocateOrGetNextCopy
    316:318:boolean close() -> close
    143:155:kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object) -> fillPlaceholder
    92:92:int getSize() -> getSize
    91:91:boolean isEmpty() -> isEmpty
    336:338:long markFrozen() -> markFrozen
    214:214:kotlinx.coroutines.internal.LockFreeTaskQueueCore next() -> next
    166:325:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
    204:330:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int) -> removeSlowPath
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    0:0:int addFailReason(long) -> addFailReason
    295:295:long updateHead(long,int) -> updateHead
    296:296:long updateTail(long,int) -> updateTail
    0:0:long wo(long,long) -> wo
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    268:268:void <init>(int) -> <init>
kotlinx.coroutines.internal.MainDispatcherFactory -> kotlinx.coroutines.internal.MainDispatcherFactory:
# {"id":"sourceFile","fileName":"MainDispatcherFactory.kt"}
kotlinx.coroutines.internal.MainDispatcherLoader -> kotlinx.coroutines.internal.MainDispatcherLoader:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    19:22:void <clinit>() -> <clinit>
    25:138:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1896:1899:float kotlin.collections.CollectionsKt___CollectionsKt.maxOrThrow(java.lang.Iterable) -> loadMainDispatcher
    1896:1899:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:38:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1901:1901:float kotlin.collections.CollectionsKt___CollectionsKt.maxOrThrow(java.lang.Iterable) -> loadMainDispatcher
    1901:1901:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:150:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
kotlinx.coroutines.internal.MainDispatchersKt -> kotlinx.coroutines.internal.MainDispatchersKt:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    0:0:void <clinit>() -> <clinit>
    77:78:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String) -> createMissingDispatcher
    76:76:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object) -> createMissingDispatcher$default
    66:66:boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher) -> isMissing
    81:81:java.lang.Void throwMissingMainDispatcherException() -> throwMissingMainDispatcherException
    57:59:kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List) -> tryCreateDispatcher
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher -> kotlinx.coroutines.internal.MissingMainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    89:91:void <init>(java.lang.Throwable,java.lang.String) -> <init>
    90:90:void <init>(java.lang.Throwable,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    90:90:void <init>(java.lang.Throwable,java.lang.String):90 -> <init>
    88:88:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> dispatch
    88:88:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):88 -> dispatch
    108:108:java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    0:0:kotlinx.coroutines.MainCoroutineDispatcher getImmediate() -> getImmediate
    96:96:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    114:118:java.lang.Void missing() -> missing
    122:122:java.lang.String toString() -> toString
kotlinx.coroutines.internal.OnUndeliveredElementKt -> kotlinx.coroutines.internal.OnUndeliveredElementKt:
# {"id":"sourceFile","fileName":"OnUndeliveredElement.kt"}
    37:37:kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext) -> bindCancellationFun
    31:32:void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext) -> callUndeliveredElement
    17:21:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException) -> callUndeliveredElementCatchingException
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> callUndeliveredElementCatchingException
    75:75:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException):22 -> callUndeliveredElementCatchingException
    24:24:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException) -> callUndeliveredElementCatchingException
    12:12:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object) -> callUndeliveredElementCatchingException$default
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1 -> kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1:
# {"id":"sourceFile","fileName":"OnUndeliveredElement.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext) -> <init>
    37:37:java.lang.Object invoke(java.lang.Object) -> invoke
    37:37:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.internal.OpDescriptor -> kotlinx.coroutines.internal.OpDescriptor:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    35:37:boolean isEarlierThan(kotlinx.coroutines.internal.OpDescriptor) -> isEarlierThan
    32:32:java.lang.String toString() -> toString
kotlinx.coroutines.internal.ProbesSupportKt -> R8$$REMOVED$$CLASS$$10:
# {"id":"sourceFile","fileName":"ProbesSupport.kt"}
kotlinx.coroutines.internal.Removed -> kotlinx.coroutines.internal.Removed:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    626:626:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    627:627:java.lang.String toString() -> toString
kotlinx.coroutines.internal.ResizableAtomicArray -> kotlinx.coroutines.internal.ResizableAtomicArray:
# {"id":"sourceFile","fileName":"ResizableAtomicArray.kt"}
    13:15:void <init>(int) -> <init>
    18:18:int currentLength() -> currentLength
    21:22:java.lang.Object get(int) -> get
    27:35:void setSynchronized(int,java.lang.Object) -> setSynchronized
kotlinx.coroutines.internal.ScopeCoroutine -> kotlinx.coroutines.internal.ScopeCoroutine:
# {"id":"sourceFile","fileName":"Scopes.kt"}
    17:18:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation) -> <init>
    28:28:void afterCompletion(java.lang.Object) -> afterCompletion
    33:33:void afterResume(java.lang.Object) -> afterResume
    20:20:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    24:24:kotlinx.coroutines.Job getParent$kotlinx_coroutines_core() -> getParent$kotlinx_coroutines_core
    0:0:boolean isScopedCoroutine() -> isScopedCoroutine
kotlinx.coroutines.internal.StackTraceRecoveryKt -> kotlinx.coroutines.internal.StackTraceRecoveryKt:
# {"id":"sourceFile","fileName":"StackTraceRecovery.kt"}
    21:27:void <clinit>() -> <clinit>
    0:0:java.lang.Throwable recoverStackTrace(java.lang.Throwable) -> recoverStackTrace
kotlinx.coroutines.internal.Symbol -> kotlinx.coroutines.internal.Symbol:
# {"id":"sourceFile","fileName":"Symbol.kt"}
    14:14:void <init>(java.lang.String) -> <init>
    15:15:java.lang.String toString() -> toString
kotlinx.coroutines.internal.SynchronizedKt -> R8$$REMOVED$$CLASS$$11:
# {"id":"sourceFile","fileName":"Synchronized.kt"}
kotlinx.coroutines.internal.SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt:
    1:1:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    1:1:int systemProp(java.lang.String,int,int,int) -> systemProp
    1:1:long systemProp(java.lang.String,long,long,long) -> systemProp
    1:1:java.lang.String systemProp(java.lang.String) -> systemProp
    1:1:boolean systemProp(java.lang.String,boolean) -> systemProp
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt:
# {"id":"sourceFile","fileName":"SystemProps.kt"}
    11:11:void <clinit>() -> <clinit>
    11:11:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    17:17:java.lang.String systemProp(java.lang.String) -> systemProp
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt:
# {"id":"sourceFile","fileName":"SystemProps.common.kt"}
    21:21:boolean systemProp(java.lang.String,boolean) -> systemProp
    35:35:int systemProp(java.lang.String,int,int,int) -> systemProp
    50:54:long systemProp(java.lang.String,long,long,long) -> systemProp
    30:30:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    44:44:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.internal.ThreadContextKt -> kotlinx.coroutines.internal.ThreadContextKt:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    11:52:void <clinit>() -> <clinit>
    85:94:void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> restoreThreadContext
    59:59:java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext) -> threadContextElements
    65:78:java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> updateThreadContext
kotlinx.coroutines.internal.ThreadContextKt$countAll$1 -> kotlinx.coroutines.internal.ThreadContextKt$countAll$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    36:38:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadContextKt$findOne$1 -> kotlinx.coroutines.internal.ThreadContextKt$findOne$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    47:47:kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadContextKt$updateState$1 -> kotlinx.coroutines.internal.ThreadContextKt$updateState$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    53:54:kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadSafeHeap -> kotlinx.coroutines.internal.ThreadSafeHeap:
# {"id":"sourceFile","fileName":"ThreadSafeHeap.kt"}
kotlinx.coroutines.internal.ThreadSafeHeapNode -> kotlinx.coroutines.internal.ThreadSafeHeapNode:
# {"id":"sourceFile","fileName":"ThreadSafeHeap.kt"}
kotlinx.coroutines.internal.ThreadState -> kotlinx.coroutines.internal.ThreadState:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    14:17:void <init>(kotlin.coroutines.CoroutineContext,int) -> <init>
    21:22:void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object) -> append
    26:27:void restore(kotlin.coroutines.CoroutineContext) -> restore
kotlinx.coroutines.internal.UndeliveredElementException -> kotlinx.coroutines.internal.UndeliveredElementException:
# {"id":"sourceFile","fileName":"OnUndeliveredElement.kt"}
    43:43:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.intrinsics.CancellableKt -> kotlinx.coroutines.intrinsics.CancellableKt:
# {"id":"sourceFile","fileName":"Cancellable.kt"}
    65:66:void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable) -> dispatcherFailure
    18:18:void startCoroutineCancellable(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> startCoroutineCancellable
    52:52:void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0) -> startCoroutineCancellable
    52:52:void startCoroutineCancellable(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):17 -> startCoroutineCancellable
    30:30:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineCancellable
    52:52:void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0) -> startCoroutineCancellable
    52:52:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1):29 -> startCoroutineCancellable
    39:39:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation) -> startCoroutineCancellable
    52:52:void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0) -> startCoroutineCancellable
    52:52:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation):38 -> startCoroutineCancellable
    25:25:void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object) -> startCoroutineCancellable$default
kotlinx.coroutines.intrinsics.UndispatchedKt -> kotlinx.coroutines.intrinsics.UndispatchedKt:
# {"id":"sourceFile","fileName":"Undispatched.kt"}
    11:11:kotlin.coroutines.Continuation kotlinx.coroutines.internal.ProbesSupportKt.probeCoroutineCreated(kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    11:11:void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):40 -> startCoroutineUndispatched
    41:41:void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    95:95:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    95:95:void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):41 -> startCoroutineUndispatched
    42:42:void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    99:99:void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):41 -> startCoroutineUndispatched
    73:75:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    73:75:void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):40 -> startCoroutineUndispatched
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    99:99:void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):41 -> startCoroutineUndispatched
    70:70:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    70:70:void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):40 -> startCoroutineUndispatched
    11:11:kotlin.coroutines.Continuation kotlinx.coroutines.internal.ProbesSupportKt.probeCoroutineCreated(kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    11:11:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):53 -> startCoroutineUndispatched
    54:54:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    95:95:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    95:95:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):54 -> startCoroutineUndispatched
    55:55:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUndispatched
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    99:99:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):54 -> startCoroutineUndispatched
    73:75:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    73:75:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):53 -> startCoroutineUndispatched
    99:99:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> startCoroutineUndispatched
    99:99:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):54 -> startCoroutineUndispatched
    70:70:void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> startCoroutineUndispatched
    70:70:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):53 -> startCoroutineUndispatched
    89:89:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2) -> startUndispatchedOrReturn
    111:135:java.lang.Object undispatchedResult(kotlinx.coroutines.internal.ScopeCoroutine,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0) -> startUndispatchedOrReturn
    111:135:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):88 -> startUndispatchedOrReturn
    58:58:java.lang.Throwable kotlinx.coroutines.internal.StackTraceRecoveryKt.recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation) -> startUndispatchedOrReturn
    58:58:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):88 -> startUndispatchedOrReturn
kotlinx.coroutines.scheduling.CoroutineScheduler -> kotlinx.coroutines.scheduling.CoroutineScheduler:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    303:303:void <clinit>() -> <clinit>
    90:93:void <init>(int,int,long,java.lang.String) -> <init>
    94:94:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    94:94:void <init>(int,int,long,java.lang.String):94 -> <init>
    95:95:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    95:95:void <init>(int,int,long,java.lang.String):95 -> <init>
    98:297:void <init>(int,int,long,java.lang.String) -> <init>
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    85:85:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task):118 -> addToGlobalQueue
    119:121:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    328:328:void close() -> close
    463:463:int createNewWorker() -> createNewWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    20:20:int createNewWorker():463 -> createNewWorker
    465:472:int createNewWorker() -> createNewWorker
    270:270:int getCreatedWorkers() -> createNewWorker
    270:270:int createNewWorker():474 -> createNewWorker
    475:482:int createNewWorker() -> createNewWorker
    278:278:int incrementCreatedWorkers() -> createNewWorker
    278:278:int createNewWorker():483 -> createNewWorker
    484:485:int createNewWorker() -> createNewWorker
    278:278:int incrementCreatedWorkers() -> createNewWorker
    278:278:int createNewWorker():483 -> createNewWorker
    475:485:int createNewWorker() -> createNewWorker
    406:412:kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext) -> createTask
    508:508:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    596:596:kotlinx.coroutines.scheduling.CoroutineScheduler kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.getScheduler() -> currentWorker
    596:596:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker():508 -> currentWorker
    508:508:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    383:391:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    82:82:int kotlinx.coroutines.scheduling.Task.getMode() -> dispatch
    82:82:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):396 -> dispatch
    398:401:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    382:382:void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object) -> dispatch$default
    326:326:void execute(java.lang.Runnable) -> execute
    298:298:boolean isTerminated() -> isTerminated
    236:246:int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackNextIndex
    206:988:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop() -> parkedWorkersStackPop
    177:985:boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackPush
    154:983:void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int) -> parkedWorkersStackTopUpdate
    570:575:void runSafely(kotlinx.coroutines.scheduling.Task) -> runSafely
    575:575:void runSafely(kotlinx.coroutines.scheduling.Task) -> runSafely
    333:337:void shutdown(long) -> shutdown
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> shutdown
    20:20:void shutdown(long):337 -> shutdown
    270:270:int getCreatedWorkers() -> shutdown
    270:270:void shutdown(long):337 -> shutdown
    337:367:void shutdown(long) -> shutdown
    281:281:long incrementBlockingTasks() -> signalBlockingWork
    281:281:void signalBlockingWork(boolean):417 -> signalBlockingWork
    419:421:void signalBlockingWork(boolean) -> signalBlockingWork
    425:427:void signalCpuWork() -> signalCpuWork
    499:499:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    82:82:int kotlinx.coroutines.scheduling.Task.getMode() -> submitToLocalQueue
    82:82:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean):501 -> submitToLocalQueue
    501:505:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    526:564:java.lang.String toString() -> toString
    433:442:boolean tryCreateWorker(long) -> tryCreateWorker
    430:430:boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object) -> tryCreateWorker$default
    450:452:boolean tryUnpark() -> tryUnpark
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion -> kotlinx.coroutines.scheduling.CoroutineScheduler$Companion:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings -> kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker -> kotlinx.coroutines.scheduling.CoroutineScheduler$Worker:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    0:0:void <clinit>() -> <clinit>
    579:579:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> <init>
    579:579:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):579 -> <init>
    581:616:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    630:630:void setNextParkedWorker(java.lang.Object) -> <init>
    630:630:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):630 -> <init>
    637:637:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    592:593:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler,int) -> <init>
    579:579:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> access$getThis$0$p
    763:763:void afterTask(int) -> afterTask
    284:284:void kotlinx.coroutines.scheduling.CoroutineScheduler.decrementBlockingTasks() -> afterTask
    284:284:void afterTask(int):763 -> afterTask
    764:768:void afterTask(int) -> afterTask
    756:757:void beforeTask(int) -> beforeTask
    82:82:int kotlinx.coroutines.scheduling.Task.getMode() -> executeTask
    82:82:void executeTask(kotlinx.coroutines.scheduling.Task):746 -> executeTask
    747:750:void executeTask(kotlinx.coroutines.scheduling.Task) -> executeTask
    885:892:kotlinx.coroutines.scheduling.Task findAnyTask(boolean) -> findAnyTask
    869:876:kotlinx.coroutines.scheduling.Task findTask(boolean) -> findTask
    586:586:int getIndexInArray() -> getIndexInArray
    630:630:void setNextParkedWorker(java.lang.Object) -> getNextParkedWorker
    630:630:java.lang.Object getNextParkedWorker():630 -> getNextParkedWorker
    861:864:void idleReset(int) -> idleReset
    743:743:boolean inStack() -> inStack
    777:787:int nextInt(int) -> nextInt
    792:799:void park() -> park
    896:901:kotlinx.coroutines.scheduling.Task pollGlobalQueues() -> pollGlobalQueues
    664:664:void run() -> run
    671:712:void runWorker() -> runWorker
    588:589:void setIndexInArray(int) -> setIndexInArray
    630:630:void setNextParkedWorker(java.lang.Object) -> setNextParkedWorker
    644:983:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    291:291:boolean kotlinx.coroutines.scheduling.CoroutineScheduler.tryAcquireCpuPermit() -> tryAcquireCpuPermit
    291:291:boolean tryAcquireCpuPermit():645 -> tryAcquireCpuPermit
    646:646:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    717:739:void tryPark() -> tryPark
    657:659:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    294:294:long kotlinx.coroutines.scheduling.CoroutineScheduler.releaseCpuPermit() -> tryReleaseCpu
    294:294:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState):659 -> tryReleaseCpu
    660:660:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    907:907:kotlinx.coroutines.scheduling.Task trySteal(boolean) -> trySteal
    270:270:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> trySteal
    270:270:kotlinx.coroutines.scheduling.Task trySteal(boolean):907 -> trySteal
    913:933:kotlinx.coroutines.scheduling.Task trySteal(boolean) -> trySteal
    807:807:void tryTerminateWorker() -> tryTerminateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTerminateWorker
    20:20:void tryTerminateWorker():807 -> tryTerminateWorker
    809:809:void tryTerminateWorker() -> tryTerminateWorker
    270:270:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> tryTerminateWorker
    270:270:void tryTerminateWorker():811 -> tryTerminateWorker
    811:832:void tryTerminateWorker() -> tryTerminateWorker
    279:279:int kotlinx.coroutines.scheduling.CoroutineScheduler.decrementCreatedWorkers() -> tryTerminateWorker
    279:279:void tryTerminateWorker():837 -> tryTerminateWorker
    839:856:void tryTerminateWorker() -> tryTerminateWorker
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState -> kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    0:0:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values() -> $values
    942:962:void <clinit>() -> <clinit>
    938:938:void <init>(java.lang.String,int) -> <init>
    0:0:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String) -> valueOf
    0:0:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values() -> values
kotlinx.coroutines.scheduling.DefaultIoScheduler -> kotlinx.coroutines.scheduling.DefaultIoScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    46:49:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    74:74:void close() -> close
    65:65:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    70:70:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatchYield
    56:56:void execute(java.lang.Runnable) -> execute
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.DefaultScheduler -> kotlinx.coroutines.scheduling.DefaultScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    0:0:void <clinit>() -> <clinit>
    13:15:void <init>() -> <init>
    24:24:void close() -> close
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.GlobalQueue -> kotlinx.coroutines.scheduling.GlobalQueue:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    106:106:void <init>() -> <init>
kotlinx.coroutines.scheduling.NanoTimeSource -> kotlinx.coroutines.scheduling.NanoTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    0:0:void <clinit>() -> <clinit>
    113:113:void <init>() -> <init>
    114:114:long nanoTime() -> nanoTime
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher -> kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    82:92:void <init>(int,int,long,java.lang.String) -> <init>
    95:95:kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler() -> createScheduler
    97:97:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    103:103:void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatchWithContext$kotlinx_coroutines_core
    100:100:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatchYield
kotlinx.coroutines.scheduling.SchedulerTimeSource -> kotlinx.coroutines.scheduling.SchedulerTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
kotlinx.coroutines.scheduling.Task -> kotlinx.coroutines.scheduling.Task:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    77:79:void <init>(long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
    81:81:void <init>() -> <init>
kotlinx.coroutines.scheduling.TaskContext -> kotlinx.coroutines.scheduling.TaskContext:
# {"id":"sourceFile","fileName":"Tasks.kt"}
kotlinx.coroutines.scheduling.TaskContextImpl -> kotlinx.coroutines.scheduling.TaskContextImpl:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    65:65:void <init>(int) -> <init>
    0:0:void afterTask() -> afterTask
    65:65:int getTaskMode() -> getTaskMode
kotlinx.coroutines.scheduling.TaskImpl -> kotlinx.coroutines.scheduling.TaskImpl:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    89:92:void <init>(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
    95:97:void run() -> run
    102:102:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.TasksKt -> kotlinx.coroutines.scheduling.TasksKt:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    17:75:void <clinit>() -> <clinit>
kotlinx.coroutines.scheduling.UnlimitedIoScheduler -> kotlinx.coroutines.scheduling.UnlimitedIoScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    0:0:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    39:39:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    35:35:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatchYield
kotlinx.coroutines.scheduling.WorkQueue -> kotlinx.coroutines.scheduling.WorkQueue:
# {"id":"sourceFile","fileName":"WorkQueue.kt"}
    0:0:void <clinit>() -> <clinit>
    37:60:void <init>() -> <init>
    73:75:kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean) -> add
    72:72:kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object) -> add$default
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addLast
    85:85:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task):83 -> addLast
    83:98:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task) -> addLast
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    85:85:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task):195 -> decrementIfBlocking
    196:196:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    52:52:int getBufferSize$kotlinx_coroutines_core() -> getBufferSize$kotlinx_coroutines_core
    53:53:int getSize$kotlinx_coroutines_core() -> getSize$kotlinx_coroutines_core
    141:142:void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue) -> offloadAllWorkTo
    66:66:kotlinx.coroutines.scheduling.Task poll() -> poll
    182:188:kotlinx.coroutines.scheduling.Task pollBuffer() -> pollBuffer
    175:176:boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue) -> pollTo
    121:128:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealBlockingFrom
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryStealBlockingFrom
    85:85:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue):129 -> tryStealBlockingFrom
    129:137:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealBlockingFrom
    110:116:long tryStealFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealFrom
    152:152:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean) -> tryStealLastScheduled
    85:85:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryStealLastScheduled
    85:85:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean):153 -> tryStealLastScheduled
    156:167:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean) -> tryStealLastScheduled
kotlinx.coroutines.sync.Mutex -> kotlinx.coroutines.sync.Mutex:
# {"id":"sourceFile","fileName":"Mutex.kt"}
kotlinx.coroutines.sync.MutexKt -> R8$$REMOVED$$CLASS$$12:
# {"id":"sourceFile","fileName":"Mutex.kt"}
org.apache.log4j.Appender -> org.apache.log4j.Appender:
# {"id":"sourceFile","fileName":"Appender.java"}
org.apache.log4j.AppenderSkeleton -> org.apache.log4j.AppenderSkeleton:
# {"id":"sourceFile","fileName":"AppenderSkeleton.java"}
    37:64:void <init>() -> <init>
    0:0:void activateOptions() -> activateOptions
    82:86:void addFilter(org.apache.log4j.spi.Filter) -> addFilter
    108:108:void clearFilters() -> clearFilters
    210:231:void doAppend(org.apache.log4j.spi.LoggingEvent) -> doAppend
    120:124:void finalize() -> finalize
    135:135:org.apache.log4j.spi.ErrorHandler getErrorHandler() -> getErrorHandler
    146:146:org.apache.log4j.spi.Filter getFilter() -> getFilter
    158:158:org.apache.log4j.spi.Filter getFirstFilter() -> getFirstFilter
    166:166:org.apache.log4j.Layout getLayout() -> getLayout
    176:176:java.lang.String getName() -> getName
    186:186:org.apache.log4j.Priority getThreshold() -> getThreshold
    198:198:boolean isAsSevereAsThreshold(org.apache.log4j.Priority) -> isAsSevereAsThreshold
    243:247:void setErrorHandler(org.apache.log4j.spi.ErrorHandler) -> setErrorHandler
    257:257:void setLayout(org.apache.log4j.Layout) -> setLayout
    266:266:void setName(java.lang.String) -> setName
    281:281:void setThreshold(org.apache.log4j.Priority) -> setThreshold
org.apache.log4j.AsyncAppender -> org.apache.log4j.AsyncAppender:
# {"id":"sourceFile","fileName":"AsyncAppender.java"}
    67:122:void <init>() -> <init>
    131:133:void addAppender(org.apache.log4j.Appender) -> addAppender
    144:222:void append(org.apache.log4j.spi.LoggingEvent) -> append
    234:263:void close() -> close
    271:273:java.util.Enumeration getAllAppenders() -> getAllAppenders
    283:285:org.apache.log4j.Appender getAppender(java.lang.String) -> getAppender
    417:417:boolean getBlocking() -> getBlocking
    393:393:int getBufferSize() -> getBufferSize
    295:295:boolean getLocationInfo() -> getLocationInfo
    304:306:boolean isAttached(org.apache.log4j.Appender) -> isAttached
    320:322:void removeAllAppenders() -> removeAllAppenders
    330:332:void removeAppender(org.apache.log4j.Appender) -> removeAppender
    340:342:void removeAppender(java.lang.String) -> removeAppender
    0:0:boolean requiresLayout() -> requiresLayout
    403:406:void setBlocking(boolean) -> setBlocking
    376:385:void setBufferSize(int) -> setBufferSize
    359:359:void setLocationInfo(boolean) -> setLocationInfo
org.apache.log4j.AsyncAppender$DiscardSummary -> org.apache.log4j.AsyncAppender$DiscardSummary:
# {"id":"sourceFile","fileName":"AsyncAppender.java"}
    439:441:void <init>(org.apache.log4j.spi.LoggingEvent) -> <init>
    450:454:void add(org.apache.log4j.spi.LoggingEvent) -> add
    463:468:org.apache.log4j.spi.LoggingEvent createEvent() -> createEvent
org.apache.log4j.AsyncAppender$Dispatcher -> org.apache.log4j.AsyncAppender$Dispatcher:
# {"id":"sourceFile","fileName":"AsyncAppender.java"}
    507:512:void <init>(org.apache.log4j.AsyncAppender,java.util.List,java.util.Map,org.apache.log4j.helpers.AppenderAttachableImpl) -> <init>
    535:584:void run() -> run
org.apache.log4j.BasicConfigurator -> org.apache.log4j.BasicConfigurator:
# {"id":"sourceFile","fileName":"BasicConfigurator.java"}
    35:35:void <init>() -> <init>
    45:46:void configure() -> configure
    57:58:void configure(org.apache.log4j.Appender) -> configure
    70:70:void resetConfiguration() -> resetConfiguration
org.apache.log4j.Category -> org.apache.log4j.Category:
# {"id":"sourceFile","fileName":"Category.java"}
    115:115:void <clinit>() -> <clinit>
    132:145:void <init>(java.lang.String) -> <init>
    158:163:void addAppender(org.apache.log4j.Appender) -> addAppender
    181:181:void assertLog(boolean,java.lang.String) -> assertLog
    199:212:void callAppenders(org.apache.log4j.spi.LoggingEvent) -> callAppenders
    86:86:java.lang.Class class$(java.lang.String) -> class$
    223:232:void closeNestedAppenders() -> closeNestedAppenders
    254:257:void debug(java.lang.Object) -> debug
    273:276:void debug(java.lang.Object,java.lang.Throwable) -> debug
    299:302:void error(java.lang.Object) -> error
    316:319:void error(java.lang.Object,java.lang.Throwable) -> error
    335:335:org.apache.log4j.Logger exists(java.lang.String) -> exists
    359:362:void fatal(java.lang.Object) -> fatal
    376:379:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    388:388:void forcedLog(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable) -> forcedLog
    397:397:boolean getAdditivity() -> getAdditivity
    409:412:java.util.Enumeration getAllAppenders() -> getAllAppenders
    423:426:org.apache.log4j.Appender getAppender(java.lang.String) -> getAppender
    453:455:org.apache.log4j.Priority getChainedPriority() -> getChainedPriority
    473:473:java.util.Enumeration getCurrentCategories() -> getCurrentCategories
    487:487:org.apache.log4j.spi.LoggerRepository getDefaultHierarchy() -> getDefaultHierarchy
    439:441:org.apache.log4j.Level getEffectiveLevel() -> getEffectiveLevel
    499:499:org.apache.log4j.spi.LoggerRepository getHierarchy() -> getHierarchy
    519:519:org.apache.log4j.Category getInstance(java.lang.String) -> getInstance
    528:528:org.apache.log4j.Category getInstance(java.lang.Class) -> getInstance
    564:564:org.apache.log4j.Level getLevel() -> getLevel
    509:509:org.apache.log4j.spi.LoggerRepository getLoggerRepository() -> getLoggerRepository
    537:537:java.lang.String getName() -> getName
    552:552:org.apache.log4j.Category getParent() -> getParent
    573:573:org.apache.log4j.Level getPriority() -> getPriority
    600:601:java.util.ResourceBundle getResourceBundle() -> getResourceBundle
    618:633:java.lang.String getResourceBundleString(java.lang.String) -> getResourceBundleString
    584:584:org.apache.log4j.Category getRoot() -> getRoot
    660:663:void info(java.lang.Object) -> info
    677:680:void info(java.lang.Object,java.lang.Throwable) -> info
    688:691:boolean isAttached(org.apache.log4j.Appender) -> isAttached
    731:733:boolean isDebugEnabled() -> isDebugEnabled
    746:748:boolean isEnabledFor(org.apache.log4j.Priority) -> isEnabledFor
    760:762:boolean isInfoEnabled() -> isInfoEnabled
    776:786:void l7dlog(org.apache.log4j.Priority,java.lang.String,java.lang.Throwable) -> l7dlog
    800:810:void l7dlog(org.apache.log4j.Priority,java.lang.String,java.lang.Object[],java.lang.Throwable) -> l7dlog
    819:823:void log(org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable) -> log
    831:835:void log(org.apache.log4j.Priority,java.lang.Object) -> log
    849:853:void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable) -> log
    867:871:void removeAllAppenders() -> removeAllAppenders
    881:884:void removeAppender(org.apache.log4j.Appender) -> removeAppender
    894:896:void removeAppender(java.lang.String) -> removeAppender
    904:904:void setAdditivity(boolean) -> setAdditivity
    912:912:void setHierarchy(org.apache.log4j.spi.LoggerRepository) -> setHierarchy
    928:928:void setLevel(org.apache.log4j.Level) -> setLevel
    941:941:void setPriority(org.apache.log4j.Priority) -> setPriority
    954:954:void setResourceBundle(java.util.ResourceBundle) -> setResourceBundle
    979:979:void shutdown() -> shutdown
    1004:1008:void warn(java.lang.Object) -> warn
    1022:1025:void warn(java.lang.Object,java.lang.Throwable) -> warn
org.apache.log4j.CategoryKey -> org.apache.log4j.CategoryKey:
# {"id":"sourceFile","fileName":"CategoryKey.java"}
    29:31:void <init>(java.lang.String) -> <init>
    24:24:java.lang.Class class$(java.lang.String) -> class$
    46:47:boolean equals(java.lang.Object) -> equals
    37:37:int hashCode() -> hashCode
org.apache.log4j.ConsoleAppender -> org.apache.log4j.ConsoleAppender:
# {"id":"sourceFile","fileName":"ConsoleAppender.java"}
    36:47:void <init>() -> <init>
    56:56:void <init>(org.apache.log4j.Layout) -> <init>
    36:67:void <init>(org.apache.log4j.Layout,java.lang.String) -> <init>
    130:144:void activateOptions() -> activateOptions
    153:154:void closeWriter() -> closeWriter
    118:118:boolean getFollow() -> getFollow
    96:96:java.lang.String getTarget() -> getTarget
    107:107:void setFollow(boolean) -> setFollow
    77:84:void setTarget(java.lang.String) -> setTarget
    122:123:void targetWarn(java.lang.String) -> targetWarn
org.apache.log4j.ConsoleAppender$SystemErrStream -> org.apache.log4j.ConsoleAppender$SystemErrStream:
# {"id":"sourceFile","fileName":"ConsoleAppender.java"}
    165:165:void <init>() -> <init>
    0:0:void close() -> close
    172:172:void flush() -> flush
    176:176:void write(byte[]) -> write
    181:181:void write(byte[],int,int) -> write
    185:185:void write(int) -> write
org.apache.log4j.ConsoleAppender$SystemOutStream -> org.apache.log4j.ConsoleAppender$SystemOutStream:
# {"id":"sourceFile","fileName":"ConsoleAppender.java"}
    195:195:void <init>() -> <init>
    0:0:void close() -> close
    202:202:void flush() -> flush
    206:206:void write(byte[]) -> write
    211:211:void write(byte[],int,int) -> write
    215:215:void write(int) -> write
org.apache.log4j.DailyRollingFileAppender -> org.apache.log4j.DailyRollingFileAppender:
# {"id":"sourceFile","fileName":"DailyRollingFileAppender.java"}
    179:179:void <clinit>() -> <clinit>
    152:184:void <init>() -> <init>
    152:197:void <init>(org.apache.log4j.Layout,java.lang.String,java.lang.String) -> <init>
    215:226:void activateOptions() -> activateOptions
    272:284:int computeCheckPeriod() -> computeCheckPeriod
    211:211:java.lang.String getDatePattern() -> getDatePattern
    234:257:void printPeriodicity(int) -> printPeriodicity
    298:335:void rollOver() -> rollOver
    206:206:void setDatePattern(java.lang.String) -> setDatePattern
    347:358:void subAppend(org.apache.log4j.spi.LoggingEvent) -> subAppend
org.apache.log4j.DefaultCategoryFactory -> org.apache.log4j.DefaultCategoryFactory:
# {"id":"sourceFile","fileName":"DefaultCategoryFactory.java"}
    23:23:void <init>() -> <init>
    28:28:org.apache.log4j.Logger makeNewLoggerInstance(java.lang.String) -> makeNewLoggerInstance
org.apache.log4j.Dispatcher -> org.apache.log4j.Dispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.java"}
    34:54:void <init>(org.apache.log4j.helpers.BoundedFIFO,org.apache.log4j.AsyncAppender) -> <init>
    62:70:void close() -> close
    88:122:void run() -> run
org.apache.log4j.FileAppender -> org.apache.log4j.FileAppender:
# {"id":"sourceFile","fileName":"FileAppender.java"}
    52:72:void <init>() -> <init>
    52:92:void <init>(org.apache.log4j.Layout,java.lang.String,boolean,boolean,int) -> <init>
    52:108:void <init>(org.apache.log4j.Layout,java.lang.String,boolean) -> <init>
    119:119:void <init>(org.apache.log4j.Layout,java.lang.String) -> <init>
    161:172:void activateOptions() -> activateOptions
    181:188:void closeFile() -> closeFile
    143:143:boolean getAppend() -> getAppend
    211:211:int getBufferSize() -> getBufferSize
    202:202:boolean getBufferedIO() -> getBufferedIO
    150:150:java.lang.String getFile() -> getFile
    338:340:void reset() -> reset
    228:228:void setAppend(boolean) -> setAppend
    255:255:void setBufferSize(int) -> setBufferSize
    243:245:void setBufferedIO(boolean) -> setBufferedIO
    134:135:void setFile(java.lang.String) -> setFile
    276:319:void setFile(java.lang.String,boolean,boolean,int) -> setFile
    329:329:void setQWForFiles(java.io.Writer) -> setQWForFiles
org.apache.log4j.HTMLLayout -> org.apache.log4j.HTMLLayout:
# {"id":"sourceFile","fileName":"HTMLLayout.java"}
    0:0:void <clinit>() -> <clinit>
    28:62:void <init>() -> <init>
    0:0:void activateOptions() -> activateOptions
    192:200:void appendThrowableAsHTML(java.lang.String[],java.lang.StringBuffer) -> appendThrowableAsHTML
    125:187:java.lang.String format(org.apache.log4j.spi.LoggingEvent) -> format
    0:0:java.lang.String getContentType() -> getContentType
    245:249:java.lang.String getFooter() -> getFooter
    210:237:java.lang.String getHeader() -> getHeader
    85:85:boolean getLocationInfo() -> getLocationInfo
    104:104:java.lang.String getTitle() -> getTitle
    0:0:boolean ignoresThrowable() -> ignoresThrowable
    77:77:void setLocationInfo(boolean) -> setLocationInfo
    96:96:void setTitle(java.lang.String) -> setTitle
org.apache.log4j.Hierarchy -> org.apache.log4j.Hierarchy:
# {"id":"sourceFile","fileName":"Hierarchy.java"}
    76:94:void <init>(org.apache.log4j.Logger) -> <init>
    107:110:void addHierarchyEventListener(org.apache.log4j.spi.HierarchyEventListener) -> addHierarchyEventListener
    102:102:void addRenderer(java.lang.Class,org.apache.log4j.or.ObjectRenderer) -> addRenderer
    126:126:void clear() -> clear
    132:136:void emitNoAppenderWarning(org.apache.log4j.Category) -> emitNoAppenderWarning
    149:151:org.apache.log4j.Logger exists(java.lang.String) -> exists
    187:192:void fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> fireAddAppenderEvent
    198:203:void fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> fireRemoveAppenderEvent
    321:321:java.util.Enumeration getCurrentCategories() -> getCurrentCategories
    304:313:java.util.Enumeration getCurrentLoggers() -> getCurrentLoggers
    242:242:org.apache.log4j.Logger getLogger(java.lang.String) -> getLogger
    261:290:org.apache.log4j.Logger getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory) -> getLogger
    330:330:org.apache.log4j.or.RendererMap getRendererMap() -> getRendererMap
    341:341:org.apache.log4j.Logger getRootLogger() -> getRootLogger
    215:215:org.apache.log4j.Level getThreshold() -> getThreshold
    351:351:boolean isDisabled(int) -> isDisabled
    359:359:void overrideAsNeeded(java.lang.String) -> overrideAsNeeded
    379:396:void resetConfiguration() -> resetConfiguration
    406:406:void setDisableOverride(java.lang.String) -> setDisableOverride
    416:416:void setRenderer(java.lang.Class,org.apache.log4j.or.ObjectRenderer) -> setRenderer
    162:166:void setThreshold(java.lang.String) -> setThreshold
    180:181:void setThreshold(org.apache.log4j.Level) -> setThreshold
    438:457:void shutdown() -> shutdown
    457:457:void shutdown() -> shutdown
    540:550:void updateChildren(org.apache.log4j.ProvisionNode,org.apache.log4j.Logger) -> updateChildren
    484:518:void updateParents(org.apache.log4j.Logger) -> updateParents
org.apache.log4j.Layout -> org.apache.log4j.Layout:
# {"id":"sourceFile","fileName":"Layout.java"}
    33:34:void <clinit>() -> <clinit>
    0:0:java.lang.String getContentType() -> getContentType
    0:0:java.lang.String getFooter() -> getFooter
    0:0:java.lang.String getHeader() -> getHeader
org.apache.log4j.Level -> org.apache.log4j.Level:
# {"id":"sourceFile","fileName":"Level.java"}
    50:91:void <clinit>() -> <clinit>
    103:103:void <init>(int,java.lang.String,int) -> <init>
    39:39:java.lang.Class class$(java.lang.String) -> class$
    179:184:void readObject(java.io.ObjectInputStream) -> readObject
    210:211:java.lang.Object readResolve() -> readResolve
    114:114:org.apache.log4j.Level toLevel(java.lang.String) -> toLevel
    125:125:org.apache.log4j.Level toLevel(int) -> toLevel
    136:143:org.apache.log4j.Level toLevel(int,org.apache.log4j.Level) -> toLevel
    159:168:org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level) -> toLevel
    194:197:void writeObject(java.io.ObjectOutputStream) -> writeObject
org.apache.log4j.LogManager -> org.apache.log4j.LogManager:
# {"id":"sourceFile","fileName":"LogManager.java"}
    78:125:void <clinit>() -> <clinit>
    215:215:org.apache.log4j.Logger exists(java.lang.String) -> exists
    221:221:java.util.Enumeration getCurrentLoggers() -> getCurrentLoggers
    188:188:org.apache.log4j.Logger getLogger(java.lang.String) -> getLogger
    198:198:org.apache.log4j.Logger getLogger(java.lang.Class) -> getLogger
    209:209:org.apache.log4j.Logger getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory) -> getLogger
    168:168:org.apache.log4j.spi.LoggerRepository getLoggerRepository() -> getLoggerRepository
    178:178:org.apache.log4j.Logger getRootLogger() -> getRootLogger
    233:233:void resetConfiguration() -> resetConfiguration
    152:162:void setRepositorySelector(org.apache.log4j.spi.RepositorySelector,java.lang.Object) -> setRepositorySelector
    227:227:void shutdown() -> shutdown
org.apache.log4j.Logger -> org.apache.log4j.Logger:
# {"id":"sourceFile","fileName":"Logger.java"}
    35:35:void <clinit>() -> <clinit>
    40:40:void <init>(java.lang.String) -> <init>
    30:30:java.lang.Class class$(java.lang.String) -> class$
    104:104:org.apache.log4j.Logger getLogger(java.lang.String) -> getLogger
    117:117:org.apache.log4j.Logger getLogger(java.lang.Class) -> getLogger
    155:155:org.apache.log4j.Logger getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory) -> getLogger
    135:135:org.apache.log4j.Logger getRootLogger() -> getRootLogger
    205:209:boolean isTraceEnabled() -> isTraceEnabled
    166:171:void trace(java.lang.Object) -> trace
    188:193:void trace(java.lang.Object,java.lang.Throwable) -> trace
org.apache.log4j.MDC -> org.apache.log4j.MDC:
# {"id":"sourceFile","fileName":"MDC.java"}
    44:44:void <clinit>() -> <clinit>
    53:56:void <init>() -> <init>
    83:83:java.lang.Object get(java.lang.String) -> get
    123:128:java.lang.Object get0(java.lang.String) -> get0
    103:103:java.util.Hashtable getContext() -> getContext
    148:151:java.util.Hashtable getContext0() -> getContext0
    72:72:void put(java.lang.String,java.lang.Object) -> put
    109:117:void put0(java.lang.String,java.lang.Object) -> put0
    94:94:void remove(java.lang.String) -> remove
    137:140:void remove0(java.lang.String) -> remove0
org.apache.log4j.NDC -> org.apache.log4j.NDC:
# {"id":"sourceFile","fileName":"NDC.java"}
    113:115:void <clinit>() -> <clinit>
    152:154:void clear() -> clear
    175:179:java.util.Stack cloneStack() -> cloneStack
    219:221:java.lang.String get() -> get
    133:134:java.util.Stack getCurrentStack() -> getCurrentStack
    235:239:int getDepth() -> getDepth
    208:208:void inherit(java.util.Stack) -> inherit
    245:283:void lazyRemove() -> lazyRemove
    320:322:java.lang.String peek() -> peek
    300:302:java.lang.String pop() -> pop
    337:350:void push(java.lang.String) -> push
    376:379:void remove() -> remove
    412:414:void setMaxDepth(int) -> setMaxDepth
org.apache.log4j.NDC$DiagnosticContext -> org.apache.log4j.NDC$DiagnosticContext:
# {"id":"sourceFile","fileName":"NDC.java"}
    423:428:void <init>(java.lang.String,org.apache.log4j.NDC$DiagnosticContext) -> <init>
org.apache.log4j.PatternLayout -> org.apache.log4j.PatternLayout:
# {"id":"sourceFile","fileName":"PatternLayout.java"}
    427:427:void <init>() -> <init>
    408:435:void <init>(java.lang.String) -> <init>
    0:0:void activateOptions() -> activateOptions
    485:485:org.apache.log4j.helpers.PatternParser createPatternParser(java.lang.String) -> createPatternParser
    494:506:java.lang.String format(org.apache.log4j.spi.LoggingEvent) -> format
    455:455:java.lang.String getConversionPattern() -> getConversionPattern
    0:0:boolean ignoresThrowable() -> ignoresThrowable
    446:447:void setConversionPattern(java.lang.String) -> setConversionPattern
org.apache.log4j.Priority -> org.apache.log4j.Priority:
# {"id":"sourceFile","fileName":"Priority.java"}
    44:64:void <clinit>() -> <clinit>
    70:73:void <init>() -> <init>
    80:83:void <init>(int,java.lang.String,int) -> <init>
    92:94:boolean equals(java.lang.Object) -> equals
    134:134:org.apache.log4j.Priority[] getAllPossiblePriorities() -> getAllPossiblePriorities
    106:106:int getSyslogEquivalent() -> getSyslogEquivalent
    122:122:boolean isGreaterOrEqual(org.apache.log4j.Priority) -> isGreaterOrEqual
    154:154:int toInt() -> toInt
    163:163:org.apache.log4j.Priority toPriority(java.lang.String) -> toPriority
    172:172:org.apache.log4j.Priority toPriority(int) -> toPriority
    181:181:org.apache.log4j.Priority toPriority(int,org.apache.log4j.Priority) -> toPriority
    190:190:org.apache.log4j.Priority toPriority(java.lang.String,org.apache.log4j.Priority) -> toPriority
    145:145:java.lang.String toString() -> toString
org.apache.log4j.PropertyConfigurator -> org.apache.log4j.PropertyConfigurator:
# {"id":"sourceFile","fileName":"PropertyConfigurator.java"}
    85:91:void <init>() -> <init>
    85:85:java.lang.Class class$(java.lang.String) -> class$
    324:324:void configure(java.lang.String) -> configure
    336:336:void configure(java.net.URL) -> configure
    349:349:void configure(java.util.Properties) -> configure
    364:364:void configureAndWatch(java.lang.String) -> configureAndWatch
    382:384:void configureAndWatch(java.lang.String,long) -> configureAndWatch
    460:468:void configureLoggerFactory(java.util.Properties) -> configureLoggerFactory
    497:510:void configureRootCategory(java.util.Properties,org.apache.log4j.spi.LoggerRepository) -> configureRootCategory
    304:316:void doConfigure(java.lang.String,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    396:422:void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    430:441:void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    552:560:void parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String) -> parseAdditivityForLogger
    620:657:org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String) -> parseAppender
    570:614:void parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String) -> parseCategory
    520:540:void parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository) -> parseCatsAndRenderers
    667:667:org.apache.log4j.Appender registryGet(java.lang.String) -> registryGet
    663:663:void registryPut(org.apache.log4j.Appender) -> registryPut
org.apache.log4j.PropertyWatchdog -> org.apache.log4j.PropertyWatchdog:
# {"id":"sourceFile","fileName":"PropertyConfigurator.java"}
    674:674:void <init>(java.lang.String) -> <init>
    682:682:void doOnChange() -> doOnChange
org.apache.log4j.ProvisionNode -> org.apache.log4j.ProvisionNode:
# {"id":"sourceFile","fileName":"ProvisionNode.java"}
    24:25:void <init>(org.apache.log4j.Logger) -> <init>
org.apache.log4j.RollingCalendar -> org.apache.log4j.RollingCalendar:
# {"id":"sourceFile","fileName":"DailyRollingFileAppender.java"}
    369:372:void <init>() -> <init>
    369:376:void <init>(java.util.TimeZone,java.util.Locale) -> <init>
    388:440:java.util.Date getNextCheckDate(java.util.Date) -> getNextCheckDate
    384:384:long getNextCheckMillis(java.util.Date) -> getNextCheckMillis
    380:380:void setType(int) -> setType
org.apache.log4j.RollingFileAppender -> org.apache.log4j.RollingFileAppender:
# {"id":"sourceFile","fileName":"RollingFileAppender.java"}
    42:54:void <init>() -> <init>
    42:69:void <init>(org.apache.log4j.Layout,java.lang.String,boolean) -> <init>
    42:80:void <init>(org.apache.log4j.Layout,java.lang.String) -> <init>
    88:88:int getMaxBackupIndex() -> getMaxBackupIndex
    99:99:long getMaximumFileSize() -> getMaximumFileSize
    121:159:void rollOver() -> rollOver
    167:172:void setFile(java.lang.String,boolean,boolean,int) -> setFile
    186:186:void setMaxBackupIndex(int) -> setMaxBackupIndex
    220:220:void setMaxFileSize(java.lang.String) -> setMaxFileSize
    203:203:void setMaximumFileSize(long) -> setMaximumFileSize
    225:225:void setQWForFiles(java.io.Writer) -> setQWForFiles
    236:239:void subAppend(org.apache.log4j.spi.LoggingEvent) -> subAppend
org.apache.log4j.SimpleLayout -> org.apache.log4j.SimpleLayout:
# {"id":"sourceFile","fileName":"SimpleLayout.java"}
    37:39:void <init>() -> <init>
    0:0:void activateOptions() -> activateOptions
    59:64:java.lang.String format(org.apache.log4j.spi.LoggingEvent) -> format
    0:0:boolean ignoresThrowable() -> ignoresThrowable
org.apache.log4j.TTCCLayout -> org.apache.log4j.TTCCLayout:
# {"id":"sourceFile","fileName":"TTCCLayout.java"}
    76:91:void <init>() -> <init>
    76:104:void <init>(java.lang.String) -> <init>
    175:203:java.lang.String format(org.apache.log4j.spi.LoggingEvent) -> format
    139:139:boolean getCategoryPrefixing() -> getCategoryPrefixing
    157:157:boolean getContextPrinting() -> getContextPrinting
    122:122:boolean getThreadPrinting() -> getThreadPrinting
    0:0:boolean ignoresThrowable() -> ignoresThrowable
    131:131:void setCategoryPrefixing(boolean) -> setCategoryPrefixing
    149:149:void setContextPrinting(boolean) -> setContextPrinting
    114:114:void setThreadPrinting(boolean) -> setThreadPrinting
org.apache.log4j.WriterAppender -> org.apache.log4j.WriterAppender:
# {"id":"sourceFile","fileName":"WriterAppender.java"}
    54:73:void <init>() -> <init>
    82:82:void <init>(org.apache.log4j.Layout,java.io.OutputStream) -> <init>
    54:94:void <init>(org.apache.log4j.Layout,java.io.Writer) -> <init>
    0:0:void activateOptions() -> activateOptions
    156:159:void append(org.apache.log4j.spi.LoggingEvent) -> append
    170:182:boolean checkEntryConditions() -> checkEntryConditions
    200:205:void close() -> close
    211:217:void closeWriter() -> closeWriter
    232:242:java.io.OutputStreamWriter createWriter(java.io.OutputStream) -> createWriter
    248:248:java.lang.String getEncoding() -> getEncoding
    121:121:boolean getImmediateFlush() -> getImmediateFlush
    0:0:boolean requiresLayout() -> requiresLayout
    337:338:void reset() -> reset
    252:252:void setEncoding(java.lang.String) -> setEncoding
    263:270:void setErrorHandler(org.apache.log4j.spi.ErrorHandler) -> setErrorHandler
    113:113:void setImmediateFlush(boolean) -> setImmediateFlush
    285:289:void setWriter(java.io.Writer) -> setWriter
    301:315:void subAppend(org.apache.log4j.spi.LoggingEvent) -> subAppend
    348:352:void writeFooter() -> writeFooter
    362:365:void writeHeader() -> writeHeader
org.apache.log4j.chainsaw.ControlPanel -> org.apache.log4j.chainsaw.ControlPanel:
# {"id":"sourceFile","fileName":"ControlPanel.java"}
    41:41:void <clinit>() -> <clinit>
    49:219:void <init>(org.apache.log4j.chainsaw.MyTableModel) -> <init>
    39:39:java.lang.Class class$(java.lang.String) -> class$
org.apache.log4j.chainsaw.ControlPanel$1 -> org.apache.log4j.chainsaw.ControlPanel$1:
# {"id":"sourceFile","fileName":"ControlPanel.java"}
    110:110:void <init>(org.apache.log4j.chainsaw.ControlPanel,org.apache.log4j.chainsaw.MyTableModel,javax.swing.JComboBox) -> <init>
    111:111:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.chainsaw.ControlPanel$2 -> org.apache.log4j.chainsaw.ControlPanel$2:
# {"id":"sourceFile","fileName":"ControlPanel.java"}
    127:127:void <init>(org.apache.log4j.chainsaw.ControlPanel,org.apache.log4j.chainsaw.MyTableModel,javax.swing.JTextField) -> <init>
    128:128:void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
    122:122:void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    125:125:void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
org.apache.log4j.chainsaw.ControlPanel$3 -> org.apache.log4j.chainsaw.ControlPanel$3:
# {"id":"sourceFile","fileName":"ControlPanel.java"}
    143:143:void <init>(org.apache.log4j.chainsaw.ControlPanel,org.apache.log4j.chainsaw.MyTableModel,javax.swing.JTextField) -> <init>
    144:144:void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
    138:138:void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    141:141:void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
org.apache.log4j.chainsaw.ControlPanel$4 -> org.apache.log4j.chainsaw.ControlPanel$4:
# {"id":"sourceFile","fileName":"ControlPanel.java"}
    159:159:void <init>(org.apache.log4j.chainsaw.ControlPanel,org.apache.log4j.chainsaw.MyTableModel,javax.swing.JTextField) -> <init>
    160:160:void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
    154:154:void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    157:157:void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
org.apache.log4j.chainsaw.ControlPanel$5 -> org.apache.log4j.chainsaw.ControlPanel$5:
# {"id":"sourceFile","fileName":"ControlPanel.java"}
    175:175:void <init>(org.apache.log4j.chainsaw.ControlPanel,org.apache.log4j.chainsaw.MyTableModel,javax.swing.JTextField) -> <init>
    176:176:void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
    170:170:void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    173:173:void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
org.apache.log4j.chainsaw.ControlPanel$6 -> org.apache.log4j.chainsaw.ControlPanel$6:
# {"id":"sourceFile","fileName":"ControlPanel.java"}
    201:201:void <init>(org.apache.log4j.chainsaw.ControlPanel,org.apache.log4j.chainsaw.MyTableModel) -> <init>
    202:202:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.chainsaw.ControlPanel$7 -> org.apache.log4j.chainsaw.ControlPanel$7:
# {"id":"sourceFile","fileName":"ControlPanel.java"}
    212:212:void <init>(org.apache.log4j.chainsaw.ControlPanel,org.apache.log4j.chainsaw.MyTableModel,javax.swing.JButton) -> <init>
    213:214:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.chainsaw.DetailPanel -> org.apache.log4j.chainsaw.DetailPanel:
# {"id":"sourceFile","fileName":"DetailPanel.java"}
    41:45:void <clinit>() -> <clinit>
    68:79:void <init>(javax.swing.JTable,org.apache.log4j.chainsaw.MyTableModel) -> <init>
    36:36:java.lang.Class class$(java.lang.String) -> class$
    146:167:java.lang.String escape(java.lang.String) -> escape
    122:132:java.lang.String getThrowableStrRep(org.apache.log4j.chainsaw.EventDetails) -> getThrowableStrRep
    85:107:void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
org.apache.log4j.chainsaw.EventDetails -> org.apache.log4j.chainsaw.EventDetails:
# {"id":"sourceFile","fileName":"EventDetails.java"}
    66:74:void <init>(long,org.apache.log4j.Priority,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String) -> <init>
    84:84:void <init>(org.apache.log4j.spi.LoggingEvent) -> <init>
    107:107:java.lang.String getCategoryName() -> getCategoryName
    127:127:java.lang.String getLocationDetails() -> getLocationDetails
    122:122:java.lang.String getMessage() -> getMessage
    112:112:java.lang.String getNDC() -> getNDC
    102:102:org.apache.log4j.Priority getPriority() -> getPriority
    117:117:java.lang.String getThreadName() -> getThreadName
    132:132:java.lang.String[] getThrowableStrRep() -> getThrowableStrRep
    97:97:long getTimeStamp() -> getTimeStamp
org.apache.log4j.chainsaw.ExitAction -> org.apache.log4j.chainsaw.ExitAction:
# {"id":"sourceFile","fileName":"ExitAction.java"}
    32:34:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    44:45:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    28:28:java.lang.Class class$(java.lang.String) -> class$
org.apache.log4j.chainsaw.LoadXMLAction -> org.apache.log4j.chainsaw.LoadXMLAction:
# {"id":"sourceFile","fileName":"LoadXMLAction.java"}
    43:43:void <clinit>() -> <clinit>
    52:78:void <init>(javax.swing.JFrame,org.apache.log4j.chainsaw.MyTableModel) -> <init>
    86:100:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    39:39:java.lang.Class class$(java.lang.String) -> class$
    120:136:int loadFile(java.lang.String) -> loadFile
org.apache.log4j.chainsaw.LoggingReceiver -> org.apache.log4j.chainsaw.LoggingReceiver:
# {"id":"sourceFile","fileName":"LoggingReceiver.java"}
    35:35:void <clinit>() -> <clinit>
    97:100:void <init>(org.apache.log4j.chainsaw.MyTableModel,int) -> <init>
    33:33:org.apache.log4j.Logger access$000() -> access$000
    33:33:org.apache.log4j.chainsaw.MyTableModel access$100(org.apache.log4j.chainsaw.LoggingReceiver) -> access$100
    33:33:java.lang.Class class$(java.lang.String) -> class$
    105:117:void run() -> run
org.apache.log4j.chainsaw.LoggingReceiver$Slurper -> org.apache.log4j.chainsaw.LoggingReceiver$Slurper:
# {"id":"sourceFile","fileName":"LoggingReceiver.java"}
    52:53:void <init>(org.apache.log4j.chainsaw.LoggingReceiver,java.net.Socket) -> <init>
    58:79:void run() -> run
org.apache.log4j.chainsaw.Main -> org.apache.log4j.chainsaw.Main:
# {"id":"sourceFile","fileName":"Main.java"}
    53:53:void <clinit>() -> <clinit>
    60:124:void <init>() -> <init>
    43:43:java.lang.Class class$(java.lang.String) -> class$
    173:179:void initLog4J() -> initLog4J
    188:189:void main(java.lang.String[]) -> main
    134:161:void setupReceiver(org.apache.log4j.chainsaw.MyTableModel) -> setupReceiver
org.apache.log4j.chainsaw.Main$1 -> org.apache.log4j.chainsaw.Main$1:
# {"id":"sourceFile","fileName":"Main.java"}
    116:116:void <init>(org.apache.log4j.chainsaw.Main) -> <init>
    117:117:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.apache.log4j.chainsaw.MyTableModel -> org.apache.log4j.chainsaw.MyTableModel:
# {"id":"sourceFile","fileName":"MyTableModel.java"}
    41:118:void <clinit>() -> <clinit>
    122:151:void <init>() -> <init>
    36:36:java.lang.Object access$000(org.apache.log4j.chainsaw.MyTableModel) -> access$000
    36:36:boolean access$100(org.apache.log4j.chainsaw.MyTableModel) -> access$100
    36:36:java.util.List access$200(org.apache.log4j.chainsaw.MyTableModel) -> access$200
    36:36:java.util.SortedSet access$300(org.apache.log4j.chainsaw.MyTableModel) -> access$300
    36:36:boolean access$400(org.apache.log4j.chainsaw.MyTableModel,org.apache.log4j.chainsaw.EventDetails) -> access$400
    36:36:void access$500(org.apache.log4j.chainsaw.MyTableModel,boolean) -> access$500
    276:278:void addEvent(org.apache.log4j.chainsaw.EventDetails) -> addEvent
    36:36:java.lang.Class class$(java.lang.String) -> class$
    285:290:void clear() -> clear
    181:181:java.lang.Class getColumnClass(int) -> getColumnClass
    169:169:int getColumnCount() -> getColumnCount
    175:175:java.lang.String getColumnName(int) -> getColumnName
    314:316:org.apache.log4j.chainsaw.EventDetails getEventDetails(int) -> getEventDetails
    161:163:int getRowCount() -> getRowCount
    186:202:java.lang.Object getValueAt(int,int) -> getValueAt
    302:304:boolean isPaused() -> isPaused
    371:383:boolean matchFilter(org.apache.log4j.chainsaw.EventDetails) -> matchFilter
    264:267:void setCategoryFilter(java.lang.String) -> setCategoryFilter
    240:243:void setMessageFilter(java.lang.String) -> setMessageFilter
    252:255:void setNDCFilter(java.lang.String) -> setNDCFilter
    216:219:void setPriorityFilter(org.apache.log4j.Priority) -> setPriorityFilter
    228:231:void setThreadFilter(java.lang.String) -> setThreadFilter
    295:297:void toggle() -> toggle
    330:360:void updateFilteredEvents(boolean) -> updateFilteredEvents
org.apache.log4j.chainsaw.MyTableModel$1 -> org.apache.log4j.chainsaw.MyTableModel$1:
# {"id":"sourceFile","fileName":"MyTableModel.java"}
    57:60:int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.log4j.chainsaw.MyTableModel$Processor -> org.apache.log4j.chainsaw.MyTableModel$Processor:
# {"id":"sourceFile","fileName":"MyTableModel.java"}
    72:72:void <init>(org.apache.log4j.chainsaw.MyTableModel) -> <init>
    72:72:void <init>(org.apache.log4j.chainsaw.MyTableModel,org.apache.log4j.chainsaw.MyTableModel$1) -> <init>
    79:103:void run() -> run
    103:103:void run() -> run
org.apache.log4j.chainsaw.XMLFileHandler -> org.apache.log4j.chainsaw.XMLFileHandler:
# {"id":"sourceFile","fileName":"XMLFileHandler.java"}
    67:75:void <init>(org.apache.log4j.chainsaw.MyTableModel) -> <init>
    147:155:void addEvent() -> addEvent
    87:87:void characters(char[],int,int) -> characters
    95:109:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    138:138:int getNumEvents() -> getNumEvents
    160:167:void resetData() -> resetData
    82:82:void startDocument() -> startDocument
    121:129:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
org.apache.log4j.config.PropertyGetter -> org.apache.log4j.config.PropertyGetter:
# {"id":"sourceFile","fileName":"PropertyGetter.java"}
    31:31:void <clinit>() -> <clinit>
    47:50:void <init>(java.lang.Object) -> <init>
    35:35:java.lang.Class class$(java.lang.String) -> class$
    57:59:void getProperties(java.lang.Object,org.apache.log4j.config.PropertyGetter$PropertyCallback,java.lang.String) -> getProperties
    65:80:void getProperties(org.apache.log4j.config.PropertyGetter$PropertyCallback,java.lang.String) -> getProperties
    87:87:boolean isHandledType(java.lang.Class) -> isHandledType
org.apache.log4j.config.PropertyGetter$PropertyCallback -> org.apache.log4j.config.PropertyGetter$PropertyCallback:
# {"id":"sourceFile","fileName":"PropertyGetter.java"}
org.apache.log4j.config.PropertyPrinter -> org.apache.log4j.config.PropertyPrinter:
# {"id":"sourceFile","fileName":"PropertyPrinter.java"}
    39:39:void <init>(java.io.PrintWriter) -> <init>
    31:48:void <init>(java.io.PrintWriter,boolean) -> <init>
    140:144:java.lang.String capitalize(java.lang.String) -> capitalize
    130:136:void foundProperty(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object) -> foundProperty
    53:53:java.lang.String genAppName() -> genAppName
    62:65:boolean isGenAppName(java.lang.String) -> isGenAppName
    152:152:void main(java.lang.String[]) -> main
    78:82:void print(java.io.PrintWriter) -> print
    88:118:void printOptions(java.io.PrintWriter,org.apache.log4j.Logger) -> printOptions
    124:125:void printOptions(java.io.PrintWriter,java.lang.Object,java.lang.String) -> printOptions
org.apache.log4j.config.PropertySetter -> org.apache.log4j.config.PropertySetter:
# {"id":"sourceFile","fileName":"PropertySetter.java"}
    64:65:void <init>(java.lang.Object) -> <init>
    255:256:void activate() -> activate
    53:53:java.lang.Class class$(java.lang.String) -> class$
    221:235:java.lang.Object convertArg(java.lang.String,java.lang.Class) -> convertArg
    243:247:java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String) -> getPropertyDescriptor
    75:79:void introspect() -> introspect
    96:96:void setProperties(java.lang.Object,java.util.Properties,java.lang.String) -> setProperties
    108:132:void setProperties(java.util.Properties,java.lang.String) -> setProperties
    154:166:void setProperty(java.lang.String,java.lang.String) -> setProperty
    183:207:void setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String) -> setProperty
org.apache.log4j.config.PropertySetterException -> org.apache.log4j.config.PropertySetterException:
# {"id":"sourceFile","fileName":"PropertySetterException.java"}
    31:31:void <init>(java.lang.String) -> <init>
    37:38:void <init>(java.lang.Throwable) -> <init>
    46:48:java.lang.String getMessage() -> getMessage
org.apache.log4j.helpers.AbsoluteTimeDateFormat -> org.apache.log4j.helpers.AbsoluteTimeDateFormat:
# {"id":"sourceFile","fileName":"AbsoluteTimeDateFormat.java"}
    69:69:void <clinit>() -> <clinit>
    59:60:void <init>() -> <init>
    64:65:void <init>(java.util.TimeZone) -> <init>
    83:132:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    0:0:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.log4j.helpers.AppenderAttachableImpl -> org.apache.log4j.helpers.AppenderAttachableImpl:
# {"id":"sourceFile","fileName":"AppenderAttachableImpl.java"}
    47:51:void addAppender(org.apache.log4j.Appender) -> addAppender
    61:65:int appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent) -> appendLoopOnAppenders
    80:83:java.util.Enumeration getAllAppenders() -> getAllAppenders
    95:102:org.apache.log4j.Appender getAppender(java.lang.String) -> getAppender
    116:122:boolean isAttached(org.apache.log4j.Appender) -> isAttached
    136:143:void removeAllAppenders() -> removeAllAppenders
    153:155:void removeAppender(org.apache.log4j.Appender) -> removeAppender
    165:169:void removeAppender(java.lang.String) -> removeAppender
org.apache.log4j.helpers.BoundedFIFO -> org.apache.log4j.helpers.BoundedFIFO:
# {"id":"sourceFile","fileName":"BoundedFIFO.java"}
    33:48:void <init>(int) -> <init>
    56:65:org.apache.log4j.spi.LoggingEvent get() -> get
    89:89:int getMaxSize() -> getMaxSize
    97:97:boolean isFull() -> isFull
    107:107:int length() -> length
    0:0:int min(int,int) -> min
    75:80:void put(org.apache.log4j.spi.LoggingEvent) -> put
    125:159:void resize(int) -> resize
    168:168:boolean wasEmpty() -> wasEmpty
    177:177:boolean wasFull() -> wasFull
org.apache.log4j.helpers.CountingQuietWriter -> org.apache.log4j.helpers.CountingQuietWriter:
# {"id":"sourceFile","fileName":"CountingQuietWriter.java"}
    38:38:void <init>(java.io.Writer,org.apache.log4j.spi.ErrorHandler) -> <init>
    54:54:long getCount() -> getCount
    59:59:void setCount(long) -> setCount
    44:48:void write(java.lang.String) -> write
org.apache.log4j.helpers.CyclicBuffer -> org.apache.log4j.helpers.CyclicBuffer:
# {"id":"sourceFile","fileName":"CyclicBuffer.java"}
    48:57:void <init>(int) -> <init>
    66:73:void add(org.apache.log4j.spi.LoggingEvent) -> add
    86:89:org.apache.log4j.spi.LoggingEvent get(int) -> get
    104:109:org.apache.log4j.spi.LoggingEvent get() -> get
    94:94:int getMaxSize() -> getMaxSize
    121:121:int length() -> length
    132:155:void resize(int) -> resize
org.apache.log4j.helpers.DateLayout -> org.apache.log4j.helpers.DateLayout:
# {"id":"sourceFile","fileName":"DateLayout.java"}
    39:74:void <init>() -> <init>
    139:141:void activateOptions() -> activateOptions
    147:150:void dateFormat(java.lang.StringBuffer,org.apache.log4j.spi.LoggingEvent) -> dateFormat
    117:117:java.lang.String getDateFormat() -> getDateFormat
    82:82:java.lang.String[] getOptionStrings() -> getOptionStrings
    134:134:java.lang.String getTimeZone() -> getTimeZone
    107:109:void setDateFormat(java.lang.String) -> setDateFormat
    160:161:void setDateFormat(java.text.DateFormat,java.util.TimeZone) -> setDateFormat
    181:200:void setDateFormat(java.lang.String,java.util.TimeZone) -> setDateFormat
    91:94:void setOption(java.lang.String,java.lang.String) -> setOption
    126:126:void setTimeZone(java.lang.String) -> setTimeZone
org.apache.log4j.helpers.DateTimeDateFormat -> org.apache.log4j.helpers.DateTimeDateFormat:
# {"id":"sourceFile","fileName":"DateTimeDateFormat.java"}
    39:40:void <init>() -> <init>
    45:46:void <init>(java.util.TimeZone) -> <init>
    59:73:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    0:0:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.log4j.helpers.FileWatchdog -> org.apache.log4j.helpers.FileWatchdog:
# {"id":"sourceFile","fileName":"FileWatchdog.java"}
    45:57:void <init>(java.lang.String) -> <init>
    76:94:void checkAndConfigure() -> checkAndConfigure
    101:107:void run() -> run
    65:65:void setDelay(long) -> setDelay
org.apache.log4j.helpers.FormattingInfo -> org.apache.log4j.helpers.FormattingInfo:
# {"id":"sourceFile","fileName":"FormattingInfo.java"}
    29:32:void <init>() -> <init>
    41:41:void dump() -> dump
    35:37:void reset() -> reset
org.apache.log4j.helpers.ISO8601DateFormat -> org.apache.log4j.helpers.ISO8601DateFormat:
# {"id":"sourceFile","fileName":"ISO8601DateFormat.java"}
    53:53:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    49:49:void <init>(java.util.TimeZone) -> <init>
    65:141:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    0:0:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.log4j.helpers.Loader -> org.apache.log4j.helpers.Loader:
# {"id":"sourceFile","fileName":"Loader.java"}
    41:52:void <clinit>() -> <clinit>
    31:31:java.lang.Class class$(java.lang.String) -> class$
    64:64:java.net.URL getResource(java.lang.String,java.lang.Class) -> getResource
    91:124:java.net.URL getResource(java.lang.String) -> getResource
    148:154:java.lang.ClassLoader getTCL() -> getTCL
    133:133:boolean isJava1() -> isJava1
    169:178:java.lang.Class loadClass(java.lang.String) -> loadClass
org.apache.log4j.helpers.LogLog -> org.apache.log4j.helpers.LogLog:
# {"id":"sourceFile","fileName":"LogLog.java"}
    71:78:void <clinit>() -> <clinit>
    98:99:void debug(java.lang.String) -> debug
    110:113:void debug(java.lang.String,java.lang.Throwable) -> debug
    126:128:void error(java.lang.String) -> error
    139:144:void error(java.lang.String,java.lang.Throwable) -> error
    88:88:void setInternalDebugging(boolean) -> setInternalDebugging
    157:157:void setQuietMode(boolean) -> setQuietMode
    167:170:void warn(java.lang.String) -> warn
    180:185:void warn(java.lang.String,java.lang.Throwable) -> warn
org.apache.log4j.helpers.NullEnumeration -> org.apache.log4j.helpers.NullEnumeration:
# {"id":"sourceFile","fileName":"NullEnumeration.java"}
    30:30:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    37:37:org.apache.log4j.helpers.NullEnumeration getInstance() -> getInstance
    0:0:boolean hasMoreElements() -> hasMoreElements
    47:47:java.lang.Object nextElement() -> nextElement
org.apache.log4j.helpers.OnlyOnceErrorHandler -> org.apache.log4j.helpers.OnlyOnceErrorHandler:
# {"id":"sourceFile","fileName":"OnlyOnceErrorHandler.java"}
    37:43:void <init>() -> <init>
    0:0:void activateOptions() -> activateOptions
    67:67:void error(java.lang.String,java.lang.Exception,int) -> error
    76:78:void error(java.lang.String,java.lang.Exception,int,org.apache.log4j.spi.LoggingEvent) -> error
    89:91:void error(java.lang.String) -> error
    0:0:void setAppender(org.apache.log4j.Appender) -> setAppender
    0:0:void setBackupAppender(org.apache.log4j.Appender) -> setBackupAppender
    0:0:void setLogger(org.apache.log4j.Logger) -> setLogger
org.apache.log4j.helpers.OptionConverter -> org.apache.log4j.helpers.OptionConverter:
# {"id":"sourceFile","fileName":"OptionConverter.java"}
    0:0:void <clinit>() -> <clinit>
    37:37:java.lang.Class class$(java.lang.String) -> class$
    50:54:java.lang.String[] concatanateArrays(java.lang.String[],java.lang.String[]) -> concatanateArrays
    63:82:java.lang.String convertSpecialChars(java.lang.String) -> convertSpecialChars
    291:298:java.lang.String findAndSubst(java.lang.String,java.util.Properties) -> findAndSubst
    100:102:java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> getSystemProperty
    319:331:java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object) -> instantiateByClassName
    114:120:java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object) -> instantiateByKey
    451:470:void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository) -> selectAndConfigure
    378:419:java.lang.String substVars(java.lang.String,java.util.Properties) -> substVars
    136:139:boolean toBoolean(java.lang.String,boolean) -> toBoolean
    254:276:long toFileSize(java.lang.String,long) -> toFileSize
    148:154:int toInt(java.lang.String,int) -> toInt
    186:242:org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level) -> toLevel
org.apache.log4j.helpers.PatternConverter -> org.apache.log4j.helpers.PatternConverter:
# {"id":"sourceFile","fileName":"PatternConverter.java"}
    90:90:void <clinit>() -> <clinit>
    37:42:void <init>() -> <init>
    37:48:void <init>(org.apache.log4j.helpers.FormattingInfo) -> <init>
    64:87:void format(java.lang.StringBuffer,org.apache.log4j.spi.LoggingEvent) -> format
    100:106:void spacePad(java.lang.StringBuffer,int) -> spacePad
org.apache.log4j.helpers.PatternParser -> org.apache.log4j.helpers.PatternParser:
# {"id":"sourceFile","fileName":"PatternParser.java"}
    69:81:void <init>(java.lang.String) -> <init>
    370:376:void addConverter(org.apache.log4j.helpers.PatternConverter) -> addConverter
    86:90:void addToList(org.apache.log4j.helpers.PatternConverter) -> addToList
    242:242:java.lang.Class class$(java.lang.String) -> class$
    96:100:java.lang.String extractOption() -> extractOption
    113:125:int extractPrecisionOption() -> extractPrecisionOption
    235:365:void finalizeConverter(char) -> finalizeConverter
    134:227:org.apache.log4j.helpers.PatternConverter parse() -> parse
org.apache.log4j.helpers.PatternParser$BasicPatternConverter -> org.apache.log4j.helpers.PatternParser$BasicPatternConverter:
# {"id":"sourceFile","fileName":"PatternParser.java"}
    387:388:void <init>(org.apache.log4j.helpers.FormattingInfo,int) -> <init>
    393:403:java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> convert
org.apache.log4j.helpers.PatternParser$CategoryPatternConverter -> org.apache.log4j.helpers.PatternParser$CategoryPatternConverter:
# {"id":"sourceFile","fileName":"PatternParser.java"}
    544:545:void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int) -> <init>
    549:549:java.lang.String getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent) -> getFullyQualifiedName
org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter -> org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter:
# {"id":"sourceFile","fileName":"PatternParser.java"}
    533:534:void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int) -> <init>
    538:538:java.lang.String getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent) -> getFullyQualifiedName
org.apache.log4j.helpers.PatternParser$DatePatternConverter -> org.apache.log4j.helpers.PatternParser$DatePatternConverter:
# {"id":"sourceFile","fileName":"PatternParser.java"}
    434:436:void <init>(org.apache.log4j.helpers.FormattingInfo,java.text.DateFormat) -> <init>
    441:447:java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> convert
org.apache.log4j.helpers.PatternParser$LiteralPatternConverter -> org.apache.log4j.helpers.PatternParser$LiteralPatternConverter:
# {"id":"sourceFile","fileName":"PatternParser.java"}
    413:414:void <init>(java.lang.String) -> <init>
    425:425:java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> convert
    420:420:void format(java.lang.StringBuffer,org.apache.log4j.spi.LoggingEvent) -> format
org.apache.log4j.helpers.PatternParser$LocationPatternConverter -> org.apache.log4j.helpers.PatternParser$LocationPatternConverter:
# {"id":"sourceFile","fileName":"PatternParser.java"}
    476:478:void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int) -> <init>
    483:492:java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> convert
org.apache.log4j.helpers.PatternParser$MDCPatternConverter -> org.apache.log4j.helpers.PatternParser$MDCPatternConverter:
# {"id":"sourceFile","fileName":"PatternParser.java"}
    457:458:void <init>(org.apache.log4j.helpers.FormattingInfo,java.lang.String) -> <init>
    463:467:java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> convert
org.apache.log4j.helpers.PatternParser$NamedPatternConverter -> org.apache.log4j.helpers.PatternParser$NamedPatternConverter:
# {"id":"sourceFile","fileName":"PatternParser.java"}
    502:503:void <init>(org.apache.log4j.helpers.FormattingInfo,int) -> <init>
    511:526:java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> convert
org.apache.log4j.helpers.QuietWriter -> org.apache.log4j.helpers.QuietWriter:
# {"id":"sourceFile","fileName":"QuietWriter.java"}
    40:41:void <init>(java.io.Writer,org.apache.log4j.spi.ErrorHandler) -> <init>
    57:59:void flush() -> flush
    69:71:void setErrorHandler(org.apache.log4j.spi.ErrorHandler) -> setErrorHandler
    47:49:void write(java.lang.String) -> write
org.apache.log4j.helpers.RelativeTimeDateFormat -> org.apache.log4j.helpers.RelativeTimeDateFormat:
# {"id":"sourceFile","fileName":"RelativeTimeDateFormat.java"}
    38:39:void <init>() -> <init>
    52:52:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    0:0:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.log4j.helpers.SyslogQuietWriter -> org.apache.log4j.helpers.SyslogQuietWriter:
# {"id":"sourceFile","fileName":"SyslogQuietWriter.java"}
    37:38:void <init>(java.io.Writer,int,org.apache.log4j.spi.ErrorHandler) -> <init>
    43:43:void setLevel(int) -> setLevel
    48:48:void setSyslogFacility(int) -> setSyslogFacility
    53:53:void write(java.lang.String) -> write
org.apache.log4j.helpers.SyslogWriter -> org.apache.log4j.helpers.SyslogWriter:
# {"id":"sourceFile","fileName":"SyslogWriter.java"}
    38:105:void <init>(java.lang.String) -> <init>
    0:0:void close() -> close
    0:0:void flush() -> flush
    114:114:void write(char[],int,int) -> write
    119:124:void write(java.lang.String) -> write
org.apache.log4j.helpers.ThreadLocalMap -> org.apache.log4j.helpers.ThreadLocalMap:
# {"id":"sourceFile","fileName":"ThreadLocalMap.java"}
    29:29:void <init>() -> <init>
    34:36:java.lang.Object childValue(java.lang.Object) -> childValue
org.apache.log4j.helpers.Transform -> org.apache.log4j.helpers.Transform:
# {"id":"sourceFile","fileName":"Transform.java"}
    0:0:void <clinit>() -> <clinit>
    84:106:void appendEscapingCDATA(java.lang.StringBuffer,java.lang.String) -> appendEscapingCDATA
    49:70:java.lang.String escapeTags(java.lang.String) -> escapeTags
org.apache.log4j.jdbc.JDBCAppender -> org.apache.log4j.jdbc.JDBCAppender:
# {"id":"sourceFile","fileName":"JDBCAppender.java"}
    85:136:void <init>() -> <init>
    143:146:void append(org.apache.log4j.spi.LoggingEvent) -> append
    225:233:void close() -> close
    0:0:void closeConnection(java.sql.Connection) -> closeConnection
    175:185:void execute(java.lang.String) -> execute
    269:269:void finalize() -> finalize
    245:263:void flushBuffer() -> flushBuffer
    341:341:int getBufferSize() -> getBufferSize
    208:216:java.sql.Connection getConnection() -> getConnection
    158:158:java.lang.String getLogStatement(org.apache.log4j.spi.LoggingEvent) -> getLogStatement
    336:336:java.lang.String getPassword() -> getPassword
    299:299:java.lang.String getSql() -> getSql
    331:331:java.lang.String getURL() -> getURL
    326:326:java.lang.String getUser() -> getUser
    0:0:boolean requiresLayout() -> requiresLayout
    319:321:void setBufferSize(int) -> setBufferSize
    351:353:void setDriver(java.lang.String) -> setDriver
    314:314:void setPassword(java.lang.String) -> setPassword
    285:290:void setSql(java.lang.String) -> setSql
    309:309:void setURL(java.lang.String) -> setURL
    304:304:void setUser(java.lang.String) -> setUser
org.apache.log4j.jmx.AbstractDynamicMBean -> org.apache.log4j.jmx.AbstractDynamicMBean:
    0:0:javax.management.AttributeList getAttributes(java.lang.String[]) -> getAttributes
    0:0:void postDeregister() -> postDeregister
    0:0:void postRegister(java.lang.Boolean) -> postRegister
    0:0:void preDeregister() -> preDeregister
    0:0:javax.management.ObjectName preRegister(javax.management.MBeanServer,javax.management.ObjectName) -> preRegister
    0:0:javax.management.AttributeList setAttributes(javax.management.AttributeList) -> setAttributes
org.apache.log4j.jmx.Agent -> org.apache.log4j.jmx.Agent:
    0:0:void <clinit>() -> <clinit>
    0:0:java.lang.Class class$(java.lang.String) -> class$
    0:0:void start() -> start
org.apache.log4j.jmx.AppenderDynamicMBean -> org.apache.log4j.jmx.AppenderDynamicMBean:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(org.apache.log4j.Appender) -> <init>
    0:0:void buildDynamicMBeanInfo() -> buildDynamicMBeanInfo
    0:0:java.lang.Class class$(java.lang.String) -> class$
    0:0:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    0:0:org.apache.log4j.Logger getLogger() -> getLogger
    0:0:javax.management.MBeanInfo getMBeanInfo() -> getMBeanInfo
    0:0:java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[]) -> invoke
    0:0:boolean isSupportedType(java.lang.Class) -> isSupportedType
    0:0:javax.management.ObjectName preRegister(javax.management.MBeanServer,javax.management.ObjectName) -> preRegister
    0:0:void registerLayoutMBean(org.apache.log4j.Layout) -> registerLayoutMBean
    0:0:void setAttribute(javax.management.Attribute) -> setAttribute
org.apache.log4j.jmx.HierarchyDynamicMBean -> org.apache.log4j.jmx.HierarchyDynamicMBean:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:void addAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> addAppenderEvent
    0:0:javax.management.ObjectName addLoggerMBean(java.lang.String) -> addLoggerMBean
    0:0:javax.management.ObjectName addLoggerMBean(org.apache.log4j.Logger) -> addLoggerMBean
    0:0:void addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object) -> addNotificationListener
    0:0:void buildDynamicMBeanInfo() -> buildDynamicMBeanInfo
    0:0:java.lang.Class class$(java.lang.String) -> class$
    0:0:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    0:0:org.apache.log4j.Logger getLogger() -> getLogger
    0:0:javax.management.MBeanInfo getMBeanInfo() -> getMBeanInfo
    0:0:javax.management.MBeanNotificationInfo[] getNotificationInfo() -> getNotificationInfo
    0:0:java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[]) -> invoke
    0:0:void postRegister(java.lang.Boolean) -> postRegister
    0:0:void removeAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> removeAppenderEvent
    0:0:void removeNotificationListener(javax.management.NotificationListener) -> removeNotificationListener
    0:0:void setAttribute(javax.management.Attribute) -> setAttribute
org.apache.log4j.jmx.LayoutDynamicMBean -> org.apache.log4j.jmx.LayoutDynamicMBean:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(org.apache.log4j.Layout) -> <init>
    0:0:void buildDynamicMBeanInfo() -> buildDynamicMBeanInfo
    0:0:java.lang.Class class$(java.lang.String) -> class$
    0:0:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    0:0:org.apache.log4j.Logger getLogger() -> getLogger
    0:0:javax.management.MBeanInfo getMBeanInfo() -> getMBeanInfo
    0:0:java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[]) -> invoke
    0:0:boolean isSupportedType(java.lang.Class) -> isSupportedType
    0:0:void setAttribute(javax.management.Attribute) -> setAttribute
org.apache.log4j.jmx.LoggerDynamicMBean -> org.apache.log4j.jmx.LoggerDynamicMBean:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(org.apache.log4j.Logger) -> <init>
    0:0:void addAppender(java.lang.String,java.lang.String) -> addAppender
    0:0:void appenderMBeanRegistration() -> appenderMBeanRegistration
    0:0:void buildDynamicMBeanInfo() -> buildDynamicMBeanInfo
    0:0:java.lang.Class class$(java.lang.String) -> class$
    0:0:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    0:0:org.apache.log4j.Logger getLogger() -> getLogger
    0:0:javax.management.MBeanInfo getMBeanInfo() -> getMBeanInfo
    0:0:void handleNotification(javax.management.Notification,java.lang.Object) -> handleNotification
    0:0:java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[]) -> invoke
    0:0:void postRegister(java.lang.Boolean) -> postRegister
    0:0:void registerAppenderMBean(org.apache.log4j.Appender) -> registerAppenderMBean
    0:0:void setAttribute(javax.management.Attribute) -> setAttribute
org.apache.log4j.jmx.MethodUnion -> org.apache.log4j.jmx.MethodUnion:
    0:0:void <init>(java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
org.apache.log4j.lf5.AppenderFinalizer -> org.apache.log4j.lf5.AppenderFinalizer:
# {"id":"sourceFile","fileName":"AppenderFinalizer.java"}
    50:51:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    65:66:void finalize() -> finalize
org.apache.log4j.lf5.DefaultLF5Configurator -> org.apache.log4j.lf5.DefaultLF5Configurator:
# {"id":"sourceFile","fileName":"DefaultLF5Configurator.java"}
    63:63:void <init>() -> <init>
    41:41:java.lang.Class class$(java.lang.String) -> class$
    79:85:void configure() -> configure
    96:96:void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository) -> doConfigure
org.apache.log4j.lf5.LF5Appender -> org.apache.log4j.lf5.LF5Appender:
# {"id":"sourceFile","fileName":"LF5Appender.java"}
    68:68:void <init>() -> <init>
    80:83:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    99:135:void append(org.apache.log4j.spi.LoggingEvent) -> append
    0:0:void close() -> close
    183:183:boolean equals(org.apache.log4j.lf5.LF5Appender) -> equals
    205:221:org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance() -> getDefaultInstance
    255:255:int getDefaultMonitorHeight() -> getDefaultMonitorHeight
    251:251:int getDefaultMonitorWidth() -> getDefaultMonitorWidth
    187:187:org.apache.log4j.lf5.viewer.LogBrokerMonitor getLogBrokerMonitor() -> getLogBrokerMonitor
    244:244:int getScreenHeight() -> getScreenHeight
    231:231:int getScreenWidth() -> getScreenWidth
    191:191:void main(java.lang.String[]) -> main
    0:0:boolean requiresLayout() -> requiresLayout
    169:169:void setCallSystemExitOnClose(boolean) -> setCallSystemExitOnClose
    195:195:void setMaxNumberOfRecords(int) -> setMaxNumberOfRecords
org.apache.log4j.lf5.Log4JLogRecord -> org.apache.log4j.lf5.Log4JLogRecord:
# {"id":"sourceFile","fileName":"Log4JLogRecord.java"}
    51:51:void <init>() -> <init>
    68:68:boolean isSevereLevel() -> isSevereLevel
    87:97:void setThrownStackTrace(org.apache.log4j.spi.ThrowableInformation) -> setThrownStackTrace
org.apache.log4j.lf5.LogLevel -> org.apache.log4j.lf5.LogLevel:
# {"id":"sourceFile","fileName":"LogLevel.java"}
    44:91:void <clinit>() -> <clinit>
    95:97:void <init>(java.lang.String,int) -> <init>
    118:118:boolean encompasses(org.apache.log4j.lf5.LogLevel) -> encompasses
    192:193:boolean equals(java.lang.Object) -> equals
    245:245:java.util.List getAllDefaultLevels() -> getAllDefaultLevels
    241:241:java.util.List getJdk14Levels() -> getJdk14Levels
    108:108:java.lang.String getLabel() -> getLabel
    237:237:java.util.List getLog4JLevels() -> getLog4JLevels
    249:249:java.util.Map getLogLevelColorMap() -> getLogLevelColorMap
    257:257:int getPrecedence() -> getPrecedence
    204:204:int hashCode() -> hashCode
    165:166:org.apache.log4j.lf5.LogLevel register(org.apache.log4j.lf5.LogLevel) -> register
    174:175:void register(org.apache.log4j.lf5.LogLevel[]) -> register
    182:184:void register(java.util.List) -> register
    224:228:void resetLogLevelColorMap() -> resetLogLevelColorMap
    214:219:void setLogLevelColorMap(org.apache.log4j.lf5.LogLevel,java.awt.Color) -> setLogLevelColorMap
    208:208:java.lang.String toString() -> toString
    137:150:org.apache.log4j.lf5.LogLevel valueOf(java.lang.String) -> valueOf
org.apache.log4j.lf5.LogLevelFormatException -> org.apache.log4j.lf5.LogLevelFormatException:
# {"id":"sourceFile","fileName":"LogLevelFormatException.java"}
    47:47:void <init>(java.lang.String) -> <init>
org.apache.log4j.lf5.LogRecord -> org.apache.log4j.lf5.LogRecord:
# {"id":"sourceFile","fileName":"LogRecord.java"}
    0:0:void <clinit>() -> <clinit>
    62:71:void <init>() -> <init>
    133:133:java.lang.String getCategory() -> getCategory
    86:86:org.apache.log4j.lf5.LogLevel getLevel() -> getLevel
    355:355:java.lang.String getLocation() -> getLocation
    165:165:java.lang.String getMessage() -> getMessage
    211:211:long getMillis() -> getMillis
    337:337:java.lang.String getNDC() -> getNDC
    380:381:long getNextId() -> getNextId
    187:187:long getSequenceNumber() -> getSequenceNumber
    235:235:java.lang.String getThreadDescription() -> getThreadDescription
    290:290:java.lang.Throwable getThrown() -> getThrown
    269:269:java.lang.String getThrownStackTrace() -> getThrownStackTrace
    110:115:boolean hasThrown() -> hasThrown
    122:122:boolean isFatal() -> isFatal
    372:373:void resetSequenceNumber() -> resetSequenceNumber
    155:155:void setCategory(java.lang.String) -> setCategory
    97:97:void setLevel(org.apache.log4j.lf5.LogLevel) -> setLevel
    364:364:void setLocation(java.lang.String) -> setLocation
    175:175:void setMessage(java.lang.String) -> setMessage
    222:222:void setMillis(long) -> setMillis
    346:346:void setNDC(java.lang.String) -> setNDC
    199:199:void setSequenceNumber(long) -> setSequenceNumber
    248:248:void setThreadDescription(java.lang.String) -> setThreadDescription
    306:314:void setThrown(java.lang.Throwable) -> setThrown
    279:279:void setThrownStackTrace(java.lang.String) -> setThrownStackTrace
    326:328:java.lang.String toString() -> toString
org.apache.log4j.lf5.LogRecordFilter -> org.apache.log4j.lf5.LogRecordFilter:
# {"id":"sourceFile","fileName":"LogRecordFilter.java"}
org.apache.log4j.lf5.PassingLogRecordFilter -> org.apache.log4j.lf5.PassingLogRecordFilter:
# {"id":"sourceFile","fileName":"PassingLogRecordFilter.java"}
    0:0:boolean passes(org.apache.log4j.lf5.LogRecord) -> passes
    0:0:void reset() -> reset
org.apache.log4j.lf5.StartLogFactor5 -> org.apache.log4j.lf5.StartLogFactor5:
# {"id":"sourceFile","fileName":"StartLogFactor5.java"}
    56:62:void main(java.lang.String[]) -> main
org.apache.log4j.lf5.util.AdapterLogRecord -> org.apache.log4j.lf5.util.AdapterLogRecord:
# {"id":"sourceFile","fileName":"AdapterLogRecord.java"}
    46:47:void <clinit>() -> <clinit>
    53:53:void <init>() -> <init>
    81:82:java.lang.String getLocationInfo(java.lang.String) -> getLocationInfo
    74:74:org.apache.log4j.lf5.LogLevel getSevereLevel() -> getSevereLevel
    65:66:boolean isSevereLevel() -> isSevereLevel
    99:102:java.lang.String parseLine(java.lang.String,java.lang.String) -> parseLine
    60:61:void setCategory(java.lang.String) -> setCategory
    70:70:void setSevereLevel(org.apache.log4j.lf5.LogLevel) -> setSevereLevel
    89:93:java.lang.String stackTraceToString(java.lang.Throwable) -> stackTraceToString
org.apache.log4j.lf5.util.DateFormatManager -> org.apache.log4j.lf5.util.DateFormatManager:
# {"id":"sourceFile","fileName":"DateFormatManager.java"}
    49:60:void <init>() -> <init>
    50:67:void <init>(java.util.TimeZone) -> <init>
    49:74:void <init>(java.util.Locale) -> <init>
    49:81:void <init>(java.lang.String) -> <init>
    52:89:void <init>(java.util.TimeZone,java.util.Locale) -> <init>
    50:97:void <init>(java.util.TimeZone,java.lang.String) -> <init>
    49:105:void <init>(java.util.Locale,java.lang.String) -> <init>
    53:114:void <init>(java.util.TimeZone,java.util.Locale,java.lang.String) -> <init>
    228:236:void configure() -> configure
    187:187:java.lang.String format(java.util.Date) -> format
    192:197:java.lang.String format(java.util.Date,java.lang.String) -> format
    178:178:java.text.DateFormat getDateFormatInstance() -> getDateFormatInstance
    135:138:java.util.Locale getLocale() -> getLocale
    165:165:java.lang.String getOutputFormat() -> getOutputFormat
    148:148:java.lang.String getPattern() -> getPattern
    122:125:java.util.TimeZone getTimeZone() -> getTimeZone
    204:204:java.util.Date parse(java.lang.String) -> parse
    212:217:java.util.Date parse(java.lang.String,java.lang.String) -> parse
    182:184:void setDateFormatInstance(java.text.DateFormat) -> setDateFormatInstance
    143:145:void setLocale(java.util.Locale) -> setLocale
    173:175:void setOutputFormat(java.lang.String) -> setOutputFormat
    155:157:void setPattern(java.lang.String) -> setPattern
    130:132:void setTimeZone(java.util.TimeZone) -> setTimeZone
org.apache.log4j.lf5.util.LogFileParser -> org.apache.log4j.lf5.util.LogFileParser:
# {"id":"sourceFile","fileName":"LogFileParser.java"}
    62:62:void <clinit>() -> <clinit>
    72:72:void <init>(java.io.File) -> <init>
    75:76:void <init>(java.io.InputStream) -> <init>
    41:41:void access$000(org.apache.log4j.lf5.util.LogFileParser) -> access$000
    261:273:org.apache.log4j.lf5.LogRecord createLogRecord(java.lang.String) -> createLogRecord
    164:165:void destroyDialog() -> destroyDialog
    155:155:void displayError(java.lang.String) -> displayError
    280:288:java.lang.String getAttribute(int,java.lang.String) -> getAttribute
    172:190:java.lang.String loadLogFile(java.io.InputStream) -> loadLogFile
    88:90:void parse(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> parse
    196:202:java.lang.String parseAttribute(java.lang.String,java.lang.String) -> parseAttribute
    241:241:java.lang.String parseCategory(java.lang.String) -> parseCategory
    207:215:long parseDate(java.lang.String) -> parseDate
    245:245:java.lang.String parseLocation(java.lang.String) -> parseLocation
    249:249:java.lang.String parseMessage(java.lang.String) -> parseMessage
    253:253:java.lang.String parseNDC(java.lang.String) -> parseNDC
    222:233:org.apache.log4j.lf5.LogLevel parsePriority(java.lang.String) -> parsePriority
    237:237:java.lang.String parseThread(java.lang.String) -> parseThread
    257:257:java.lang.String parseThrowable(java.lang.String) -> parseThrowable
    104:148:void run() -> run
org.apache.log4j.lf5.util.LogFileParser$1 -> org.apache.log4j.lf5.util.LogFileParser$1:
# {"id":"sourceFile","fileName":"LogFileParser.java"}
    134:134:void <init>(org.apache.log4j.lf5.util.LogFileParser) -> <init>
    135:135:void run() -> run
org.apache.log4j.lf5.util.LogMonitorAdapter -> org.apache.log4j.lf5.util.LogMonitorAdapter:
# {"id":"sourceFile","fileName":"LogMonitorAdapter.java"}
    48:62:void <init>(java.util.List) -> <init>
    122:122:void addMessage(org.apache.log4j.lf5.LogRecord) -> addMessage
    150:150:org.apache.log4j.lf5.LogLevel getDefaultLevel() -> getDefaultLevel
    278:278:int getDefaultMonitorHeight() -> getDefaultMonitorHeight
    274:274:int getDefaultMonitorWidth() -> getDefaultMonitorWidth
    267:267:int getScreenHeight() -> getScreenHeight
    254:254:int getScreenWidth() -> getScreenWidth
    168:168:org.apache.log4j.lf5.LogLevel getSevereLevel() -> getSevereLevel
    183:195:void log(java.lang.String,org.apache.log4j.lf5.LogLevel,java.lang.String,java.lang.Throwable,java.lang.String) -> log
    205:205:void log(java.lang.String,java.lang.String) -> log
    217:217:void log(java.lang.String,org.apache.log4j.lf5.LogLevel,java.lang.String,java.lang.String) -> log
    230:230:void log(java.lang.String,org.apache.log4j.lf5.LogLevel,java.lang.String,java.lang.Throwable) -> log
    241:241:void log(java.lang.String,org.apache.log4j.lf5.LogLevel,java.lang.String) -> log
    78:84:org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int) -> newInstance
    101:101:org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[]) -> newInstance
    113:113:org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List) -> newInstance
    141:141:void setDefaultLevel(org.apache.log4j.lf5.LogLevel) -> setDefaultLevel
    131:131:void setMaxNumberOfRecords(int) -> setMaxNumberOfRecords
    159:159:void setSevereLevel(org.apache.log4j.lf5.LogLevel) -> setSevereLevel
org.apache.log4j.lf5.util.Resource -> org.apache.log4j.lf5.util.Resource:
# {"id":"sourceFile","fileName":"Resource.java"}
    53:53:void <init>() -> <init>
    61:62:void <init>(java.lang.String) -> <init>
    104:104:java.io.InputStream getInputStream() -> getInputStream
    117:123:java.io.InputStreamReader getInputStreamReader() -> getInputStreamReader
    93:93:java.lang.String getName() -> getName
    134:134:java.net.URL getURL() -> getURL
    83:83:void setName(java.lang.String) -> setName
org.apache.log4j.lf5.util.ResourceUtils -> org.apache.log4j.lf5.util.ResourceUtils:
# {"id":"sourceFile","fileName":"ResourceUtils.java"}
    72:79:java.io.InputStream getResourceAsStream(java.lang.Object,org.apache.log4j.lf5.util.Resource) -> getResourceAsStream
    101:108:java.net.URL getResourceAsURL(java.lang.Object,org.apache.log4j.lf5.util.Resource) -> getResourceAsURL
org.apache.log4j.lf5.util.StreamUtils -> org.apache.log4j.lf5.util.StreamUtils:
# {"id":"sourceFile","fileName":"StreamUtils.java"}
    65:65:void copy(java.io.InputStream,java.io.OutputStream) -> copy
    77:83:void copy(java.io.InputStream,java.io.OutputStream,int) -> copy
    93:95:void copyThenClose(java.io.InputStream,java.io.OutputStream) -> copyThenClose
    105:108:byte[] getBytes(java.io.InputStream) -> getBytes
org.apache.log4j.lf5.viewer.FilteredLogTableModel -> org.apache.log4j.lf5.viewer.FilteredLogTableModel:
# {"id":"sourceFile","fileName":"FilteredLogTableModel.java"}
    48:71:void <init>() -> <init>
    116:124:boolean addLogRecord(org.apache.log4j.lf5.LogRecord) -> addLogRecord
    146:149:void clear() -> clear
    163:169:java.util.List createFilteredRecordsList() -> createFilteredRecordsList
    137:139:void fastRefresh() -> fastRefresh
    193:215:java.lang.Object getColumn(int,org.apache.log4j.lf5.LogRecord) -> getColumn
    91:91:int getColumnCount() -> getColumnCount
    87:87:java.lang.String getColumnName(int) -> getColumnName
    176:185:org.apache.log4j.lf5.LogRecord getFilteredRecord(int) -> getFilteredRecord
    156:159:java.util.List getFilteredRecords() -> getFilteredRecords
    83:83:org.apache.log4j.lf5.LogRecordFilter getLogRecordFilter() -> getLogRecordFilter
    95:95:int getRowCount() -> getRowCount
    99:99:int getTotalRowCount() -> getTotalRowCount
    103:104:java.lang.Object getValueAt(int,int) -> getValueAt
    232:232:boolean needsTrimming() -> needsTrimming
    255:255:int numberOfRecordsToTrim() -> numberOfRecordsToTrim
    132:134:void refresh() -> refresh
    79:79:void setLogRecordFilter(org.apache.log4j.lf5.LogRecordFilter) -> setLogRecordFilter
    109:109:void setMaxNumberOfLogRecords(int) -> setMaxNumberOfLogRecords
    236:247:void trimOldestRecords() -> trimOldestRecords
    226:227:void trimRecords() -> trimRecords
org.apache.log4j.lf5.viewer.LF5SwingUtils -> org.apache.log4j.lf5.viewer.LF5SwingUtils:
# {"id":"sourceFile","fileName":"LF5SwingUtils.java"}
    108:108:boolean contains(int,javax.swing.table.TableModel) -> contains
    83:83:void makeScrollBarTrack(java.awt.Adjustable) -> makeScrollBarTrack
    95:95:void makeVerticalScrollBarTrack(javax.swing.JScrollPane) -> makeVerticalScrollBarTrack
    125:125:void moveAdjustable(int,java.awt.Adjustable) -> moveAdjustable
    133:133:void repaintLater(javax.swing.JComponent) -> repaintLater
    64:72:void selectRow(int,javax.swing.JTable,javax.swing.JScrollPane) -> selectRow
    118:118:void selectRow(int,javax.swing.ListSelectionModel) -> selectRow
org.apache.log4j.lf5.viewer.LF5SwingUtils$1 -> org.apache.log4j.lf5.viewer.LF5SwingUtils$1:
# {"id":"sourceFile","fileName":"LF5SwingUtils.java"}
    134:134:void <init>(javax.swing.JComponent) -> <init>
    135:135:void run() -> run
org.apache.log4j.lf5.viewer.LogBrokerMonitor -> org.apache.log4j.lf5.viewer.LogBrokerMonitor:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    68:134:void <init>(java.util.List) -> <init>
    265:265:void addDisplayedProperty(java.lang.Object) -> addDisplayedProperty
    220:226:void addMessage(org.apache.log4j.lf5.LogRecord) -> addMessage
    623:630:void addTableModelProperties() -> addTableModelProperties
    1374:1377:void centerFrame(javax.swing.JFrame) -> centerFrame
    434:447:int changeFontSizeCombo(javax.swing.JComboBox,int) -> changeFontSizeCombo
    425:425:void clearDetailTextArea() -> clearDetailTextArea
    1487:1515:void closeAfterConfirm() -> closeAfterConfirm
    712:714:javax.swing.JMenuItem createAllLogLevelsMenuItem() -> createAllLogLevelsMenuItem
    876:878:javax.swing.JMenuItem createAllLogTableColumnsMenuItem() -> createAllLogTableColumnsMenuItem
    955:958:javax.swing.JMenuItem createCloseMI() -> createCloseMI
    1035:1037:javax.swing.JMenuItem createConfigureMaxRecords() -> createConfigureMaxRecords
    1001:1005:javax.swing.JMenu createConfigureMenu() -> createConfigureMenu
    1023:1025:javax.swing.JMenuItem createConfigureReset() -> createConfigureReset
    1011:1013:javax.swing.JMenuItem createConfigureSave() -> createConfigureSave
    673:677:javax.swing.JTextArea createDetailTextArea() -> createDetailTextArea
    1126:1130:javax.swing.JMenuItem createEditFindMI() -> createEditFindMI
    1114:1117:javax.swing.JMenuItem createEditFindNextMI() -> createEditFindNextMI
    1103:1109:javax.swing.JMenu createEditMenu() -> createEditMenu
    1179:1181:javax.swing.JMenuItem createEditRestoreAllNDCMI() -> createEditRestoreAllNDCMI
    1153:1155:javax.swing.JMenuItem createEditSortNDCMI() -> createEditSortNDCMI
    990:992:javax.swing.JMenuItem createExitMI() -> createExitMI
    911:920:javax.swing.JMenu createFileMenu() -> createFileMenu
    1075:1077:javax.swing.JMenu createHelpMenu() -> createHelpMenu
    1083:1085:javax.swing.JMenuItem createHelpProperties() -> createHelpProperties
    738:742:javax.swing.JMenu createLogLevelColorMenu() -> createLogLevelColorMenu
    1332:1346:javax.swing.JComboBox createLogLevelCombo() -> createLogLevelCombo
    694:706:javax.swing.JMenu createLogLevelMenu() -> createLogLevelMenu
    579:579:org.apache.log4j.lf5.LogRecordFilter createLogRecordFilter() -> createLogRecordFilter
    846:850:javax.swing.JCheckBoxMenuItem createLogTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn) -> createLogTableColumnMenuItem
    972:984:void createMRUFileListMI(javax.swing.JMenu) -> createMRUFileListMI
    682:688:javax.swing.JMenuBar createMenuBar() -> createMenuBar
    809:812:javax.swing.JCheckBoxMenuItem createMenuItem(org.apache.log4j.lf5.LogLevel) -> createMenuItem
    593:594:org.apache.log4j.lf5.LogRecordFilter createNDCLogRecordFilter(java.lang.String) -> createNDCLogRecordFilter
    725:727:javax.swing.JMenuItem createNoLogLevelsMenuItem() -> createNoLogLevelsMenuItem
    890:892:javax.swing.JMenuItem createNoLogTableColumnsMenuItem() -> createNoLogTableColumnsMenuItem
    929:931:javax.swing.JMenuItem createOpenMI() -> createOpenMI
    944:946:javax.swing.JMenuItem createOpenURLMI() -> createOpenURLMI
    749:751:javax.swing.JMenuItem createResetLogLevelColorMenuItem() -> createResetLogLevelColorMenuItem
    659:667:javax.swing.JPanel createStatusArea() -> createStatusArea
    780:783:javax.swing.JMenuItem createSubMenuItem(org.apache.log4j.lf5.LogLevel) -> createSubMenuItem
    1196:1301:javax.swing.JToolBar createToolBar() -> createToolBar
    823:832:javax.swing.JMenu createViewMenu() -> createViewMenu
    169:173:void dispose() -> dispose
    372:382:int findRecord(int,java.lang.String,java.util.List) -> findRecord
    331:341:void findSearchText() -> findSearchText
    240:240:javax.swing.JFrame getBaseFrame() -> getBaseFrame
    203:203:boolean getCallSystemExitOnClose() -> getCallSystemExitOnClose
    281:281:org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree getCategoryExplorerTree() -> getCategoryExplorerTree
    188:188:org.apache.log4j.lf5.util.DateFormatManager getDateFormatManager() -> getDateFormatManager
    345:345:int getFirstSelectedRow() -> getFirstSelectedRow
    269:269:java.util.Map getLogLevelMenuItems() -> getLogLevelMenuItems
    1520:1520:java.util.Iterator getLogLevels() -> getLogLevels
    837:840:javax.swing.JCheckBoxMenuItem getLogTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn) -> getLogTableColumnMenuItem
    273:273:java.util.Map getLogTableColumnMenuItems() -> getLogTableColumnMenuItems
    1524:1524:java.util.Iterator getLogTableColumns() -> getLogTableColumns
    771:774:javax.swing.JCheckBoxMenuItem getMenuItem(org.apache.log4j.lf5.LogLevel) -> getMenuItem
    287:287:java.lang.String getNDCTextFilter() -> getNDCTextFilter
    618:619:java.lang.String getRecordsDisplayedMessage() -> getRecordsDisplayedMessage
    639:645:java.lang.String getStatusText(int,int) -> getStatusText
    277:277:javax.swing.JCheckBoxMenuItem getTableColumnMenuItem(org.apache.log4j.lf5.viewer.LogTableColumn) -> getTableColumnMenuItem
    181:181:void hide() -> hide
    485:574:void initComponents() -> initComponents
    1533:1537:boolean loadLogFile(java.io.File) -> loadLogFile
    1550:1554:boolean loadLogFile(java.net.URL) -> loadLogFile
    649:655:void makeLogTableListenToCategoryExplorer() -> makeLogTableListenToCategoryExplorer
    395:401:boolean matches(org.apache.log4j.lf5.LogRecord,java.lang.String) -> matches
    475:475:void pause(int) -> pause
    415:417:void refresh(javax.swing.JTextArea) -> refresh
    421:421:void refreshDetailTextArea() -> refreshDetailTextArea
    1450:1451:void requestClose() -> requestClose
    1481:1483:void requestExit() -> requestExit
    1389:1401:void requestOpen() -> requestOpen
    1458:1474:void requestOpenMRU(java.awt.event.ActionEvent) -> requestOpenMRU
    1411:1427:void requestOpenURL() -> requestOpenURL
    1052:1052:void resetConfiguration() -> resetConfiguration
    1048:1048:void saveConfiguration() -> saveConfiguration
    764:766:void selectAllLogLevels(boolean) -> selectAllLogLevels
    904:906:void selectAllLogTableColumns(boolean) -> selectAllLogTableColumns
    350:359:void selectRow(int) -> selectRow
    211:211:void setCallSystemExitOnClose(boolean) -> setCallSystemExitOnClose
    195:195:void setDateFormatManager(org.apache.log4j.lf5.util.DateFormatManager) -> setDateFormatManager
    259:259:void setFontSize(int) -> setFontSize
    462:465:void setFontSize(java.awt.Component,int) -> setFontSize
    455:458:void setFontSizeSilently(int) -> setFontSizeSilently
    248:255:void setFrameSize(int,int) -> setFrameSize
    1351:1356:void setLeastSevereDisplayedLogLevel(org.apache.log4j.lf5.LogLevel) -> setLeastSevereDisplayedLogLevel
    236:236:void setMaxNumberOfLogRecords(int) -> setMaxNumberOfLogRecords
    1056:1068:void setMaxRecordConfiguration() -> setMaxRecordConfiguration
    294:294:void setNDCLogRecordFilter(java.lang.String) -> setNDCLogRecordFilter
    310:312:void setNDCTextFilter(java.lang.String) -> setNDCTextFilter
    302:302:void setSearchText(java.lang.String) -> setSearchText
    244:244:void setTitle(java.lang.String) -> setTitle
    1322:1328:void setView(java.lang.String,org.apache.log4j.lf5.viewer.LogTable) -> setView
    148:152:void show(int) -> show
    162:162:void show() -> show
    795:803:void showLogLevelColorChangeDialog(javax.swing.JMenuItem,org.apache.log4j.lf5.LogLevel) -> showLogLevelColorChangeDialog
    1094:1094:void showPropertiesDialog(java.lang.String) -> showPropertiesDialog
    320:326:void sortByNDC() -> sortByNDC
    0:0:void trackTableScrollPane() -> trackTableScrollPane
    469:470:void updateFrameSize() -> updateFrameSize
    1438:1446:void updateMRUList() -> updateMRUList
    614:614:void updateStatusLabel() -> updateStatusLabel
    861:868:java.util.List updateView() -> updateView
org.apache.log4j.lf5.viewer.LogBrokerMonitor$1 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$1:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    153:153:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,int) -> <init>
    154:156:void run() -> run
org.apache.log4j.lf5.viewer.LogBrokerMonitor$10 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$10:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    752:752:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    754:757:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$11 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$11:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    784:784:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,javax.swing.JMenuItem,org.apache.log4j.lf5.LogLevel) -> <init>
    785:785:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$12 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$12:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    813:813:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    814:815:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$13 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$13:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    851:851:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    853:854:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$14 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$14:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    879:879:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    880:883:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$15 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$15:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    893:893:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    894:897:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$16 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$16:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    932:932:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    933:933:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$17 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$17:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    947:947:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    948:948:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$18 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$18:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    959:959:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    960:960:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$19 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$19:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    980:980:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    981:981:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$2 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$2:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    227:227:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.LogRecord) -> <init>
    228:230:void run() -> run
org.apache.log4j.lf5.viewer.LogBrokerMonitor$20 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$20:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    993:993:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    994:994:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$21 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$21:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1014:1014:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1015:1015:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$22 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$22:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1026:1026:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1027:1027:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$23 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$23:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1038:1038:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1039:1039:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$24 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$24:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1086:1086:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1087:1087:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$25 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$25:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1118:1118:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1119:1119:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$26 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$26:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1132:1132:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1133:1141:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$27 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$27:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1157:1157:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1158:1168:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$28 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$28:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1183:1183:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1184:1188:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$29 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$29:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1226:1226:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1227:1231:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$3 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$3:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    580:580:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    581:582:boolean passes(org.apache.log4j.lf5.LogRecord) -> passes
org.apache.log4j.lf5.viewer.LogBrokerMonitor$30 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$30:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1257:1257:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1258:1261:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$31 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$31:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1278:1278:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1279:1285:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$32 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$32:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1340:1340:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1341:1343:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$4 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$4:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    595:595:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    596:603:boolean passes(org.apache.log4j.lf5.LogRecord) -> passes
org.apache.log4j.lf5.viewer.LogBrokerMonitor$5 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$5:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    626:626:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    627:627:java.lang.String toString() -> toString
org.apache.log4j.lf5.viewer.LogBrokerMonitor$6 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$6:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    631:631:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.FilteredLogTableModel) -> <init>
    632:632:java.lang.String toString() -> toString
org.apache.log4j.lf5.viewer.LogBrokerMonitor$7 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$7:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    650:650:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    651:652:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$8 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$8:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    715:715:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    716:718:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$9 -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$9:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    728:728:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    729:731:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor -> org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor:
# {"id":"sourceFile","fileName":"LogBrokerMonitor.java"}
    1570:1571:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogBrokerMonitor) -> <init>
    1575:1575:void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.apache.log4j.lf5.viewer.LogFactor5Dialog -> org.apache.log4j.lf5.viewer.LogFactor5Dialog:
# {"id":"sourceFile","fileName":"LogFactor5Dialog.java"}
    34:34:void <clinit>() -> <clinit>
    47:47:void <init>(javax.swing.JFrame,java.lang.String,boolean) -> <init>
    68:82:void centerWindow(java.awt.Window) -> centerWindow
    112:121:java.awt.GridBagConstraints getDefaultConstraints() -> getDefaultConstraints
    130:134:void minimumSizeDialog(java.awt.Component,int,int) -> minimumSizeDialog
    54:57:void show() -> show
    87:107:void wrapStringOnPanel(java.lang.String,java.awt.Container) -> wrapStringOnPanel
org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog -> org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog:
# {"id":"sourceFile","fileName":"LogFactor5ErrorDialog.java"}
    49:68:void <init>(javax.swing.JFrame,java.lang.String) -> <init>
org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog$1 -> org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog$1:
# {"id":"sourceFile","fileName":"LogFactor5ErrorDialog.java"}
    53:53:void <init>(org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog) -> <init>
    54:54:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogFactor5InputDialog -> org.apache.log4j.lf5.viewer.LogFactor5InputDialog:
# {"id":"sourceFile","fileName":"LogFactor5InputDialog.java"}
    61:61:void <init>(javax.swing.JFrame,java.lang.String,java.lang.String) -> <init>
    73:116:void <init>(javax.swing.JFrame,java.lang.String,java.lang.String,int) -> <init>
    37:37:javax.swing.JTextField access$000(org.apache.log4j.lf5.viewer.LogFactor5InputDialog) -> access$000
    123:125:java.lang.String getText() -> getText
org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1 -> org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1:
# {"id":"sourceFile","fileName":"LogFactor5InputDialog.java"}
    85:85:void <init>(org.apache.log4j.lf5.viewer.LogFactor5InputDialog) -> <init>
    86:87:void keyPressed(java.awt.event.KeyEvent) -> keyPressed
org.apache.log4j.lf5.viewer.LogFactor5InputDialog$2 -> org.apache.log4j.lf5.viewer.LogFactor5InputDialog$2:
# {"id":"sourceFile","fileName":"LogFactor5InputDialog.java"}
    94:94:void <init>(org.apache.log4j.lf5.viewer.LogFactor5InputDialog) -> <init>
    95:95:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogFactor5InputDialog$3 -> org.apache.log4j.lf5.viewer.LogFactor5InputDialog$3:
# {"id":"sourceFile","fileName":"LogFactor5InputDialog.java"}
    101:101:void <init>(org.apache.log4j.lf5.viewer.LogFactor5InputDialog) -> <init>
    102:106:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog -> org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog:
# {"id":"sourceFile","fileName":"LogFactor5LoadingDialog.java"}
    48:59:void <init>(javax.swing.JFrame,java.lang.String) -> <init>
org.apache.log4j.lf5.viewer.LogTable -> org.apache.log4j.lf5.viewer.LogTable:
# {"id":"sourceFile","fileName":"LogTable.java"}
    50:99:void <init>(javax.swing.JTextArea) -> <init>
    127:128:void clearLogRecords() -> clearLogRecords
    193:195:java.util.Vector getColumnNameAndNumber() -> getColumnNameAndNumber
    112:112:org.apache.log4j.lf5.util.DateFormatManager getDateFormatManager() -> getDateFormatManager
    131:131:org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel() -> getFilteredLogTableModel
    187:188:void init() -> init
    119:119:void setDateFormatManager(org.apache.log4j.lf5.util.DateFormatManager) -> setDateFormatManager
    137:147:void setDetailedView() -> setDetailedView
    169:175:void setFont(java.awt.Font) -> setFont
    151:165:void setView(java.util.List) -> setView
org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener -> org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener:
# {"id":"sourceFile","fileName":"LogTable.java"}
    211:212:void <init>(org.apache.log4j.lf5.viewer.LogTable,javax.swing.JTable) -> <init>
    217:260:void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
org.apache.log4j.lf5.viewer.LogTableColumn -> org.apache.log4j.lf5.viewer.LogTableColumn:
# {"id":"sourceFile","fileName":"LogTableColumn.java"}
    35:67:void <clinit>() -> <clinit>
    72:73:void <init>(java.lang.String) -> <init>
    116:117:boolean equals(java.lang.Object) -> equals
    84:84:java.lang.String getLabel() -> getLabel
    143:143:org.apache.log4j.lf5.viewer.LogTableColumn[] getLogTableColumnArray() -> getLogTableColumnArray
    139:139:java.util.List getLogTableColumns() -> getLogTableColumns
    127:127:int hashCode() -> hashCode
    131:131:java.lang.String toString() -> toString
    99:107:org.apache.log4j.lf5.viewer.LogTableColumn valueOf(java.lang.String) -> valueOf
org.apache.log4j.lf5.viewer.LogTableColumnFormatException -> org.apache.log4j.lf5.viewer.LogTableColumnFormatException:
# {"id":"sourceFile","fileName":"LogTableColumnFormatException.java"}
    47:47:void <init>(java.lang.String) -> <init>
org.apache.log4j.lf5.viewer.LogTableModel -> org.apache.log4j.lf5.viewer.LogTableModel:
# {"id":"sourceFile","fileName":"LogTableModel.java"}
    47:47:void <init>(java.lang.Object[],int) -> <init>
    0:0:boolean isCellEditable(int,int) -> isCellEditable
org.apache.log4j.lf5.viewer.LogTableRowRenderer -> org.apache.log4j.lf5.viewer.LogTableRowRenderer:
# {"id":"sourceFile","fileName":"LogTableRowRenderer.java"}
    35:44:void <init>() -> <init>
    88:88:java.awt.Color getLogLevelColor(org.apache.log4j.lf5.LogLevel) -> getLogLevelColor
    65:76:java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
org.apache.log4j.lf5.viewer.TrackingAdjustmentListener -> org.apache.log4j.lf5.viewer.TrackingAdjustmentListener:
# {"id":"sourceFile","fileName":"TrackingAdjustmentListener.java"}
    36:45:void <init>() -> <init>
    60:70:void adjustmentValueChanged(java.awt.event.AdjustmentEvent) -> adjustmentValueChanged
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor:
# {"id":"sourceFile","fileName":"CategoryAbstractCellEditor.java"}
    38:49:void <init>() -> <init>
    108:108:void addCellEditorListener(javax.swing.event.CellEditorListener) -> addCellEditorListener
    104:104:void cancelCellEditing() -> cancelCellEditing
    38:38:java.lang.Class class$(java.lang.String) -> class$
    148:156:void fireEditingCanceled() -> fireEditingCanceled
    134:142:void fireEditingStopped() -> fireEditingStopped
    64:64:java.lang.Object getCellEditorValue() -> getCellEditorValue
    76:76:int getClickCountToStart() -> getClickCountToStart
    0:0:java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int) -> getTableCellEditorComponent
    0:0:java.awt.Component getTreeCellEditorComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int) -> getTreeCellEditorComponent
    80:81:boolean isCellEditable(java.util.EventObject) -> isCellEditable
    112:112:void removeCellEditorListener(javax.swing.event.CellEditorListener) -> removeCellEditorListener
    68:68:void setCellEditorValue(java.lang.Object) -> setCellEditorValue
    72:72:void setClickCountToStart(int) -> setClickCountToStart
    89:90:boolean shouldSelectCell(java.util.EventObject) -> shouldSelectCell
    99:99:boolean stopCellEditing() -> stopCellEditing
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement:
# {"id":"sourceFile","fileName":"CategoryElement.java"}
    46:46:void <init>() -> <init>
    49:50:void <init>(java.lang.String) -> <init>
    58:58:java.lang.String getTitle() -> getTitle
    62:62:void setTitle(java.lang.String) -> setTitle
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter:
# {"id":"sourceFile","fileName":"CategoryExplorerLogRecordFilter.java"}
    50:51:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel) -> <init>
    65:66:boolean passes(org.apache.log4j.lf5.LogRecord) -> passes
    73:73:void reset() -> reset
    81:86:void resetAllNodes() -> resetAllNodes
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel:
# {"id":"sourceFile","fileName":"CategoryExplorerModel.java"}
    49:64:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> <init>
    279:280:void addActionListener(java.awt.event.ActionListener) -> addActionListener
    189:223:org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode addCategory(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath) -> addCategory
    71:88:void addLogRecord(org.apache.log4j.lf5.LogRecord) -> addLogRecord
    97:98:org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode getCategoryNode(java.lang.String) -> getCategoryNode
    105:120:org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode getCategoryNode(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath) -> getCategoryNode
    93:93:org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode getRootCategoryNode() -> getRootCategoryNode
    306:306:javax.swing.tree.TreePath getTreePathToRoot(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> getTreePathToRoot
    141:164:boolean isCategoryPathActive(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath) -> isCategoryPathActive
    313:314:void notifyActionListeners() -> notifyActionListeners
    322:322:void refresh(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> refresh
    283:284:void removeActionListener(java.awt.event.ActionListener) -> removeActionListener
    287:292:void resetAllNodeCounts() -> resetAllNodeCounts
    247:257:void setDescendantSelection(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode,boolean) -> setDescendantSelection
    261:274:void setParentSelection(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode,boolean) -> setParentSelection
    235:242:void update(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode,boolean) -> update
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel$1 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel$1:
# {"id":"sourceFile","fileName":"CategoryExplorerModel.java"}
    323:323:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel,org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> <init>
    324:324:void run() -> run
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree:
# {"id":"sourceFile","fileName":"CategoryExplorerTree.java"}
    43:60:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel) -> <init>
    43:75:void <init>() -> <init>
    133:133:void ensureRootExpansion() -> ensureRootExpansion
    124:129:void expandRootNode() -> expandRootNode
    83:83:org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel getExplorerModel() -> getExplorerModel
    89:89:java.lang.String getToolTipText(java.awt.event.MouseEvent) -> getToolTipText
    102:119:void init() -> init
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree$1 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree$1:
# {"id":"sourceFile","fileName":"CategoryExplorerTree.java"}
    134:134:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree) -> <init>
    135:135:void treeNodesInserted(javax.swing.event.TreeModelEvent) -> treeNodesInserted
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor:
# {"id":"sourceFile","fileName":"CategoryImmediateEditor.java"}
    43:62:void <init>(javax.swing.JTree,org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer,org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor) -> <init>
    115:117:boolean canEditImmediately(java.util.EventObject) -> canEditImmediately
    127:127:void determineOffset(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int) -> determineOffset
    84:103:boolean inCheckBoxHitRegion(java.awt.event.MouseEvent) -> inCheckBoxHitRegion
    71:78:boolean shouldSelectCell(java.util.EventObject) -> shouldSelectCell
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode:
# {"id":"sourceFile","fileName":"CategoryNode.java"}
    39:57:void <init>(java.lang.String) -> <init>
    123:124:void addRecord() -> addRecord
    166:167:void addRecordFromChild() -> addRecordFromChild
    175:179:void addRecordToParent() -> addRecordToParent
    106:111:boolean equals(java.lang.Object) -> equals
    128:128:int getNumberOfContainedRecords() -> getNumberOfContainedRecords
    171:171:int getNumberOfRecordsFromChildren() -> getNumberOfRecordsFromChildren
    64:64:java.lang.String getTitle() -> getTitle
    159:159:int getTotalNumberOfRecords() -> getTotalNumberOfRecords
    143:143:boolean hasFatalChildren() -> hasFatalChildren
    139:139:boolean hasFatalRecords() -> hasFatalRecords
    119:119:int hashCode() -> hashCode
    74:74:boolean isSelected() -> isSelected
    132:135:void resetNumberOfContainedRecords() -> resetNumberOfContainedRecords
    93:97:void setAllDescendantsDeSelected() -> setAllDescendantsDeSelected
    81:85:void setAllDescendantsSelected() -> setAllDescendantsSelected
    151:151:void setHasFatalChildren(boolean) -> setHasFatalChildren
    147:147:void setHasFatalRecords(boolean) -> setHasFatalRecords
    68:69:void setSelected(boolean) -> setSelected
    102:102:java.lang.String toString() -> toString
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor:
# {"id":"sourceFile","fileName":"CategoryNodeEditor.java"}
    59:71:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel) -> <init>
    274:274:void collapse(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> collapse
    238:242:void collapseDescendants(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> collapseDescendants
    200:201:javax.swing.JMenuItem createCollapseMenuItem(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> createCollapseMenuItem
    190:191:javax.swing.JMenuItem createExpandMenuItem(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> createExpandMenuItem
    105:106:javax.swing.JMenuItem createPropertiesMenuItem(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> createPropertiesMenuItem
    219:220:javax.swing.JMenuItem createRemoveMenuItem() -> createRemoveMenuItem
    162:164:javax.swing.JMenuItem createSelectDescendantsMenuItem(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> createSelectDescendantsMenuItem
    175:177:javax.swing.JMenuItem createUnselectDescendantsMenuItem(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> createUnselectDescendantsMenuItem
    266:266:void expand(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> expand
    229:233:void expandDescendants(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> expandDescendants
    98:98:java.lang.Object getCellEditorValue() -> getCellEditorValue
    124:138:java.lang.Object getDisplayedProperties(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> getDisplayedProperties
    88:91:java.awt.Component getTreeCellEditorComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int) -> getTreeCellEditorComponent
    270:270:javax.swing.tree.TreePath getTreePath(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> getTreePath
    251:257:int removeUnusedNodes() -> removeUnusedNodes
    142:158:void showPopup(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode,int,int) -> showPopup
    115:115:void showPropertiesDialog(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> showPropertiesDialog
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1:
# {"id":"sourceFile","fileName":"CategoryNodeEditor.java"}
    65:65:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor) -> <init>
    66:67:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2:
# {"id":"sourceFile","fileName":"CategoryNodeEditor.java"}
    72:72:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor) -> <init>
    73:76:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$3 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$3:
# {"id":"sourceFile","fileName":"CategoryNodeEditor.java"}
    107:107:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor,org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> <init>
    108:108:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$4 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$4:
# {"id":"sourceFile","fileName":"CategoryNodeEditor.java"}
    166:166:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor,org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> <init>
    167:167:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$5 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$5:
# {"id":"sourceFile","fileName":"CategoryNodeEditor.java"}
    180:180:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor,org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> <init>
    181:181:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$6 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$6:
# {"id":"sourceFile","fileName":"CategoryNodeEditor.java"}
    192:192:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor,org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> <init>
    193:193:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$7 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$7:
# {"id":"sourceFile","fileName":"CategoryNodeEditor.java"}
    202:202:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor,org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> <init>
    203:203:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$8 -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$8:
# {"id":"sourceFile","fileName":"CategoryNodeEditor.java"}
    221:221:void <init>(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor) -> <init>
    222:222:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer:
# {"id":"sourceFile","fileName":"CategoryNodeEditorRenderer.java"}
    30:30:void <init>() -> <init>
    64:64:javax.swing.JCheckBox getCheckBox() -> getCheckBox
    56:56:java.awt.Component getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) -> getTreeCellRendererComponent
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer:
# {"id":"sourceFile","fileName":"CategoryNodeRenderer.java"}
    37:44:void <clinit>() -> <clinit>
    42:78:void <init>() -> <init>
    127:132:java.lang.String buildToolTip(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) -> buildToolTip
    119:119:java.awt.Dimension getCheckBoxOffset() -> getCheckBoxOffset
    90:115:java.awt.Component getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) -> getTreeCellRendererComponent
org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath -> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath:
# {"id":"sourceFile","fileName":"CategoryPath.java"}
    39:50:void <init>() -> <init>
    39:69:void <init>(java.lang.String) -> <init>
    108:108:void addCategoryElement(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement) -> addCategoryElement
    115:115:org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement categoryElementAt(int) -> categoryElementAt
    89:89:boolean isEmpty() -> isEmpty
    101:101:void removeAllCategoryElements() -> removeAllCategoryElements
    81:81:int size() -> size
    120:141:java.lang.String toString() -> toString
org.apache.log4j.lf5.viewer.categoryexplorer.TreeModelAdapter -> org.apache.log4j.lf5.viewer.categoryexplorer.TreeModelAdapter:
# {"id":"sourceFile","fileName":"TreeModelAdapter.java"}
    0:0:void treeNodesChanged(javax.swing.event.TreeModelEvent) -> treeNodesChanged
    0:0:void treeNodesInserted(javax.swing.event.TreeModelEvent) -> treeNodesInserted
    0:0:void treeNodesRemoved(javax.swing.event.TreeModelEvent) -> treeNodesRemoved
    0:0:void treeStructureChanged(javax.swing.event.TreeModelEvent) -> treeStructureChanged
org.apache.log4j.lf5.viewer.configure.ConfigurationManager -> org.apache.log4j.lf5.viewer.configure.ConfigurationManager:
# {"id":"sourceFile","fileName":"ConfigurationManager.java"}
    88:91:void <init>(org.apache.log4j.lf5.viewer.LogBrokerMonitor,org.apache.log4j.lf5.viewer.LogTable) -> <init>
    417:417:void closeConfigurationXML(java.lang.StringBuffer) -> closeConfigurationXML
    297:299:void collapseTree() -> collapseTree
    329:334:void deleteConfigurationFile() -> deleteConfigurationFile
    438:443:void exportLogLevelColorXMLElement(java.lang.String,java.awt.Color,java.lang.StringBuffer) -> exportLogLevelColorXMLElement
    431:434:void exportLogLevelXMLElement(java.lang.String,boolean,java.lang.StringBuffer) -> exportLogLevelXMLElement
    447:450:void exportLogTableColumnXMLElement(java.lang.String,boolean,java.lang.StringBuffer) -> exportLogTableColumnXMLElement
    421:427:void exportXMLElement(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode,javax.swing.tree.TreePath,java.lang.StringBuffer) -> exportXMLElement
    340:343:java.lang.String getFilename() -> getFilename
    291:292:java.lang.String getValue(org.w3c.dom.NamedNodeMap,java.lang.String) -> getValue
    139:154:void load() -> load
    413:413:void openConfigurationXML(java.lang.StringBuffer) -> openConfigurationXML
    409:409:void openXMLDocument(java.lang.StringBuffer) -> openXMLDocument
    187:202:void processCategories(org.w3c.dom.Document) -> processCategories
    350:356:void processConfigurationNode(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode,java.lang.StringBuffer) -> processConfigurationNode
    226:246:void processLogLevelColors(org.w3c.dom.Document) -> processLogLevelColors
    374:384:void processLogLevelColors(java.util.Map,java.util.Map,java.lang.StringBuffer) -> processLogLevelColors
    208:218:void processLogLevels(org.w3c.dom.Document) -> processLogLevels
    362:370:void processLogLevels(java.util.Map,java.lang.StringBuffer) -> processLogLevels
    403:405:void processLogRecordFilter(java.lang.String,java.lang.StringBuffer) -> processLogRecordFilter
    256:284:void processLogTableColumns(org.w3c.dom.Document) -> processLogTableColumns
    389:397:void processLogTableColumns(java.util.List,java.lang.StringBuffer) -> processLogTableColumns
    167:183:void processRecordFilter(org.w3c.dom.Document) -> processRecordFilter
    115:117:void reset() -> reset
    98:111:void save() -> save
    304:310:void selectAllNodes() -> selectAllNodes
    317:322:void store(java.lang.String) -> store
    122:132:java.lang.String treePathToString(javax.swing.tree.TreePath) -> treePathToString
org.apache.log4j.lf5.viewer.configure.MRUFileManager -> org.apache.log4j.lf5.viewer.configure.MRUFileManager:
# {"id":"sourceFile","fileName":"MRUFileManager.java"}
    48:56:void <init>() -> <init>
    48:61:void <init>(int) -> <init>
    174:181:void createConfigurationDirectory() -> createConfigurationDirectory
    97:98:java.lang.Object getFile(int) -> getFile
    259:262:java.lang.String getFilename() -> getFilename
    109:114:java.io.InputStream getInputStream(int) -> getInputStream
    197:197:java.io.InputStream getInputStream(java.io.File) -> getInputStream
    210:210:java.io.InputStream getInputStream(java.net.URL) -> getInputStream
    138:150:java.lang.String[] getMRUFileList() -> getMRUFileList
    232:253:void load() -> load
    164:164:void moveToTop(int) -> moveToTop
    71:81:void save() -> save
    124:124:void set(java.io.File) -> set
    131:131:void set(java.net.URL) -> set
    217:223:void setMRU(java.lang.Object) -> setMRU
    269:275:void setMaxSize(int) -> setMaxSize
    89:89:int size() -> size
org.apache.log4j.net.DefaultEvaluator -> org.apache.log4j.net.DefaultEvaluator:
    0:0:boolean isTriggeringEvent(org.apache.log4j.spi.LoggingEvent) -> isTriggeringEvent
org.apache.log4j.net.JMSAppender -> org.apache.log4j.net.JMSAppender:
    0:0:void activateOptions() -> activateOptions
    0:0:void append(org.apache.log4j.spi.LoggingEvent) -> append
    0:0:boolean checkEntryConditions() -> checkEntryConditions
    0:0:void close() -> close
    0:0:java.lang.String getInitialContextFactoryName() -> getInitialContextFactoryName
    0:0:boolean getLocationInfo() -> getLocationInfo
    0:0:java.lang.String getPassword() -> getPassword
    0:0:java.lang.String getProviderURL() -> getProviderURL
    0:0:java.lang.String getSecurityCredentials() -> getSecurityCredentials
    0:0:java.lang.String getSecurityPrincipalName() -> getSecurityPrincipalName
    0:0:java.lang.String getTopicBindingName() -> getTopicBindingName
    0:0:javax.jms.TopicConnection getTopicConnection() -> getTopicConnection
    0:0:java.lang.String getTopicConnectionFactoryBindingName() -> getTopicConnectionFactoryBindingName
    0:0:javax.jms.TopicPublisher getTopicPublisher() -> getTopicPublisher
    0:0:javax.jms.TopicSession getTopicSession() -> getTopicSession
    0:0:java.lang.String getURLPkgPrefixes() -> getURLPkgPrefixes
    0:0:java.lang.String getUserName() -> getUserName
    0:0:java.lang.Object lookup(javax.naming.Context,java.lang.String) -> lookup
    0:0:boolean requiresLayout() -> requiresLayout
    0:0:void setInitialContextFactoryName(java.lang.String) -> setInitialContextFactoryName
    0:0:void setLocationInfo(boolean) -> setLocationInfo
    0:0:void setPassword(java.lang.String) -> setPassword
    0:0:void setProviderURL(java.lang.String) -> setProviderURL
    0:0:void setSecurityCredentials(java.lang.String) -> setSecurityCredentials
    0:0:void setSecurityPrincipalName(java.lang.String) -> setSecurityPrincipalName
    0:0:void setTopicBindingName(java.lang.String) -> setTopicBindingName
    0:0:void setTopicConnectionFactoryBindingName(java.lang.String) -> setTopicConnectionFactoryBindingName
    0:0:void setURLPkgPrefixes(java.lang.String) -> setURLPkgPrefixes
    0:0:void setUserName(java.lang.String) -> setUserName
org.apache.log4j.net.JMSSink -> org.apache.log4j.net.JMSSink:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    0:0:java.lang.Class class$(java.lang.String) -> class$
    0:0:java.lang.Object lookup(javax.naming.Context,java.lang.String) -> lookup
    0:0:void main(java.lang.String[]) -> main
    0:0:void onMessage(javax.jms.Message) -> onMessage
    0:0:void usage(java.lang.String) -> usage
org.apache.log4j.net.SMTPAppender -> org.apache.log4j.net.SMTPAppender:
    0:0:void <init>() -> <init>
    0:0:void <init>(org.apache.log4j.spi.TriggeringEventEvaluator) -> <init>
    0:0:java.lang.String access$000(org.apache.log4j.net.SMTPAppender) -> access$000
    0:0:java.lang.String access$100(org.apache.log4j.net.SMTPAppender) -> access$100
    0:0:void activateOptions() -> activateOptions
    0:0:void addressMessage(javax.mail.Message) -> addressMessage
    0:0:void append(org.apache.log4j.spi.LoggingEvent) -> append
    0:0:boolean checkEntryConditions() -> checkEntryConditions
    0:0:java.lang.Class class$(java.lang.String) -> class$
    0:0:void close() -> close
    0:0:javax.mail.Session createSession() -> createSession
    0:0:javax.mail.internet.InternetAddress getAddress(java.lang.String) -> getAddress
    0:0:java.lang.String getBcc() -> getBcc
    0:0:int getBufferSize() -> getBufferSize
    0:0:java.lang.String getCc() -> getCc
    0:0:java.lang.String getEvaluatorClass() -> getEvaluatorClass
    0:0:java.lang.String getFrom() -> getFrom
    0:0:boolean getLocationInfo() -> getLocationInfo
    0:0:boolean getSMTPDebug() -> getSMTPDebug
    0:0:java.lang.String getSMTPHost() -> getSMTPHost
    0:0:java.lang.String getSMTPPassword() -> getSMTPPassword
    0:0:java.lang.String getSMTPUsername() -> getSMTPUsername
    0:0:java.lang.String getSubject() -> getSubject
    0:0:java.lang.String getTo() -> getTo
    0:0:javax.mail.internet.InternetAddress[] parseAddress(java.lang.String) -> parseAddress
    0:0:boolean requiresLayout() -> requiresLayout
    0:0:void sendBuffer() -> sendBuffer
    0:0:void setBcc(java.lang.String) -> setBcc
    0:0:void setBufferSize(int) -> setBufferSize
    0:0:void setCc(java.lang.String) -> setCc
    0:0:void setEvaluatorClass(java.lang.String) -> setEvaluatorClass
    0:0:void setFrom(java.lang.String) -> setFrom
    0:0:void setLocationInfo(boolean) -> setLocationInfo
    0:0:void setSMTPDebug(boolean) -> setSMTPDebug
    0:0:void setSMTPHost(java.lang.String) -> setSMTPHost
    0:0:void setSMTPPassword(java.lang.String) -> setSMTPPassword
    0:0:void setSMTPUsername(java.lang.String) -> setSMTPUsername
    0:0:void setSubject(java.lang.String) -> setSubject
    0:0:void setTo(java.lang.String) -> setTo
org.apache.log4j.net.SMTPAppender$1 -> org.apache.log4j.net.SMTPAppender$1:
    0:0:void <init>(org.apache.log4j.net.SMTPAppender) -> <init>
    0:0:javax.mail.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
org.apache.log4j.net.SimpleSocketServer -> org.apache.log4j.net.SimpleSocketServer:
# {"id":"sourceFile","fileName":"SimpleSocketServer.java"}
    45:45:void <clinit>() -> <clinit>
    43:43:java.lang.Class class$(java.lang.String) -> class$
    84:93:void init(java.lang.String,java.lang.String) -> init
    52:70:void main(java.lang.String[]) -> main
    76:79:void usage(java.lang.String) -> usage
org.apache.log4j.net.SocketAppender -> org.apache.log4j.net.SocketAppender:
# {"id":"sourceFile","fileName":"SocketAppender.java"}
    119:133:void <init>() -> <init>
    119:143:void <init>(java.net.InetAddress,int) -> <init>
    121:153:void <init>(java.lang.String,int) -> <init>
    100:100:org.apache.log4j.net.SocketAppender$Connector access$002(org.apache.log4j.net.SocketAppender,org.apache.log4j.net.SocketAppender$Connector) -> access$002
    160:160:void activateOptions() -> activateOptions
    221:246:void append(org.apache.log4j.spi.LoggingEvent) -> append
    182:193:void cleanUp() -> cleanUp
    170:175:void close() -> close
    198:212:void connect(java.net.InetAddress,int) -> connect
    253:258:void fireConnector() -> fireConnector
    265:267:java.net.InetAddress getAddressByName(java.lang.String) -> getAddressByName
    325:325:boolean getLocationInfo() -> getLocationInfo
    309:309:int getPort() -> getPort
    345:345:int getReconnectionDelay() -> getReconnectionDelay
    294:294:java.lang.String getRemoteHost() -> getRemoteHost
    0:0:boolean requiresLayout() -> requiresLayout
    318:318:void setLocationInfo(boolean) -> setLocationInfo
    302:302:void setPort(int) -> setPort
    338:338:void setReconnectionDelay(int) -> setReconnectionDelay
    286:287:void setRemoteHost(java.lang.String) -> setRemoteHost
org.apache.log4j.net.SocketAppender$Connector -> org.apache.log4j.net.SocketAppender$Connector:
# {"id":"sourceFile","fileName":"SocketAppender.java"}
    360:362:void <init>(org.apache.log4j.net.SocketAppender) -> <init>
    367:385:void run() -> run
org.apache.log4j.net.SocketHubAppender -> org.apache.log4j.net.SocketHubAppender:
# {"id":"sourceFile","fileName":"SocketHubAppender.java"}
    112:117:void <init>() -> <init>
    112:124:void <init>(int) -> <init>
    131:131:void activateOptions() -> activateOptions
    182:218:void append(org.apache.log4j.spi.LoggingEvent) -> append
    156:172:void cleanUp() -> cleanUp
    141:148:void close() -> close
    262:262:boolean getLocationInfo() -> getLocationInfo
    246:246:int getPort() -> getPort
    0:0:boolean requiresLayout() -> requiresLayout
    255:255:void setLocationInfo(boolean) -> setLocationInfo
    239:239:void setPort(int) -> setPort
    269:269:void startServer() -> startServer
org.apache.log4j.net.SocketHubAppender$ServerMonitor -> org.apache.log4j.net.SocketHubAppender$ServerMonitor:
# {"id":"sourceFile","fileName":"SocketHubAppender.java"}
    286:292:void <init>(org.apache.log4j.net.SocketHubAppender,int,java.util.Vector) -> <init>
    324:380:void run() -> run
    328:380:void run() -> run
    301:315:void stopMonitor() -> stopMonitor
org.apache.log4j.net.SocketNode -> org.apache.log4j.net.SocketNode:
# {"id":"sourceFile","fileName":"SocketNode.java"}
    48:48:void <clinit>() -> <clinit>
    50:58:void <init>(java.net.Socket,org.apache.log4j.spi.LoggerRepository) -> <init>
    42:42:java.lang.Class class$(java.lang.String) -> class$
    75:99:void run() -> run
org.apache.log4j.net.SocketServer -> org.apache.log4j.net.SocketServer:
# {"id":"sourceFile","fileName":"SocketServer.java"}
    87:87:void <clinit>() -> <clinit>
    157:159:void <init>(java.io.File) -> <init>
    82:82:java.lang.Class class$(java.lang.String) -> class$
    165:187:org.apache.log4j.spi.LoggerRepository configureHierarchy(java.net.InetAddress) -> configureHierarchy
    193:204:org.apache.log4j.spi.LoggerRepository genericHierarchy() -> genericHierarchy
    139:152:void init(java.lang.String,java.lang.String,java.lang.String) -> init
    99:123:void main(java.lang.String[]) -> main
    130:133:void usage(java.lang.String) -> usage
org.apache.log4j.net.SyslogAppender -> org.apache.log4j.net.SyslogAppender:
# {"id":"sourceFile","fileName":"SyslogAppender.java"}
    89:99:void <init>() -> <init>
    91:106:void <init>(org.apache.log4j.Layout,int) -> <init>
    111:112:void <init>(org.apache.log4j.Layout,java.lang.String,int) -> <init>
    0:0:void activateOptions() -> activateOptions
    240:263:void append(org.apache.log4j.spi.LoggingEvent) -> append
    123:127:void close() -> close
    190:230:int getFacility(java.lang.String) -> getFacility
    347:347:java.lang.String getFacility() -> getFacility
    365:365:boolean getFacilityPrinting() -> getFacilityPrinting
    0:0:java.lang.String getFacilityString(int) -> getFacilityString
    310:310:java.lang.String getSyslogHost() -> getSyslogHost
    131:139:void initSyslogFacilityStr() -> initSyslogFacilityStr
    0:0:boolean requiresLayout() -> requiresLayout
    327:338:void setFacility(java.lang.String) -> setFacility
    357:357:void setFacilityPrinting(boolean) -> setFacilityPrinting
    299:302:void setSyslogHost(java.lang.String) -> setSyslogHost
org.apache.log4j.net.TelnetAppender -> org.apache.log4j.net.TelnetAppender:
# {"id":"sourceFile","fileName":"TelnetAppender.java"}
    55:58:void <init>() -> <init>
    71:75:void activateOptions() -> activateOptions
    98:105:void append(org.apache.log4j.spi.LoggingEvent) -> append
    92:92:void close() -> close
    81:81:int getPort() -> getPort
    0:0:boolean requiresLayout() -> requiresLayout
    86:86:void setPort(int) -> setPort
org.apache.log4j.net.TelnetAppender$SocketHandler -> org.apache.log4j.net.TelnetAppender$SocketHandler:
# {"id":"sourceFile","fileName":"TelnetAppender.java"}
    118:181:void <init>(org.apache.log4j.net.TelnetAppender,int) -> <init>
    126:136:void finalize() -> finalize
    159:175:void run() -> run
    141:149:void send(java.lang.String) -> send
org.apache.log4j.nt.NTEventLogAppender -> org.apache.log4j.nt.NTEventLogAppender:
# {"id":"sourceFile","fileName":"NTEventLogAppender.java"}
    45:165:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
    56:56:void <init>(java.lang.String) -> <init>
    60:60:void <init>(java.lang.String,java.lang.String) -> <init>
    64:64:void <init>(org.apache.log4j.Layout) -> <init>
    68:68:void <init>(java.lang.String,org.apache.log4j.Layout) -> <init>
    40:85:void <init>(java.lang.String,java.lang.String,org.apache.log4j.Layout) -> <init>
    96:101:void activateOptions() -> activateOptions
    109:128:void append(org.apache.log4j.spi.LoggingEvent) -> append
    0:0:void close() -> close
    134:135:void finalize() -> finalize
    149:149:java.lang.String getSource() -> getSource
    0:0:boolean requiresLayout() -> requiresLayout
    144:144:void setSource(java.lang.String) -> setSource
org.apache.log4j.or.DefaultRenderer -> org.apache.log4j.or.DefaultRenderer:
# {"id":"sourceFile","fileName":"DefaultRenderer.java"}
    27:27:void <init>() -> <init>
    35:35:java.lang.String doRender(java.lang.Object) -> doRender
org.apache.log4j.or.ObjectRenderer -> org.apache.log4j.or.ObjectRenderer:
# {"id":"sourceFile","fileName":"ObjectRenderer.java"}
org.apache.log4j.or.RendererMap -> org.apache.log4j.or.RendererMap:
# {"id":"sourceFile","fileName":"RendererMap.java"}
    34:34:void <clinit>() -> <clinit>
    37:38:void <init>() -> <init>
    48:62:void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String) -> addRenderer
    30:30:java.lang.Class class$(java.lang.String) -> class$
    187:187:void clear() -> clear
    79:79:java.lang.String findAndRender(java.lang.Object) -> findAndRender
    91:91:org.apache.log4j.or.ObjectRenderer get(java.lang.Object) -> get
    148:158:org.apache.log4j.or.ObjectRenderer get(java.lang.Class) -> get
    181:181:org.apache.log4j.or.ObjectRenderer getDefaultRenderer() -> getDefaultRenderer
    195:195:void put(java.lang.Class,org.apache.log4j.or.ObjectRenderer) -> put
    164:170:org.apache.log4j.or.ObjectRenderer searchInterfaces(java.lang.Class) -> searchInterfaces
org.apache.log4j.or.ThreadGroupRenderer -> org.apache.log4j.or.ThreadGroupRenderer:
# {"id":"sourceFile","fileName":"ThreadGroupRenderer.java"}
    30:30:void <init>() -> <init>
    50:73:java.lang.String doRender(java.lang.Object) -> doRender
org.apache.log4j.or.jms.MessageRenderer -> org.apache.log4j.or.jms.MessageRenderer:
    0:0:java.lang.String doRender(java.lang.Object) -> doRender
org.apache.log4j.or.sax.AttributesRenderer -> org.apache.log4j.or.sax.AttributesRenderer:
# {"id":"sourceFile","fileName":"AttributesRenderer.java"}
    31:31:void <init>() -> <init>
    40:57:java.lang.String doRender(java.lang.Object) -> doRender
org.apache.log4j.spi.AppenderAttachable -> org.apache.log4j.spi.AppenderAttachable:
# {"id":"sourceFile","fileName":"AppenderAttachable.java"}
org.apache.log4j.spi.Configurator -> org.apache.log4j.spi.Configurator:
# {"id":"sourceFile","fileName":"Configurator.java"}
org.apache.log4j.spi.DefaultRepositorySelector -> org.apache.log4j.spi.DefaultRepositorySelector:
# {"id":"sourceFile","fileName":"DefaultRepositorySelector.java"}
    27:28:void <init>(org.apache.log4j.spi.LoggerRepository) -> <init>
    33:33:org.apache.log4j.spi.LoggerRepository getLoggerRepository() -> getLoggerRepository
org.apache.log4j.spi.ErrorCode -> org.apache.log4j.spi.ErrorCode:
# {"id":"sourceFile","fileName":"ErrorCode.java"}
org.apache.log4j.spi.ErrorHandler -> org.apache.log4j.spi.ErrorHandler:
# {"id":"sourceFile","fileName":"ErrorHandler.java"}
org.apache.log4j.spi.Filter -> org.apache.log4j.spi.Filter:
# {"id":"sourceFile","fileName":"Filter.java"}
    0:0:void activateOptions() -> activateOptions
    121:121:org.apache.log4j.spi.Filter getNext() -> getNext
    114:114:void setNext(org.apache.log4j.spi.Filter) -> setNext
org.apache.log4j.spi.HierarchyEventListener -> org.apache.log4j.spi.HierarchyEventListener:
# {"id":"sourceFile","fileName":"HierarchyEventListener.java"}
org.apache.log4j.spi.LocationInfo -> org.apache.log4j.spi.LocationInfo:
# {"id":"sourceFile","fileName":"LocationInfo.java"}
    55:73:void <clinit>() -> <clinit>
    98:145:void <init>(java.lang.Throwable,java.lang.String) -> <init>
    154:184:java.lang.String getClassName() -> getClassName
    194:205:java.lang.String getFileName() -> getFileName
    215:225:java.lang.String getLineNumber() -> getLineNumber
    233:242:java.lang.String getMethodName() -> getMethodName
org.apache.log4j.spi.LoggerFactory -> org.apache.log4j.spi.LoggerFactory:
# {"id":"sourceFile","fileName":"LoggerFactory.java"}
org.apache.log4j.spi.LoggerRepository -> org.apache.log4j.spi.LoggerRepository:
# {"id":"sourceFile","fileName":"LoggerRepository.java"}
org.apache.log4j.spi.LoggingEvent -> org.apache.log4j.spi.LoggingEvent:
# {"id":"sourceFile","fileName":"LoggingEvent.java"}
    46:134:void <clinit>() -> <clinit>
    98:156:void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable) -> <init>
    98:182:void <init>(java.lang.String,org.apache.log4j.Category,long,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable) -> <init>
    44:44:java.lang.Class class$(java.lang.String) -> class$
    200:200:org.apache.log4j.Level getLevel() -> getLevel
    190:193:org.apache.log4j.spi.LocationInfo getLocationInformation() -> getLocationInformation
    208:208:java.lang.String getLoggerName() -> getLoggerName
    261:267:java.lang.Object getMDC(java.lang.String) -> getMDC
    276:282:void getMDCCopy() -> getMDCCopy
    222:225:java.lang.Object getMessage() -> getMessage
    236:240:java.lang.String getNDC() -> getNDC
    289:303:java.lang.String getRenderedMessage() -> getRenderedMessage
    310:310:long getStartTime() -> getStartTime
    315:317:java.lang.String getThreadName() -> getThreadName
    330:330:org.apache.log4j.spi.ThrowableInformation getThrowableInformation() -> getThrowableInformation
    339:342:java.lang.String[] getThrowableStrRep() -> getThrowableStrRep
    350:373:void readLevel(java.io.ObjectInputStream) -> readLevel
    379:384:void readObject(java.io.ObjectInputStream) -> readObject
    416:425:void writeLevel(java.io.ObjectOutputStream) -> writeLevel
    391:410:void writeObject(java.io.ObjectOutputStream) -> writeObject
org.apache.log4j.spi.NullWriter -> org.apache.log4j.spi.NullWriter:
# {"id":"sourceFile","fileName":"ThrowableInformation.java"}
    139:139:void <init>() -> <init>
    0:0:void close() -> close
    0:0:void flush() -> flush
    0:0:void write(char[],int,int) -> write
org.apache.log4j.spi.OptionHandler -> org.apache.log4j.spi.OptionHandler:
# {"id":"sourceFile","fileName":"OptionHandler.java"}
org.apache.log4j.spi.RendererSupport -> org.apache.log4j.spi.RendererSupport:
# {"id":"sourceFile","fileName":"RendererSupport.java"}
org.apache.log4j.spi.RepositorySelector -> org.apache.log4j.spi.RepositorySelector:
# {"id":"sourceFile","fileName":"RepositorySelector.java"}
org.apache.log4j.spi.RootCategory -> org.apache.log4j.spi.RootCategory:
# {"id":"sourceFile","fileName":"RootCategory.java"}
    35:36:void <init>(org.apache.log4j.Level) -> <init>
    47:47:org.apache.log4j.Level getChainedLevel() -> getChainedLevel
    59:63:void setLevel(org.apache.log4j.Level) -> setLevel
    70:70:void setPriority(org.apache.log4j.Level) -> setPriority
org.apache.log4j.spi.RootLogger -> org.apache.log4j.spi.RootLogger:
# {"id":"sourceFile","fileName":"RootLogger.java"}
    43:44:void <init>(org.apache.log4j.Level) -> <init>
    52:52:org.apache.log4j.Level getChainedLevel() -> getChainedLevel
    62:65:void setLevel(org.apache.log4j.Level) -> setLevel
org.apache.log4j.spi.ThrowableInformation -> org.apache.log4j.spi.ThrowableInformation:
# {"id":"sourceFile","fileName":"ThrowableInformation.java"}
    44:45:void <init>(java.lang.Throwable) -> <init>
    50:50:java.lang.Throwable getThrowable() -> getThrowable
    55:60:java.lang.String[] getThrowableStrRep() -> getThrowableStrRep
org.apache.log4j.spi.TriggeringEventEvaluator -> org.apache.log4j.spi.TriggeringEventEvaluator:
# {"id":"sourceFile","fileName":"TriggeringEventEvaluator.java"}
org.apache.log4j.spi.VectorWriter -> org.apache.log4j.spi.VectorWriter:
# {"id":"sourceFile","fileName":"ThrowableInformation.java"}
    80:81:void <init>() -> <init>
    85:85:void print(java.lang.Object) -> print
    89:89:void print(char[]) -> print
    93:93:void print(java.lang.String) -> print
    97:97:void println(java.lang.Object) -> println
    104:104:void println(char[]) -> println
    109:109:void println(java.lang.String) -> println
    129:132:java.lang.String[] toStringArray() -> toStringArray
    113:113:void write(char[]) -> write
    117:117:void write(char[],int,int) -> write
    121:121:void write(java.lang.String,int,int) -> write
    125:125:void write(java.lang.String) -> write
org.apache.log4j.varia.DenyAllFilter -> org.apache.log4j.varia.DenyAllFilter:
# {"id":"sourceFile","fileName":"DenyAllFilter.java"}
    35:35:void <init>() -> <init>
    0:0:int decide(org.apache.log4j.spi.LoggingEvent) -> decide
    0:0:java.lang.String[] getOptionStrings() -> getOptionStrings
    0:0:void setOption(java.lang.String,java.lang.String) -> setOption
org.apache.log4j.varia.ExternallyRolledFileAppender -> org.apache.log4j.varia.ExternallyRolledFileAppender:
# {"id":"sourceFile","fileName":"ExternallyRolledFileAppender.java"}
    60:67:void <init>() -> <init>
    92:99:void activateOptions() -> activateOptions
    84:84:int getPort() -> getPort
    76:76:void setPort(int) -> setPort
org.apache.log4j.varia.FallbackErrorHandler -> org.apache.log4j.varia.FallbackErrorHandler:
# {"id":"sourceFile","fileName":"FallbackErrorHandler.java"}
    45:45:void <init>() -> <init>
    0:0:void activateOptions() -> activateOptions
    0:0:void error(java.lang.String) -> error
    76:76:void error(java.lang.String,java.lang.Exception,int) -> error
    85:97:void error(java.lang.String,java.lang.Exception,int,org.apache.log4j.spi.LoggingEvent) -> error
    120:121:void setAppender(org.apache.log4j.Appender) -> setAppender
    129:130:void setBackupAppender(org.apache.log4j.Appender) -> setBackupAppender
    55:59:void setLogger(org.apache.log4j.Logger) -> setLogger
org.apache.log4j.varia.HUP -> org.apache.log4j.varia.HUP:
# {"id":"sourceFile","fileName":"ExternallyRolledFileAppender.java"}
    110:112:void <init>(org.apache.log4j.varia.ExternallyRolledFileAppender,int) -> <init>
    117:127:void run() -> run
org.apache.log4j.varia.HUPNode -> org.apache.log4j.varia.HUPNode:
# {"id":"sourceFile","fileName":"ExternallyRolledFileAppender.java"}
    141:149:void <init>(java.net.Socket,org.apache.log4j.varia.ExternallyRolledFileAppender) -> <init>
    155:169:void run() -> run
org.apache.log4j.varia.LevelMatchFilter -> org.apache.log4j.varia.LevelMatchFilter:
# {"id":"sourceFile","fileName":"LevelMatchFilter.java"}
    39:44:void <init>() -> <init>
    85:95:int decide(org.apache.log4j.spi.LoggingEvent) -> decide
    68:68:boolean getAcceptOnMatch() -> getAcceptOnMatch
    58:58:java.lang.String getLevelToMatch() -> getLevelToMatch
    63:63:void setAcceptOnMatch(boolean) -> setAcceptOnMatch
    53:53:void setLevelToMatch(java.lang.String) -> setLevelToMatch
org.apache.log4j.varia.LevelRangeFilter -> org.apache.log4j.varia.LevelRangeFilter:
# {"id":"sourceFile","fileName":"LevelRangeFilter.java"}
    54:59:void <init>() -> <init>
    70:87:int decide(org.apache.log4j.spi.LoggingEvent) -> decide
    118:118:boolean getAcceptOnMatch() -> getAcceptOnMatch
    102:102:org.apache.log4j.Level getLevelMax() -> getLevelMax
    110:110:org.apache.log4j.Level getLevelMin() -> getLevelMin
    142:142:void setAcceptOnMatch(boolean) -> setAcceptOnMatch
    126:126:void setLevelMax(org.apache.log4j.Level) -> setLevelMax
    134:134:void setLevelMin(org.apache.log4j.Level) -> setLevelMin
org.apache.log4j.varia.NullAppender -> org.apache.log4j.varia.NullAppender:
# {"id":"sourceFile","fileName":"NullAppender.java"}
    34:34:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    0:0:void activateOptions() -> activateOptions
    0:0:void append(org.apache.log4j.spi.LoggingEvent) -> append
    0:0:void close() -> close
    0:0:void doAppend(org.apache.log4j.spi.LoggingEvent) -> doAppend
    50:50:org.apache.log4j.varia.NullAppender getInstance() -> getInstance
    0:0:boolean requiresLayout() -> requiresLayout
org.apache.log4j.varia.ReloadingPropertyConfigurator -> org.apache.log4j.varia.ReloadingPropertyConfigurator:
# {"id":"sourceFile","fileName":"ReloadingPropertyConfigurator.java"}
    27:30:void <init>() -> <init>
    0:0:void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository) -> doConfigure
org.apache.log4j.varia.Roller -> org.apache.log4j.varia.Roller:
# {"id":"sourceFile","fileName":"Roller.java"}
    40:40:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    38:38:java.lang.Class class$(java.lang.String) -> class$
    80:85:void init(java.lang.String,java.lang.String) -> init
    60:67:void main(java.lang.String[]) -> main
    92:108:void roll() -> roll
    72:75:void usage(java.lang.String) -> usage
org.apache.log4j.varia.StringMatchFilter -> org.apache.log4j.varia.StringMatchFilter:
# {"id":"sourceFile","fileName":"StringMatchFilter.java"}
    37:53:void <init>() -> <init>
    104:113:int decide(org.apache.log4j.spi.LoggingEvent) -> decide
    96:96:boolean getAcceptOnMatch() -> getAcceptOnMatch
    62:62:java.lang.String[] getOptionStrings() -> getOptionStrings
    86:86:java.lang.String getStringToMatch() -> getStringToMatch
    91:91:void setAcceptOnMatch(boolean) -> setAcceptOnMatch
    72:75:void setOption(java.lang.String,java.lang.String) -> setOption
    81:81:void setStringToMatch(java.lang.String) -> setStringToMatch
org.apache.log4j.xml.DOMConfigurator -> org.apache.log4j.xml.DOMConfigurator:
# {"id":"sourceFile","fileName":"DOMConfigurator.java"}
    100:100:void <clinit>() -> <clinit>
    115:116:void <init>() -> <init>
    69:69:java.lang.Class class$(java.lang.String) -> class$
    552:553:void configure(org.w3c.dom.Element) -> configure
    733:733:void configure(java.lang.String) -> configure
    743:743:void configure(java.net.URL) -> configure
    567:567:void configureAndWatch(java.lang.String) -> configureAndWatch
    584:586:void configureAndWatch(java.lang.String,long) -> configureAndWatch
    596:604:void doConfigure(java.lang.String,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    610:618:void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    629:639:void doConfigure(java.io.InputStream,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    650:660:void doConfigure(java.io.Reader,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    671:682:void doConfigure(org.xml.sax.InputSource,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    689:715:void doConfigure(org.apache.log4j.xml.DOMConfigurator$ParseAction,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    723:724:void doConfigure(org.w3c.dom.Element,org.apache.log4j.spi.LoggerRepository) -> doConfigure
    124:151:org.apache.log4j.Appender findAppenderByName(org.w3c.dom.Document,java.lang.String) -> findAppenderByName
    161:163:org.apache.log4j.Appender findAppenderByReference(org.w3c.dom.Element) -> findAppenderByReference
    755:831:void parse(org.w3c.dom.Element) -> parse
    171:226:org.apache.log4j.Appender parseAppender(org.w3c.dom.Element) -> parseAppender
    310:346:void parseCategory(org.w3c.dom.Element) -> parseCategory
    355:378:void parseCategoryFactory(org.w3c.dom.Element) -> parseCategoryFactory
    406:444:void parseChildrenOfLoggerElement(org.w3c.dom.Element,org.apache.log4j.Logger,boolean) -> parseChildrenOfLoggerElement
    237:269:void parseErrorHandler(org.w3c.dom.Element,org.apache.log4j.Appender) -> parseErrorHandler
    278:300:void parseFilters(org.w3c.dom.Element,org.apache.log4j.Appender) -> parseFilters
    452:477:org.apache.log4j.Layout parseLayout(org.w3c.dom.Element) -> parseLayout
    498:532:void parseLevel(org.w3c.dom.Element,org.apache.log4j.Logger,boolean) -> parseLevel
    485:488:void parseRenderer(org.w3c.dom.Element) -> parseRenderer
    391:395:void parseRoot(org.w3c.dom.Element) -> parseRoot
    537:540:void setParameter(org.w3c.dom.Element,org.apache.log4j.config.PropertySetter) -> setParameter
    841:843:java.lang.String subst(java.lang.String) -> subst
org.apache.log4j.xml.DOMConfigurator$1 -> org.apache.log4j.xml.DOMConfigurator$1:
# {"id":"sourceFile","fileName":"DOMConfigurator.java"}
    600:600:void <init>(org.apache.log4j.xml.DOMConfigurator,java.lang.String) -> <init>
    598:598:org.w3c.dom.Document parse(javax.xml.parsers.DocumentBuilder) -> parse
    601:601:java.lang.String toString() -> toString
org.apache.log4j.xml.DOMConfigurator$2 -> org.apache.log4j.xml.DOMConfigurator$2:
# {"id":"sourceFile","fileName":"DOMConfigurator.java"}
    614:614:void <init>(org.apache.log4j.xml.DOMConfigurator,java.net.URL) -> <init>
    612:612:org.w3c.dom.Document parse(javax.xml.parsers.DocumentBuilder) -> parse
    615:615:java.lang.String toString() -> toString
org.apache.log4j.xml.DOMConfigurator$3 -> org.apache.log4j.xml.DOMConfigurator$3:
# {"id":"sourceFile","fileName":"DOMConfigurator.java"}
    635:635:void <init>(org.apache.log4j.xml.DOMConfigurator,java.io.InputStream) -> <init>
    631:633:org.w3c.dom.Document parse(javax.xml.parsers.DocumentBuilder) -> parse
    636:636:java.lang.String toString() -> toString
org.apache.log4j.xml.DOMConfigurator$4 -> org.apache.log4j.xml.DOMConfigurator$4:
# {"id":"sourceFile","fileName":"DOMConfigurator.java"}
    656:656:void <init>(org.apache.log4j.xml.DOMConfigurator,java.io.Reader) -> <init>
    652:654:org.w3c.dom.Document parse(javax.xml.parsers.DocumentBuilder) -> parse
    657:657:java.lang.String toString() -> toString
org.apache.log4j.xml.DOMConfigurator$5 -> org.apache.log4j.xml.DOMConfigurator$5:
# {"id":"sourceFile","fileName":"DOMConfigurator.java"}
    678:678:void <init>(org.apache.log4j.xml.DOMConfigurator,org.xml.sax.InputSource) -> <init>
    676:676:org.w3c.dom.Document parse(javax.xml.parsers.DocumentBuilder) -> parse
    679:679:java.lang.String toString() -> toString
org.apache.log4j.xml.DOMConfigurator$ParseAction -> org.apache.log4j.xml.DOMConfigurator$ParseAction:
# {"id":"sourceFile","fileName":"DOMConfigurator.java"}
org.apache.log4j.xml.Log4jEntityResolver -> org.apache.log4j.xml.Log4jEntityResolver:
# {"id":"sourceFile","fileName":"Log4jEntityResolver.java"}
    39:47:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String) -> resolveEntity
org.apache.log4j.xml.SAXErrorHandler -> org.apache.log4j.xml.SAXErrorHandler:
# {"id":"sourceFile","fileName":"SAXErrorHandler.java"}
    41:43:void emitMessage(java.lang.String,org.xml.sax.SAXParseException) -> emitMessage
    27:27:void error(org.xml.sax.SAXParseException) -> error
    32:32:void fatalError(org.xml.sax.SAXParseException) -> fatalError
    37:37:void warning(org.xml.sax.SAXParseException) -> warning
org.apache.log4j.xml.XMLLayout -> org.apache.log4j.xml.XMLLayout:
    0:0:void <init>() -> <init>
    0:0:void activateOptions() -> activateOptions
    0:0:java.lang.String format(org.apache.log4j.spi.LoggingEvent) -> format
    0:0:boolean getLocationInfo() -> getLocationInfo
    0:0:boolean ignoresThrowable() -> ignoresThrowable
    0:0:void setLocationInfo(boolean) -> setLocationInfo
org.apache.log4j.xml.XMLWatchdog -> org.apache.log4j.xml.XMLWatchdog:
# {"id":"sourceFile","fileName":"DOMConfigurator.java"}
    853:853:void <init>(java.lang.String) -> <init>
    861:861:void doOnChange() -> doOnChange
org.eclipse.paho.android.service.AlarmPingSender -> org.eclipse.paho.android.service.AlarmPingSender:
# {"id":"sourceFile","fileName":"AlarmPingSender.java"}
    52:60:void <init>(org.eclipse.paho.android.service.MqttService) -> <init>
    42:42:org.eclipse.paho.android.service.AlarmPingSender access$000(org.eclipse.paho.android.service.AlarmPingSender) -> access$000
    42:42:org.eclipse.paho.client.mqttv3.internal.ClientComms access$100(org.eclipse.paho.android.service.AlarmPingSender) -> access$100
    42:42:org.eclipse.paho.android.service.MqttService access$200(org.eclipse.paho.android.service.AlarmPingSender) -> access$200
    65:66:void init(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> init
    105:119:void schedule(long) -> schedule
    71:80:void start() -> start
    86:96:void stop() -> stop
org.eclipse.paho.android.service.AlarmPingSender$$ExternalSyntheticApiModelOutline0 -> org.eclipse.paho.android.service.AlarmPingSender$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void org.eclipse.paho.android.service.AlarmPingSender$$InternalSyntheticApiModelOutline$1$c61cf639cbaf300a605327dcbe9f007d434df2a7c2d015cac24ba02a58642785$0.m(android.app.AlarmManager,int,long,android.app.PendingIntent) -> m
      # {"id":"com.android.tools.r8.synthesized"}
org.eclipse.paho.android.service.AlarmPingSender$AlarmReceiver -> org.eclipse.paho.android.service.AlarmPingSender$AlarmReceiver:
# {"id":"sourceFile","fileName":"AlarmPingSender.java"}
    130:133:void <init>(org.eclipse.paho.android.service.AlarmPingSender) -> <init>
    130:130:java.lang.String access$300(org.eclipse.paho.android.service.AlarmPingSender$AlarmReceiver) -> access$300
    130:130:android.os.PowerManager$WakeLock access$400(org.eclipse.paho.android.service.AlarmPingSender$AlarmReceiver) -> access$400
    144:176:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.eclipse.paho.android.service.AlarmPingSender$AlarmReceiver$1 -> org.eclipse.paho.android.service.AlarmPingSender$AlarmReceiver$1:
# {"id":"sourceFile","fileName":"AlarmPingSender.java"}
    154:154:void <init>(org.eclipse.paho.android.service.AlarmPingSender$AlarmReceiver) -> <init>
    167:170:void onFailure(org.eclipse.paho.client.mqttv3.IMqttToken,java.lang.Throwable) -> onFailure
    158:161:void onSuccess(org.eclipse.paho.client.mqttv3.IMqttToken) -> onSuccess
org.eclipse.paho.android.service.BuildConfig -> org.eclipse.paho.android.service.BuildConfig:
# {"id":"sourceFile","fileName":"BuildConfig.java"}
org.eclipse.paho.android.service.DatabaseMessageStore -> org.eclipse.paho.android.service.DatabaseMessageStore:
# {"id":"sourceFile","fileName":"DatabaseMessageStore.java"}
    46:153:void <init>(org.eclipse.paho.android.service.MqttService,android.content.Context) -> <init>
    33:33:android.database.sqlite.SQLiteDatabase access$000(org.eclipse.paho.android.service.DatabaseMessageStore) -> access$000
    33:33:android.database.sqlite.SQLiteDatabase access$002(org.eclipse.paho.android.service.DatabaseMessageStore,android.database.sqlite.SQLiteDatabase) -> access$002
    33:33:org.eclipse.paho.android.service.DatabaseMessageStore$MQTTDatabaseHelper access$100(org.eclipse.paho.android.service.DatabaseMessageStore) -> access$100
    384:402:void clearArrivedMessages(java.lang.String) -> clearArrivedMessages
    457:458:void close() -> close
    246:272:boolean discardArrived(java.lang.String,java.lang.String) -> discardArrived
    290:290:java.util.Iterator getAllArrivedMessages(java.lang.String) -> getAllArrivedMessages
    210:229:int getArrivedRowCount(java.lang.String) -> getArrivedRowCount
    171:199:java.lang.String storeArrived(java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> storeArrived
org.eclipse.paho.android.service.DatabaseMessageStore$1 -> org.eclipse.paho.android.service.DatabaseMessageStore$1:
# {"id":"sourceFile","fileName":"DatabaseMessageStore.java"}
    290:319:void <init>(org.eclipse.paho.android.service.DatabaseMessageStore,java.lang.String) -> <init>
    367:368:void finalize() -> finalize
    324:327:boolean hasNext() -> hasNext
    290:290:java.lang.Object next() -> next
    332:354:org.eclipse.paho.android.service.MessageStore$StoredMessage next() -> next
    359:359:void remove() -> remove
org.eclipse.paho.android.service.DatabaseMessageStore$DbStoredData -> org.eclipse.paho.android.service.DatabaseMessageStore$DbStoredData:
# {"id":"sourceFile","fileName":"DatabaseMessageStore.java"}
    413:416:void <init>(org.eclipse.paho.android.service.DatabaseMessageStore,java.lang.String,java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> <init>
    426:426:java.lang.String getClientHandle() -> getClientHandle
    436:436:org.eclipse.paho.client.mqttv3.MqttMessage getMessage() -> getMessage
    421:421:java.lang.String getMessageId() -> getMessageId
    431:431:java.lang.String getTopic() -> getTopic
org.eclipse.paho.android.service.DatabaseMessageStore$MQTTDatabaseHelper -> org.eclipse.paho.android.service.DatabaseMessageStore$MQTTDatabaseHelper:
# {"id":"sourceFile","fileName":"DatabaseMessageStore.java"}
    78:79:void <init>(org.eclipse.paho.android.service.MqttTraceHandler,android.content.Context) -> <init>
    99:106:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    123:131:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
org.eclipse.paho.android.service.DatabaseMessageStore$MqttMessageHack -> org.eclipse.paho.android.service.DatabaseMessageStore$MqttMessageHack:
# {"id":"sourceFile","fileName":"DatabaseMessageStore.java"}
    445:446:void <init>(org.eclipse.paho.android.service.DatabaseMessageStore,byte[]) -> <init>
    451:451:void setDuplicate(boolean) -> setDuplicate
org.eclipse.paho.android.service.MessageStore -> org.eclipse.paho.android.service.MessageStore:
# {"id":"sourceFile","fileName":"MessageStore.java"}
org.eclipse.paho.android.service.MessageStore$StoredMessage -> org.eclipse.paho.android.service.MessageStore$StoredMessage:
# {"id":"sourceFile","fileName":"MessageStore.java"}
org.eclipse.paho.android.service.MqttAndroidClient -> org.eclipse.paho.android.service.MqttAndroidClient:
# {"id":"sourceFile","fileName":"MqttAndroidClient.java"}
    102:102:void <clinit>() -> <clinit>
    173:173:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    193:193:void <init>(android.content.Context,java.lang.String,java.lang.String,org.eclipse.paho.android.service.MqttAndroidClient$Ack) -> <init>
    212:212:void <init>(android.content.Context,java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence) -> <init>
    125:240:void <init>(android.content.Context,java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence,org.eclipse.paho.android.service.MqttAndroidClient$Ack) -> <init>
    76:76:org.eclipse.paho.android.service.MqttService access$002(org.eclipse.paho.android.service.MqttAndroidClient,org.eclipse.paho.android.service.MqttService) -> access$002
    76:76:boolean access$102(org.eclipse.paho.android.service.MqttAndroidClient,boolean) -> access$102
    76:76:void access$200(org.eclipse.paho.android.service.MqttAndroidClient) -> access$200
    76:76:boolean access$400(org.eclipse.paho.android.service.MqttAndroidClient) -> access$400
    76:76:void access$500(org.eclipse.paho.android.service.MqttAndroidClient,android.content.BroadcastReceiver) -> access$500
    1414:1416:boolean acknowledgeMessage(java.lang.String) -> acknowledgeMessage
    290:294:void close() -> close
    313:313:org.eclipse.paho.client.mqttv3.IMqttToken connect() -> connect
    334:334:org.eclipse.paho.client.mqttv3.IMqttToken connect(org.eclipse.paho.client.mqttv3.MqttConnectOptions) -> connect
    358:358:org.eclipse.paho.client.mqttv3.IMqttToken connect(java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> connect
    399:431:org.eclipse.paho.client.mqttv3.IMqttToken connect(org.eclipse.paho.client.mqttv3.MqttConnectOptions,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> connect
    1436:1439:void connectAction(android.os.Bundle) -> connectAction
    1476:1479:void connectExtendedAction(android.os.Bundle) -> connectExtendedAction
    1466:1469:void connectionLostAction(android.os.Bundle) -> connectionLostAction
    1670:1670:void deleteBufferedMessage(int) -> deleteBufferedMessage
    495:498:org.eclipse.paho.client.mqttv3.IMqttToken disconnect() -> disconnect
    524:527:org.eclipse.paho.client.mqttv3.IMqttToken disconnect(long) -> disconnect
    556:559:org.eclipse.paho.client.mqttv3.IMqttToken disconnect(java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> disconnect
    609:612:org.eclipse.paho.client.mqttv3.IMqttToken disconnect(long,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> disconnect
    1714:1714:void disconnectForcibly() -> disconnectForcibly
    1719:1719:void disconnectForcibly(long) -> disconnectForcibly
    1725:1725:void disconnectForcibly(long,long) -> disconnectForcibly
    1450:1456:void disconnected(android.os.Bundle) -> disconnected
    458:473:void doConnect() -> doConnect
    1666:1666:org.eclipse.paho.client.mqttv3.MqttMessage getBufferedMessage(int) -> getBufferedMessage
    1662:1662:int getBufferedMessageCount() -> getBufferedMessageCount
    265:265:java.lang.String getClientId() -> getClientId
    1649:1650:org.eclipse.paho.client.mqttv3.IMqttToken getMqttToken(android.os.Bundle) -> getMqttToken
    1285:1285:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken[] getPendingDeliveryTokens() -> getPendingDeliveryTokens
    1696:1708:javax.net.ssl.SSLSocketFactory getSSLSocketFactory(java.io.InputStream,java.lang.String) -> getSSLSocketFactory
    279:279:java.lang.String getServerURI() -> getServerURI
    251:251:boolean isConnected() -> isConnected
    1563:1578:void messageArrivedAction(android.os.Bundle) -> messageArrivedAction
    1423:1423:void messageArrivedComplete(int,int) -> messageArrivedComplete
    1545:1551:void messageDeliveredAction(android.os.Bundle) -> messageDeliveredAction
    1355:1398:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    647:647:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,byte[],int,boolean) -> publish
    673:673:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> publish
    714:722:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,byte[],int,boolean,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> publish
    812:817:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> publish
    448:451:void registerReceiver(android.content.BroadcastReceiver) -> registerReceiver
    1758:1760:void registerResources(android.content.Context) -> registerResources
    1631:1638:org.eclipse.paho.client.mqttv3.IMqttToken removeMqttToken(android.os.Bundle) -> removeMqttToken
    1514:1516:void sendAction(android.os.Bundle) -> sendAction
    1658:1658:void setBufferOpts(org.eclipse.paho.client.mqttv3.DisconnectedBufferOptions) -> setBufferOpts
    1313:1313:void setCallback(org.eclipse.paho.client.mqttv3.MqttCallback) -> setCallback
    1427:1427:void setManualAcks(boolean) -> setManualAcks
    1324:1324:void setTraceCallback(org.eclipse.paho.android.service.MqttTraceHandler) -> setTraceCallback
    1337:1339:void setTraceEnabled(boolean) -> setTraceEnabled
    1495:1504:void simpleAction(org.eclipse.paho.client.mqttv3.IMqttToken,android.os.Bundle) -> simpleAction
    1619:1620:java.lang.String storeToken(org.eclipse.paho.client.mqttv3.IMqttToken) -> storeToken
    844:844:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String,int) -> subscribe
    876:876:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String[],int[]) -> subscribe
    906:909:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String,int,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> subscribe
    1046:1049:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String[],int[],java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> subscribe
    1074:1074:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String,int,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> subscribe
    1094:1094:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String,int,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> subscribe
    1118:1118:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String[],int[],org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribe
    1145:1147:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String[],int[],java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener,org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribe
    1525:1526:void subscribeAction(android.os.Bundle) -> subscribeAction
    1596:1607:void traceAction(android.os.Bundle) -> traceAction
    1535:1536:void unSubscribeAction(android.os.Bundle) -> unSubscribeAction
    1733:1741:void unregisterResources() -> unregisterResources
    1168:1168:org.eclipse.paho.client.mqttv3.IMqttToken unsubscribe(java.lang.String) -> unsubscribe
    1186:1186:org.eclipse.paho.client.mqttv3.IMqttToken unsubscribe(java.lang.String[]) -> unsubscribe
    1211:1214:org.eclipse.paho.client.mqttv3.IMqttToken unsubscribe(java.lang.String,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> unsubscribe
    1258:1261:org.eclipse.paho.client.mqttv3.IMqttToken unsubscribe(java.lang.String[],java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> unsubscribe
org.eclipse.paho.android.service.MqttAndroidClient$1 -> org.eclipse.paho.android.service.MqttAndroidClient$1:
# {"id":"sourceFile","fileName":"MqttAndroidClient.java"}
    431:431:void <init>(org.eclipse.paho.android.service.MqttAndroidClient) -> <init>
    435:438:void run() -> run
org.eclipse.paho.android.service.MqttAndroidClient$Ack -> org.eclipse.paho.android.service.MqttAndroidClient$Ack:
# {"id":"sourceFile","fileName":"MqttAndroidClient.java"}
    84:95:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    84:84:org.eclipse.paho.android.service.MqttAndroidClient$Ack valueOf(java.lang.String) -> valueOf
    84:84:org.eclipse.paho.android.service.MqttAndroidClient$Ack[] values() -> values
org.eclipse.paho.android.service.MqttAndroidClient$MyServiceConnection -> org.eclipse.paho.android.service.MqttAndroidClient$MyServiceConnection:
# {"id":"sourceFile","fileName":"MqttAndroidClient.java"}
    107:107:void <init>(org.eclipse.paho.android.service.MqttAndroidClient) -> <init>
    107:107:void <init>(org.eclipse.paho.android.service.MqttAndroidClient,org.eclipse.paho.android.service.MqttAndroidClient$1) -> <init>
    111:115:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    120:120:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.eclipse.paho.android.service.MqttConnection -> org.eclipse.paho.android.service.MqttConnection:
# {"id":"sourceFile","fileName":"MqttConnection.java"}
    93:176:void <init>(org.eclipse.paho.android.service.MqttService,java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence,java.lang.String) -> <init>
    67:67:void access$100(org.eclipse.paho.android.service.MqttConnection,android.os.Bundle) -> access$100
    67:67:org.eclipse.paho.android.service.MqttService access$200(org.eclipse.paho.android.service.MqttConnection) -> access$200
    67:67:void access$300(org.eclipse.paho.android.service.MqttConnection,android.os.Bundle) -> access$300
    67:67:java.lang.String access$400(org.eclipse.paho.android.service.MqttConnection) -> access$400
    948:954:void acquireWakeLock() -> acquireWakeLock
    387:394:void close() -> close
    193:300:void connect(org.eclipse.paho.client.mqttv3.MqttConnectOptions,java.lang.String,java.lang.String) -> connect
    316:321:void connectComplete(boolean,java.lang.String) -> connectComplete
    808:851:void connectionLost(java.lang.Throwable) -> connectionLost
    1142:1142:void deleteBufferedMessage(int) -> deleteBufferedMessage
    348:356:void deliverBacklog() -> deliverBacklog
    864:890:void deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken) -> deliveryComplete
    410:441:void disconnect(long,java.lang.String,java.lang.String) -> disconnect
    453:483:void disconnect(java.lang.String,java.lang.String) -> disconnect
    326:330:void doAfterConnectFail(android.os.Bundle) -> doAfterConnectFail
    306:311:void doAfterConnectSuccess(android.os.Bundle) -> doAfterConnectSuccess
    1138:1138:org.eclipse.paho.client.mqttv3.MqttMessage getBufferedMessage(int) -> getBufferedMessage
    1134:1134:int getBufferedMessageCount() -> getBufferedMessageCount
    108:108:java.lang.String getClientHandle() -> getClientHandle
    85:85:java.lang.String getClientId() -> getClientId
    97:97:org.eclipse.paho.client.mqttv3.MqttConnectOptions getConnectOptions() -> getConnectOptions
    796:796:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken[] getPendingDeliveryTokens() -> getPendingDeliveryTokens
    77:77:java.lang.String getServerURI() -> getServerURI
    334:339:void handleException(android.os.Bundle,java.lang.Exception) -> handleException
    490:490:boolean isConnected() -> isConnected
    908:919:void messageArrived(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> messageArrived
    374:377:android.os.Bundle messageToBundle(java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> messageToBundle
    1007:1009:void offline() -> offline
    513:542:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,byte[],int,boolean,java.lang.String,java.lang.String) -> publish
    564:603:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage,java.lang.String,java.lang.String) -> publish
    1021:1114:void reconnect() -> reconnect
    962:963:void releaseWakeLock() -> releaseWakeLock
    1129:1130:void setBufferOpts(org.eclipse.paho.client.mqttv3.DisconnectedBufferOptions) -> setBufferOpts
    112:112:void setClientHandle(java.lang.String) -> setClientHandle
    89:89:void setClientId(java.lang.String) -> setClientId
    101:101:void setConnectOptions(org.eclipse.paho.client.mqttv3.MqttConnectOptions) -> setConnectOptions
    1121:1122:void setConnectingState(boolean) -> setConnectingState
    81:81:void setServerURI(java.lang.String) -> setServerURI
    938:941:void storeSendDetails(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage,org.eclipse.paho.client.mqttv3.IMqttDeliveryToken,java.lang.String,java.lang.String) -> storeSendDetails
    622:645:void subscribe(java.lang.String,int,java.lang.String,java.lang.String) -> subscribe
    663:686:void subscribe(java.lang.String[],int[],java.lang.String,java.lang.String) -> subscribe
    691:708:void subscribe(java.lang.String[],int[],java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribe
    724:747:void unsubscribe(java.lang.String,java.lang.String,java.lang.String) -> unsubscribe
    763:786:void unsubscribe(java.lang.String[],java.lang.String,java.lang.String) -> unsubscribe
org.eclipse.paho.android.service.MqttConnection$1 -> org.eclipse.paho.android.service.MqttConnection$1:
# {"id":"sourceFile","fileName":"MqttConnection.java"}
    244:244:void <init>(org.eclipse.paho.android.service.MqttConnection,android.os.Bundle,android.os.Bundle) -> <init>
    255:264:void onFailure(org.eclipse.paho.client.mqttv3.IMqttToken,java.lang.Throwable) -> onFailure
    248:249:void onSuccess(org.eclipse.paho.client.mqttv3.IMqttToken) -> onSuccess
org.eclipse.paho.android.service.MqttConnection$2 -> org.eclipse.paho.android.service.MqttConnection$2:
# {"id":"sourceFile","fileName":"MqttConnection.java"}
    812:812:void <init>(org.eclipse.paho.android.service.MqttConnection) -> <init>
    0:0:void onFailure(org.eclipse.paho.client.mqttv3.IMqttToken,java.lang.Throwable) -> onFailure
    0:0:void onSuccess(org.eclipse.paho.client.mqttv3.IMqttToken) -> onSuccess
org.eclipse.paho.android.service.MqttConnection$3 -> org.eclipse.paho.android.service.MqttConnection$3:
# {"id":"sourceFile","fileName":"MqttConnection.java"}
    1069:1069:void <init>(org.eclipse.paho.android.service.MqttConnection,android.os.Bundle,android.os.Bundle) -> <init>
    1081:1090:void onFailure(org.eclipse.paho.client.mqttv3.IMqttToken,java.lang.Throwable) -> onFailure
    1074:1076:void onSuccess(org.eclipse.paho.client.mqttv3.IMqttToken) -> onSuccess
org.eclipse.paho.android.service.MqttConnection$MqttConnectionListener -> org.eclipse.paho.android.service.MqttConnection$MqttConnectionListener:
# {"id":"sourceFile","fileName":"MqttConnection.java"}
    976:976:void <init>(org.eclipse.paho.android.service.MqttConnection,android.os.Bundle,org.eclipse.paho.android.service.MqttConnection$1) -> <init>
    980:981:void <init>(org.eclipse.paho.android.service.MqttConnection,android.os.Bundle) -> <init>
    991:997:void onFailure(org.eclipse.paho.client.mqttv3.IMqttToken,java.lang.Throwable) -> onFailure
    986:986:void onSuccess(org.eclipse.paho.client.mqttv3.IMqttToken) -> onSuccess
org.eclipse.paho.android.service.MqttDeliveryTokenAndroid -> org.eclipse.paho.android.service.MqttDeliveryTokenAndroid:
# {"id":"sourceFile","fileName":"MqttDeliveryTokenAndroid.java"}
    33:34:void <init>(org.eclipse.paho.android.service.MqttAndroidClient,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener,org.eclipse.paho.client.mqttv3.MqttMessage) -> <init>
    42:42:org.eclipse.paho.client.mqttv3.MqttMessage getMessage() -> getMessage
    50:51:void notifyDelivery(org.eclipse.paho.client.mqttv3.MqttMessage) -> notifyDelivery
    46:46:void setMessage(org.eclipse.paho.client.mqttv3.MqttMessage) -> setMessage
org.eclipse.paho.android.service.MqttService -> org.eclipse.paho.android.service.MqttService:
# {"id":"sourceFile","fileName":"MqttService.java"}
    235:258:void <init>() -> <init>
    226:226:void access$200(org.eclipse.paho.android.service.MqttService) -> access$200
    226:226:boolean access$300(org.eclipse.paho.android.service.MqttService) -> access$300
    226:226:boolean access$302(org.eclipse.paho.android.service.MqttService,boolean) -> access$302
    602:606:org.eclipse.paho.android.service.Status acknowledgeMessageArrival(java.lang.String,java.lang.String) -> acknowledgeMessageArrival
    276:286:void callbackToActivity(java.lang.String,org.eclipse.paho.android.service.Status,android.os.Bundle) -> callbackToActivity
    354:355:void close(java.lang.String) -> close
    328:329:void connect(java.lang.String,org.eclipse.paho.client.mqttv3.MqttConnectOptions,java.lang.String,java.lang.String) -> connect
    908:909:void deleteBufferedMessage(java.lang.String,int) -> deleteBufferedMessage
    370:378:void disconnect(java.lang.String,java.lang.String,java.lang.String) -> disconnect
    395:402:void disconnect(java.lang.String,long,java.lang.String,java.lang.String) -> disconnect
    903:904:org.eclipse.paho.client.mqttv3.MqttMessage getBufferedMessage(java.lang.String,int) -> getBufferedMessage
    898:899:int getBufferedMessageCount(java.lang.String) -> getBufferedMessageCount
    302:306:java.lang.String getClient(java.lang.String,java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence) -> getClient
    586:588:org.eclipse.paho.android.service.MqttConnection getConnection(java.lang.String) -> getConnection
    575:576:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken[] getPendingDeliveryTokens(java.lang.String) -> getPendingDeliveryTokens
    413:414:boolean isConnected(java.lang.String) -> isConnected
    840:845:boolean isOnline() -> isOnline
    704:704:boolean isTraceEnabled() -> isTraceEnabled
    857:858:void notifyClientsOffline() -> notifyClientsOffline
    662:664:android.os.IBinder onBind(android.content.Intent) -> onBind
    617:625:void onCreate() -> onCreate
    636:650:void onDestroy() -> onDestroy
    674:674:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    442:443:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,java.lang.String,byte[],int,boolean,java.lang.String,java.lang.String) -> publish
    467:468:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage,java.lang.String,java.lang.String) -> publish
    337:342:void reconnect() -> reconnect
    771:773:void registerBroadcastReceivers() -> registerBroadcastReceivers
    893:894:void setBufferOpts(java.lang.String,org.eclipse.paho.client.mqttv3.DisconnectedBufferOptions) -> setBufferOpts
    686:686:void setTraceCallbackId(java.lang.String) -> setTraceCallbackId
    695:695:void setTraceEnabled(boolean) -> setTraceEnabled
    487:488:void subscribe(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> subscribe
    507:508:void subscribe(java.lang.String,java.lang.String[],int[],java.lang.String,java.lang.String) -> subscribe
    527:528:void subscribe(java.lang.String,java.lang.String[],int[],java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribe
    734:741:void traceCallback(java.lang.String,java.lang.String,java.lang.String) -> traceCallback
    717:717:void traceDebug(java.lang.String,java.lang.String) -> traceDebug
    730:730:void traceError(java.lang.String,java.lang.String) -> traceError
    757:765:void traceException(java.lang.String,java.lang.String,java.lang.Exception) -> traceException
    792:794:void unregisterBroadcastReceivers() -> unregisterBroadcastReceivers
    545:546:void unsubscribe(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> unsubscribe
    563:564:void unsubscribe(java.lang.String,java.lang.String[],java.lang.String,java.lang.String) -> unsubscribe
org.eclipse.paho.android.service.MqttService$1 -> org.eclipse.paho.android.service.MqttService$1:
# {"id":"sourceFile","fileName":"MqttService.java"}
org.eclipse.paho.android.service.MqttService$BackgroundDataPreferenceReceiver -> org.eclipse.paho.android.service.MqttService$BackgroundDataPreferenceReceiver:
# {"id":"sourceFile","fileName":"MqttService.java"}
    866:866:void <init>(org.eclipse.paho.android.service.MqttService) -> <init>
    866:866:void <init>(org.eclipse.paho.android.service.MqttService,org.eclipse.paho.android.service.MqttService$1) -> <init>
    871:882:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.eclipse.paho.android.service.MqttService$NetworkConnectionIntentReceiver -> org.eclipse.paho.android.service.MqttService$NetworkConnectionIntentReceiver:
# {"id":"sourceFile","fileName":"MqttService.java"}
    809:809:void <init>(org.eclipse.paho.android.service.MqttService) -> <init>
    809:809:void <init>(org.eclipse.paho.android.service.MqttService,org.eclipse.paho.android.service.MqttService$1) -> <init>
    814:832:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.eclipse.paho.android.service.MqttServiceBinder -> org.eclipse.paho.android.service.MqttServiceBinder:
# {"id":"sourceFile","fileName":"MqttServiceBinder.java"}
    30:31:void <init>(org.eclipse.paho.android.service.MqttService) -> <init>
    49:49:java.lang.String getActivityToken() -> getActivityToken
    38:38:org.eclipse.paho.android.service.MqttService getService() -> getService
    42:42:void setActivityToken(java.lang.String) -> setActivityToken
org.eclipse.paho.android.service.MqttServiceConstants -> org.eclipse.paho.android.service.MqttServiceConstants:
# {"id":"sourceFile","fileName":"MqttServiceConstants.java"}
org.eclipse.paho.android.service.MqttTokenAndroid -> org.eclipse.paho.android.service.MqttTokenAndroid:
# {"id":"sourceFile","fileName":"MqttTokenAndroid.java"}
    57:57:void <init>(org.eclipse.paho.android.service.MqttAndroidClient,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> <init>
    36:73:void <init>(org.eclipse.paho.android.service.MqttAndroidClient,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener,java.lang.String[]) -> <init>
    197:197:org.eclipse.paho.client.mqttv3.IMqttActionListener getActionCallback() -> getActionCallback
    181:181:org.eclipse.paho.client.mqttv3.IMqttAsyncClient getClient() -> getClient
    169:169:org.eclipse.paho.client.mqttv3.MqttException getException() -> getException
    249:249:int[] getGrantedQos() -> getGrantedQos
    234:234:int getMessageId() -> getMessageId
    239:239:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage getResponse() -> getResponse
    244:244:boolean getSessionPresent() -> getSessionPresent
    205:205:java.lang.String[] getTopics() -> getTopics
    222:222:java.lang.Object getUserContext() -> getUserContext
    157:157:boolean isComplete() -> isComplete
    120:126:void notifyComplete() -> notifyComplete
    133:148:void notifyFailure(java.lang.Throwable) -> notifyFailure
    189:189:void setActionCallback(org.eclipse.paho.client.mqttv3.IMqttActionListener) -> setActionCallback
    161:161:void setComplete(boolean) -> setComplete
    226:226:void setDelegate(org.eclipse.paho.client.mqttv3.IMqttToken) -> setDelegate
    173:173:void setException(org.eclipse.paho.client.mqttv3.MqttException) -> setException
    213:213:void setUserContext(java.lang.Object) -> setUserContext
    81:90:void waitForCompletion() -> waitForCompletion
    100:113:void waitForCompletion(long) -> waitForCompletion
    113:113:void waitForCompletion(long) -> waitForCompletion
org.eclipse.paho.android.service.MqttTraceHandler -> org.eclipse.paho.android.service.MqttTraceHandler:
# {"id":"sourceFile","fileName":"MqttTraceHandler.java"}
org.eclipse.paho.android.service.ParcelableMqttMessage -> org.eclipse.paho.android.service.ParcelableMqttMessage:
# {"id":"sourceFile","fileName":"ParcelableMqttMessage.java"}
    100:100:void <clinit>() -> <clinit>
    48:54:void <init>(org.eclipse.paho.client.mqttv3.MqttMessage) -> <init>
    48:63:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    70:70:java.lang.String getMessageId() -> getMessageId
    91:94:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.eclipse.paho.android.service.ParcelableMqttMessage$1 -> org.eclipse.paho.android.service.ParcelableMqttMessage$1:
# {"id":"sourceFile","fileName":"ParcelableMqttMessage.java"}
    100:100:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    107:107:org.eclipse.paho.android.service.ParcelableMqttMessage createFromParcel(android.os.Parcel) -> createFromParcel
    100:100:java.lang.Object[] newArray(int) -> newArray
    116:116:org.eclipse.paho.android.service.ParcelableMqttMessage[] newArray(int) -> newArray
org.eclipse.paho.android.service.Status -> org.eclipse.paho.android.service.Status:
# {"id":"sourceFile","fileName":"Status.java"}
    18:32:void <clinit>() -> <clinit>
    18:18:void <init>(java.lang.String,int) -> <init>
    18:18:org.eclipse.paho.android.service.Status valueOf(java.lang.String) -> valueOf
    18:18:org.eclipse.paho.android.service.Status[] values() -> values
org.eclipse.paho.client.mqttv3.BufferedMessage -> org.eclipse.paho.client.mqttv3.BufferedMessage:
# {"id":"sourceFile","fileName":"BufferedMessage.java"}
    30:32:void <init>(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage,org.eclipse.paho.client.mqttv3.MqttToken) -> <init>
    36:36:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage getMessage() -> getMessage
    40:40:org.eclipse.paho.client.mqttv3.MqttToken getToken() -> getToken
org.eclipse.paho.client.mqttv3.DisconnectedBufferOptions -> org.eclipse.paho.client.mqttv3.DisconnectedBufferOptions:
# {"id":"sourceFile","fileName":"DisconnectedBufferOptions.java"}
    35:53:void <init>() -> <init>
    58:58:int getBufferSize() -> getBufferSize
    69:69:boolean isBufferEnabled() -> isBufferEnabled
    85:85:boolean isDeleteOldestMessages() -> isDeleteOldestMessages
    77:77:boolean isPersistBuffer() -> isPersistBuffer
    73:73:void setBufferEnabled(boolean) -> setBufferEnabled
    63:65:void setBufferSize(int) -> setBufferSize
    89:89:void setDeleteOldestMessages(boolean) -> setDeleteOldestMessages
    81:81:void setPersistBuffer(boolean) -> setPersistBuffer
org.eclipse.paho.client.mqttv3.IMqttActionListener -> org.eclipse.paho.client.mqttv3.IMqttActionListener:
# {"id":"sourceFile","fileName":"IMqttActionListener.java"}
org.eclipse.paho.client.mqttv3.IMqttAsyncClient -> org.eclipse.paho.client.mqttv3.IMqttAsyncClient:
# {"id":"sourceFile","fileName":"IMqttAsyncClient.java"}
org.eclipse.paho.client.mqttv3.IMqttClient -> org.eclipse.paho.client.mqttv3.IMqttClient:
# {"id":"sourceFile","fileName":"IMqttClient.java"}
org.eclipse.paho.client.mqttv3.IMqttDeliveryToken -> org.eclipse.paho.client.mqttv3.IMqttDeliveryToken:
# {"id":"sourceFile","fileName":"IMqttDeliveryToken.java"}
org.eclipse.paho.client.mqttv3.IMqttMessageListener -> org.eclipse.paho.client.mqttv3.IMqttMessageListener:
# {"id":"sourceFile","fileName":"IMqttMessageListener.java"}
org.eclipse.paho.client.mqttv3.IMqttToken -> org.eclipse.paho.client.mqttv3.IMqttToken:
# {"id":"sourceFile","fileName":"IMqttToken.java"}
org.eclipse.paho.client.mqttv3.MqttAsyncClient -> org.eclipse.paho.client.mqttv3.MqttAsyncClient:
# {"id":"sourceFile","fileName":"MqttAsyncClient.java"}
    116:116:void <clinit>() -> <clinit>
    212:212:void <init>(java.lang.String,java.lang.String) -> <init>
    317:317:void <init>(java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence) -> <init>
    322:322:void <init>(java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence,org.eclipse.paho.client.mqttv3.MqttPingSender) -> <init>
    438:438:void <init>(java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence,org.eclipse.paho.client.mqttv3.MqttPingSender,java.util.concurrent.ScheduledExecutorService) -> <init>
    97:596:void <init>(java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence,org.eclipse.paho.client.mqttv3.MqttPingSender,java.util.concurrent.ScheduledExecutorService,org.eclipse.paho.client.mqttv3.internal.HighResolutionTimer) -> <init>
    0:0:boolean Character_isHighSurrogate(char) -> Character_isHighSurrogate
    97:97:org.eclipse.paho.client.mqttv3.logging.Logger access$0(org.eclipse.paho.client.mqttv3.MqttAsyncClient) -> access$0
    96:96:java.lang.String access$1() -> access$1
    116:116:java.lang.Object access$10() -> access$10
    112:112:java.util.Timer access$11(org.eclipse.paho.client.mqttv3.MqttAsyncClient) -> access$11
    1423:1423:void access$2(org.eclipse.paho.client.mqttv3.MqttAsyncClient) -> access$2
    115:115:void access$3(org.eclipse.paho.client.mqttv3.MqttAsyncClient,boolean) -> access$3
    1438:1438:void access$4(org.eclipse.paho.client.mqttv3.MqttAsyncClient) -> access$4
    1446:1446:void access$5(org.eclipse.paho.client.mqttv3.MqttAsyncClient) -> access$5
    113:113:int access$6() -> access$6
    110:110:org.eclipse.paho.client.mqttv3.MqttConnectOptions access$7(org.eclipse.paho.client.mqttv3.MqttAsyncClient) -> access$7
    113:113:void access$8(int) -> access$8
    104:104:java.lang.String access$9(org.eclipse.paho.client.mqttv3.MqttAsyncClient) -> access$9
    1426:1434:void attemptReconnect() -> attemptReconnect
    999:1003:org.eclipse.paho.client.mqttv3.IMqttToken checkPing(java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> checkPing
    1603:1603:void close() -> close
    1614:1617:void close(boolean) -> close
    688:688:org.eclipse.paho.client.mqttv3.IMqttToken connect(java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> connect
    697:697:org.eclipse.paho.client.mqttv3.IMqttToken connect() -> connect
    708:708:org.eclipse.paho.client.mqttv3.IMqttToken connect(org.eclipse.paho.client.mqttv3.MqttConnectOptions) -> connect
    722:766:org.eclipse.paho.client.mqttv3.IMqttToken connect(org.eclipse.paho.client.mqttv3.MqttConnectOptions,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> connect
    660:663:org.eclipse.paho.client.mqttv3.internal.NetworkModule createNetworkModule(java.lang.String,org.eclipse.paho.client.mqttv3.MqttConnectOptions) -> createNetworkModule
    627:645:org.eclipse.paho.client.mqttv3.internal.NetworkModule[] createNetworkModules(java.lang.String,org.eclipse.paho.client.mqttv3.MqttConnectOptions) -> createNetworkModules
    1582:1582:void deleteBufferedMessage(int) -> deleteBufferedMessage
    779:779:org.eclipse.paho.client.mqttv3.IMqttToken disconnect(java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> disconnect
    788:788:org.eclipse.paho.client.mqttv3.IMqttToken disconnect() -> disconnect
    797:797:org.eclipse.paho.client.mqttv3.IMqttToken disconnect(long) -> disconnect
    810:825:org.eclipse.paho.client.mqttv3.IMqttToken disconnect(long,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> disconnect
    836:836:void disconnectForcibly() -> disconnectForcibly
    846:846:void disconnectForcibly(long) -> disconnectForcibly
    857:857:void disconnectForcibly(long,long) -> disconnectForcibly
    881:881:void disconnectForcibly(long,long,boolean) -> disconnectForcibly
    1298:1298:java.lang.String generateClientId() -> generateClientId
    1572:1572:org.eclipse.paho.client.mqttv3.MqttMessage getBufferedMessage(int) -> getBufferedMessage
    1561:1561:int getBufferedMessageCount() -> getBufferedMessageCount
    899:899:java.lang.String getClientId() -> getClientId
    924:924:java.lang.String getCurrentServerURI() -> getCurrentServerURI
    1627:1627:org.eclipse.paho.client.mqttv3.util.Debug getDebug() -> getDebug
    669:676:java.lang.String getHostName(java.lang.String) -> getHostName
    1594:1594:int getInFlightMessageCount() -> getInFlightMessageCount
    1308:1308:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken[] getPendingDeliveryTokens() -> getPendingDeliveryTokens
    908:908:java.lang.String getServerURI() -> getServerURI
    976:981:org.eclipse.paho.client.mqttv3.MqttTopic getTopic(java.lang.String) -> getTopic
    890:890:boolean isConnected() -> isConnected
    1280:1280:void messageArrivedComplete(int,int) -> messageArrivedComplete
    1321:1324:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,byte[],int,boolean,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> publish
    1336:1336:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,byte[],int,boolean) -> publish
    1348:1348:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> publish
    1363:1378:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken publish(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> publish
    1392:1410:void reconnect() -> reconnect
    1257:1257:boolean removeMessage(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken) -> removeMessage
    1552:1552:void setBufferOpts(org.eclipse.paho.client.mqttv3.DisconnectedBufferOptions) -> setBufferOpts
    1266:1267:void setCallback(org.eclipse.paho.client.mqttv3.MqttCallback) -> setCallback
    1276:1276:void setManualAcks(boolean) -> setManualAcks
    1441:1443:void startReconnectCycle() -> startReconnectCycle
    1449:1456:void stopReconnectCycle() -> stopReconnectCycle
    1017:1017:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String,int,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> subscribe
    1027:1027:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String,int) -> subscribe
    1037:1037:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String[],int[]) -> subscribe
    1050:1061:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String[],int[],java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> subscribe
    1105:1105:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String,int,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> subscribe
    1117:1117:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String,int,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> subscribe
    1129:1129:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String[],int[],org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribe
    1135:1158:org.eclipse.paho.client.mqttv3.IMqttToken subscribe(java.lang.String[],int[],java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener,org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribe
    1069:1090:org.eclipse.paho.client.mqttv3.IMqttToken subscribeBase(java.lang.String[],int[],java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> subscribeBase
    1173:1173:org.eclipse.paho.client.mqttv3.IMqttToken unsubscribe(java.lang.String,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> unsubscribe
    1184:1184:org.eclipse.paho.client.mqttv3.IMqttToken unsubscribe(java.lang.String) -> unsubscribe
    1195:1195:org.eclipse.paho.client.mqttv3.IMqttToken unsubscribe(java.lang.String[]) -> unsubscribe
    1211:1246:org.eclipse.paho.client.mqttv3.IMqttToken unsubscribe(java.lang.String[],java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener) -> unsubscribe
org.eclipse.paho.client.mqttv3.MqttAsyncClient$MqttReconnectActionListener -> org.eclipse.paho.client.mqttv3.MqttAsyncClient$MqttReconnectActionListener:
# {"id":"sourceFile","fileName":"MqttAsyncClient.java"}
    1504:1505:void <init>(org.eclipse.paho.client.mqttv3.MqttAsyncClient,java.lang.String) -> <init>
    1517:1521:void onFailure(org.eclipse.paho.client.mqttv3.IMqttToken,java.lang.Throwable) -> onFailure
    1510:1512:void onSuccess(org.eclipse.paho.client.mqttv3.IMqttToken) -> onSuccess
    1525:1537:void rescheduleReconnectCycle(int) -> rescheduleReconnectCycle
org.eclipse.paho.client.mqttv3.MqttAsyncClient$MqttReconnectCallback -> org.eclipse.paho.client.mqttv3.MqttAsyncClient$MqttReconnectCallback:
# {"id":"sourceFile","fileName":"MqttAsyncClient.java"}
    1475:1476:void <init>(org.eclipse.paho.client.mqttv3.MqttAsyncClient,boolean) -> <init>
    0:0:void connectComplete(boolean,java.lang.String) -> connectComplete
    1480:1485:void connectionLost(java.lang.Throwable) -> connectionLost
    0:0:void deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken) -> deliveryComplete
    0:0:void messageArrived(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> messageArrived
org.eclipse.paho.client.mqttv3.MqttAsyncClient$ReconnectTask -> org.eclipse.paho.client.mqttv3.MqttAsyncClient$ReconnectTask:
# {"id":"sourceFile","fileName":"MqttAsyncClient.java"}
    1461:1461:void <init>(org.eclipse.paho.client.mqttv3.MqttAsyncClient) -> <init>
    1461:1461:void <init>(org.eclipse.paho.client.mqttv3.MqttAsyncClient,org.eclipse.paho.client.mqttv3.MqttAsyncClient$ReconnectTask) -> <init>
    1466:1467:void run() -> run
org.eclipse.paho.client.mqttv3.MqttCallback -> org.eclipse.paho.client.mqttv3.MqttCallback:
# {"id":"sourceFile","fileName":"MqttCallback.java"}
org.eclipse.paho.client.mqttv3.MqttCallbackExtended -> org.eclipse.paho.client.mqttv3.MqttCallbackExtended:
# {"id":"sourceFile","fileName":"MqttCallbackExtended.java"}
org.eclipse.paho.client.mqttv3.MqttClient -> org.eclipse.paho.client.mqttv3.MqttClient:
# {"id":"sourceFile","fileName":"MqttClient.java"}
    138:138:void <init>(java.lang.String,java.lang.String) -> <init>
    63:227:void <init>(java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence) -> <init>
    63:317:void <init>(java.lang.String,java.lang.String,org.eclipse.paho.client.mqttv3.MqttClientPersistence,java.util.concurrent.ScheduledExecutorService) -> <init>
    613:613:void close() -> close
    620:620:void close(boolean) -> close
    324:324:void connect() -> connect
    331:331:void connect(org.eclipse.paho.client.mqttv3.MqttConnectOptions) -> connect
    338:339:org.eclipse.paho.client.mqttv3.IMqttToken connectWithResult(org.eclipse.paho.client.mqttv3.MqttConnectOptions) -> connectWithResult
    347:347:void disconnect() -> disconnect
    354:354:void disconnect(long) -> disconnect
    363:363:void disconnectForcibly() -> disconnectForcibly
    372:372:void disconnectForcibly(long) -> disconnectForcibly
    381:381:void disconnectForcibly(long,long) -> disconnectForcibly
    397:397:void disconnectForcibly(long,long,boolean) -> disconnectForcibly
    703:703:java.lang.String generateClientId() -> generateClientId
    629:629:java.lang.String getClientId() -> getClientId
    658:658:java.lang.String getCurrentServerURI() -> getCurrentServerURI
    719:719:org.eclipse.paho.client.mqttv3.util.Debug getDebug() -> getDebug
    636:636:org.eclipse.paho.client.mqttv3.IMqttDeliveryToken[] getPendingDeliveryTokens() -> getPendingDeliveryTokens
    643:643:java.lang.String getServerURI() -> getServerURI
    606:606:long getTimeToWait() -> getTimeToWait
    665:665:org.eclipse.paho.client.mqttv3.MqttTopic getTopic(java.lang.String) -> getTopic
    672:672:boolean isConnected() -> isConnected
    690:690:void messageArrivedComplete(int,int) -> messageArrivedComplete
    559:562:void publish(java.lang.String,byte[],int,boolean) -> publish
    570:570:void publish(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> publish
    711:711:void reconnect() -> reconnect
    679:679:void setCallback(org.eclipse.paho.client.mqttv3.MqttCallback) -> setCallback
    686:686:void setManualAcks(boolean) -> setManualAcks
    595:597:void setTimeToWait(long) -> setTimeToWait
    404:404:void subscribe(java.lang.String) -> subscribe
    411:415:void subscribe(java.lang.String[]) -> subscribe
    422:422:void subscribe(java.lang.String,int) -> subscribe
    429:429:void subscribe(java.lang.String[],int[]) -> subscribe
    436:436:void subscribe(java.lang.String,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> subscribe
    443:447:void subscribe(java.lang.String[],org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribe
    454:454:void subscribe(java.lang.String,int,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> subscribe
    459:466:void subscribe(java.lang.String[],int[],org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribe
    474:474:org.eclipse.paho.client.mqttv3.IMqttToken subscribeWithResponse(java.lang.String) -> subscribeWithResponse
    481:481:org.eclipse.paho.client.mqttv3.IMqttToken subscribeWithResponse(java.lang.String,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> subscribeWithResponse
    488:488:org.eclipse.paho.client.mqttv3.IMqttToken subscribeWithResponse(java.lang.String,int) -> subscribeWithResponse
    496:496:org.eclipse.paho.client.mqttv3.IMqttToken subscribeWithResponse(java.lang.String,int,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> subscribeWithResponse
    503:507:org.eclipse.paho.client.mqttv3.IMqttToken subscribeWithResponse(java.lang.String[]) -> subscribeWithResponse
    515:519:org.eclipse.paho.client.mqttv3.IMqttToken subscribeWithResponse(java.lang.String[],org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribeWithResponse
    526:526:org.eclipse.paho.client.mqttv3.IMqttToken subscribeWithResponse(java.lang.String[],int[]) -> subscribeWithResponse
    534:535:org.eclipse.paho.client.mqttv3.IMqttToken subscribeWithResponse(java.lang.String[],int[],org.eclipse.paho.client.mqttv3.IMqttMessageListener[]) -> subscribeWithResponse
    543:543:void unsubscribe(java.lang.String) -> unsubscribe
    551:551:void unsubscribe(java.lang.String[]) -> unsubscribe
org.eclipse.paho.client.mqttv3.MqttClientPersistence -> org.eclipse.paho.client.mqttv3.MqttClientPersistence:
# {"id":"sourceFile","fileName":"MqttClientPersistence.java"}
org.eclipse.paho.client.mqttv3.MqttConnectOptions -> org.eclipse.paho.client.mqttv3.MqttConnectOptions:
# {"id":"sourceFile","fileName":"MqttConnectOptions.java"}
    60:96:void <init>() -> <init>
    308:308:int getConnectionTimeout() -> getConnectionTimeout
    697:697:java.util.Properties getCustomWebSocketHeaders() -> getCustomWebSocketHeaders
    665:680:java.util.Properties getDebug() -> getDebug
    646:646:int getExecutorServiceTimeout() -> getExecutorServiceTimeout
    235:235:int getKeepAliveInterval() -> getKeepAliveInterval
    281:281:int getMaxInflight() -> getMaxInflight
    144:144:int getMaxReconnectDelay() -> getMaxReconnectDelay
    245:245:int getMqttVersion() -> getMqttVersion
    106:106:char[] getPassword() -> getPassword
    472:472:javax.net.ssl.HostnameVerifier getSSLHostnameVerifier() -> getSSLHostnameVerifier
    378:378:java.util.Properties getSSLProperties() -> getSSLProperties
    534:534:java.lang.String[] getServerURIs() -> getServerURIs
    335:335:javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    125:125:java.lang.String getUserName() -> getUserName
    358:358:java.lang.String getWillDestination() -> getWillDestination
    369:369:org.eclipse.paho.client.mqttv3.MqttMessage getWillMessage() -> getWillMessage
    622:622:boolean isAutomaticReconnect() -> isAutomaticReconnect
    497:497:boolean isCleanSession() -> isCleanSession
    459:459:boolean isHttpsHostnameVerificationEnabled() -> isHttpsHostnameVerificationEnabled
    642:642:void setAutomaticReconnect(boolean) -> setAutomaticReconnect
    525:525:void setCleanSession(boolean) -> setCleanSession
    323:325:void setConnectionTimeout(int) -> setConnectionTimeout
    693:693:void setCustomWebSocketHeaders(java.util.Properties) -> setCustomWebSocketHeaders
    657:657:void setExecutorServiceTimeout(int) -> setExecutorServiceTimeout
    463:463:void setHttpsHostnameVerificationEnabled(boolean) -> setHttpsHostnameVerificationEnabled
    268:270:void setKeepAliveInterval(int) -> setKeepAliveInterval
    296:298:void setMaxInflight(int) -> setMaxInflight
    154:154:void setMaxReconnectDelay(int) -> setMaxReconnectDelay
    608:612:void setMqttVersion(int) -> setMqttVersion
    116:116:void setPassword(char[]) -> setPassword
    487:487:void setSSLHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setSSLHostnameVerifier
    455:455:void setSSLProperties(java.util.Properties) -> setSSLProperties
    588:591:void setServerURIs(java.lang.String[]) -> setServerURIs
    348:348:void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    135:135:void setUserName(java.lang.String) -> setUserName
    172:174:void setWill(org.eclipse.paho.client.mqttv3.MqttTopic,byte[],int,boolean) -> setWill
    192:193:void setWill(java.lang.String,byte[],int,boolean) -> setWill
    220:225:void setWill(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage,int,boolean) -> setWill
    701:701:java.lang.String toString() -> toString
    201:204:void validateWill(java.lang.String,java.lang.Object) -> validateWill
org.eclipse.paho.client.mqttv3.MqttDeliveryToken -> org.eclipse.paho.client.mqttv3.MqttDeliveryToken:
# {"id":"sourceFile","fileName":"MqttDeliveryToken.java"}
    31:31:void <init>() -> <init>
    35:35:void <init>(java.lang.String) -> <init>
    47:47:org.eclipse.paho.client.mqttv3.MqttMessage getMessage() -> getMessage
    51:51:void setMessage(org.eclipse.paho.client.mqttv3.MqttMessage) -> setMessage
org.eclipse.paho.client.mqttv3.MqttException -> org.eclipse.paho.client.mqttv3.MqttException:
# {"id":"sourceFile","fileName":"MqttException.java"}
    175:176:void <init>(int) -> <init>
    185:187:void <init>(java.lang.Throwable) -> <init>
    197:199:void <init>(int,java.lang.Throwable) -> <init>
    217:217:java.lang.Throwable getCause() -> getCause
    225:225:java.lang.String getMessage() -> getMessage
    208:208:int getReasonCode() -> getReasonCode
    233:235:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.MqttMessage -> org.eclipse.paho.client.mqttv3.MqttMessage:
# {"id":"sourceFile","fileName":"MqttMessage.java"}
    27:56:void <init>() -> <init>
    27:65:void <init>(byte[]) -> <init>
    207:208:void checkMutable() -> checkMutable
    82:83:void clearPayload() -> clearPayload
    241:241:int getId() -> getId
    74:74:byte[] getPayload() -> getPayload
    135:135:int getQos() -> getQos
    223:223:boolean isDuplicate() -> isDuplicate
    112:112:boolean isRetained() -> isRetained
    213:213:void setDuplicate(boolean) -> setDuplicate
    232:232:void setId(int) -> setId
    203:203:void setMutable(boolean) -> setMutable
    94:98:void setPayload(byte[]) -> setPayload
    180:182:void setQos(int) -> setQos
    125:126:void setRetained(boolean) -> setRetained
    193:193:java.lang.String toString() -> toString
    41:41:void validateQos(int) -> validateQos
org.eclipse.paho.client.mqttv3.MqttPersistable -> org.eclipse.paho.client.mqttv3.MqttPersistable:
# {"id":"sourceFile","fileName":"MqttPersistable.java"}
org.eclipse.paho.client.mqttv3.MqttPersistenceException -> org.eclipse.paho.client.mqttv3.MqttPersistenceException:
# {"id":"sourceFile","fileName":"MqttPersistenceException.java"}
    32:32:void <init>() -> <init>
    41:41:void <init>(int) -> <init>
    49:49:void <init>(java.lang.Throwable) -> <init>
    58:58:void <init>(int,java.lang.Throwable) -> <init>
org.eclipse.paho.client.mqttv3.MqttPingSender -> org.eclipse.paho.client.mqttv3.MqttPingSender:
# {"id":"sourceFile","fileName":"MqttPingSender.java"}
org.eclipse.paho.client.mqttv3.MqttSecurityException -> org.eclipse.paho.client.mqttv3.MqttSecurityException:
# {"id":"sourceFile","fileName":"MqttSecurityException.java"}
    31:31:void <init>(int) -> <init>
    40:40:void <init>(java.lang.Throwable) -> <init>
    49:49:void <init>(int,java.lang.Throwable) -> <init>
org.eclipse.paho.client.mqttv3.MqttToken -> org.eclipse.paho.client.mqttv3.MqttToken:
# {"id":"sourceFile","fileName":"MqttToken.java"}
    37:39:void <init>() -> <init>
    37:43:void <init>(java.lang.String) -> <init>
    59:59:org.eclipse.paho.client.mqttv3.IMqttActionListener getActionCallback() -> getActionCallback
    71:71:org.eclipse.paho.client.mqttv3.IMqttAsyncClient getClient() -> getClient
    47:47:org.eclipse.paho.client.mqttv3.MqttException getException() -> getException
    91:91:int[] getGrantedQos() -> getGrantedQos
    87:87:int getMessageId() -> getMessageId
    99:99:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage getResponse() -> getResponse
    95:95:boolean getSessionPresent() -> getSessionPresent
    75:75:java.lang.String[] getTopics() -> getTopics
    79:79:java.lang.Object getUserContext() -> getUserContext
    51:51:boolean isComplete() -> isComplete
    55:55:void setActionCallback(org.eclipse.paho.client.mqttv3.IMqttActionListener) -> setActionCallback
    83:83:void setUserContext(java.lang.Object) -> setUserContext
    63:63:void waitForCompletion() -> waitForCompletion
    67:67:void waitForCompletion(long) -> waitForCompletion
org.eclipse.paho.client.mqttv3.MqttTopic -> org.eclipse.paho.client.mqttv3.MqttTopic:
# {"id":"sourceFile","fileName":"MqttTopic.java"}
    73:75:void <init>(java.lang.String,org.eclipse.paho.client.mqttv3.internal.ClientComms) -> <init>
    146:146:org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish createPublish(org.eclipse.paho.client.mqttv3.MqttMessage) -> createPublish
    139:139:java.lang.String getName() -> getName
    267:313:boolean isMatched(java.lang.String,java.lang.String) -> isMatched
    103:106:org.eclipse.paho.client.mqttv3.MqttDeliveryToken publish(byte[],int,boolean) -> publish
    126:129:org.eclipse.paho.client.mqttv3.MqttDeliveryToken publish(org.eclipse.paho.client.mqttv3.MqttMessage) -> publish
    155:155:java.lang.String toString() -> toString
    171:226:void validate(java.lang.String,boolean) -> validate
    231:245:void validateSingleLevelWildcard(java.lang.String) -> validateSingleLevelWildcard
org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender -> org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender:
# {"id":"sourceFile","fileName":"ScheduledExecutorPingSender.java"}
    0:0:void <clinit>() -> <clinit>
    36:47:void <init>(java.util.concurrent.ScheduledExecutorService) -> <init>
    41:41:java.lang.String access$0(org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender) -> access$0
    36:36:org.eclipse.paho.client.mqttv3.logging.Logger access$1(org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender) -> access$1
    35:35:java.lang.String access$2() -> access$2
    38:38:org.eclipse.paho.client.mqttv3.internal.ClientComms access$3(org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender) -> access$3
    52:55:void init(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> init
    77:77:void schedule(long) -> schedule
    62:64:void start() -> start
    70:72:void stop() -> stop
org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender$PingRunnable -> org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender$PingRunnable:
# {"id":"sourceFile","fileName":"ScheduledExecutorPingSender.java"}
    80:80:void <init>(org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender) -> <init>
    80:80:void <init>(org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender,org.eclipse.paho.client.mqttv3.ScheduledExecutorPingSender$PingRunnable) -> <init>
    84:89:void run() -> run
org.eclipse.paho.client.mqttv3.TimerPingSender -> org.eclipse.paho.client.mqttv3.TimerPingSender:
# {"id":"sourceFile","fileName":"TimerPingSender.java"}
    0:0:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    34:34:org.eclipse.paho.client.mqttv3.logging.Logger access$0(org.eclipse.paho.client.mqttv3.TimerPingSender) -> access$0
    33:33:java.lang.String access$1() -> access$1
    36:36:org.eclipse.paho.client.mqttv3.internal.ClientComms access$2(org.eclipse.paho.client.mqttv3.TimerPingSender) -> access$2
    42:46:void init(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> init
    70:70:void schedule(long) -> schedule
    53:57:void start() -> start
    63:65:void stop() -> stop
org.eclipse.paho.client.mqttv3.TimerPingSender$PingTask -> org.eclipse.paho.client.mqttv3.TimerPingSender$PingTask:
# {"id":"sourceFile","fileName":"TimerPingSender.java"}
    73:73:void <init>(org.eclipse.paho.client.mqttv3.TimerPingSender) -> <init>
    73:73:void <init>(org.eclipse.paho.client.mqttv3.TimerPingSender,org.eclipse.paho.client.mqttv3.TimerPingSender$PingTask) -> <init>
    78:79:void run() -> run
org.eclipse.paho.client.mqttv3.internal.ClientComms -> org.eclipse.paho.client.mqttv3.internal.ClientComms:
# {"id":"sourceFile","fileName":"ClientComms.java"}
    0:0:void <clinit>() -> <clinit>
    59:113:void <init>(org.eclipse.paho.client.mqttv3.IMqttAsyncClient,org.eclipse.paho.client.mqttv3.MqttClientPersistence,org.eclipse.paho.client.mqttv3.MqttPingSender,java.util.concurrent.ExecutorService,org.eclipse.paho.client.mqttv3.internal.HighResolutionTimer) -> <init>
    87:87:java.util.concurrent.ExecutorService access$0(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$0
    60:60:org.eclipse.paho.client.mqttv3.logging.Logger access$1(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$1
    72:72:org.eclipse.paho.client.mqttv3.internal.CommsSender access$10(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$10
    73:73:org.eclipse.paho.client.mqttv3.internal.CommsCallback access$11(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$11
    85:85:org.eclipse.paho.client.mqttv3.internal.DisconnectedMessageBuffer access$12(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$12
    59:59:java.lang.String access$2(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$2
    78:78:org.eclipse.paho.client.mqttv3.internal.CommsTokenStore access$3(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$3
    70:70:org.eclipse.paho.client.mqttv3.internal.NetworkModule[] access$4(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$4
    69:69:int access$5(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$5
    74:74:org.eclipse.paho.client.mqttv3.internal.ClientState access$6(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$6
    71:71:void access$7(org.eclipse.paho.client.mqttv3.internal.ClientComms,org.eclipse.paho.client.mqttv3.internal.CommsReceiver) -> access$7
    71:71:org.eclipse.paho.client.mqttv3.internal.CommsReceiver access$8(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> access$8
    72:72:void access$9(org.eclipse.paho.client.mqttv3.internal.ClientComms,org.eclipse.paho.client.mqttv3.internal.CommsSender) -> access$9
    804:804:org.eclipse.paho.client.mqttv3.MqttToken checkForActivity() -> checkForActivity
    818:822:org.eclipse.paho.client.mqttv3.MqttToken checkForActivity(org.eclipse.paho.client.mqttv3.IMqttActionListener) -> checkForActivity
    229:259:void close(boolean) -> close
    274:310:void connect(org.eclipse.paho.client.mqttv3.MqttConnectOptions,org.eclipse.paho.client.mqttv3.MqttToken) -> connect
    318:332:void connectComplete(org.eclipse.paho.client.mqttv3.internal.wire.MqttConnack,org.eclipse.paho.client.mqttv3.MqttException) -> connectComplete
    864:864:void deleteBufferedMessage(int) -> deleteBufferedMessage
    644:644:void deliveryComplete(org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish) -> deliveryComplete
    648:648:void deliveryComplete(int) -> deliveryComplete
    499:523:void disconnect(org.eclipse.paho.client.mqttv3.internal.wire.MqttDisconnect,long,org.eclipse.paho.client.mqttv3.MqttToken) -> disconnect
    528:528:void disconnectForcibly(long,long) -> disconnectForcibly
    539:560:void disconnectForcibly(long,long,boolean) -> disconnectForcibly
    931:931:int getActualInFlight() -> getActualInFlight
    859:860:org.eclipse.paho.client.mqttv3.MqttMessage getBufferedMessage(int) -> getBufferedMessage
    855:855:int getBufferedMessageCount() -> getBufferedMessageCount
    652:652:org.eclipse.paho.client.mqttv3.IMqttAsyncClient getClient() -> getClient
    660:660:org.eclipse.paho.client.mqttv3.internal.ClientState getClientState() -> getClientState
    664:664:org.eclipse.paho.client.mqttv3.MqttConnectOptions getConOptions() -> getConOptions
    668:672:java.util.Properties getDebug() -> getDebug
    656:656:long getKeepAlive() -> getKeepAlive
    631:631:int getNetworkModuleIndex() -> getNetworkModuleIndex
    634:634:org.eclipse.paho.client.mqttv3.internal.NetworkModule[] getNetworkModules() -> getNetworkModules
    640:640:org.eclipse.paho.client.mqttv3.MqttDeliveryToken[] getPendingDeliveryTokens() -> getPendingDeliveryTokens
    117:117:org.eclipse.paho.client.mqttv3.internal.CommsReceiver getReceiver() -> getReceiver
    625:625:org.eclipse.paho.client.mqttv3.MqttTopic getTopic(java.lang.String) -> getTopic
    463:488:org.eclipse.paho.client.mqttv3.MqttToken handleOldTokens(org.eclipse.paho.client.mqttv3.MqttToken,org.eclipse.paho.client.mqttv3.MqttException) -> handleOldTokens
    830:838:void handleRunException(java.lang.Exception) -> handleRunException
    148:169:void internalSend(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage,org.eclipse.paho.client.mqttv3.MqttToken) -> internalSend
    588:589:boolean isClosed() -> isClosed
    564:565:boolean isConnected() -> isConnected
    570:571:boolean isConnecting() -> isConnecting
    576:577:boolean isDisconnected() -> isDisconnected
    582:583:boolean isDisconnecting() -> isDisconnecting
    594:595:boolean isResting() -> isResting
    613:613:void messageArrivedComplete(int,int) -> messageArrivedComplete
    874:883:void notifyConnect() -> notifyConnect
    216:216:boolean removeMessage(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken) -> removeMessage
    621:621:void removeMessageListener(java.lang.String) -> removeMessageListener
    182:205:void sendNoWait(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage,org.eclipse.paho.client.mqttv3.MqttToken) -> sendNoWait
    601:601:void setCallback(org.eclipse.paho.client.mqttv3.MqttCallback) -> setCallback
    851:851:void setDisconnectedMessageBuffer(org.eclipse.paho.client.mqttv3.internal.DisconnectedMessageBuffer) -> setDisconnectedMessageBuffer
    609:609:void setManualAcks(boolean) -> setManualAcks
    617:617:void setMessageListener(java.lang.String,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> setMessageListener
    628:628:void setNetworkModuleIndex(int) -> setNetworkModuleIndex
    637:637:void setNetworkModules(org.eclipse.paho.client.mqttv3.internal.NetworkModule[]) -> setNetworkModules
    605:605:void setReconnectCallback(org.eclipse.paho.client.mqttv3.MqttCallbackExtended) -> setReconnectCallback
    847:847:void setRestingState(boolean) -> setRestingState
    351:448:void shutdownConnection(org.eclipse.paho.client.mqttv3.MqttToken,org.eclipse.paho.client.mqttv3.MqttException) -> shutdownConnection
    122:134:void shutdownExecutorService() -> shutdownExecutorService
org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG -> org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG:
# {"id":"sourceFile","fileName":"ClientComms.java"}
    686:690:void <init>(org.eclipse.paho.client.mqttv3.internal.ClientComms,org.eclipse.paho.client.mqttv3.internal.ClientComms,org.eclipse.paho.client.mqttv3.MqttToken,org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect,java.util.concurrent.ExecutorService) -> <init>
    702:742:void run() -> run
    694:697:void start() -> start
org.eclipse.paho.client.mqttv3.internal.ClientComms$DisconnectBG -> org.eclipse.paho.client.mqttv3.internal.ClientComms$DisconnectBG:
# {"id":"sourceFile","fileName":"ClientComms.java"}
    755:758:void <init>(org.eclipse.paho.client.mqttv3.internal.ClientComms,org.eclipse.paho.client.mqttv3.internal.wire.MqttDisconnect,long,org.eclipse.paho.client.mqttv3.MqttToken,java.util.concurrent.ExecutorService) -> <init>
    771:789:void run() -> run
    788:794:void run() -> run
    762:766:void start() -> start
org.eclipse.paho.client.mqttv3.internal.ClientComms$MessageDiscardedCallback -> org.eclipse.paho.client.mqttv3.internal.ClientComms$MessageDiscardedCallback:
# {"id":"sourceFile","fileName":"ClientComms.java"}
    889:889:void <init>(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> <init>
    893:894:void messageDiscarded(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> messageDiscarded
org.eclipse.paho.client.mqttv3.internal.ClientComms$ReconnectDisconnectedBufferCallback -> org.eclipse.paho.client.mqttv3.internal.ClientComms$ReconnectDisconnectedBufferCallback:
# {"id":"sourceFile","fileName":"ClientComms.java"}
    904:905:void <init>(org.eclipse.paho.client.mqttv3.internal.ClientComms,java.lang.String) -> <init>
    909:925:void publishBufferedMessage(org.eclipse.paho.client.mqttv3.BufferedMessage) -> publishBufferedMessage
org.eclipse.paho.client.mqttv3.internal.ClientState -> org.eclipse.paho.client.mqttv3.internal.ClientState:
# {"id":"sourceFile","fileName":"ClientState.java"}
    0:0:void <clinit>() -> <clinit>
    105:175:void <init>(org.eclipse.paho.client.mqttv3.MqttClientPersistence,org.eclipse.paho.client.mqttv3.internal.CommsTokenStore,org.eclipse.paho.client.mqttv3.internal.CommsCallback,org.eclipse.paho.client.mqttv3.internal.ClientComms,org.eclipse.paho.client.mqttv3.MqttPingSender,org.eclipse.paho.client.mqttv3.internal.HighResolutionTimer) -> <init>
    713:800:org.eclipse.paho.client.mqttv3.MqttToken checkForActivity(org.eclipse.paho.client.mqttv3.IMqttActionListener) -> checkForActivity
    971:976:boolean checkQuiesceLock() -> checkQuiesceLock
    226:236:void clearState() -> clearState
    1422:1444:void close() -> close
    1211:1214:void connected() -> connected
    957:963:void decrementInFlight() -> decrementInFlight
    1392:1395:void deliveryComplete(org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish) -> deliveryComplete
    1402:1405:void deliveryComplete(int) -> deliveryComplete
    1268:1281:void disconnected(org.eclipse.paho.client.mqttv3.MqttException) -> disconnected
    821:885:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage get() -> get
    1409:1409:int getActualInFlight() -> getActualInFlight
    196:196:boolean getCleanSession() -> getCleanSession
    1448:1464:java.util.Properties getDebug() -> getDebug
    190:190:long getKeepAlive() -> getKeepAlive
    1413:1413:int getMaxInFlight() -> getMaxInFlight
    1305:1323:int getNextMessageId() -> getNextMessageId
    212:212:java.lang.String getReceivedPersistenceKey(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> getReceivedPersistenceKey
    216:216:java.lang.String getReceivedPersistenceKey(int) -> getReceivedPersistenceKey
    220:220:java.lang.String getSendBufferedPersistenceKey(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> getSendBufferedPersistenceKey
    208:208:java.lang.String getSendConfirmPersistenceKey(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> getSendConfirmPersistenceKey
    200:200:java.lang.String getSendPersistenceKey(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> getSendPersistenceKey
    204:204:java.lang.String getSendPersistenceKey(int) -> getSendPersistenceKey
    270:279:void insertInOrder(java.util.Vector,org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> insertInOrder
    1140:1180:void notifyComplete(org.eclipse.paho.client.mqttv3.MqttToken) -> notifyComplete
    1381:1384:void notifyQueueLock() -> notifyQueueLock
    1001:1071:void notifyReceivedAck(org.eclipse.paho.client.mqttv3.internal.wire.MqttAck) -> notifyReceivedAck
    986:990:void notifyReceivedBytes(int) -> notifyReceivedBytes
    1083:1120:void notifyReceivedMsg(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> notifyReceivedMsg
    1187:1201:void notifyResult(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage,org.eclipse.paho.client.mqttv3.MqttToken,org.eclipse.paho.client.mqttv3.MqttException) -> notifyResult
    920:950:void notifySent(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> notifySent
    905:909:void notifySentBytes(int) -> notifySentBytes
    592:611:void persistBufferedMessage(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> persistBufferedMessage
    1338:1375:void quiesce(long) -> quiesce
    291:323:java.util.Vector reOrder(java.util.Vector) -> reOrder
    1295:1296:void releaseMessageId(int) -> releaseMessageId
    669:690:boolean removeMessage(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken) -> removeMessage
    1229:1255:java.util.Vector resolveOldTokens(org.eclipse.paho.client.mqttv3.MqttException) -> resolveOldTokens
    444:485:void restoreInflightMessages() -> restoreInflightMessages
    244:260:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage restoreMessage(java.lang.String,org.eclipse.paho.client.mqttv3.MqttPersistable) -> restoreMessage
    335:439:void restoreState() -> restoreState
    499:578:void send(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage,org.eclipse.paho.client.mqttv3.MqttToken) -> send
    193:193:void setCleanSession(boolean) -> setCleanSession
    899:899:void setKeepAliveInterval(long) -> setKeepAliveInterval
    183:183:void setKeepAliveSecs(long) -> setKeepAliveSecs
    179:180:void setMaxInflight(int) -> setMaxInflight
    622:626:void unPersistBufferedMessage(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> unPersistBufferedMessage
    638:657:void undo(org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish) -> undo
org.eclipse.paho.client.mqttv3.internal.CommsCallback -> org.eclipse.paho.client.mqttv3.internal.CommsCallback:
# {"id":"sourceFile","fileName":"CommsCallback.java"}
    0:0:void <clinit>() -> <clinit>
    50:79:void <init>(org.eclipse.paho.client.mqttv3.internal.ClientComms) -> <init>
    449:468:void asyncOperationComplete(org.eclipse.paho.client.mqttv3.MqttToken) -> asyncOperationComplete
    301:313:void connectionLost(org.eclipse.paho.client.mqttv3.MqttException) -> connectionLost
    501:519:boolean deliverMessage(java.lang.String,int,org.eclipse.paho.client.mqttv3.MqttMessage) -> deliverMessage
    327:338:void fireActionEvent(org.eclipse.paho.client.mqttv3.MqttToken) -> fireActionEvent
    479:479:java.lang.Thread getThread() -> getThread
    250:278:void handleActionComplete(org.eclipse.paho.client.mqttv3.MqttToken) -> handleActionComplete
    412:428:void handleMessage(org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish) -> handleMessage
    401:401:boolean isQuiesced() -> isQuiesced
    537:538:boolean isQuiescing() -> isQuiescing
    528:530:boolean isRunning() -> isRunning
    354:375:void messageArrived(org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish) -> messageArrived
    436:442:void messageArrivedComplete(int,int) -> messageArrivedComplete
    388:396:void quiesce() -> quiesce
    489:489:void removeMessageListener(java.lang.String) -> removeMessageListener
    493:493:void removeMessageListeners() -> removeMessageListeners
    165:244:void run() -> run
    152:152:void setCallback(org.eclipse.paho.client.mqttv3.MqttCallback) -> setCallback
    83:83:void setClientState(org.eclipse.paho.client.mqttv3.internal.ClientState) -> setClientState
    160:160:void setManualAcks(boolean) -> setManualAcks
    484:484:void setMessageListener(java.lang.String,org.eclipse.paho.client.mqttv3.IMqttMessageListener) -> setMessageListener
    156:156:void setReconnectCallback(org.eclipse.paho.client.mqttv3.MqttCallbackExtended) -> setReconnectCallback
    92:110:void start(java.lang.String,java.util.concurrent.ExecutorService) -> start
    122:147:void stop() -> stop
org.eclipse.paho.client.mqttv3.internal.CommsCallback$State -> org.eclipse.paho.client.mqttv3.internal.CommsCallback$State:
# {"id":"sourceFile","fileName":"CommsCallback.java"}
    60:60:void <clinit>() -> <clinit>
    60:60:void <init>(java.lang.String,int) -> <init>
    1:1:org.eclipse.paho.client.mqttv3.internal.CommsCallback$State valueOf(java.lang.String) -> valueOf
    1:1:org.eclipse.paho.client.mqttv3.internal.CommsCallback$State[] values() -> values
org.eclipse.paho.client.mqttv3.internal.CommsReceiver -> org.eclipse.paho.client.mqttv3.internal.CommsReceiver:
# {"id":"sourceFile","fileName":"CommsReceiver.java"}
    0:0:void <clinit>() -> <clinit>
    39:60:void <init>(org.eclipse.paho.client.mqttv3.internal.ClientComms,org.eclipse.paho.client.mqttv3.internal.ClientState,org.eclipse.paho.client.mqttv3.internal.CommsTokenStore,java.io.InputStream) -> <init>
    237:238:boolean isReceiving() -> isReceiving
    223:225:boolean isRunning() -> isRunning
    114:203:void run() -> run
    179:203:void run() -> run
    119:218:void run() -> run
    69:84:void start(java.lang.String,java.util.concurrent.ExecutorService) -> start
    93:107:void stop() -> stop
org.eclipse.paho.client.mqttv3.internal.CommsReceiver$State -> org.eclipse.paho.client.mqttv3.internal.CommsReceiver$State:
# {"id":"sourceFile","fileName":"CommsReceiver.java"}
    41:41:void <clinit>() -> <clinit>
    41:41:void <init>(java.lang.String,int) -> <init>
    1:1:org.eclipse.paho.client.mqttv3.internal.CommsReceiver$State valueOf(java.lang.String) -> valueOf
    1:1:org.eclipse.paho.client.mqttv3.internal.CommsReceiver$State[] values() -> values
org.eclipse.paho.client.mqttv3.internal.CommsSender -> org.eclipse.paho.client.mqttv3.internal.CommsSender:
# {"id":"sourceFile","fileName":"CommsSender.java"}
    0:0:void <clinit>() -> <clinit>
    35:58:void <init>(org.eclipse.paho.client.mqttv3.internal.ClientComms,org.eclipse.paho.client.mqttv3.internal.ClientState,org.eclipse.paho.client.mqttv3.internal.CommsTokenStore,java.io.OutputStream) -> <init>
    191:201:void handleRunException(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage,java.lang.Exception) -> handleRunException
    206:207:boolean isRunning() -> isRunning
    113:185:void run() -> run
    67:79:void start(java.lang.String,java.util.concurrent.ExecutorService) -> start
    89:109:void stop() -> stop
org.eclipse.paho.client.mqttv3.internal.CommsSender$State -> org.eclipse.paho.client.mqttv3.internal.CommsSender$State:
# {"id":"sourceFile","fileName":"CommsSender.java"}
    38:38:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String,int) -> <init>
    1:1:org.eclipse.paho.client.mqttv3.internal.CommsSender$State valueOf(java.lang.String) -> valueOf
    1:1:org.eclipse.paho.client.mqttv3.internal.CommsSender$State[] values() -> values
org.eclipse.paho.client.mqttv3.internal.CommsTokenStore -> org.eclipse.paho.client.mqttv3.internal.CommsTokenStore:
# {"id":"sourceFile","fileName":"CommsTokenStore.java"}
    0:0:void <clinit>() -> <clinit>
    48:62:void <init>(java.lang.String) -> <init>
    230:232:void clear() -> clear
    237:238:int count() -> count
    182:200:org.eclipse.paho.client.mqttv3.MqttDeliveryToken[] getOutstandingDelTokens() -> getOutstandingDelTokens
    207:220:java.util.Vector getOutstandingTokens() -> getOutstandingTokens
    73:74:org.eclipse.paho.client.mqttv3.MqttToken getToken(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> getToken
    78:78:org.eclipse.paho.client.mqttv3.MqttToken getToken(java.lang.String) -> getToken
    171:175:void open() -> open
    160:164:void quiesce(org.eclipse.paho.client.mqttv3.MqttException) -> quiesce
    84:84:org.eclipse.paho.client.mqttv3.MqttToken removeToken(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> removeToken
    92:95:org.eclipse.paho.client.mqttv3.MqttToken removeToken(java.lang.String) -> removeToken
    111:122:org.eclipse.paho.client.mqttv3.MqttDeliveryToken restoreToken(org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish) -> restoreToken
    133:141:void saveToken(org.eclipse.paho.client.mqttv3.MqttToken,org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> saveToken
    149:153:void saveToken(org.eclipse.paho.client.mqttv3.MqttToken,java.lang.String) -> saveToken
    242:251:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.internal.ConnectActionListener -> org.eclipse.paho.client.mqttv3.internal.ConnectActionListener:
# {"id":"sourceFile","fileName":"ConnectActionListener.java"}
    62:79:void <init>(org.eclipse.paho.client.mqttv3.MqttAsyncClient,org.eclipse.paho.client.mqttv3.MqttClientPersistence,org.eclipse.paho.client.mqttv3.internal.ClientComms,org.eclipse.paho.client.mqttv3.MqttConnectOptions,org.eclipse.paho.client.mqttv3.MqttToken,java.lang.Object,org.eclipse.paho.client.mqttv3.IMqttActionListener,boolean) -> <init>
    170:188:void connect() -> connect
    119:160:void onFailure(org.eclipse.paho.client.mqttv3.IMqttToken,java.lang.Throwable) -> onFailure
    88:104:void onSuccess(org.eclipse.paho.client.mqttv3.IMqttToken) -> onSuccess
    197:197:void setMqttCallbackExtended(org.eclipse.paho.client.mqttv3.MqttCallbackExtended) -> setMqttCallbackExtended
org.eclipse.paho.client.mqttv3.internal.DestinationProvider -> org.eclipse.paho.client.mqttv3.internal.DestinationProvider:
# {"id":"sourceFile","fileName":"DestinationProvider.java"}
org.eclipse.paho.client.mqttv3.internal.DisconnectedMessageBuffer -> org.eclipse.paho.client.mqttv3.internal.DisconnectedMessageBuffer:
# {"id":"sourceFile","fileName":"DisconnectedMessageBuffer.java"}
    30:115:void <init>(org.eclipse.paho.client.mqttv3.DisconnectedBufferOptions) -> <init>
    99:100:void deleteMessage(int) -> deleteMessage
    87:88:org.eclipse.paho.client.mqttv3.BufferedMessage getMessage(int) -> getMessage
    110:111:int getMessageCount() -> getMessageCount
    151:151:boolean isPersistBuffer() -> isPersistBuffer
    58:74:void putMessage(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage,org.eclipse.paho.client.mqttv3.MqttToken) -> putMessage
    122:138:void run() -> run
    155:155:void setMessageDiscardedCallBack(org.eclipse.paho.client.mqttv3.internal.IDiscardedBufferMessageCallback) -> setMessageDiscardedCallBack
    147:147:void setPublishCallback(org.eclipse.paho.client.mqttv3.internal.IDisconnectedBufferCallback) -> setPublishCallback
org.eclipse.paho.client.mqttv3.internal.ExceptionHelper -> org.eclipse.paho.client.mqttv3.internal.ExceptionHelper:
# {"id":"sourceFile","fileName":"ExceptionHelper.java"}
    60:60:void <init>() -> <init>
    28:31:org.eclipse.paho.client.mqttv3.MqttException createMqttException(int) -> createMqttException
    35:38:org.eclipse.paho.client.mqttv3.MqttException createMqttException(java.lang.Throwable) -> createMqttException
    51:51:boolean isClassAvailable(java.lang.String) -> isClassAvailable
org.eclipse.paho.client.mqttv3.internal.FileLock -> org.eclipse.paho.client.mqttv3.internal.FileLock:
# {"id":"sourceFile","fileName":"FileLock.java"}
    44:64:void <init>(java.io.File,java.lang.String) -> <init>
    74:93:void release() -> release
org.eclipse.paho.client.mqttv3.internal.HighResolutionTimer -> org.eclipse.paho.client.mqttv3.internal.HighResolutionTimer:
# {"id":"sourceFile","fileName":"HighResolutionTimer.java"}
org.eclipse.paho.client.mqttv3.internal.IDiscardedBufferMessageCallback -> org.eclipse.paho.client.mqttv3.internal.IDiscardedBufferMessageCallback:
# {"id":"sourceFile","fileName":"IDiscardedBufferMessageCallback.java"}
org.eclipse.paho.client.mqttv3.internal.IDisconnectedBufferCallback -> org.eclipse.paho.client.mqttv3.internal.IDisconnectedBufferCallback:
# {"id":"sourceFile","fileName":"IDisconnectedBufferCallback.java"}
org.eclipse.paho.client.mqttv3.internal.MessageCatalog -> org.eclipse.paho.client.mqttv3.internal.MessageCatalog:
# {"id":"sourceFile","fileName":"MessageCatalog.java"}
    0:0:void <clinit>() -> <clinit>
    25:42:java.lang.String getMessage(int) -> getMessage
org.eclipse.paho.client.mqttv3.internal.MqttPersistentData -> org.eclipse.paho.client.mqttv3.internal.MqttPersistentData:
# {"id":"sourceFile","fileName":"MqttPersistentData.java"}
    25:65:void <init>(java.lang.String,byte[],int,int,byte[],int,int) -> <init>
    73:73:byte[] getHeaderBytes() -> getHeaderBytes
    77:77:int getHeaderLength() -> getHeaderLength
    81:81:int getHeaderOffset() -> getHeaderOffset
    69:69:java.lang.String getKey() -> getKey
    85:85:byte[] getPayloadBytes() -> getPayloadBytes
    89:92:int getPayloadLength() -> getPayloadLength
    96:96:int getPayloadOffset() -> getPayloadOffset
org.eclipse.paho.client.mqttv3.internal.NetworkModule -> org.eclipse.paho.client.mqttv3.internal.NetworkModule:
# {"id":"sourceFile","fileName":"NetworkModule.java"}
org.eclipse.paho.client.mqttv3.internal.NetworkModuleService -> org.eclipse.paho.client.mqttv3.internal.NetworkModuleService:
# {"id":"sourceFile","fileName":"NetworkModuleService.java"}
    36:42:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    129:140:void applyRFC3986AuthorityPatch(java.net.URI) -> applyRFC3986AuthorityPatch
    95:111:org.eclipse.paho.client.mqttv3.internal.NetworkModule createInstance(java.lang.String,org.eclipse.paho.client.mqttv3.MqttConnectOptions,java.lang.String) -> createInstance
    152:157:void setURIField(java.net.URI,java.lang.String,java.lang.Object) -> setURIField
    60:77:void validateURI(java.lang.String) -> validateURI
org.eclipse.paho.client.mqttv3.internal.ResourceBundleCatalog -> org.eclipse.paho.client.mqttv3.internal.ResourceBundleCatalog:
# {"id":"sourceFile","fileName":"ResourceBundleCatalog.java"}
    25:27:void <init>() -> <init>
    32:32:java.lang.String getLocalizedMessage(int) -> getLocalizedMessage
org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule -> org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule:
# {"id":"sourceFile","fileName":"SSLNetworkModule.java"}
    0:0:void <clinit>() -> <clinit>
    42:71:void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String,int,java.lang.String) -> <init>
    80:80:java.lang.String[] getEnabledCiphers() -> getEnabledCiphers
    116:116:javax.net.ssl.HostnameVerifier getSSLHostnameVerifier() -> getSSLHostnameVerifier
    173:173:java.lang.String getServerURI() -> getServerURI
    124:124:boolean isHttpsHostnameVerificationEnabled() -> isHttpsHostnameVerificationEnabled
    92:106:void setEnabledCiphers(java.lang.String[]) -> setEnabledCiphers
    128:128:void setHttpsHostnameVerificationEnabled(boolean) -> setHttpsHostnameVerificationEnabled
    120:120:void setSSLHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setSSLHostnameVerifier
    111:112:void setSSLhandshakeTimeout(int) -> setSSLhandshakeTimeout
    132:169:void start() -> start
org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$ExternalSyntheticApiModelOutline0 -> org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$InternalSyntheticApiModelOutline$1$3980c3df401cb62fdb307f676dca24e617f6bdb9309cc64c89d8166b0396c4d9$0.m(javax.net.ssl.SSLParameters,java.util.List) -> m
      # {"id":"com.android.tools.r8.synthesized"}
org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$ExternalSyntheticApiModelOutline1 -> org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$InternalSyntheticApiModelOutline$1$3980c3df401cb62fdb307f676dca24e617f6bdb9309cc64c89d8166b0396c4d9$1.m(javax.net.ssl.SSLParameters,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$ExternalSyntheticApiModelOutline2 -> org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:javax.net.ssl.SNIHostName org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$InternalSyntheticApiModelOutline$8$3980c3df401cb62fdb307f676dca24e617f6bdb9309cc64c89d8166b0396c4d9$0.m(java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$ExternalSyntheticApiModelOutline3 -> org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule$$InternalSyntheticApiModelOutline$8$3980c3df401cb62fdb307f676dca24e617f6bdb9309cc64c89d8166b0396c4d9$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
org.eclipse.paho.client.mqttv3.internal.SSLNetworkModuleFactory -> org.eclipse.paho.client.mqttv3.internal.SSLNetworkModuleFactory:
# {"id":"sourceFile","fileName":"SSLNetworkModuleFactory.java"}
    46:82:org.eclipse.paho.client.mqttv3.internal.NetworkModule createNetworkModule(java.net.URI,org.eclipse.paho.client.mqttv3.MqttConnectOptions,java.lang.String) -> createNetworkModule
    31:31:java.util.Set getSupportedUriSchemes() -> getSupportedUriSchemes
    36:38:void validateURI(java.net.URI) -> validateURI
org.eclipse.paho.client.mqttv3.internal.SystemHighResolutionTimer -> org.eclipse.paho.client.mqttv3.internal.SystemHighResolutionTimer:
# {"id":"sourceFile","fileName":"SystemHighResolutionTimer.java"}
    30:30:long nanoTime() -> nanoTime
org.eclipse.paho.client.mqttv3.internal.TCPNetworkModule -> org.eclipse.paho.client.mqttv3.internal.TCPNetworkModule:
# {"id":"sourceFile","fileName":"TCPNetworkModule.java"}
    0:0:void <clinit>() -> <clinit>
    37:58:void <init>(javax.net.SocketFactory,java.lang.String,int,java.lang.String) -> <init>
    85:85:java.io.InputStream getInputStream() -> getInputStream
    89:89:java.io.OutputStream getOutputStream() -> getOutputStream
    111:111:java.lang.String getServerURI() -> getServerURI
    107:107:void setConnectTimeout(int) -> setConnectTimeout
    71:80:void start() -> start
    97:98:void stop() -> stop
org.eclipse.paho.client.mqttv3.internal.TCPNetworkModuleFactory -> org.eclipse.paho.client.mqttv3.internal.TCPNetworkModuleFactory:
# {"id":"sourceFile","fileName":"TCPNetworkModuleFactory.java"}
    44:60:org.eclipse.paho.client.mqttv3.internal.NetworkModule createNetworkModule(java.net.URI,org.eclipse.paho.client.mqttv3.MqttConnectOptions,java.lang.String) -> createNetworkModule
    29:29:java.util.Set getSupportedUriSchemes() -> getSupportedUriSchemes
    34:36:void validateURI(java.net.URI) -> validateURI
org.eclipse.paho.client.mqttv3.internal.Token -> org.eclipse.paho.client.mqttv3.internal.Token:
# {"id":"sourceFile","fileName":"Token.java"}
    0:0:void <clinit>() -> <clinit>
    32:57:void <init>(java.lang.String) -> <init>
    69:70:boolean checkResult() -> checkResult
    96:96:org.eclipse.paho.client.mqttv3.IMqttActionListener getActionCallback() -> getActionCallback
    281:281:org.eclipse.paho.client.mqttv3.IMqttAsyncClient getClient() -> getClient
    76:76:org.eclipse.paho.client.mqttv3.MqttException getException() -> getException
    376:377:int[] getGrantedQos() -> getGrantedQos
    339:339:java.lang.String getKey() -> getKey
    306:306:org.eclipse.paho.client.mqttv3.MqttMessage getMessage() -> getMessage
    61:61:int getMessageID() -> getMessageID
    391:391:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage getResponse() -> getResponse
    384:385:boolean getSessionPresent() -> getSessionPresent
    319:319:java.lang.String[] getTopics() -> getTopics
    327:327:java.lang.Object getUserContext() -> getUserContext
    310:310:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage getWireMessage() -> getWireMessage
    80:80:boolean isComplete() -> isComplete
    84:84:boolean isCompletePending() -> isCompletePending
    88:88:boolean isInUse() -> isInUse
    349:349:boolean isNotified() -> isNotified
    178:187:void markComplete(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage,org.eclipse.paho.client.mqttv3.MqttException) -> markComplete
    197:215:void notifyComplete() -> notifyComplete
    269:276:void notifySent() -> notifySent
    290:302:void reset() -> reset
    92:92:void setActionCallback(org.eclipse.paho.client.mqttv3.IMqttActionListener) -> setActionCallback
    285:285:void setClient(org.eclipse.paho.client.mqttv3.IMqttAsyncClient) -> setClient
    343:344:void setException(org.eclipse.paho.client.mqttv3.MqttException) -> setException
    335:335:void setKey(java.lang.String) -> setKey
    315:315:void setMessage(org.eclipse.paho.client.mqttv3.MqttMessage) -> setMessage
    65:65:void setMessageID(int) -> setMessageID
    353:353:void setNotified(boolean) -> setNotified
    323:323:void setTopics(java.lang.String[]) -> setTopics
    331:331:void setUserContext(java.lang.Object) -> setUserContext
    357:371:java.lang.String toString() -> toString
    100:100:void waitForCompletion() -> waitForCompletion
    106:115:void waitForCompletion(long) -> waitForCompletion
    127:127:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage waitForResponse() -> waitForResponse
    132:167:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage waitForResponse(long) -> waitForResponse
    237:257:void waitUntilSent() -> waitUntilSent
org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory -> org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory:
# {"id":"sourceFile","fileName":"SSLSocketFactoryFactory.java"}
    139:148:void <clinit>() -> <clinit>
    153:184:void <init>() -> <init>
    193:194:void <init>(org.eclipse.paho.client.mqttv3.logging.Logger) -> <init>
    224:229:void checkPropertyKeys(java.util.Properties) -> checkPropertyKeys
    380:388:void convertPassword(java.util.Properties) -> convertPassword
    1358:1365:javax.net.ssl.SSLSocketFactory createSocketFactory(java.lang.String) -> createSocketFactory
    309:318:char[] deObfuscate(java.lang.String) -> deObfuscate
    1101:1104:boolean getClientAuthentication(java.lang.String) -> getClientAuthentication
    513:514:java.util.Properties getConfiguration(java.lang.String) -> getConfiguration
    1087:1088:java.lang.String[] getEnabledCipherSuites(java.lang.String) -> getEnabledCipherSuites
    863:863:java.lang.String getJSSEProvider(java.lang.String) -> getJSSEProvider
    998:998:java.lang.String getKeyManager(java.lang.String) -> getKeyManager
    924:938:java.lang.String getKeyStore(java.lang.String) -> getKeyStore
    953:959:char[] getKeyStorePassword(java.lang.String) -> getKeyStorePassword
    986:986:java.lang.String getKeyStoreProvider(java.lang.String) -> getKeyStoreProvider
    974:974:java.lang.String getKeyStoreType(java.lang.String) -> getKeyStoreType
    798:804:java.lang.String getProperty(java.lang.String,java.lang.String,java.lang.String) -> getProperty
    824:834:java.lang.String getPropertyFromConfig(java.lang.String,java.lang.String) -> getPropertyFromConfig
    1125:1308:javax.net.ssl.SSLContext getSSLContext(java.lang.String) -> getSSLContext
    851:851:java.lang.String getSSLProtocol(java.lang.String) -> getSSLProtocol
    1075:1075:java.lang.String getTrustManager(java.lang.String) -> getTrustManager
    1010:1012:java.lang.String getTrustStore(java.lang.String) -> getTrustStore
    1030:1036:char[] getTrustStorePassword(java.lang.String) -> getTrustStorePassword
    1063:1063:java.lang.String getTrustStoreProvider(java.lang.String) -> getTrustStoreProvider
    1051:1051:java.lang.String getTrustStoreType(java.lang.String) -> getTrustStoreType
    433:441:void initialize(java.util.Properties,java.lang.String) -> initialize
    171:171:boolean isSupportedOnJVM() -> isSupportedOnJVM
    205:211:boolean keyValid(java.lang.String) -> keyValid
    462:475:void merge(java.util.Properties,java.lang.String) -> merge
    285:290:java.lang.String obfuscate(char[]) -> obfuscate
    331:338:java.lang.String packCipherSuites(java.lang.String[]) -> packCipherSuites
    491:495:boolean remove(java.lang.String) -> remove
    262:266:byte[] toByte(char[]) -> toByte
    244:247:char[] toChar(byte[]) -> toChar
    354:367:java.lang.String[] unpackCipherSuites(java.lang.String) -> unpackCipherSuites
org.eclipse.paho.client.mqttv3.internal.security.SimpleBase64Encoder -> org.eclipse.paho.client.mqttv3.internal.security.SimpleBase64Encoder:
# {"id":"sourceFile","fileName":"SimpleBase64Encoder.java"}
    22:22:void <clinit>() -> <clinit>
    55:81:byte[] decode(java.lang.String) -> decode
    32:51:java.lang.String encode(byte[]) -> encode
    108:108:long from64(byte[],int,int) -> from64
    89:95:java.lang.String to64(long,int) -> to64
org.eclipse.paho.client.mqttv3.internal.websocket.Base64 -> org.eclipse.paho.client.mqttv3.internal.websocket.Base64:
# {"id":"sourceFile","fileName":"Base64.java"}
    23:24:void <clinit>() -> <clinit>
    27:28:java.lang.String encode(java.lang.String) -> encode
    33:34:java.lang.String encodeBytes(byte[]) -> encodeBytes
org.eclipse.paho.client.mqttv3.internal.websocket.Base64$Base64Encoder -> org.eclipse.paho.client.mqttv3.internal.websocket.Base64$Base64Encoder:
# {"id":"sourceFile","fileName":"Base64.java"}
    41:44:void <init>(org.eclipse.paho.client.mqttv3.internal.websocket.Base64) -> <init>
    0:0:java.util.prefs.AbstractPreferences childSpi(java.lang.String) -> childSpi
    0:0:java.lang.String[] childrenNamesSpi() -> childrenNamesSpi
    0:0:void flushSpi() -> flushSpi
    53:53:java.lang.String getBase64String() -> getBase64String
    0:0:java.lang.String getSpi(java.lang.String) -> getSpi
    0:0:java.lang.String[] keysSpi() -> keysSpi
    49:49:void putSpi(java.lang.String,java.lang.String) -> putSpi
    0:0:void removeNodeSpi() -> removeNodeSpi
    0:0:void removeSpi(java.lang.String) -> removeSpi
    0:0:void syncSpi() -> syncSpi
org.eclipse.paho.client.mqttv3.internal.websocket.ExtendedByteArrayOutputStream -> org.eclipse.paho.client.mqttv3.internal.websocket.ExtendedByteArrayOutputStream:
# {"id":"sourceFile","fileName":"ExtendedByteArrayOutputStream.java"}
    15:17:void <init>(org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketNetworkModule) -> <init>
    20:22:void <init>(org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketSecureNetworkModule) -> <init>
    27:34:void flush() -> flush
    40:44:java.io.OutputStream getSocketOutputStream() -> getSocketOutputStream
org.eclipse.paho.client.mqttv3.internal.websocket.HandshakeFailedException -> org.eclipse.paho.client.mqttv3.internal.websocket.HandshakeFailedException:
# {"id":"sourceFile","fileName":"HandshakeFailedException.java"}
    18:18:void <init>() -> <init>
org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketFrame -> org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketFrame:
# {"id":"sourceFile","fileName":"WebSocketFrame.java"}
    30:62:void <init>(byte,boolean,byte[]) -> <init>
    30:111:void <init>(byte[]) -> <init>
    30:193:void <init>(java.io.InputStream) -> <init>
    297:297:void appendFinAndOpCode(java.nio.ByteBuffer,byte,boolean) -> appendFinAndOpCode
    254:273:void appendLength(java.nio.ByteBuffer,int,boolean) -> appendLength
    237:240:void appendLengthAndMask(java.nio.ByteBuffer,int,byte[]) -> appendLengthAndMask
    204:222:byte[] encodeFrame() -> encodeFrame
    307:311:byte[] generateMaskingKey() -> generateMaskingKey
    33:33:byte getOpcode() -> getOpcode
    41:41:byte[] getPayload() -> getPayload
    45:45:boolean isCloseFlag() -> isCloseFlag
    37:37:boolean isFin() -> isFin
    123:128:void setFinAndOpCode(byte) -> setFinAndOpCode
org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake -> org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake:
# {"id":"sourceFile","fileName":"WebSocketHandshake.java"}
    60:66:void <init>(java.io.InputStream,java.io.OutputStream,java.lang.String,java.lang.String,int,java.util.Properties) -> <init>
    77:80:void execute() -> execute
    190:194:java.util.Map getHeaders(java.util.ArrayList) -> getHeaders
    143:179:void receiveHandshakeResponse(java.lang.String) -> receiveHandshakeResponse
    92:133:void sendHandshakeRequest(java.lang.String) -> sendHandshakeRequest
    224:225:byte[] sha1(java.lang.String) -> sha1
    210:213:void verifyWebSocketKey(java.lang.String,java.lang.String) -> verifyWebSocketKey
org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketNetworkModule -> org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketNetworkModule:
# {"id":"sourceFile","fileName":"WebSocketNetworkModule.java"}
    0:0:void <clinit>() -> <clinit>
    36:61:void <init>(javax.net.SocketFactory,java.lang.String,java.lang.String,int,java.lang.String,java.util.Properties) -> <init>
    81:81:java.io.InputStream getInputStream() -> getInputStream
    85:85:java.io.OutputStream getOutputStream() -> getOutputStream
    105:105:java.lang.String getServerURI() -> getServerURI
    77:77:java.io.InputStream getSocketInputStream() -> getSocketInputStream
    73:73:java.io.OutputStream getSocketOutputStream() -> getSocketOutputStream
    65:69:void start() -> start
    93:101:void stop() -> stop
org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketNetworkModuleFactory -> org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketNetworkModuleFactory:
# {"id":"sourceFile","fileName":"WebSocketNetworkModuleFactory.java"}
    43:56:org.eclipse.paho.client.mqttv3.internal.NetworkModule createNetworkModule(java.net.URI,org.eclipse.paho.client.mqttv3.MqttConnectOptions,java.lang.String) -> createNetworkModule
    31:31:java.util.Set getSupportedUriSchemes() -> getSupportedUriSchemes
    0:0:void validateURI(java.net.URI) -> validateURI
org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketReceiver -> org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketReceiver:
# {"id":"sourceFile","fileName":"WebSocketReceiver.java"}
    0:0:void <clinit>() -> <clinit>
    30:43:void <init>(java.io.InputStream,java.io.PipedInputStream) -> <init>
    129:129:void closeOutputStream() -> closeOutputStream
    145:145:boolean isReceiving() -> isReceiving
    136:136:boolean isRunning() -> isRunning
    99:122:void run() -> run
    53:58:void start(java.lang.String) -> start
    69:93:void stop() -> stop
org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketSecureNetworkModule -> org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketSecureNetworkModule:
# {"id":"sourceFile","fileName":"WebSocketSecureNetworkModule.java"}
    0:0:void <clinit>() -> <clinit>
    35:59:void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String,java.lang.String,int,java.lang.String,java.util.Properties) -> <init>
    80:80:java.io.InputStream getInputStream() -> getInputStream
    84:84:java.io.OutputStream getOutputStream() -> getOutputStream
    101:101:java.lang.String getServerURI() -> getServerURI
    76:76:java.io.InputStream getSocketInputStream() -> getSocketInputStream
    72:72:java.io.OutputStream getSocketOutputStream() -> getSocketOutputStream
    63:67:void start() -> start
    89:97:void stop() -> stop
org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketSecureNetworkModuleFactory -> org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketSecureNetworkModuleFactory:
# {"id":"sourceFile","fileName":"WebSocketSecureNetworkModuleFactory.java"}
    46:75:org.eclipse.paho.client.mqttv3.internal.NetworkModule createNetworkModule(java.net.URI,org.eclipse.paho.client.mqttv3.MqttConnectOptions,java.lang.String) -> createNetworkModule
    34:34:java.util.Set getSupportedUriSchemes() -> getSupportedUriSchemes
    0:0:void validateURI(java.net.URI) -> validateURI
org.eclipse.paho.client.mqttv3.internal.wire.CountingInputStream -> org.eclipse.paho.client.mqttv3.internal.wire.CountingInputStream:
# {"id":"sourceFile","fileName":"CountingInputStream.java"}
    33:35:void <init>(java.io.InputStream) -> <init>
    50:50:int getCounter() -> getCounter
    39:41:int read() -> read
    57:57:void resetCounter() -> resetCounter
org.eclipse.paho.client.mqttv3.internal.wire.MqttAck -> org.eclipse.paho.client.mqttv3.internal.wire.MqttAck:
# {"id":"sourceFile","fileName":"MqttAck.java"}
    24:24:void <init>(byte) -> <init>
    0:0:byte getMessageInfo() -> getMessageInfo
    35:35:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.internal.wire.MqttConnack -> org.eclipse.paho.client.mqttv3.internal.wire.MqttConnack:
# {"id":"sourceFile","fileName":"MqttConnack.java"}
    35:40:void <init>(byte,byte[]) -> <init>
    0:0:java.lang.String getKey() -> getKey
    44:44:int getReturnCode() -> getReturnCode
    68:68:boolean getSessionPresent() -> getSessionPresent
    0:0:byte[] getVariableHeader() -> getVariableHeader
    0:0:boolean isMessageIdRequired() -> isMessageIdRequired
    64:64:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect -> org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect:
# {"id":"sourceFile","fileName":"MqttConnect.java"}
    57:66:void <init>(byte,byte[]) -> <init>
    71:81:void <init>(java.lang.String,int,boolean,int,java.lang.String,char[],org.eclipse.paho.client.mqttv3.MqttMessage,java.lang.String) -> <init>
    0:0:java.lang.String getKey() -> getKey
    0:0:byte getMessageInfo() -> getMessageInfo
    141:160:byte[] getPayload() -> getPayload
    100:135:byte[] getVariableHeader() -> getVariableHeader
    95:95:boolean isCleanSession() -> isCleanSession
    0:0:boolean isMessageIdRequired() -> isMessageIdRequired
    85:86:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.internal.wire.MqttDisconnect -> org.eclipse.paho.client.mqttv3.internal.wire.MqttDisconnect:
# {"id":"sourceFile","fileName":"MqttDisconnect.java"}
    29:29:void <init>() -> <init>
    33:33:void <init>(byte,byte[]) -> <init>
    0:0:java.lang.String getKey() -> getKey
    0:0:byte getMessageInfo() -> getMessageInfo
    0:0:byte[] getVariableHeader() -> getVariableHeader
    0:0:boolean isMessageIdRequired() -> isMessageIdRequired
org.eclipse.paho.client.mqttv3.internal.wire.MqttInputStream -> org.eclipse.paho.client.mqttv3.internal.wire.MqttInputStream:
# {"id":"sourceFile","fileName":"MqttInputStream.java"}
    37:51:void <init>(org.eclipse.paho.client.mqttv3.internal.ClientState,java.io.InputStream) -> <init>
    59:59:int available() -> available
    63:63:void close() -> close
    55:55:int read() -> read
    131:150:void readFully() -> readFully
    81:121:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage readMqttWireMessage() -> readMqttWireMessage
org.eclipse.paho.client.mqttv3.internal.wire.MqttOutputStream -> org.eclipse.paho.client.mqttv3.internal.wire.MqttOutputStream:
# {"id":"sourceFile","fileName":"MqttOutputStream.java"}
    0:0:void <clinit>() -> <clinit>
    34:41:void <init>(org.eclipse.paho.client.mqttv3.internal.ClientState,java.io.OutputStream) -> <init>
    45:45:void close() -> close
    49:49:void flush() -> flush
    53:54:void write(byte[]) -> write
    58:59:void write(byte[],int,int) -> write
    63:63:void write(int) -> write
    74:91:void write(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage) -> write
org.eclipse.paho.client.mqttv3.internal.wire.MqttPersistableWireMessage -> org.eclipse.paho.client.mqttv3.internal.wire.MqttPersistableWireMessage:
# {"id":"sourceFile","fileName":"MqttPersistableWireMessage.java"}
    26:26:void <init>(byte) -> <init>
    31:34:byte[] getHeaderBytes() -> getHeaderBytes
    39:39:int getHeaderLength() -> getHeaderLength
    0:0:int getHeaderOffset() -> getHeaderOffset
    52:55:byte[] getPayloadBytes() -> getPayloadBytes
    0:0:int getPayloadLength() -> getPayloadLength
    0:0:int getPayloadOffset() -> getPayloadOffset
org.eclipse.paho.client.mqttv3.internal.wire.MqttPingReq -> org.eclipse.paho.client.mqttv3.internal.wire.MqttPingReq:
# {"id":"sourceFile","fileName":"MqttPingReq.java"}
    29:29:void <init>() -> <init>
    33:33:void <init>(byte,byte[]) -> <init>
    0:0:java.lang.String getKey() -> getKey
    0:0:byte getMessageInfo() -> getMessageInfo
    0:0:byte[] getVariableHeader() -> getVariableHeader
    0:0:boolean isMessageIdRequired() -> isMessageIdRequired
org.eclipse.paho.client.mqttv3.internal.wire.MqttPingResp -> org.eclipse.paho.client.mqttv3.internal.wire.MqttPingResp:
# {"id":"sourceFile","fileName":"MqttPingResp.java"}
    28:28:void <init>(byte,byte[]) -> <init>
    0:0:java.lang.String getKey() -> getKey
    0:0:byte[] getVariableHeader() -> getVariableHeader
    0:0:boolean isMessageIdRequired() -> isMessageIdRequired
org.eclipse.paho.client.mqttv3.internal.wire.MqttPubAck -> org.eclipse.paho.client.mqttv3.internal.wire.MqttPubAck:
# {"id":"sourceFile","fileName":"MqttPubAck.java"}
    32:36:void <init>(byte,byte[]) -> <init>
    40:41:void <init>(org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish) -> <init>
    45:46:void <init>(int) -> <init>
    50:50:byte[] getVariableHeader() -> getVariableHeader
org.eclipse.paho.client.mqttv3.internal.wire.MqttPubComp -> org.eclipse.paho.client.mqttv3.internal.wire.MqttPubComp:
# {"id":"sourceFile","fileName":"MqttPubComp.java"}
    31:35:void <init>(byte,byte[]) -> <init>
    39:40:void <init>(org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish) -> <init>
    44:45:void <init>(int) -> <init>
    49:49:byte[] getVariableHeader() -> getVariableHeader
org.eclipse.paho.client.mqttv3.internal.wire.MqttPubRec -> org.eclipse.paho.client.mqttv3.internal.wire.MqttPubRec:
# {"id":"sourceFile","fileName":"MqttPubRec.java"}
    31:35:void <init>(byte,byte[]) -> <init>
    39:40:void <init>(org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish) -> <init>
    44:44:byte[] getVariableHeader() -> getVariableHeader
org.eclipse.paho.client.mqttv3.internal.wire.MqttPubRel -> org.eclipse.paho.client.mqttv3.internal.wire.MqttPubRel:
# {"id":"sourceFile","fileName":"MqttPubRel.java"}
    34:35:void <init>(org.eclipse.paho.client.mqttv3.internal.wire.MqttPubRec) -> <init>
    45:49:void <init>(byte,byte[]) -> <init>
    57:57:byte getMessageInfo() -> getMessageInfo
    53:53:byte[] getVariableHeader() -> getVariableHeader
    61:61:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish -> org.eclipse.paho.client.mqttv3.internal.wire.MqttPublish:
# {"id":"sourceFile","fileName":"MqttPublish.java"}
    35:40:void <init>(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage) -> <init>
    35:71:void <init>(byte,byte[]) -> <init>
    136:136:byte[] encodePayload(org.eclipse.paho.client.mqttv3.MqttMessage) -> encodePayload
    132:132:org.eclipse.paho.client.mqttv3.MqttMessage getMessage() -> getMessage
    116:120:byte getMessageInfo() -> getMessageInfo
    140:143:byte[] getPayload() -> getPayload
    149:149:int getPayloadLength() -> getPayloadLength
    128:128:java.lang.String getTopicName() -> getTopicName
    164:173:byte[] getVariableHeader() -> getVariableHeader
    0:0:boolean isMessageIdRequired() -> isMessageIdRequired
    156:158:void setMessageId(int) -> setMessageId
    77:112:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.internal.wire.MqttReceivedMessage -> org.eclipse.paho.client.mqttv3.internal.wire.MqttReceivedMessage:
# {"id":"sourceFile","fileName":"MqttReceivedMessage.java"}
    20:20:void <init>() -> <init>
    27:27:int getMessageId() -> getMessageId
    33:33:void setDuplicate(boolean) -> setDuplicate
    23:23:void setMessageId(int) -> setMessageId
org.eclipse.paho.client.mqttv3.internal.wire.MqttSuback -> org.eclipse.paho.client.mqttv3.internal.wire.MqttSuback:
# {"id":"sourceFile","fileName":"MqttSuback.java"}
    33:45:void <init>(byte,byte[]) -> <init>
    63:63:int[] getGrantedQos() -> getGrantedQos
    0:0:byte[] getVariableHeader() -> getVariableHeader
    54:59:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.internal.wire.MqttSubscribe -> org.eclipse.paho.client.mqttv3.internal.wire.MqttSubscribe:
# {"id":"sourceFile","fileName":"MqttSubscribe.java"}
    46:63:void <init>(byte,byte[]) -> <init>
    75:89:void <init>(java.lang.String[],int[]) -> <init>
    119:119:byte getMessageInfo() -> getMessageInfo
    136:145:byte[] getPayload() -> getPayload
    124:130:byte[] getVariableHeader() -> getVariableHeader
    0:0:boolean isRetryable() -> isRetryable
    97:115:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.internal.wire.MqttUnsubAck -> org.eclipse.paho.client.mqttv3.internal.wire.MqttUnsubAck:
# {"id":"sourceFile","fileName":"MqttUnsubAck.java"}
    31:35:void <init>(byte,byte[]) -> <init>
    0:0:byte[] getVariableHeader() -> getVariableHeader
org.eclipse.paho.client.mqttv3.internal.wire.MqttUnsubscribe -> org.eclipse.paho.client.mqttv3.internal.wire.MqttUnsubscribe:
# {"id":"sourceFile","fileName":"MqttUnsubscribe.java"}
    41:43:void <init>(java.lang.String[]) -> <init>
    58:73:void <init>(byte,byte[]) -> <init>
    94:94:byte getMessageInfo() -> getMessageInfo
    111:119:byte[] getPayload() -> getPayload
    99:105:byte[] getVariableHeader() -> getVariableHeader
    0:0:boolean isRetryable() -> isRetryable
    80:90:java.lang.String toString() -> toString
org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage -> org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage:
# {"id":"sourceFile","fileName":"MqttWireMessage.java"}
    52:56:void <clinit>() -> <clinit>
    67:81:void <init>(byte) -> <init>
    166:177:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage createWireMessage(org.eclipse.paho.client.mqttv3.MqttPersistable) -> createWireMessage
    181:182:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage createWireMessage(byte[]) -> createWireMessage
    187:237:org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage createWireMessage(java.io.InputStream) -> createWireMessage
    360:369:java.lang.String decodeUTF8(java.io.DataInputStream) -> decodeUTF8
    242:257:byte[] encodeMBI(long) -> encodeMBI
    292:298:byte[] encodeMessageId() -> encodeMessageId
    327:340:void encodeUTF8(java.io.DataOutputStream,java.lang.String) -> encodeUTF8
    140:152:byte[] getHeader() -> getHeader
    135:135:java.lang.String getKey() -> getKey
    114:114:int getMessageId() -> getMessageId
    0:0:byte[] getPayload() -> getPayload
    427:427:org.eclipse.paho.client.mqttv3.MqttToken getToken() -> getToken
    107:107:byte getType() -> getType
    0:0:boolean isMessageIdRequired() -> isMessageIdRequired
    0:0:boolean isRetryable() -> isRetryable
    276:287:org.eclipse.paho.client.mqttv3.internal.wire.MultiByteInteger readMBI(java.io.DataInputStream) -> readMBI
    307:307:void setDuplicate(boolean) -> setDuplicate
    124:124:void setMessageId(int) -> setMessageId
    436:436:void setToken(org.eclipse.paho.client.mqttv3.MqttToken) -> setToken
    440:440:java.lang.String toString() -> toString
    381:407:void validateUTF8String(java.lang.String) -> validateUTF8String
    416:416:void validateVariableByteInt(int) -> validateVariableByteInt
org.eclipse.paho.client.mqttv3.internal.wire.MultiByteArrayInputStream -> org.eclipse.paho.client.mqttv3.internal.wire.MultiByteArrayInputStream:
# {"id":"sourceFile","fileName":"MultiByteArrayInputStream.java"}
    30:38:void <init>(byte[],int,int,byte[],int,int) -> <init>
    42:52:int read() -> read
org.eclipse.paho.client.mqttv3.internal.wire.MultiByteInteger -> org.eclipse.paho.client.mqttv3.internal.wire.MultiByteInteger:
# {"id":"sourceFile","fileName":"MultiByteInteger.java"}
    27:27:void <init>(int) -> <init>
    30:32:void <init>(int,int) -> <init>
    39:39:int getEncodedLength() -> getEncodedLength
    46:46:int getValue() -> getValue
org.eclipse.paho.client.mqttv3.logging.JSR47Logger -> org.eclipse.paho.client.mqttv3.logging.JSR47Logger:
# {"id":"sourceFile","fileName":"JSR47Logger.java"}
    35:41:void <init>() -> <init>
    106:106:void config(java.lang.String,java.lang.String,java.lang.String) -> config
    110:110:void config(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]) -> config
    114:114:void config(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable) -> config
    263:274:void dumpMemoryTrace47(java.util.logging.Logger) -> dumpMemoryTrace47
    256:256:void dumpTrace() -> dumpTrace
    130:130:void fine(java.lang.String,java.lang.String,java.lang.String) -> fine
    134:134:void fine(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]) -> fine
    138:138:void fine(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable) -> fine
    142:142:void finer(java.lang.String,java.lang.String,java.lang.String) -> finer
    146:146:void finer(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]) -> finer
    150:150:void finer(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable) -> finer
    154:154:void finest(java.lang.String,java.lang.String,java.lang.String) -> finest
    158:158:void finest(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]) -> finest
    162:162:void finest(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable) -> finest
    248:248:java.lang.String formatMessage(java.lang.String,java.lang.Object[]) -> formatMessage
    181:181:java.lang.String getResourceMessage(java.util.ResourceBundle,java.lang.String) -> getResourceMessage
    94:94:void info(java.lang.String,java.lang.String,java.lang.String) -> info
    98:98:void info(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]) -> info
    102:102:void info(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable) -> info
    50:57:void initialise(java.util.ResourceBundle,java.lang.String,java.lang.String) -> initialise
    66:66:boolean isLoggable(int) -> isLoggable
    119:121:void log(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable) -> log
    193:210:void logToJsr47(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object[],java.lang.Throwable) -> logToJsr47
    218:236:java.util.logging.Level mapJULLevel(int) -> mapJULLevel
    62:62:void setResourceName(java.lang.String) -> setResourceName
    70:70:void severe(java.lang.String,java.lang.String,java.lang.String) -> severe
    74:74:void severe(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]) -> severe
    78:78:void severe(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable) -> severe
    167:173:void trace(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable) -> trace
    82:82:void warning(java.lang.String,java.lang.String,java.lang.String) -> warning
    86:86:void warning(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[]) -> warning
    90:90:void warning(java.lang.String,java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable) -> warning
org.eclipse.paho.client.mqttv3.logging.Logger -> org.eclipse.paho.client.mqttv3.logging.Logger:
# {"id":"sourceFile","fileName":"Logger.java"}
org.eclipse.paho.client.mqttv3.logging.LoggerFactory -> org.eclipse.paho.client.mqttv3.logging.LoggerFactory:
# {"id":"sourceFile","fileName":"LoggerFactory.java"}
    52:52:void <clinit>() -> <clinit>
    65:76:org.eclipse.paho.client.mqttv3.logging.Logger getLogger(java.lang.String,java.lang.String) -> getLogger
    97:116:org.eclipse.paho.client.mqttv3.logging.Logger getLogger(java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.String) -> getLogger
    134:138:java.lang.String getLoggingProperty(java.lang.String) -> getLoggingProperty
    153:153:void setLogger(java.lang.String) -> setLogger
org.eclipse.paho.client.mqttv3.logging.SimpleLogFormatter -> org.eclipse.paho.client.mqttv3.logging.SimpleLogFormatter:
# {"id":"sourceFile","fileName":"SimpleLogFormatter.java"}
    29:29:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    41:44:java.lang.String format(java.util.logging.LogRecord) -> format
    43:80:java.lang.String format(java.util.logging.LogRecord) -> format
    93:101:java.lang.String left(java.lang.String,int,char) -> left
org.eclipse.paho.client.mqttv3.persist.MemoryPersistence -> org.eclipse.paho.client.mqttv3.persist.MemoryPersistence:
# {"id":"sourceFile","fileName":"MemoryPersistence.java"}
    107:108:void checkIsOpen() -> checkIsOpen
    90:91:void clear() -> clear
    42:43:void close() -> close
    98:99:boolean containsKey(java.lang.String) -> containsKey
    59:60:org.eclipse.paho.client.mqttv3.MqttPersistable get(java.lang.String) -> get
    51:52:java.util.Enumeration keys() -> keys
    67:67:void open(java.lang.String,java.lang.String) -> open
    74:75:void put(java.lang.String,org.eclipse.paho.client.mqttv3.MqttPersistable) -> put
    82:83:void remove(java.lang.String) -> remove
org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence -> org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence:
# {"id":"sourceFile","fileName":"MqttDefaultFilePersistence.java"}
    64:64:void <init>() -> <init>
    50:72:void <init>(java.lang.String) -> <init>
    139:140:void checkIsOpen() -> checkIsOpen
    300:305:void clear() -> clear
    146:155:void close() -> close
    294:296:boolean containsKey(java.lang.String) -> containsKey
    207:222:org.eclipse.paho.client.mqttv3.MqttPersistable get(java.lang.String) -> get
    57:60:java.io.FilenameFilter getFilenameFilter() -> getFilenameFilter
    257:260:java.io.File[] getFiles() -> getFiles
    266:266:boolean isSafeChar(char) -> isSafeChar
    245:253:java.util.Enumeration keys() -> keys
    77:130:void open(java.lang.String,java.lang.String) -> open
    166:200:void put(java.lang.String,org.eclipse.paho.client.mqttv3.MqttPersistable) -> put
    200:203:void put(java.lang.String,org.eclipse.paho.client.mqttv3.MqttPersistable) -> put
    232:235:void remove(java.lang.String) -> remove
    277:288:void restoreBackups(java.io.File) -> restoreBackups
org.eclipse.paho.client.mqttv3.persist.PersistanceFileFilter -> org.eclipse.paho.client.mqttv3.persist.PersistanceFileFilter:
# {"id":"sourceFile","fileName":"PersistanceFileFilter.java"}
    10:11:void <init>(java.lang.String) -> <init>
    15:15:boolean accept(java.io.File) -> accept
org.eclipse.paho.client.mqttv3.persist.PersistanceFileNameFilter -> org.eclipse.paho.client.mqttv3.persist.PersistanceFileNameFilter:
# {"id":"sourceFile","fileName":"PersistanceFileNameFilter.java"}
    10:11:void <init>(java.lang.String) -> <init>
    15:15:boolean accept(java.io.File,java.lang.String) -> accept
org.eclipse.paho.client.mqttv3.spi.NetworkModuleFactory -> org.eclipse.paho.client.mqttv3.spi.NetworkModuleFactory:
# {"id":"sourceFile","fileName":"NetworkModuleFactory.java"}
org.eclipse.paho.client.mqttv3.spi.package-info -> org.eclipse.paho.client.mqttv3.spi.package-info:
# {"id":"sourceFile","fileName":"package-info.java"}
org.eclipse.paho.client.mqttv3.util.Debug -> org.eclipse.paho.client.mqttv3.util.Debug:
# {"id":"sourceFile","fileName":"Debug.java"}
    36:39:void <clinit>() -> <clinit>
    37:52:void <init>(java.lang.String,org.eclipse.paho.client.mqttv3.internal.ClientComms) -> <init>
    74:76:void dumpBaseDebug() -> dumpBaseDebug
    124:126:void dumpClientComms() -> dumpClientComms
    62:65:void dumpClientDebug() -> dumpClientDebug
    113:115:void dumpClientState() -> dumpClientState
    135:137:void dumpConOptions() -> dumpConOptions
    84:84:void dumpMemoryTrace() -> dumpMemoryTrace
    150:159:java.lang.String dumpProperties(java.util.Properties,java.lang.String) -> dumpProperties
    104:105:void dumpSystemProperties() -> dumpSystemProperties
    91:96:void dumpVersion() -> dumpVersion
    172:180:java.lang.String left(java.lang.String,int,char) -> left
org.eclipse.paho.client.mqttv3.util.Strings -> org.eclipse.paho.client.mqttv3.util.Strings:
# {"id":"sourceFile","fileName":"Strings.java"}
    169:169:void <init>() -> <init>
    58:58:boolean containsAny(java.lang.CharSequence,java.lang.CharSequence) -> containsAny
    69:85:boolean containsAny(java.lang.CharSequence,char[]) -> containsAny
    145:152:int countMatches(java.lang.CharSequence,java.lang.CharSequence) -> countMatches
    39:40:boolean equalsAny(java.lang.CharSequence,java.lang.CharSequence[]) -> equalsAny
    166:166:int indexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOf
    107:107:boolean isEmpty(java.lang.CharSequence) -> isEmpty
    114:114:boolean isEmpty(char[]) -> isEmpty
    124:131:char[] toCharArray(java.lang.CharSequence) -> toCharArray
org.intellij.lang.annotations.Flow -> org.intellij.lang.annotations.Flow:
# {"id":"sourceFile","fileName":"Flow.java"}
org.intellij.lang.annotations.Identifier -> org.intellij.lang.annotations.Identifier:
# {"id":"sourceFile","fileName":"Identifier.java"}
org.intellij.lang.annotations.JdkConstants -> org.intellij.lang.annotations.JdkConstants:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
    27:27:void <init>() -> <init>
org.intellij.lang.annotations.JdkConstants$AdjustableOrientation -> org.intellij.lang.annotations.JdkConstants$AdjustableOrientation:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis -> org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$CalendarMonth -> org.intellij.lang.annotations.JdkConstants$CalendarMonth:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$CursorType -> org.intellij.lang.annotations.JdkConstants$CursorType:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment -> org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$FontStyle -> org.intellij.lang.annotations.JdkConstants$FontStyle:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$HorizontalAlignment -> org.intellij.lang.annotations.JdkConstants$HorizontalAlignment:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$InputEventMask -> org.intellij.lang.annotations.JdkConstants$InputEventMask:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$ListSelectionMode -> org.intellij.lang.annotations.JdkConstants$ListSelectionMode:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$PatternFlags -> org.intellij.lang.annotations.JdkConstants$PatternFlags:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy -> org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$TabPlacement -> org.intellij.lang.annotations.JdkConstants$TabPlacement:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$TitledBorderJustification -> org.intellij.lang.annotations.JdkConstants$TitledBorderJustification:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition -> org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.JdkConstants$TreeSelectionMode -> org.intellij.lang.annotations.JdkConstants$TreeSelectionMode:
# {"id":"sourceFile","fileName":"JdkConstants.java"}
org.intellij.lang.annotations.Language -> org.intellij.lang.annotations.Language:
# {"id":"sourceFile","fileName":"Language.java"}
org.intellij.lang.annotations.MagicConstant -> org.intellij.lang.annotations.MagicConstant:
# {"id":"sourceFile","fileName":"MagicConstant.java"}
org.intellij.lang.annotations.Pattern -> org.intellij.lang.annotations.Pattern:
# {"id":"sourceFile","fileName":"Pattern.java"}
org.intellij.lang.annotations.PrintFormat -> org.intellij.lang.annotations.PrintFormat:
# {"id":"sourceFile","fileName":"PrintFormat.java"}
org.intellij.lang.annotations.PrintFormatPattern -> org.intellij.lang.annotations.PrintFormatPattern:
# {"id":"sourceFile","fileName":"PrintFormat.java"}
org.intellij.lang.annotations.RegExp -> org.intellij.lang.annotations.RegExp:
# {"id":"sourceFile","fileName":"RegExp.java"}
org.intellij.lang.annotations.Subst -> org.intellij.lang.annotations.Subst:
# {"id":"sourceFile","fileName":"Subst.java"}
org.jetbrains.annotations.Contract -> org.jetbrains.annotations.Contract:
# {"id":"sourceFile","fileName":"Contract.java"}
org.jetbrains.annotations.Nls -> org.jetbrains.annotations.Nls:
# {"id":"sourceFile","fileName":"Nls.java"}
org.jetbrains.annotations.NonNls -> org.jetbrains.annotations.NonNls:
# {"id":"sourceFile","fileName":"NonNls.java"}
org.jetbrains.annotations.NotNull -> org.jetbrains.annotations.NotNull:
# {"id":"sourceFile","fileName":"NotNull.java"}
org.jetbrains.annotations.Nullable -> org.jetbrains.annotations.Nullable:
# {"id":"sourceFile","fileName":"Nullable.java"}
org.jetbrains.annotations.PropertyKey -> org.jetbrains.annotations.PropertyKey:
# {"id":"sourceFile","fileName":"PropertyKey.java"}
org.jetbrains.annotations.TestOnly -> org.jetbrains.annotations.TestOnly:
# {"id":"sourceFile","fileName":"TestOnly.java"}
